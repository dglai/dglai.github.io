Search.setIndex({"alltitles": {"1.1 Some Basic Definitions about Graphs (Graphs 101)": [[698, "some-basic-definitions-about-graphs-graphs-101"]], "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [[742, "guide-cn-graph-basic"]], "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)": [[783, "guide-ko-graph-basic"]], "1.2 Graphs, Nodes, and Edges": [[702, "graphs-nodes-and-edges"]], "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9": [[746, "guide-cn-graph-graphs-nodes-edges"]], "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0": [[787, "guide-ko-graph-graphs-nodes-edges"]], "1.3 Node and Edge Features": [[700, "node-and-edge-features"]], "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [[744, "guide-cn-graph-feature"]], "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98": [[785, "guide-ko-graph-feature"]], "1.4 Creating Graphs from External Sources": [[699, "creating-graphs-from-external-sources"]], "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [[743, "guide-cn-graph-external"]], "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[784, "guide-ko-graph-external"]], "1.5 Heterogeneous Graphs": [[703, "heterogeneous-graphs"]], "1.5 \u5f02\u6784\u56fe": [[747, "guide-cn-graph-heterogeneous"]], "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)": [[788, "heterogeneous-graph"]], "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30": [[786, "gpu-dglgraph"]], "1.6 Using DGLGraph on a GPU": [[701, "using-dglgraph-on-a-gpu"]], "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph": [[745, "gpudglgraph"]], "1\uc7a5: \uadf8\ub798\ud504": [[782, "guide-ko-graph"]], "2.1 Built-in Functions and Message Passing APIs": [[706, "built-in-functions-and-message-passing-apis"]], "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API": [[750, "api"]], "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4": [[791, "api"]], "2.2 Writing Efficient Message Passing Code": [[707, "writing-efficient-message-passing-code"]], "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [[751, "guide-cn-message-passing-efficient"]], "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95": [[793, "guide-ko-message-passing-efficient"]], "2.3 Apply Message Passing On Part Of The Graph": [[709, "apply-message-passing-on-part-of-the-graph"]], "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[753, "guide-cn-message-passing-part"]], "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30": [[795, "guide-ko-message-passing-part"]], "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30": [[792, "guide-ko-message-passing-edge"]], "2.5 Message Passing on Heterogeneous Graph": [[708, "message-passing-on-heterogeneous-graph"]], "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[752, "guide-cn-message-passing-heterograph"]], "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[794, "guide-ko-message-passing-heterograph"]], "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)": [[790, "message-passing"]], "3.1 DGL NN Module Construction Function": [[722, "dgl-nn-module-construction-function"]], "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218": [[806, "dgl-nn"]], "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [[762, "dgl-nn"]], "3.2 DGL NN Module Forward Function": [[723, "dgl-nn-module-forward-function"]], "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218": [[807, "dgl-nn-forward"]], "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570": [[763, "dgl-nnforward"]], "3.3 Heterogeneous GraphConv Module": [[724, "heterogeneous-graphconv-module"]], "3.3 Heterogeneous GraphConv \ubaa8\ub4c8": [[808, "heterogeneous-graphconv"]], "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757": [[764, "graphconv"]], "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30": [[805, "gnn"]], "4.1 DGLDataset class": [[685, "dgldataset-class"]], "4.1 DGLDataset \ud074\ub798\uc2a4": [[772, "dgldataset"]], "4.1 DGLDataset\u7c7b": [[732, "dgldataset"]], "4.2 Download raw data (optional)": [[686, "download-raw-data-optional"]], "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)": [[773, "raw-optional"]], "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09": [[733, "guide-cn-data-pipeline-download"]], "4.3 Process data": [[689, "process-data"]], "4.3 \u5904\u7406\u6570\u636e": [[735, "guide-cn-data-pipeline-process"]], "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1": [[775, "guide-ko-data-pipeline-process"]], "4.4 Save and load data": [[690, "save-and-load-data"]], "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [[736, "guide-cn-data-pipeline-savenload"]], "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529": [[776, "guide-ko-data-pipeline-savenload"]], "4.5 Loading OGB datasets using ogb package": [[688, "loading-ogb-datasets-using-ogb-package"]], "4.5 ogb \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30": [[774, "ogb-ogb"]], "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6": [[734, "ogbogb"]], "4.6 Loading data from CSV files": [[687, "loading-data-from-csv-files"]], "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778": [[771, "guide-ko-data-pipeline"]], "5.1 Node Classification/Regression": [[730, "node-classification-regression"]], "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52": [[770, "guide-cn-training-node-classification"]], "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)": [[813, "regression"]], "5.2 Edge Classification/Regression": [[726, "edge-classification-regression"]], "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52": [[766, "guide-cn-training-edge-classification"]], "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)": [[810, "regression"]], "5.3 Link Prediction": [[729, "link-prediction"]], "5.3 \u94fe\u63a5\u9884\u6d4b": [[769, "guide-cn-training-link-prediction"]], "5.3 \ub9c1\ud06c \uc608\uce21": [[812, "guide-ko-training-link-prediction"]], "5.4 Graph Classification": [[728, "graph-classification"]], "5.4 \u6574\u56fe\u5206\u7c7b": [[768, "guide-cn-training-graph-classification"]], "5.4 \uadf8\ub798\ud504 \ubd84\ub958": [[811, "guide-ko-training-graph-classification"]], "5.5 Use of Edge Weights": [[727, "use-of-edge-weights"]], "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd": [[767, "guide-cn-training-eweight"]], "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30": [[809, "guide-ko-training"]], "6.1 Training GNN for Node Classification with Neighborhood Sampling": [[717, "training-gnn-for-node-classification-with-neighborhood-sampling"]], "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[760, "guide-cn-minibatch-node-classification-sampler"]], "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[803, "gnn"]], "6.2 Training GNN for Edge Classification with Neighborhood Sampling": [[712, "training-gnn-for-edge-classification-with-neighborhood-sampling"]], "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[756, "guide-cn-minibatch-edge-classification-sampler"]], "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[798, "gnn"]], "6.3 Training GNN for Link Prediction with Neighborhood Sampling": [[715, "training-gnn-for-link-prediction-with-neighborhood-sampling"]], "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[758, "guide-cn-minibatch-link-classification-sampler"]], "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[801, "gnn"]], "6.4 Implementing Custom Graph Samplers": [[711, "implementing-custom-graph-samplers"]], "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [[755, "guide-cn-minibatch-customizing-neighborhood-sampler"]], "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [[797, "guide-ko-minibatch-customizing-neighborhood-sampler"]], "6.5 Training GNN with DGL sparse": [[719, "training-gnn-with-dgl-sparse"]], "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757": [[759, "gnn"]], "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30": [[802, "gnn"]], "6.6 Implementing Custom GNN Module for Mini-batch Training": [[716, "implementing-custom-gnn-module-for-mini-batch-training"]], "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [[757, "guide-cn-minibatch-inference"]], "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860": [[800, "guide-ko-minibatch-inference"]], "6.7 Exact Offline Inference on Large Graphs": [[714, "exact-offline-inference-on-large-graphs"]], "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30": [[799, "gpu"]], "6.8 Using GPU for Neighborhood Sampling": [[713, "using-gpu-for-neighborhood-sampling"]], "6.9 Data Loading Parallelism": [[718, "data-loading-parallelism"]], "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5": [[796, "stochastic"]], "7.1 Data Preprocessing": [[695, "data-preprocessing"]], "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [[739, "guide-cn-distributed-preprocessing"]], "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac": [[780, "guide-ko-distributed-preprocessing"]], "7.1.1 Partitioning API": [[695, "partitioning-api"]], "7.1.1 \ubd84\uc0b0 \ud30c\ud2f0\uc154\ub2dd": [[780, "id3"]], "7.1.2 Distributed Graph Partitioning Pipeline": [[695, "distributed-graph-partitioning-pipeline"]], "7.2 Tools for launching distributed training/inference": [[696, "tools-for-launching-distributed-training-inference"]], "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API": [[738, "api"]], "7.2 \ubd84\uc0b0 APIs": [[778, "apis"]], "7.3 Programming APIs": [[692, "programming-apis"]], "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [[740, "guide-cn-distributed-tools"]], "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30": [[779, "heterogeneous"]], "7.3.1 \ubd84\uc0b0 \uadf8\ub798\ud504 \ub370\uc774\ud130 \uc811\uadfc\ud558\uae30": [[779, "id1"]], "7.3.2 \ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[779, "id2"]], "7.4 Advanced Graph Partitioning": [[694, "advanced-graph-partitioning"]], "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4": [[781, "guide-ko-distributed-tools"]], "7.5 Heterogeneous Graph Under The Hood": [[693, "heterogeneous-graph-under-the-hood"]], "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5": [[777, "guide-ko-distributed"]], "8\uc7a5: Mixed Precision \ud559\uc2b5": [[804, "mixed-precision"]], "A Batched Graph in DGL": [[838, "A-Batched-Graph-in-DGL"]], "A Blitz Introduction to DGL": [[840, "a-blitz-introduction-to-dgl"]], "A brief introduction to R-GCN": [[851, "A-brief-introduction-to-R-GCN"]], "AGNNConv": [[357, "agnnconv"], [387, "agnnconv"]], "AIFBDataset": [[132, "aifbdataset"]], "AMDataset": [[133, "amdataset"]], "API Reference": [[13, "api-reference"]], "APPNPConv": [[358, "appnpconv"], [388, "appnpconv"], [458, "appnpconv"]], "Access distributed graph data": [[693, "access-distributed-graph-data"]], "Access node/edge data": [[692, "access-node-edge-data"]], "Accessing graph structure": [[692, "accessing-graph-structure"]], "Action 1: Add nodes": [[859, "Action-1:-Add-nodes"]], "Action 2: Add edges": [[859, "Action-2:-Add-edges"]], "Action 3: Choose a destination": [[859, "Action-3:-Choose-a-destination"]], "Actions": [[859, "Actions"]], "ActorDataset": [[134, "actordataset"]], "Adapt your model for minibatch training": [[712, "adapt-your-model-for-minibatch-training"], [717, "adapt-your-model-for-minibatch-training"]], "Adaptive Universal Transformer": [[863, "Adaptive-Universal-Transformer"]], "AddEdge": [[646, "addedge"]], "AddMetaPaths": [[647, "addmetapaths"]], "AddReverse": [[648, "addreverse"]], "AddSelfLoop": [[649, "addselfloop"]], "Adjacency Related Utilities": [[0, "adjacency-related-utilities"]], "Adjacency and incidence matrix": [[1, "adjacency-and-incidence-matrix"]], "After Partition Loading": [[693, "after-partition-loading"]], "Alternative memory allocators": [[843, "Alternative-memory-allocators"]], "AmazonCoBuyComputerDataset": [[135, "amazoncobuycomputerdataset"]], "AmazonCoBuyPhotoDataset": [[136, "amazoncobuyphotodataset"]], "AmazonRatingsDataset": [[137, "amazonratingsdataset"]], "AsGraphPredDataset": [[138, "asgraphpreddataset"]], "AsLinkPredDataset": [[139, "aslinkpreddataset"]], "AsNodePredDataset": [[140, "asnodepreddataset"]], "Assigning Node and Edge Features to Graph": [[835, "Assigning-Node-and-Edge-Features-to-Graph"]], "AtomicConv": [[389, "atomicconv"]], "Attention layer of Transformer": [[863, "Attention-layer-of-Transformer"]], "Attributes and methods": [[12, "attributes-and-methods"]], "Attributes and methods of a DGL Sparse Matrix": [[821, "Attributes-and-methods-of-a-DGL-Sparse-Matrix"]], "AvgPooling": [[374, "avgpooling"], [433, "avgpooling"], [466, "avgpooling"]], "BA2MotifDataset": [[141, "ba2motifdataset"]], "BACommunityDataset": [[142, "bacommunitydataset"]], "BAShapeDataset": [[143, "bashapedataset"]], "BFloat16 CPU example": [[720, "bfloat16-cpu-example"]], "BGSDataset": [[144, "bgsdataset"]], "Backend Options": [[23, "backend-options"]], "Base Class": [[2, "base-class"]], "BaseTransform": [[650, "basetransform"]], "BasicFeatureStore": [[288, "basicfeaturestore"]], "Batch of Graphs": [[728, "batch-of-graphs"]], "Batching and Reading Out Ops": [[0, "batching-and-reading-out-ops"]], "Batching graphs for parallelism": [[852, "Batching-graphs-for-parallelism"]], "Batching many small graphs": [[857, "batching-many-small-graphs"], [866, "batching-many-small-graphs"]], "Benchmark the performance of KNN algorithms": [[14, "benchmark-the-performance-of-knn-algorithms"]], "Best practice of writing custom GNN modules": [[836, "Best-practice-of-writing-custom-GNN-modules"]], "BiasedMHA": [[442, "biasedmha"]], "Binary community subgraph from Cora with a test dataset": [[852, "Binary-community-subgraph-from-Cora-with-a-test-dataset"]], "BitcoinOTCDataset": [[145, "bitcoinotcdataset"]], "Broadcast operations": [[821, "Broadcast-operations"]], "Broadcast operators": [[12, "broadcast-operators"]], "Build Model": [[683, "build-model"]], "Building Docs Locally": [[21, "building-docs-locally"]], "Building a Graph Convolutional Network Using Sparse Matrices": [[816, "Building-a-Graph-Convolutional-Network-Using-Sparse-Matrices"]], "Building and Testing": [[21, "building-and-testing"]], "BuiltinDataset": [[289, "builtindataset"]], "CFConv": [[390, "cfconv"]], "CIFAR10SuperPixelDataset": [[146, "cifar10superpixeldataset"]], "CLUSTERDataset": [[147, "clusterdataset"]], "CPU Best Practices": [[843, "CPU-Best-Practices"]], "CSVDataset": [[148, "csvdataset"]], "Capsule Network": [[862, "Capsule-Network"]], "Chain-up LGNN abstractions as an LGNN layer": [[852, "Chain-up-LGNN-abstractions-as-an-LGNN-layer"]], "Chain-up LGNN layers": [[852, "Chain-up-LGNN-layers"]], "ChameleonDataset": [[149, "chameleondataset"]], "Chapter 1: Graph": [[697, "chapter-1-graph"]], "Chapter 2: Message Passing": [[705, "chapter-2-message-passing"]], "Chapter 3: Building GNN Modules": [[721, "chapter-3-building-gnn-modules"]], "Chapter 4: Graph Data Pipeline": [[684, "chapter-4-graph-data-pipeline"]], "Chapter 5: Training Graph Neural Networks": [[725, "chapter-5-training-graph-neural-networks"]], "Chapter 6: Stochastic Training on Large Graphs": [[710, "chapter-6-stochastic-training-on-large-graphs"]], "Chapter 7: Distributed Training": [[691, "chapter-7-distributed-training"]], "Chapter 8: Mixed Precision Training": [[720, "chapter-8-mixed-precision-training"]], "ChebConv": [[359, "chebconv"], [391, "chebconv"], [459, "chebconv"]], "Chunked Graph Format": [[695, "chunked-graph-format"]], "CiteseerGraphDataset": [[150, "citeseergraphdataset"]], "ClusterGCNSampler": [[209, "clustergcnsampler"]], "CoauthorCSDataset": [[151, "coauthorcsdataset"]], "CoauthorPhysicsDataset": [[152, "coauthorphysicsdataset"]], "Coding styles": [[21, "coding-styles"]], "Comma Separated Values (CSV)": [[699, "comma-separated-values-csv"], [703, "comma-separated-values-csv"], [784, "comma-separated-values-csv"], [788, "comma-separated-values-csv"]], "Community detection in a supervised setting": [[852, "Community-detection-in-a-supervised-setting"]], "Completing f(x, y)": [[852, "Completing-f(x,-y)"]], "Compose": [[651, "compose"]], "Composing OnDiskDataset from raw data": [[830, "composing-ondiskdataset-from-raw-data"]], "Computation on a Batched Graph": [[728, "computation-on-a-batched-graph"]], "Computation times": [[824, "computation-times"], [841, "computation-times"], [845, "computation-times"], [849, "computation-times"], [855, "computation-times"], [858, "computation-times"], [861, "computation-times"], [865, "computation-times"], [867, "computation-times"], [871, "computation-times"]], "Computing with DGLGraph": [[1, "computing-with-dglgraph"]], "Conclusion": [[14, "conclusion"], [826, "Conclusion"], [829, "Conclusion"]], "Containers": [[22, "containers"]], "Contribute to DGL": [[21, "contribute-to-dgl"]], "Contributing Code Changes": [[21, "contributing-code-changes"]], "Contributing Core Features": [[21, "contributing-core-features"]], "Contributing Documentations": [[21, "contributing-documentations"]], "Contributing Editorial Changes via GitHub Web Interface": [[21, "contributing-editorial-changes-via-github-web-interface"]], "Contributing New Models as Examples": [[21, "contributing-new-models-as-examples"]], "Contribution": [[814, "contribution"]], "Conv Layers": [[15, "conv-layers"], [16, "conv-layers"], [17, "conv-layers"]], "Converting Heterogeneous Graphs to Homogeneous Graphs": [[703, "converting-heterogeneous-graphs-to-homogeneous-graphs"]], "CopyTo": [[7, "copyto"], [290, "copyto"]], "Cora": [[853, "Cora"]], "Cora dataset": [[852, "Cora-dataset"]], "CoraFullDataset": [[153, "corafulldataset"]], "CoraGraphDataset": [[154, "coragraphdataset"]], "CornellDataset": [[155, "cornelldataset"]], "Create graph and model": [[851, "Create-graph-and-model"]], "Creating Dataset from CSV via :class:~dgl.data.CSVDataset": [[839, "Creating-Dataset-from-CSV-via-:class:~dgl.data.CSVDataset"]], "Creating Graphs from External Libraries": [[699, "creating-graphs-from-external-libraries"]], "Creating a DGL Sparse Matrix": [[821, "Creating-a-DGL-Sparse-Matrix"]], "Creating a Dataset for Graph Classification from CSV": [[839, "Creating-a-Dataset-for-Graph-Classification-from-CSV"]], "Creating a Dataset for Node Classification or Link Prediction from CSV": [[839, "Creating-a-Dataset-for-Node-Classification-or-Link-Prediction-from-CSV"]], "Creating a Heterogeneous Graph": [[703, "creating-a-heterogeneous-graph"]], "Creation Ops": [[12, "creation-ops"]], "CuGraph Conv Layers": [[16, "cugraph-conv-layers"]], "CuGraphGATConv": [[392, "cugraphgatconv"]], "CuGraphRelGraphConv": [[393, "cugraphrelgraphconv"]], "CuGraphSAGEConv": [[394, "cugraphsageconv"]], "Custom Data Parser": [[687, "custom-data-parser"]], "DGL Binary Format": [[699, "dgl-binary-format"], [703, "dgl-binary-format"]], "DGL Built-in Function": [[5, "dgl-built-in-function"]], "DGL Foreign Function Interface (FFI)": [[22, "dgl-foreign-function-interface-ffi"]], "DGL Graph Construction": [[835, "DGL-Graph-Construction"]], "DGL \u4e8c\u8fdb\u5236\u683c\u5f0f": [[743, "dgl"]], "DGL \ub370\uc774\ud130 \ub85c\ub354\uc5d0\uc11c GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc0ac\uc6a9\ud558\uae30": [[799, "dgl-gpu"]], "DGL \ubc14\uc774\ub108\ub9ac \ud3ec\uba67": [[784, "dgl"], [788, "dgl"]], "DGL \ubd84\uc0b0 \ubaa8\ub4c8 \ucd08\uae30\ud654": [[778, "dgl"]], "DGLDataset": [[156, "dgldataset"]], "DGLDataset Object Overview": [[839, "DGLDataset-Object-Overview"]], "DGL\u4e8c\u8fdb\u5236\u683c\u5f0f": [[747, "dgl"]], "DGL\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": [[738, "dgl"]], "DGMG: Optimization objective": [[859, "DGMG:-Optimization-objective"]], "DGMG: The implementation": [[859, "DGMG:-The-implementation"]], "DGMG: The main flow": [[859, "DGMG:-The-main-flow"]], "DGNConv": [[395, "dgnconv"]], "Data Loader Preparation": [[868, "Data-Loader-Preparation"]], "Data Loading": [[728, "data-loading"]], "Data Repository": [[23, "data-repository"]], "Data folder structure": [[687, "data-folder-structure"]], "Data hosting": [[21, "data-hosting"]], "Data preparation": [[832, "Data-preparation"], [833, "Data-preparation"]], "DataLoader": [[7, "dataloader"], [210, "dataloader"], [291, "dataloader"]], "DataLoaders": [[3, "dataloaders"]], "Dataset": [[7, "dataset"], [292, "dataset"]], "Dataset adapters": [[2, "dataset-adapters"]], "Dataset of a single feature-less graph": [[687, "dataset-of-a-single-feature-less-graph"]], "Dataset of a single graph with features and labels": [[687, "dataset-of-a-single-graph-with-features-and-labels"]], "Dataset of a single heterogeneous graph": [[687, "dataset-of-a-single-heterogeneous-graph"]], "Dataset of multiple graphs": [[687, "dataset-of-multiple-graphs"]], "DeepWalk": [[381, "deepwalk"]], "Define Model": [[838, "Define-Model"]], "Define a GNN model": [[846, "Define-a-GNN-model"], [847, "Define-a-GNN-model"]], "Define a GraphSAGE model": [[837, "Define-a-GraphSAGE-model"]], "Define a GraphSAGE model for minibatch training": [[715, "define-a-graphsage-model-for-minibatch-training"]], "Define a data loader with neighbor and negative sampling": [[715, "define-a-data-loader-with-neighbor-and-negative-sampling"]], "Define a neighborhood sampler and data loader": [[712, "define-a-neighborhood-sampler-and-data-loader"], [717, "define-a-neighborhood-sampler-and-data-loader"]], "Defining Data Loader": [[838, "Defining-Data-Loader"]], "Defining Model": [[827, "Defining-Model"], [829, "Defining-Model"], [869, "Defining-Model"]], "Defining Model for Node Representation": [[826, "Defining-Model-for-Node-Representation"]], "Defining Neighbor Sampler and Data Loader in DGL": [[826, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [827, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [829, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"]], "Defining Traing Loop": [[826, "Defining-Traing-Loop"]], "Defining Training Loop": [[829, "Defining-Training-Loop"]], "Defining Training and Evaluation Procedures": [[827, "Defining-Training-and-Evaluation-Procedures"]], "Defining Traning and Evaluation Procedures": [[869, "Defining-Traning-and-Evaluation-Procedures"]], "Defining a Graph Convolutional Network (GCN)": [[834, "Defining-a-Graph-Convolutional-Network-(GCN)"]], "Defining new types": [[22, "defining-new-types"]], "Degree Bucketing for Message Passing with User Defined Functions": [[20, "degree-bucketing-for-message-passing-with-user-defined-functions"]], "Degree Encoding": [[683, "degree-encoding"]], "DegreeEncoder": [[443, "degreeencoder"]], "Dense Conv Layers": [[15, "dense-conv-layers"], [16, "dense-conv-layers"]], "DenseChebConv": [[360, "densechebconv"], [396, "densechebconv"]], "DenseGraphConv": [[361, "densegraphconv"], [397, "densegraphconv"]], "DenseSAGEConv": [[362, "densesageconv"], [398, "densesageconv"]], "Description": [[6, "description"], [387, "description"], [388, "description"], [389, "description"], [390, "description"], [395, "description"], [398, "description"], [398, "id1"], [399, "description"], [401, "description"], [402, "description"], [403, "description"], [403, "id1"], [404, "description"], [405, "description"], [405, "id1"], [406, "description"], [406, "id1"], [407, "description"], [407, "id1"], [408, "description"], [410, "description"], [410, "id1"], [411, "description"], [412, "description"], [412, "id1"], [413, "description"], [413, "id1"], [416, "description"], [417, "description"], [419, "description"], [419, "id1"], [420, "description"], [420, "id1"], [421, "description"], [421, "id1"], [422, "description"], [423, "description"], [423, "id1"], [450, "description"], [450, "id1"], [451, "description"], [451, "id1"], [452, "description"], [454, "description"], [454, "id1"]], "Device Control": [[1, "device-control"]], "Diagonal Matrix": [[821, "Diagonal-Matrix"]], "DistEdgeDataLoader": [[211, "distedgedataloader"]], "DistGraph creation": [[692, "distgraph-creation"]], "DistGraph \uc0dd\uc131": [[778, "distgraph"]], "DistNodeDataLoader": [[212, "distnodedataloader"]], "Distributed DataLoader": [[4, "distributed-dataloader"]], "Distributed DistEmbedding": [[692, "distributed-distembedding"]], "Distributed Graph": [[4, "distributed-graph"]], "Distributed Graph Sampling Operators": [[4, "distributed-graph-sampling-operators"]], "Distributed Link Prediction": [[847, "Distributed-Link-Prediction"]], "Distributed Node Classification": [[846, "Distributed-Node-Classification"]], "Distributed Node Embedding": [[4, "distributed-node-embedding"]], "Distributed Process Group Initialization": [[868, "Distributed-Process-Group-Initialization"]], "Distributed Sampling": [[4, "distributed-sampling"]], "Distributed Tensor": [[4, "distributed-tensor"], [692, "distributed-tensor"]], "Distributed embedding optimizer": [[4, "distributed-embedding-optimizer"]], "Distributed graph": [[692, "distributed-graph"]], "Distributed mini-batch sampler": [[846, "Distributed-mini-batch-sampler"], [847, "Distributed-mini-batch-sampler"]], "Distributed mode vs. standalone mode": [[692, "distributed-mode-vs-standalone-mode"]], "Distributed sampling": [[692, "distributed-sampling"]], "Distributed training": [[848, "distributed-training"]], "Distributed training script": [[846, "Distributed-training-script"], [847, "Distributed-training-script"]], "Distributed workload split": [[4, "distributed-workload-split"]], "Distributed \uadf8\ub798\ud504": [[778, "distributed"]], "DistributedItemSampler": [[293, "distributeditemsampler"]], "DotGatConv": [[399, "dotgatconv"]], "DropEdge": [[652, "dropedge"]], "DropNode": [[653, "dropnode"]], "During Preprocessing": [[693, "during-preprocessing"]], "EGATConv": [[400, "egatconv"]], "EGNNConv": [[401, "egnnconv"]], "EGTLayer": [[444, "egtlayer"]], "Edge Prediction Datasets": [[2, "edge-prediction-datasets"]], "Edge Type Subgraph": [[703, "edge-type-subgraph"]], "Edge-wise User-defined Function": [[20, "edge-wise-user-defined-function"]], "EdgeConv": [[363, "edgeconv"], [402, "edgeconv"]], "EdgeData": [[687, "edgedata"]], "EdgeGATConv": [[403, "edgegatconv"]], "EdgePredictor": [[450, "edgepredictor"]], "EdgeWeightNorm": [[404, "edgeweightnorm"]], "Element-wise functions": [[821, "Element-wise-functions"]], "Elementwise Operators": [[12, "elementwise-operators"]], "Elementwise operations": [[821, "Elementwise-operations"]], "Enable GraphBolt sampling in the training script": [[846, "Enable-GraphBolt-sampling-in-the-training-script"]], "Enabling ARGO on your own GNN program": [[842, "Enabling-ARGO-on-your-own-GNN-program"]], "Encoding a dynamic graph": [[859, "Encoding-a-dynamic-graph"]], "End-to-End Mixed Precision Training": [[720, "end-to-end-mixed-precision-training"]], "End-to-End Mixed Precision \ud559\uc2b5": [[804, "end-to-end-mixed-precision"]], "Environment Variables": [[23, "environment-variables"]], "Equation (1)": [[853, "Equation-(1)"]], "Equation (2)": [[853, "Equation-(2)"]], "Equation (3) & (4)": [[853, "Equation-(3)-&-(4)"]], "Evaluating Performance with Link Prediction": [[826, "Evaluating-Performance-with-Link-Prediction"]], "Evaluation Loop": [[869, "Evaluation-Loop"]], "Evaluation function": [[827, "Evaluation-function"]], "Even more customization by user-defined function": [[836, "Even-more-customization-by-user-defined-function"]], "Example: MAG240M-LSC": [[695, "example-mag240m-lsc"]], "Examples on a heterogeneous graph": [[355, "examples-on-a-heterogeneous-graph"]], "Examples on a homogeneous graph": [[355, "examples-on-a-homogeneous-graph"]], "Exclude Edges After Sampling": [[711, "exclude-edges-after-sampling"]], "Execute on specific edges": [[863, "Execute-on-specific-edges"]], "Exercise #1": [[821, "Exercise-#1"]], "Exercise #2": [[821, "Exercise-#2"]], "FB15k237Dataset": [[157, "fb15k237dataset"]], "FB15kDataset": [[158, "fb15kdataset"]], "FakeNewsDataset": [[159, "fakenewsdataset"]], "Farthest Point Sampler": [[6, "farthest-point-sampler"]], "FeatMask": [[654, "featmask"]], "Feature": [[294, "feature"]], "Feature and FeatureStore": [[7, "feature-and-featurestore"]], "FeatureFetcher": [[7, "featurefetcher"], [295, "featurefetcher"]], "FeatureStore": [[296, "featurestore"]], "FlickrDataset": [[160, "flickrdataset"]], "For heterogeneous graphs": [[712, "for-heterogeneous-graphs"], [715, "for-heterogeneous-graphs"], [717, "for-heterogeneous-graphs"]], "FraudAmazonDataset": [[161, "fraudamazondataset"]], "FraudDataset": [[162, "frauddataset"]], "FraudYelpDataset": [[163, "fraudyelpdataset"]], "Frequently Asked Questions (FAQ)": [[24, "frequently-asked-questions-faq"]], "Full R-GCN model defined": [[851, "Full-R-GCN-model-defined"]], "Full YAML Specification": [[687, "full-yaml-specification"]], "FusedCSCSamplingGraph": [[297, "fusedcscsamplinggraph"]], "GAT in DGL": [[853, "GAT-in-DGL"]], "GATConv": [[364, "gatconv"], [405, "gatconv"], [460, "gatconv"]], "GATv2Conv": [[406, "gatv2conv"]], "GCN implementation with DGL": [[850, "GCN-implementation-with-DGL"]], "GCN in one formula": [[850, "GCN-in-one-formula"]], "GCN2Conv": [[407, "gcn2conv"]], "GCNNorm": [[655, "gcnnorm"]], "GDC": [[656, "gdc"]], "GDELTDataset": [[164, "gdeltdataset"]], "GINConv": [[365, "ginconv"], [408, "ginconv"], [461, "ginconv"]], "GINDataset": [[165, "gindataset"]], "GINEConv": [[409, "gineconv"]], "GMMConv": [[366, "gmmconv"], [410, "gmmconv"]], "GNNExplainer": [[424, "gnnexplainer"]], "GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub7ec\ub97c DGL \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30": [[799, "gpu-dgl"]], "GPUCachedFeature": [[298, "gpucachedfeature"]], "GSDDMM functions": [[9, "gsddmm-functions"]], "GSpMM functions": [[9, "gspmm-functions"]], "GatedGCNConv": [[411, "gatedgcnconv"]], "GatedGraphConv": [[367, "gatedgraphconv"], [412, "gatedgraphconv"]], "GatherMM and SegmentMM Module": [[9, "gathermm-and-segmentmm-module"]], "General development process": [[21, "general-development-process"]], "Generate feature data for graph": [[832, "Generate-feature-data-for-graph"], [833, "Generate-feature-data-for-graph"]], "Generate graph structure data": [[832, "Generate-graph-structure-data"], [833, "Generate-graph-structure-data"]], "Generate tasks": [[832, "Generate-tasks"], [833, "Generate-tasks"]], "Generative Models of Graphs": [[859, "Generative-Models-of-Graphs"]], "Generative models": [[860, "generative-models"], [866, "generative-models"]], "Get training and validation node IDs": [[846, "Get-training-and-validation-node-IDs"], [847, "Get-training-and-validation-node-IDs"]], "Getting Started": [[814, "getting-started"]], "Git setup (for developers)": [[21, "git-setup-for-developers"]], "Global Configurations": [[23, "global-configurations"]], "Global Pooling Layers": [[15, "global-pooling-layers"], [16, "global-pooling-layers"], [17, "global-pooling-layers"]], "GlobalAttentionPooling": [[375, "globalattentionpooling"], [434, "globalattentionpooling"], [467, "globalattentionpooling"]], "GlobalUniform": [[226, "globaluniform"]], "Graph": [[7, "graph"]], "Graph Convolutional Layer": [[816, "Graph-Convolutional-Layer"]], "Graph Convolutional Network": [[850, "Graph-Convolutional-Network"]], "Graph Create Ops": [[0, "graph-create-ops"]], "Graph Diffusion": [[817, "Graph-Diffusion"]], "Graph Diffusion in GNNs": [[817, "Graph-Diffusion-in-GNNs"]], "Graph Diffusion in Graph Neural Networks": [[817, "Graph-Diffusion-in-Graph-Neural-Networks"]], "Graph Partition Utilities": [[0, "graph-partition-utilities"]], "Graph Positional Encoding Ops:": [[0, "graph-positional-encoding-ops"]], "Graph Prediction Datasets": [[2, "graph-prediction-datasets"]], "Graph Readout": [[728, "graph-readout"]], "Graph Transform Ops": [[0, "graph-transform-ops"]], "Graph Transformations": [[835, "Graph-Transformations"]], "Graph Transformer Layer": [[818, "Graph-Transformer-Layer"]], "Graph Transformer Model": [[818, "Graph-Transformer-Model"]], "Graph Transformer in a Nutshell": [[818, "Graph-Transformer-in-a-Nutshell"]], "Graph Traversal & Message Propagation": [[0, "graph-traversal-message-propagation"]], "Graph building": [[863, "Graph-building"]], "Graph checking and graph type specification": [[723, "graph-checking-and-graph-type-specification"]], "Graph embedding": [[859, "Graph-embedding"]], "Graph neural networks and its variants": [[854, "graph-neural-networks-and-its-variants"], [866, "graph-neural-networks-and-its-variants"]], "Graph partition book": [[4, "graph-partition-book"]], "Graph partitioning": [[846, "Graph-partitioning"]], "Graph structure": [[863, "Graph-structure"]], "GraphConv": [[368, "graphconv"], [413, "graphconv"], [462, "graphconv"]], "GraphData": [[687, "graphdata"]], "GraphDataLoader": [[213, "graphdataloader"]], "Graphormer Layer": [[683, "graphormer-layer"]], "GraphormerLayer": [[445, "graphormerlayer"]], "GroupRevRes": [[414, "grouprevres"]], "HGTConv": [[415, "hgtconv"]], "Half precision\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[804, "half-precision"]], "Handle dataset": [[851, "Handle-dataset"]], "HeatKernel": [[657, "heatkernel"]], "HeteroEmbedding": [[382, "heteroembedding"]], "HeteroGNNExplainer": [[425, "heterognnexplainer"]], "HeteroGraphConv": [[356, "heterographconv"], [383, "heterographconv"], [468, "heterographconv"]], "HeteroGraphConv implementation logic:": [[724, "heterographconv-implementation-logic"]], "HeteroGraphConv \uad6c\ud604 \ub85c\uc9c1:": [[808, "heterographconv"]], "HeteroGraphConv\u7684\u5b9e\u73b0\u903b\u8f91": [[764, "heterographconv"]], "HeteroItemSet": [[299, "heteroitemset"]], "HeteroLinear": [[384, "heterolinear"]], "HeteroPGExplainer": [[426, "heteropgexplainer"]], "HeteroSubgraphX": [[427, "heterosubgraphx"]], "Heterogeneous Graphs": [[725, "heterogeneous-graphs"]], "Heterogeneous Learning Modules": [[15, "heterogeneous-learning-modules"], [16, "heterogeneous-learning-modules"], [17, "heterogeneous-learning-modules"]], "Heterogeneous graph": [[726, "heterogeneous-graph"], [728, "heterogeneous-graph"], [730, "heterogeneous-graph"]], "Heterogeneous graphs": [[716, "heterogeneous-graphs"], [729, "heterogeneous-graphs"]], "Heterogeneous \uadf8\ub798\ud504": [[809, "heterogeneous"], [810, "heterogeneous"], [811, "heterogeneous"], [813, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\ub4e4": [[797, "heterogeneous"], [797, "id5"], [802, "heterogeneous"], [812, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \ub178\ub4dc/\uc5d0\uc9c0 \ud53c\ucc98\ub4e4 \uc0dd\uc131\ud558\uae30": [[780, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uacbd\uc6b0": [[798, "heterogeneous"], [801, "heterogeneous"], [803, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uc5d0\uc9c0\ub4e4\uc5d0 \ub300\ud55c \uc5d0\uc9c0 \ud0c0\uc785 \uc608\uce21\ud558\uae30": [[810, "id3"]], "Homogeneous \uadf8\ub798\ud504, \uc774\ubd84 \uadf8\ub798\ud504(bipartite graph), \uadf8\ub9ac\uace0 MFG\ub97c \uc704\ud55c \ubaa8\ub4c8 \uc791\uc131\ud558\uae30": [[802, "homogeneous-bipartite-graph-mfg"]], "Homophily Measures": [[0, "homophily-measures"]], "How DGL Handles Computation Dependency\u00b6": [[829, "How-DGL-Handles-Computation-Dependency\u00b6"]], "How DGL implements Transformer with a graph neural network": [[863, "How-DGL-implements-Transformer-with-a-graph-neural-network"]], "How Does DGL Represent A Graph?": [[835, "How-Does-DGL-Represent-A-Graph?"]], "Hyper-threading": [[843, "Hyper-threading"]], "Hypergraph Neural Network (HGNN) Layer": [[819, "Hypergraph-Neural-Network-(HGNN)-Layer"]], "Hypergraph Neural Networks": [[819, "Hypergraph-Neural-Networks"]], "Hypergraphs": [[819, "Hypergraphs"]], "ICEWS18Dataset": [[166, "icews18dataset"]], "ID Conversion Utilities": [[693, "id-conversion-utilities"]], "ID mapping": [[695, "id-mapping"]], "ID \ub9e4\ud551": [[780, "id"]], "Implement LGNN in DGL": [[852, "Implement-LGNN-in-DGL"]], "Implement R-GCN in DGL": [[851, "Implement-R-GCN-in-DGL"]], "Implementing Offline Inference": [[714, "implementing-offline-inference"]], "Implementing \\text{fuse} as sparse matrix multiplication": [[852, "Implementing-\\text{fuse}-as-sparse-matrix-multiplication"]], "Implementing \\text{prev} and \\text{deg} as tensor operation": [[852, "Implementing-\\text{prev}-and-\\text{deg}-as-tensor-operation"]], "Implementing \\text{radius} as message passing in DGL": [[852, "Implementing-\\text{radius}-as-message-passing-in-DGL"]], "Importing Packages": [[869, "Importing-Packages"]], "Improve Scalability on Multi-Core CPUs": [[842, "Improve-Scalability-on-Multi-Core-CPUs"]], "InSubgraphSampler": [[300, "insubgraphsampler"]], "Index": [[814, "index"]], "Inference": [[847, "Inference"]], "Initialization": [[4, "initialization"]], "Initialization of the DGL distributed module": [[692, "initialization-of-the-dgl-distributed-module"]], "Initialize network communication": [[846, "Initialize-network-communication"], [847, "Initialize-network-communication"]], "Initializing a DGL Diagonal Sparse Matrix": [[821, "Initializing-a-DGL-Diagonal-Sparse-Matrix"]], "Input format": [[694, "input-format"]], "Install DGL package": [[826, "Install-DGL-package"], [829, "Install-DGL-package"], [832, "Install-DGL-package"], [833, "Install-DGL-package"]], "Install DGL package and other dependencies": [[827, "Install-DGL-package-and-other-dependencies"]], "Install and Setup": [[815, "install-and-setup"]], "Install from Conda or Pip": [[815, "install-from-conda-or-pip"]], "Install from source": [[815, "install-from-source"]], "Installation": [[842, "Installation"]], "Instantiate OnDiskDataset": [[832, "Instantiate-OnDiskDataset"], [833, "Instantiate-OnDiskDataset"]], "Integrated Benchmarks": [[822, "integrated-benchmarks"]], "Intel": [[843, "Intel"]], "Introducing attention to GCN": [[853, "Introducing-attention-to-GCN"]], "Introduction": [[859, "Introduction"]], "ItemSampler": [[7, "itemsampler"], [301, "itemsampler"]], "ItemSet": [[7, "itemset"], [302, "itemset"]], "JSON/GML Format": [[699, "json-gml-format"]], "JSON/GML \u683c\u5f0f": [[743, "json-gml"]], "JSON/GML \ud3ec\uba67": [[784, "json-gml"]], "JumpingKnowledge": [[454, "jumpingknowledge"]], "KHopGraph": [[658, "khopgraph"]], "KNNGraph": [[430, "knngraph"]], "KarateClubDataset": [[167, "karateclubdataset"]], "Key ideas of Capsule": [[862, "Key-ideas-of-Capsule"]], "Key ideas of R-GCN": [[851, "Key-ideas-of-R-GCN"]], "Label Informativeness Measures": [[0, "label-informativeness-measures"]], "LabelPropagation": [[455, "labelpropagation"]], "LaborSampler": [[214, "laborsampler"]], "LapPE": [[659, "lappe"]], "LapPosEncoder": [[446, "lapposencoder"]], "Launch the distributed training job": [[846, "Launch-the-distributed-training-job"]], "LayerNeighborSampler": [[303, "layerneighborsampler"]], "LazyFeature": [[221, "lazyfeature"]], "LegacyDataset": [[304, "legacydataset"]], "LegacyTUDataset": [[168, "legacytudataset"]], "Line Graph Neural Network": [[852, "Line-Graph-Neural-Network"]], "Line graph neural network key ideas": [[852, "Line-graph-neural-network-key-ideas"]], "LineGraph": [[660, "linegraph"]], "Link Prediction": [[826, "Link-Prediction"]], "Link Prediction Task": [[832, "Link-Prediction-Task"], [833, "Link-Prediction-Task"]], "Link Prediction using Graph Neural Networks": [[837, "Link-Prediction-using-Graph-Neural-Networks"]], "Linux": [[815, "linux"]], "Load balancing": [[695, "load-balancing"]], "Load partitioned graphs": [[695, "load-partitioned-graphs"]], "Loading Cora Dataset": [[834, "Loading-Cora-Dataset"]], "Loading Data": [[819, "Loading-Data"], [838, "Loading-Data"]], "Loading Dataset": [[826, "Loading-Dataset"], [829, "Loading-Dataset"]], "Loading Graphs from Disk": [[699, "loading-graphs-from-disk"]], "Loading Heterographs from Disk": [[703, "loading-heterographs-from-disk"]], "Loading and Saving Graphs": [[835, "Loading-and-Saving-Graphs"]], "Loading graph and features": [[837, "Loading-graph-and-features"]], "METIS partition algorithm": [[694, "metis-partition-algorithm"]], "MNISTSuperPixelDataset": [[169, "mnistsuperpixeldataset"]], "MUTAGDataset": [[170, "mutagdataset"]], "MXNet backend": [[815, "mxnet-backend"]], "Main Function for Each Process": [[868, "Main-Function-for-Each-Process"]], "Main Loop": [[856, "Main-Loop"]], "Main class of Transformer graph": [[863, "Main-class-of-Transformer-graph"]], "Make Your Own Dataset": [[839, "Make-Your-Own-Dataset"]], "Matrix Multiplication": [[12, "matrix-multiplication"]], "Matrix multiplication": [[821, "Matrix-multiplication"]], "Matrix transformations": [[821, "Matrix-transformations"]], "MaxPooling": [[376, "maxpooling"], [435, "maxpooling"], [469, "maxpooling"]], "Message Passing Paradigm": [[705, "message-passing-paradigm"]], "Message Passing Review": [[828, "Message-Passing-Review"]], "Message Passing with Edge Weights": [[727, "message-passing-with-edge-weights"]], "Message aggregation": [[863, "Message-aggregation"]], "Message computation": [[863, "Message-computation"]], "Message functions": [[5, "message-functions"]], "Message passing": [[863, "Message-passing"]], "Message passing and GNNs": [[836, "Message-passing-and-GNNs"]], "Message passing and reducing": [[723, "message-passing-and-reducing"]], "Message-Passing with Half Precision": [[720, "message-passing-with-half-precision"]], "MetaPath2Vec": [[385, "metapath2vec"]], "MinesweeperDataset": [[171, "minesweeperdataset"]], "Mini-batch Data Loading": [[869, "Mini-batch-Data-Loading"]], "MiniBatch": [[7, "minibatch"], [305, "minibatch"]], "MiniBatchTransformer": [[306, "minibatchtransformer"]], "MiniGCDataset": [[172, "minigcdataset"]], "Misc": [[1, "misc"]], "Model Definition": [[728, "model-definition"]], "Model Forward": [[683, "model-forward"]], "Model Implementation Difference from Node Classification": [[726, "model-implementation-difference-from-node-classification"]], "Model Initialization": [[868, "Model-Initialization"]], "Model Overview": [[850, "Model-Overview"]], "Model implementation": [[862, "Model-implementation"]], "More customization": [[836, "More-customization"]], "MovieLensDataset": [[173, "movielensdataset"]], "Multi-GPU Node Classification": [[827, "Multi-GPU-Node-Classification"]], "Multi-head attention": [[853, "Multi-head-attention"], [863, "Multi-head-attention"]], "Multi-head attention layer": [[863, "Multi-head-attention-layer"]], "MultiLayerFullNeighborSampler": [[215, "multilayerfullneighborsampler"]], "Mutating topology": [[1, "mutating-topology"]], "NFS client side setup (ubuntu only)": [[846, "NFS-client-side-setup-(ubuntu-only)"]], "NFS server side setup (ubuntu only)": [[846, "NFS-server-side-setup-(ubuntu-only)"]], "NNConv": [[369, "nnconv"], [416, "nnconv"]], "Negative Samplers for Link Prediction": [[3, "negative-samplers-for-link-prediction"]], "Negative sampling": [[11, "negative-sampling"]], "Negative \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[801, "negative"]], "NegativeSampler": [[7, "negativesampler"], [307, "negativesampler"]], "Neighbor Matching": [[6, "neighbor-matching"]], "Neighbor Sampling Overview": [[828, "Neighbor-Sampling-Overview"], [828, "id1"]], "Neighbor sampling": [[11, "neighbor-sampling"]], "NeighborSampler": [[216, "neighborsampler"], [308, "neighborsampler"]], "Network Embedding Modules": [[16, "network-embedding-modules"]], "Node Classification": [[829, "Node-Classification"]], "Node Classification Task": [[832, "Node-Classification-Task"], [833, "Node-Classification-Task"]], "Node Classification with DGL": [[834, "Node-Classification-with-DGL"]], "Node Prediction Datasets": [[2, "node-prediction-datasets"]], "Node embedding optimizer": [[10, "node-embedding-optimizer"]], "Node-wise User-defined Function": [[20, "node-wise-user-defined-function"]], "NodeData": [[687, "nodedata"]], "NodeEmbedding": [[453, "nodeembedding"]], "NodeShuffle": [[661, "nodeshuffle"]], "Non-linear activation functions": [[12, "non-linear-activation-functions"], [821, "Non-linear-activation-functions"]], "OnDiskDataset": [[309, "ondiskdataset"]], "OnDiskDataset for Heterogeneous Graph": [[832, "OnDiskDataset-for-Heterogeneous-Graph"]], "OnDiskDataset for Homogeneous Graph": [[833, "OnDiskDataset-for-Homogeneous-Graph"]], "One layer in LGNN, algorithm structure": [[852, "One-layer-in-LGNN,-algorithm-structure"]], "OpenMP settings": [[843, "OpenMP-settings"]], "Operations on Sparse Matrix": [[821, "Operations-on-Sparse-Matrix"]], "Operators": [[12, "operators"]], "Organize Data into YAML File": [[832, "Organize-Data-into-YAML-File"], [833, "Organize-Data-into-YAML-File"]], "Output format": [[694, "output-format"]], "Overview": [[725, "overview"], [726, "overview"], [728, "overview"], [729, "overview"], [730, "overview"], [825, "overview"]], "Overview of Graph Classification with GNN": [[838, "Overview-of-Graph-Classification-with-GNN"]], "Overview of Link Prediction with GNN": [[837, "Overview-of-Link-Prediction-with-GNN"]], "Overview of Neighborhood Sampling Approaches": [[710, "overview-of-neighborhood-sampling-approaches"]], "Overview of Node Classification with GNN": [[834, "Overview-of-Node-Classification-with-GNN"]], "PATTERNDataset": [[174, "patterndataset"]], "PGExplainer": [[428, "pgexplainer"]], "PNAConv": [[417, "pnaconv"]], "PPIDataset": [[175, "ppidataset"]], "PPR": [[662, "ppr"]], "Paper Study with DGL": [[866, "paper-study-with-dgl"]], "ParMETIS Installation": [[694, "parmetis-installation"]], "ParMETIS \uacb0\uacfc\ub4e4\uc744 DGLGraph\ub85c \ubcc0\ud658\ud558\uae30": [[780, "parmetis-dglgraph"]], "ParMETIS \uc124\uce58": [[780, "parmetis"]], "ParMETIS \uc2e4\ud589\ud558\uae30 \ubc0f \uacb0\uacfc \ud3ec\uba67\ub4e4": [[780, "id9"]], "ParMETIS\ub97c \uc704\ud55c \uc785\ub825 \ud3ec\uba67": [[780, "id8"]], "Parallel METIS partitioning": [[694, "parallel-metis-partitioning"]], "Partition": [[4, "partition"]], "Partition a graph": [[846, "Partition-a-graph"], [847, "Partition-a-graph"]], "Path Encoding": [[683, "path-encoding"]], "PathEncoder": [[447, "pathencoder"]], "PerSourceUniform": [[227, "persourceuniform"]], "Performance Benchmarks": [[822, "performance-benchmarks"]], "Positive graph, negative graph, and apply_edges": [[837, "Positive-graph,-negative-graph,-and-apply_edges"]], "Predicting Edge Type of an Existing Edge on a Heterogeneous Graph": [[726, "predicting-edge-type-of-an-existing-edge-on-a-heterogeneous-graph"]], "Prepare Data": [[681, "prepare-data"]], "Prepare training and testing sets": [[837, "Prepare-training-and-testing-sets"]], "Preprocessing and postprocessing": [[863, "Preprocessing-and-postprocessing"]], "Processing Graph Classification datasets": [[689, "processing-graph-classification-datasets"]], "Processing Node Classification datasets": [[689, "processing-node-classification-datasets"]], "Processing dataset for Link Prediction datasets": [[689, "processing-dataset-for-link-prediction-datasets"]], "Protein-protein interaction (PPI) networks": [[853, "Protein-protein-interaction-(PPI)-networks"]], "PubmedGraphDataset": [[176, "pubmedgraphdataset"]], "Put everything together": [[853, "Put-everything-together"]], "Put it all together": [[863, "Put-it-all-together"]], "Putting it together": [[856, "Putting-it-together"], [859, "Putting-it-together"]], "PyTorch backend": [[815, "pytorch-backend"]], "QM7bDataset": [[177, "qm7bdataset"]], "QM9Dataset": [[178, "qm9dataset"]], "QM9EdgeDataset": [[179, "qm9edgedataset"]], "Querying Graph Structures": [[835, "Querying-Graph-Structures"]], "Querying and manipulating batch information": [[1, "querying-and-manipulating-batch-information"]], "Querying and manipulating node/edge ID type": [[1, "querying-and-manipulating-node-edge-id-type"]], "Querying and manipulating sparse format": [[1, "querying-and-manipulating-sparse-format"]], "Querying graph structure": [[1, "querying-graph-structure"]], "Querying metagraph structure": [[1, "querying-metagraph-structure"]], "QuestionsDataset": [[180, "questionsdataset"]], "Quickstart": [[821, "Quickstart"]], "R-GCN layers": [[851, "R-GCN-layers"]], "RadiusGraph": [[431, "radiusgraph"]], "Random walk": [[11, "random-walk"]], "RandomWalkPE": [[663, "randomwalkpe"]], "RedditDataset": [[181, "redditdataset"]], "Reduce functions": [[5, "reduce-functions"]], "Reduce operations": [[821, "Reduce-operations"]], "Reference to the distributed graph": [[846, "Reference-to-the-distributed-graph"], [847, "Reference-to-the-distributed-graph"]], "RelGraphConv": [[370, "relgraphconv"], [418, "relgraphconv"], [463, "relgraphconv"]], "Relation with Message Passing APIs": [[9, "relation-with-message-passing-apis"]], "Relational Graph Convolutional Network": [[851, "Relational-Graph-Convolutional-Network"]], "RemoveSelfLoop": [[664, "removeselfloop"]], "Removing edges in the minibatch from the original graph for neighbor sampling": [[712, "removing-edges-in-the-minibatch-from-the-original-graph-for-neighbor-sampling"]], "Resources": [[823, "resources"]], "Results": [[14, "results"]], "Revisit classic models from a graph perspective": [[864, "revisit-classic-models-from-a-graph-perspective"], [866, "revisit-classic-models-from-a-graph-perspective"]], "Roadmap": [[684, "roadmap"], [697, "roadmap"], [705, "roadmap"], [710, "roadmap"], [721, "roadmap"], [725, "roadmap"]], "RomanEmpireDataset": [[182, "romanempiredataset"]], "RowFeatNormalizer": [[665, "rowfeatnormalizer"]], "Run ParMETIS and output format": [[694, "run-parmetis-and-output-format"]], "SAGEConv": [[371, "sageconv"], [419, "sageconv"], [464, "sageconv"]], "SAINTSampler": [[217, "saintsampler"]], "SBMMixtureDataset": [[183, "sbmmixturedataset"]], "SGConv": [[372, "sgconv"], [420, "sgconv"], [465, "sgconv"]], "SIGNDiffusion": [[666, "signdiffusion"]], "SSH Access": [[846, "SSH-Access"]], "SSTDataset": [[184, "sstdataset"]], "SVDPE": [[667, "svdpe"]], "Sample neighbors with GraphBolt": [[846, "Sample-neighbors-with-GraphBolt"]], "SampledSubgraph": [[310, "sampledsubgraph"]], "SampledSubgraphImpl": [[311, "sampledsubgraphimpl"]], "Sampler": [[218, "sampler"]], "Sampler Transformations": [[3, "sampler-transformations"]], "Sampler for Heterogeneous Graphs": [[711, "sampler-for-heterogeneous-graphs"]], "Samplers": [[3, "samplers"]], "SamplingGraph": [[312, "samplinggraph"]], "Scenarios": [[825, "scenarios"]], "Score Modules for Link Prediction and Knowledge Graph Completion": [[16, "score-modules-for-link-prediction-and-knowledge-graph-completion"]], "Segment Reduce Module": [[9, "segment-reduce-module"]], "SegmentedKNNGraph": [[432, "segmentedknngraph"]], "Sequential": [[380, "sequential"], [456, "sequential"]], "Set up distributed training environment": [[846, "Set-up-distributed-training-environment"], [847, "Set-up-distributed-training-environment"]], "Set2Set": [[377, "set2set"], [436, "set2set"]], "SetTransformerDecoder": [[437, "settransformerdecoder"]], "SetTransformerEncoder": [[438, "settransformerencoder"]], "ShaDowKHopSampler": [[219, "shadowkhopsampler"]], "Simple implementation": [[863, "Simple-implementation"]], "Single Machine Multi-GPU Minibatch Graph Classification": [[868, "Single-Machine-Multi-GPU-Minibatch-Graph-Classification"]], "Single Machine Multi-GPU Minibatch Node Classification": [[869, "Single-Machine-Multi-GPU-Minibatch-Node-Classification"]], "Softmax": [[821, "Softmax"]], "SortPooling": [[378, "sortpooling"], [439, "sortpooling"], [470, "sortpooling"]], "Sparse Matrix": [[821, "Sparse-Matrix"]], "Sparse Multi-head Attention": [[818, "Sparse-Multi-head-Attention"]], "Sparse matrix class": [[12, "sparse-matrix-class"]], "Spatial Encoding": [[683, "spatial-encoding"]], "SpatialEncoder": [[448, "spatialencoder"]], "SpatialEncoder3d": [[449, "spatialencoder3d"]], "Spawning Trainer Processes": [[827, "Spawning-Trainer-Processes"], [869, "Spawning-Trainer-Processes"]], "Specification": [[695, "specification"]], "Speeding up with built-in functions": [[863, "Speeding-up-with-built-in-functions"]], "Split and Load Partitions": [[4, "split-and-load-partitions"]], "Split workloads": [[692, "split-workloads"]], "SquirrelDataset": [[185, "squirreldataset"]], "Step 1": [[842, "Step-1"]], "Step 1: Batching": [[856, "Step-1:-Batching"]], "Step 2": [[842, "Step-2"]], "Step 2: Define message passing functions": [[862, "Step-2:-Define-message-passing-functions"]], "Step 2: Tree-LSTM cell with message-passing APIs": [[856, "Step-2:-Tree-LSTM-cell-with-message-passing-APIs"]], "Step 3": [[842, "Step-3"]], "Step 3: Define traversal": [[856, "Step-3:-Define-traversal"]], "Step 3: Testing": [[862, "Step-3:-Testing"]], "Step 4": [[842, "Step-4"]], "Step 5": [[842, "Step-5"]], "Step 6": [[842, "Step-6"]], "Step 7": [[842, "Step-7"]], "Step 8": [[842, "Step-8"]], "Step.1 Graph Partitioning": [[695, "step-1-graph-partitioning"]], "Step.2 Data Dispatching": [[695, "step-2-data-dispatching"]], "Subgraph Extraction Ops": [[0, "subgraph-extraction-ops"]], "SubgraphSampler": [[7, "subgraphsampler"], [313, "subgraphsampler"]], "SubgraphX": [[429, "subgraphx"]], "Subset": [[196, "subset"]], "SumPooling": [[379, "sumpooling"], [440, "sumpooling"], [471, "sumpooling"]], "Supervised community detection task with the Cora dataset": [[852, "Supervised-community-detection-task-with-the-Cora-dataset"]], "Supported Data types": [[9, "supported-data-types"]], "Supporting Multiple Platforms": [[21, "supporting-multiple-platforms"]], "System requirements": [[815, "system-requirements"]], "TAGConv": [[373, "tagconv"], [421, "tagconv"]], "TUDataset": [[186, "tudataset"]], "TWIRLSConv": [[422, "twirlsconv"]], "TWIRLSUnfoldingAndAttention": [[423, "twirlsunfoldingandattention"]], "Task": [[314, "task"]], "Task and the dataset": [[863, "Task-and-the-dataset"]], "Tensorflow backend": [[815, "tensorflow-backend"]], "TexasDataset": [[187, "texasdataset"]], "The second task, link prediction": [[851, "The-second-task,-link-prediction"]], "The task and the dataset": [[856, "The-task-and-the-dataset"]], "Tips for making chunked graph data": [[695, "tips-for-making-chunked-graph-data"]], "ToLevi": [[668, "tolevi"]], "ToSimple": [[669, "tosimple"]], "TolokersDataset": [[188, "tolokersdataset"]], "Top-level": [[687, "top-level"]], "TorchBasedFeature": [[315, "torchbasedfeature"]], "TorchBasedFeatureStore": [[316, "torchbasedfeaturestore"]], "Training": [[817, "Training"], [818, "Training"], [863, "Training"]], "Training Loop": [[712, "training-loop"], [717, "training-loop"], [728, "training-loop"], [827, "Training-Loop"], [838, "Training-Loop"], [869, "Training-Loop"]], "Training a GNN for Graph Classification": [[838, "Training-a-GNN-for-Graph-Classification"]], "Training and Evaluation": [[819, "Training-and-Evaluation"]], "Training and inference": [[852, "Training-and-inference"]], "Training loop": [[715, "training-loop"], [726, "training-loop"], [729, "training-loop"], [730, "training-loop"], [836, "Training-loop"], [837, "Training-loop"], [846, "Training-loop"], [847, "Training-loop"], [851, "Training-loop"]], "Training on CPUs": [[844, "training-on-cpus"]], "Training on GPU": [[834, "Training-on-GPU"]], "Training on Multiple GPUs": [[870, "training-on-multiple-gpus"]], "Training the GCN": [[816, "Training-the-GCN"], [834, "Training-the-GCN"]], "TransE": [[451, "transe"]], "TransR": [[452, "transr"]], "Transformer as a Graph Neural Network": [[863, "Transformer-as-a-Graph-Neural-Network"]], "Transforming graph": [[1, "transforming-graph"]], "Tree-LSTM in DGL": [[856, "Tree-LSTM-in-DGL"]], "TreeCycleDataset": [[189, "treecycledataset"]], "TreeGridDataset": [[190, "treegriddataset"]], "Tutorials: dgl.sparse": [[820, "tutorials-dgl-sparse"]], "TypedLinear": [[386, "typedlinear"]], "UVA and GPU support for PinSAGESampler/RandomWalkNeighborSampler": [[713, "uva-and-gpu-support-for-pinsagesampler-randomwalkneighborsampler"]], "Understand Graph Attention Network": [[853, "Understand-Graph-Attention-Network"]], "Uniform": [[228, "uniform"]], "UniformNegativeSampler": [[317, "uniformnegativesampler"]], "Unit tests": [[21, "unit-tests"]], "Update feature after reducing for output": [[723, "update-feature-after-reducing-for-output"]], "Update node embeddings via graph propagation": [[859, "Update-node-embeddings-via-graph-propagation"]], "User Guide": [[704, "user-guide"]], "User-defined Functions": [[20, "user-defined-functions"]], "Using CUDA UVA-based neighborhood sampling in DGL data loaders": [[713, "using-cuda-uva-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using GPU-based neighbor sampling with DGL functions": [[713, "using-gpu-based-neighbor-sampling-with-dgl-functions"]], "Using GPU-based neighborhood sampling in DGL data loaders": [[713, "using-gpu-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using NN Modules with Edge Weights": [[727, "using-nn-modules-with-edge-weights"]], "Using Node/edge features": [[1, "using-node-edge-features"]], "Utilities": [[0, "utilities"], [2, "utilities"], [7, "utilities"]], "Utility Class and Functions for Feature Prefetching": [[3, "utility-class-and-functions-for-feature-prefetching"]], "Utility Modules": [[15, "utility-modules"], [16, "utility-modules"]], "Utility Modules for Graph Transformer": [[16, "utility-modules-for-graph-transformer"]], "Visualization": [[863, "Visualization"]], "Visualize training progress": [[852, "Visualize-training-progress"]], "Visualizing and understanding attention learned": [[853, "Visualizing-and-understanding-attention-learned"]], "WN18Dataset": [[191, "wn18dataset"]], "WeightAndSum": [[441, "weightandsum"]], "WeightBasis": [[457, "weightbasis"]], "Weighted reduction across GPUs": [[827, "Weighted-reduction-across-GPUs"]], "Welcome to Deep Graph Library Tutorials and Documentation": [[814, "welcome-to-deep-graph-library-tutorials-and-documentation"]], "What is a line-graph?": [[852, "What-is-a-line-graph?"]], "What\u2019s next": [[838, "What\u2019s-next"]], "What\u2019s next?": [[834, "What\u2019s-next?"], [835, "What\u2019s-next?"], [836, "What\u2019s-next?"], [853, "What's-next?"]], "WikiCSDataset": [[192, "wikicsdataset"]], "Windows": [[815, "windows"]], "WisconsinDataset": [[193, "wisconsindataset"]], "Working with Multiple Types": [[703, "working-with-multiple-types"]], "Working with different backends": [[815, "working-with-different-backends"]], "Write your own GNN module": [[836, "Write-your-own-GNN-module"]], "Writing Neural Network Model": [[728, "writing-neural-network-model"]], "Writing modules that work on homogeneous graphs, bipartite graphs, and MFGs": [[716, "writing-modules-that-work-on-homogeneous-graphs-bipartite-graphs-and-mfgs"]], "Writing neural network model": [[730, "writing-neural-network-model"]], "YAML specification": [[831, "yaml-specification"]], "YelpDataset": [[194, "yelpdataset"]], "ZINCDataset": [[195, "zincdataset"]], "add_node_property_split": [[197, "add-node-property-split"]], "add_nodepred_split": [[198, "add-nodepred-split"]], "check_sha1": [[199, "check-sha1"]], "dataset_name": [[831, "dataset-name"]], "dgl": [[0, "module-dgl"]], "dgl.DGLGraph": [[1, "dgl-dglgraph"]], "dgl.DGLGraph.__getitem__": [[26, "dgl-dglgraph-getitem"]], "dgl.DGLGraph.add_edges": [[27, "dgl-dglgraph-add-edges"]], "dgl.DGLGraph.add_nodes": [[28, "dgl-dglgraph-add-nodes"]], "dgl.DGLGraph.add_self_loop": [[29, "dgl-dglgraph-add-self-loop"]], "dgl.DGLGraph.adj": [[30, "dgl-dglgraph-adj"]], "dgl.DGLGraph.adj_external": [[31, "dgl-dglgraph-adj-external"]], "dgl.DGLGraph.adj_tensors": [[32, "dgl-dglgraph-adj-tensors"]], "dgl.DGLGraph.adjacency_matrix": [[33, "dgl-dglgraph-adjacency-matrix"]], "dgl.DGLGraph.apply_edges": [[34, "dgl-dglgraph-apply-edges"]], "dgl.DGLGraph.apply_nodes": [[35, "dgl-dglgraph-apply-nodes"]], "dgl.DGLGraph.batch_num_edges": [[36, "dgl-dglgraph-batch-num-edges"]], "dgl.DGLGraph.batch_num_nodes": [[37, "dgl-dglgraph-batch-num-nodes"]], "dgl.DGLGraph.batch_size": [[38, "dgl-dglgraph-batch-size"]], "dgl.DGLGraph.canonical_etypes": [[39, "dgl-dglgraph-canonical-etypes"]], "dgl.DGLGraph.cpu": [[40, "dgl-dglgraph-cpu"]], "dgl.DGLGraph.create_formats_": [[41, "dgl-dglgraph-create-formats"]], "dgl.DGLGraph.device": [[42, "dgl-dglgraph-device"]], "dgl.DGLGraph.dstdata": [[43, "dgl-dglgraph-dstdata"]], "dgl.DGLGraph.dstnodes": [[44, "dgl-dglgraph-dstnodes"]], "dgl.DGLGraph.dsttypes": [[45, "dgl-dglgraph-dsttypes"]], "dgl.DGLGraph.edata": [[46, "dgl-dglgraph-edata"]], "dgl.DGLGraph.edge_attr_schemes": [[47, "dgl-dglgraph-edge-attr-schemes"]], "dgl.DGLGraph.edge_ids": [[48, "dgl-dglgraph-edge-ids"]], "dgl.DGLGraph.edge_subgraph": [[49, "dgl-dglgraph-edge-subgraph"]], "dgl.DGLGraph.edge_type_subgraph": [[50, "dgl-dglgraph-edge-type-subgraph"]], "dgl.DGLGraph.edges": [[51, "dgl-dglgraph-edges"]], "dgl.DGLGraph.etypes": [[52, "dgl-dglgraph-etypes"]], "dgl.DGLGraph.filter_edges": [[53, "dgl-dglgraph-filter-edges"]], "dgl.DGLGraph.filter_nodes": [[54, "dgl-dglgraph-filter-nodes"]], "dgl.DGLGraph.find_edges": [[55, "dgl-dglgraph-find-edges"]], "dgl.DGLGraph.formats": [[56, "dgl-dglgraph-formats"]], "dgl.DGLGraph.has_edges_between": [[57, "dgl-dglgraph-has-edges-between"]], "dgl.DGLGraph.has_nodes": [[58, "dgl-dglgraph-has-nodes"]], "dgl.DGLGraph.idtype": [[59, "dgl-dglgraph-idtype"]], "dgl.DGLGraph.in_degrees": [[60, "dgl-dglgraph-in-degrees"]], "dgl.DGLGraph.in_edges": [[61, "dgl-dglgraph-in-edges"]], "dgl.DGLGraph.inc": [[62, "dgl-dglgraph-inc"]], "dgl.DGLGraph.incidence_matrix": [[63, "dgl-dglgraph-incidence-matrix"]], "dgl.DGLGraph.int": [[64, "dgl-dglgraph-int"]], "dgl.DGLGraph.is_homogeneous": [[65, "dgl-dglgraph-is-homogeneous"]], "dgl.DGLGraph.is_multigraph": [[66, "dgl-dglgraph-is-multigraph"]], "dgl.DGLGraph.is_pinned": [[67, "dgl-dglgraph-is-pinned"]], "dgl.DGLGraph.is_unibipartite": [[68, "dgl-dglgraph-is-unibipartite"]], "dgl.DGLGraph.line_graph": [[69, "dgl-dglgraph-line-graph"]], "dgl.DGLGraph.local_scope": [[70, "dgl-dglgraph-local-scope"]], "dgl.DGLGraph.long": [[71, "dgl-dglgraph-long"]], "dgl.DGLGraph.metagraph": [[72, "dgl-dglgraph-metagraph"]], "dgl.DGLGraph.multi_update_all": [[73, "dgl-dglgraph-multi-update-all"]], "dgl.DGLGraph.ndata": [[74, "dgl-dglgraph-ndata"]], "dgl.DGLGraph.node_attr_schemes": [[75, "dgl-dglgraph-node-attr-schemes"]], "dgl.DGLGraph.node_type_subgraph": [[76, "dgl-dglgraph-node-type-subgraph"]], "dgl.DGLGraph.nodes": [[77, "dgl-dglgraph-nodes"]], "dgl.DGLGraph.ntypes": [[78, "dgl-dglgraph-ntypes"]], "dgl.DGLGraph.num_dst_nodes": [[79, "dgl-dglgraph-num-dst-nodes"]], "dgl.DGLGraph.num_edges": [[80, "dgl-dglgraph-num-edges"]], "dgl.DGLGraph.num_nodes": [[81, "dgl-dglgraph-num-nodes"]], "dgl.DGLGraph.num_src_nodes": [[82, "dgl-dglgraph-num-src-nodes"]], "dgl.DGLGraph.number_of_dst_nodes": [[83, "dgl-dglgraph-number-of-dst-nodes"]], "dgl.DGLGraph.number_of_edges": [[84, "dgl-dglgraph-number-of-edges"]], "dgl.DGLGraph.number_of_nodes": [[85, "dgl-dglgraph-number-of-nodes"]], "dgl.DGLGraph.number_of_src_nodes": [[86, "dgl-dglgraph-number-of-src-nodes"]], "dgl.DGLGraph.out_degrees": [[87, "dgl-dglgraph-out-degrees"]], "dgl.DGLGraph.out_edges": [[88, "dgl-dglgraph-out-edges"]], "dgl.DGLGraph.pin_memory_": [[89, "dgl-dglgraph-pin-memory"]], "dgl.DGLGraph.predecessors": [[90, "dgl-dglgraph-predecessors"]], "dgl.DGLGraph.prop_edges": [[91, "dgl-dglgraph-prop-edges"]], "dgl.DGLGraph.prop_nodes": [[92, "dgl-dglgraph-prop-nodes"]], "dgl.DGLGraph.pull": [[93, "dgl-dglgraph-pull"]], "dgl.DGLGraph.push": [[94, "dgl-dglgraph-push"]], "dgl.DGLGraph.remove_edges": [[95, "dgl-dglgraph-remove-edges"]], "dgl.DGLGraph.remove_nodes": [[96, "dgl-dglgraph-remove-nodes"]], "dgl.DGLGraph.remove_self_loop": [[97, "dgl-dglgraph-remove-self-loop"]], "dgl.DGLGraph.reorder_graph": [[98, "dgl-dglgraph-reorder-graph"]], "dgl.DGLGraph.reverse": [[99, "dgl-dglgraph-reverse"]], "dgl.DGLGraph.send_and_recv": [[100, "dgl-dglgraph-send-and-recv"]], "dgl.DGLGraph.set_batch_num_edges": [[101, "dgl-dglgraph-set-batch-num-edges"]], "dgl.DGLGraph.set_batch_num_nodes": [[102, "dgl-dglgraph-set-batch-num-nodes"]], "dgl.DGLGraph.srcdata": [[103, "dgl-dglgraph-srcdata"]], "dgl.DGLGraph.srcnodes": [[104, "dgl-dglgraph-srcnodes"]], "dgl.DGLGraph.srctypes": [[105, "dgl-dglgraph-srctypes"]], "dgl.DGLGraph.subgraph": [[106, "dgl-dglgraph-subgraph"]], "dgl.DGLGraph.successors": [[107, "dgl-dglgraph-successors"]], "dgl.DGLGraph.to": [[108, "dgl-dglgraph-to"]], "dgl.DGLGraph.to_canonical_etype": [[109, "dgl-dglgraph-to-canonical-etype"]], "dgl.DGLGraph.to_cugraph": [[110, "dgl-dglgraph-to-cugraph"]], "dgl.DGLGraph.to_simple": [[111, "dgl-dglgraph-to-simple"]], "dgl.DGLGraph.unpin_memory_": [[112, "dgl-dglgraph-unpin-memory"]], "dgl.DGLGraph.update_all": [[113, "dgl-dglgraph-update-all"]], "dgl.add_edges": [[114, "dgl-add-edges"]], "dgl.add_nodes": [[115, "dgl-add-nodes"]], "dgl.add_reverse_edges": [[116, "dgl-add-reverse-edges"]], "dgl.add_self_loop": [[117, "dgl-add-self-loop"]], "dgl.adj_product_graph": [[118, "dgl-adj-product-graph"]], "dgl.adj_sum_graph": [[119, "dgl-adj-sum-graph"]], "dgl.adjusted_homophily": [[120, "dgl-adjusted-homophily"]], "dgl.apply_each": [[121, "dgl-apply-each"]], "dgl.batch": [[122, "dgl-batch"]], "dgl.bfs_edges_generator": [[123, "dgl-bfs-edges-generator"]], "dgl.bfs_nodes_generator": [[124, "dgl-bfs-nodes-generator"]], "dgl.bipartite_from_networkx": [[125, "dgl-bipartite-from-networkx"]], "dgl.bipartite_from_scipy": [[126, "dgl-bipartite-from-scipy"]], "dgl.block_to_graph": [[127, "dgl-block-to-graph"]], "dgl.broadcast_edges": [[128, "dgl-broadcast-edges"]], "dgl.broadcast_nodes": [[129, "dgl-broadcast-nodes"]], "dgl.compact_graphs": [[130, "dgl-compact-graphs"]], "dgl.create_block": [[131, "dgl-create-block"]], "dgl.data": [[2, "module-dgl.data"]], "dgl.dataloading": [[3, "dgl-dataloading"]], "dgl.dataloading.BlockSampler": [[208, "dgl-dataloading-blocksampler"]], "dgl.dataloading.as_edge_prediction_sampler": [[220, "dgl-dataloading-as-edge-prediction-sampler"]], "dgl.dfs_edges_generator": [[229, "dgl-dfs-edges-generator"]], "dgl.dfs_labeled_edges_generator": [[230, "dgl-dfs-labeled-edges-generator"]], "dgl.distributed": [[4, "dgl-distributed"]], "dgl.distributed.dgl_partition_to_graphbolt": [[231, "dgl-distributed-dgl-partition-to-graphbolt"]], "dgl.distributed.edge_split": [[232, "dgl-distributed-edge-split"]], "dgl.distributed.find_edges": [[233, "dgl-distributed-find-edges"]], "dgl.distributed.in_subgraph": [[234, "dgl-distributed-in-subgraph"]], "dgl.distributed.initialize": [[235, "dgl-distributed-initialize"]], "dgl.distributed.load_partition": [[236, "dgl-distributed-load-partition"]], "dgl.distributed.load_partition_book": [[237, "dgl-distributed-load-partition-book"]], "dgl.distributed.load_partition_feats": [[238, "dgl-distributed-load-partition-feats"]], "dgl.distributed.node_split": [[239, "dgl-distributed-node-split"]], "dgl.distributed.partition_graph": [[240, "dgl-distributed-partition-graph"]], "dgl.distributed.sample_etype_neighbors": [[241, "dgl-distributed-sample-etype-neighbors"]], "dgl.distributed.sample_neighbors": [[242, "dgl-distributed-sample-neighbors"]], "dgl.double_radius_node_labeling": [[243, "dgl-double-radius-node-labeling"]], "dgl.edge_homophily": [[244, "dgl-edge-homophily"]], "dgl.edge_label_informativeness": [[245, "dgl-edge-label-informativeness"]], "dgl.edge_subgraph": [[246, "dgl-edge-subgraph"]], "dgl.edge_type_subgraph": [[247, "dgl-edge-type-subgraph"]], "dgl.from_cugraph": [[248, "dgl-from-cugraph"]], "dgl.from_networkx": [[249, "dgl-from-networkx"]], "dgl.from_scipy": [[250, "dgl-from-scipy"]], "dgl.function": [[5, "dgl-function"]], "dgl.function.copy_e": [[251, "dgl-function-copy-e"]], "dgl.function.copy_u": [[252, "dgl-function-copy-u"]], "dgl.function.e_add_u": [[253, "dgl-function-e-add-u"]], "dgl.function.e_add_v": [[254, "dgl-function-e-add-v"]], "dgl.function.e_div_u": [[255, "dgl-function-e-div-u"]], "dgl.function.e_div_v": [[256, "dgl-function-e-div-v"]], "dgl.function.e_dot_u": [[257, "dgl-function-e-dot-u"]], "dgl.function.e_dot_v": [[258, "dgl-function-e-dot-v"]], "dgl.function.e_mul_u": [[259, "dgl-function-e-mul-u"]], "dgl.function.e_mul_v": [[260, "dgl-function-e-mul-v"]], "dgl.function.e_sub_u": [[261, "dgl-function-e-sub-u"]], "dgl.function.e_sub_v": [[262, "dgl-function-e-sub-v"]], "dgl.function.max": [[263, "dgl-function-max"]], "dgl.function.mean": [[264, "dgl-function-mean"]], "dgl.function.min": [[265, "dgl-function-min"]], "dgl.function.sum": [[266, "dgl-function-sum"]], "dgl.function.u_add_e": [[267, "dgl-function-u-add-e"]], "dgl.function.u_add_v": [[268, "dgl-function-u-add-v"]], "dgl.function.u_div_e": [[269, "dgl-function-u-div-e"]], "dgl.function.u_div_v": [[270, "dgl-function-u-div-v"]], "dgl.function.u_dot_e": [[271, "dgl-function-u-dot-e"]], "dgl.function.u_dot_v": [[272, "dgl-function-u-dot-v"]], "dgl.function.u_mul_e": [[273, "dgl-function-u-mul-e"]], "dgl.function.u_mul_v": [[274, "dgl-function-u-mul-v"]], "dgl.function.u_sub_e": [[275, "dgl-function-u-sub-e"]], "dgl.function.u_sub_v": [[276, "dgl-function-u-sub-v"]], "dgl.function.v_add_e": [[277, "dgl-function-v-add-e"]], "dgl.function.v_add_u": [[278, "dgl-function-v-add-u"]], "dgl.function.v_div_e": [[279, "dgl-function-v-div-e"]], "dgl.function.v_div_u": [[280, "dgl-function-v-div-u"]], "dgl.function.v_dot_e": [[281, "dgl-function-v-dot-e"]], "dgl.function.v_dot_u": [[282, "dgl-function-v-dot-u"]], "dgl.function.v_mul_e": [[283, "dgl-function-v-mul-e"]], "dgl.function.v_mul_u": [[284, "dgl-function-v-mul-u"]], "dgl.function.v_sub_e": [[285, "dgl-function-v-sub-e"]], "dgl.function.v_sub_u": [[286, "dgl-function-v-sub-u"]], "dgl.geometry": [[6, "module-dgl.geometry"]], "dgl.graph": [[287, "dgl-graph"]], "dgl.graphbolt.add_reverse_edges": [[318, "dgl-graphbolt-add-reverse-edges"]], "dgl.graphbolt.compact_csc_format": [[319, "dgl-graphbolt-compact-csc-format"]], "dgl.graphbolt.etype_str_to_tuple": [[320, "dgl-graphbolt-etype-str-to-tuple"]], "dgl.graphbolt.etype_tuple_to_str": [[321, "dgl-graphbolt-etype-tuple-to-str"]], "dgl.graphbolt.exclude_seed_edges": [[322, "dgl-graphbolt-exclude-seed-edges"]], "dgl.graphbolt.expand_indptr": [[323, "dgl-graphbolt-expand-indptr"]], "dgl.graphbolt.from_dglgraph": [[324, "dgl-graphbolt-from-dglgraph"]], "dgl.graphbolt.fused_csc_sampling_graph": [[325, "dgl-graphbolt-fused-csc-sampling-graph"]], "dgl.graphbolt.index_select": [[326, "dgl-graphbolt-index-select"]], "dgl.graphbolt.isin": [[327, "dgl-graphbolt-isin"]], "dgl.graphbolt.load_from_shared_memory": [[328, "dgl-graphbolt-load-from-shared-memory"]], "dgl.graphbolt.seed": [[329, "dgl-graphbolt-seed"]], "dgl.graphbolt.unique_and_compact": [[330, "dgl-graphbolt-unique-and-compact"]], "dgl.graphbolt.unique_and_compact_csc_formats": [[331, "dgl-graphbolt-unique-and-compact-csc-formats"]], "dgl.heterograph": [[332, "dgl-heterograph"]], "dgl.in_subgraph": [[333, "dgl-in-subgraph"]], "dgl.is_libxsmm_enabled": [[334, "dgl-is-libxsmm-enabled"]], "dgl.khop_adj": [[335, "dgl-khop-adj"]], "dgl.khop_graph": [[336, "dgl-khop-graph"]], "dgl.khop_in_subgraph": [[337, "dgl-khop-in-subgraph"]], "dgl.khop_out_subgraph": [[338, "dgl-khop-out-subgraph"]], "dgl.knn_graph": [[339, "dgl-knn-graph"]], "dgl.lap_pe": [[340, "dgl-lap-pe"]], "dgl.laplacian_lambda_max": [[341, "dgl-laplacian-lambda-max"]], "dgl.line_graph": [[342, "dgl-line-graph"]], "dgl.linkx_homophily": [[343, "dgl-linkx-homophily"]], "dgl.load_graphs": [[344, "dgl-load-graphs"]], "dgl.max_edges": [[345, "dgl-max-edges"]], "dgl.max_nodes": [[346, "dgl-max-nodes"]], "dgl.mean_edges": [[347, "dgl-mean-edges"]], "dgl.mean_nodes": [[348, "dgl-mean-nodes"]], "dgl.merge": [[349, "dgl-merge"]], "dgl.metapath_reachable_graph": [[350, "dgl-metapath-reachable-graph"]], "dgl.metis_partition": [[351, "dgl-metis-partition"]], "dgl.metis_partition_assignment": [[352, "dgl-metis-partition-assignment"]], "dgl.multiprocessing": [[8, "dgl-multiprocessing"]], "dgl.multiprocessing.pytorch.call_once_and_share": [[353, "dgl-multiprocessing-pytorch-call-once-and-share"]], "dgl.multiprocessing.pytorch.shared_tensor": [[354, "dgl-multiprocessing-pytorch-shared-tensor"]], "dgl.nn (MXNet)": [[15, "dgl-nn-mxnet"]], "dgl.nn (PyTorch)": [[16, "dgl-nn-pytorch"]], "dgl.nn (TensorFlow)": [[17, "dgl-nn-tensorflow"]], "dgl.nn.functional": [[18, "module-dgl.nn.functional"]], "dgl.nn.functional.edge_softmax": [[355, "dgl-nn-functional-edge-softmax"]], "dgl.node_homophily": [[472, "dgl-node-homophily"]], "dgl.node_label_informativeness": [[473, "dgl-node-label-informativeness"]], "dgl.node_subgraph": [[474, "dgl-node-subgraph"]], "dgl.node_type_subgraph": [[475, "dgl-node-type-subgraph"]], "dgl.norm_by_dst": [[476, "dgl-norm-by-dst"]], "dgl.ops": [[9, "dgl-ops"]], "dgl.ops.copy_e_max": [[477, "dgl-ops-copy-e-max"]], "dgl.ops.copy_e_mean": [[478, "dgl-ops-copy-e-mean"]], "dgl.ops.copy_e_min": [[479, "dgl-ops-copy-e-min"]], "dgl.ops.copy_e_sum": [[480, "dgl-ops-copy-e-sum"]], "dgl.ops.copy_u": [[481, "dgl-ops-copy-u"]], "dgl.ops.copy_u_max": [[482, "dgl-ops-copy-u-max"]], "dgl.ops.copy_u_mean": [[483, "dgl-ops-copy-u-mean"]], "dgl.ops.copy_u_min": [[484, "dgl-ops-copy-u-min"]], "dgl.ops.copy_u_sum": [[485, "dgl-ops-copy-u-sum"]], "dgl.ops.copy_v": [[486, "dgl-ops-copy-v"]], "dgl.ops.e_add_u": [[487, "dgl-ops-e-add-u"]], "dgl.ops.e_add_v": [[488, "dgl-ops-e-add-v"]], "dgl.ops.e_div_u": [[489, "dgl-ops-e-div-u"]], "dgl.ops.e_div_v": [[490, "dgl-ops-e-div-v"]], "dgl.ops.e_dot_u": [[491, "dgl-ops-e-dot-u"]], "dgl.ops.e_dot_v": [[492, "dgl-ops-e-dot-v"]], "dgl.ops.e_mul_u": [[493, "dgl-ops-e-mul-u"]], "dgl.ops.e_mul_v": [[494, "dgl-ops-e-mul-v"]], "dgl.ops.e_sub_u": [[495, "dgl-ops-e-sub-u"]], "dgl.ops.e_sub_v": [[496, "dgl-ops-e-sub-v"]], "dgl.ops.gather_mm": [[497, "dgl-ops-gather-mm"]], "dgl.ops.gsddmm": [[498, "dgl-ops-gsddmm"]], "dgl.ops.gspmm": [[499, "dgl-ops-gspmm"]], "dgl.ops.segment_mm": [[500, "dgl-ops-segment-mm"]], "dgl.ops.segment_reduce": [[501, "dgl-ops-segment-reduce"]], "dgl.ops.u_add_e": [[502, "dgl-ops-u-add-e"]], "dgl.ops.u_add_e_max": [[503, "dgl-ops-u-add-e-max"]], "dgl.ops.u_add_e_mean": [[504, "dgl-ops-u-add-e-mean"]], "dgl.ops.u_add_e_min": [[505, "dgl-ops-u-add-e-min"]], "dgl.ops.u_add_e_sum": [[506, "dgl-ops-u-add-e-sum"]], "dgl.ops.u_add_v": [[507, "dgl-ops-u-add-v"]], "dgl.ops.u_div_e": [[508, "dgl-ops-u-div-e"]], "dgl.ops.u_div_e_max": [[509, "dgl-ops-u-div-e-max"]], "dgl.ops.u_div_e_mean": [[510, "dgl-ops-u-div-e-mean"]], "dgl.ops.u_div_e_min": [[511, "dgl-ops-u-div-e-min"]], "dgl.ops.u_div_e_sum": [[512, "dgl-ops-u-div-e-sum"]], "dgl.ops.u_div_v": [[513, "dgl-ops-u-div-v"]], "dgl.ops.u_dot_e": [[514, "dgl-ops-u-dot-e"]], "dgl.ops.u_dot_v": [[515, "dgl-ops-u-dot-v"]], "dgl.ops.u_mul_e": [[516, "dgl-ops-u-mul-e"]], "dgl.ops.u_mul_e_max": [[517, "dgl-ops-u-mul-e-max"]], "dgl.ops.u_mul_e_mean": [[518, "dgl-ops-u-mul-e-mean"]], "dgl.ops.u_mul_e_min": [[519, "dgl-ops-u-mul-e-min"]], "dgl.ops.u_mul_e_sum": [[520, "dgl-ops-u-mul-e-sum"]], "dgl.ops.u_mul_v": [[521, "dgl-ops-u-mul-v"]], "dgl.ops.u_sub_e": [[522, "dgl-ops-u-sub-e"]], "dgl.ops.u_sub_e_max": [[523, "dgl-ops-u-sub-e-max"]], "dgl.ops.u_sub_e_mean": [[524, "dgl-ops-u-sub-e-mean"]], "dgl.ops.u_sub_e_min": [[525, "dgl-ops-u-sub-e-min"]], "dgl.ops.u_sub_e_sum": [[526, "dgl-ops-u-sub-e-sum"]], "dgl.ops.u_sub_v": [[527, "dgl-ops-u-sub-v"]], "dgl.ops.v_add_e": [[528, "dgl-ops-v-add-e"]], "dgl.ops.v_add_u": [[529, "dgl-ops-v-add-u"]], "dgl.ops.v_div_e": [[530, "dgl-ops-v-div-e"]], "dgl.ops.v_div_u": [[531, "dgl-ops-v-div-u"]], "dgl.ops.v_dot_e": [[532, "dgl-ops-v-dot-e"]], "dgl.ops.v_dot_u": [[533, "dgl-ops-v-dot-u"]], "dgl.ops.v_mul_e": [[534, "dgl-ops-v-mul-e"]], "dgl.ops.v_mul_u": [[535, "dgl-ops-v-mul-u"]], "dgl.ops.v_sub_e": [[536, "dgl-ops-v-sub-e"]], "dgl.ops.v_sub_u": [[537, "dgl-ops-v-sub-u"]], "dgl.optim": [[10, "module-dgl.optim"]], "dgl.out_subgraph": [[538, "dgl-out-subgraph"]], "dgl.partition_graph_with_halo": [[539, "dgl-partition-graph-with-halo"]], "dgl.prop_edges": [[540, "dgl-prop-edges"]], "dgl.prop_edges_dfs": [[541, "dgl-prop-edges-dfs"]], "dgl.prop_nodes": [[542, "dgl-prop-nodes"]], "dgl.prop_nodes_bfs": [[543, "dgl-prop-nodes-bfs"]], "dgl.prop_nodes_topo": [[544, "dgl-prop-nodes-topo"]], "dgl.radius_graph": [[545, "dgl-radius-graph"]], "dgl.rand_bipartite": [[546, "dgl-rand-bipartite"]], "dgl.rand_graph": [[547, "dgl-rand-graph"]], "dgl.random_walk_pe": [[548, "dgl-random-walk-pe"]], "dgl.readout_edges": [[549, "dgl-readout-edges"]], "dgl.readout_nodes": [[550, "dgl-readout-nodes"]], "dgl.remove_edges": [[551, "dgl-remove-edges"]], "dgl.remove_nodes": [[552, "dgl-remove-nodes"]], "dgl.remove_self_loop": [[553, "dgl-remove-self-loop"]], "dgl.reorder_graph": [[554, "dgl-reorder-graph"]], "dgl.reverse": [[555, "dgl-reverse"]], "dgl.sampling": [[11, "module-dgl.sampling"]], "dgl.sampling.PinSAGESampler": [[556, "dgl-sampling-pinsagesampler"]], "dgl.sampling.global_uniform_negative_sampling": [[557, "dgl-sampling-global-uniform-negative-sampling"]], "dgl.sampling.node2vec_random_walk": [[558, "dgl-sampling-node2vec-random-walk"]], "dgl.sampling.pack_traces": [[559, "dgl-sampling-pack-traces"]], "dgl.sampling.random_walk": [[560, "dgl-sampling-random-walk"]], "dgl.sampling.sample_labors": [[561, "dgl-sampling-sample-labors"]], "dgl.sampling.sample_neighbors": [[562, "dgl-sampling-sample-neighbors"]], "dgl.sampling.sample_neighbors_biased": [[563, "dgl-sampling-sample-neighbors-biased"]], "dgl.sampling.select_topk": [[564, "dgl-sampling-select-topk"]], "dgl.save_graphs": [[565, "dgl-save-graphs"]], "dgl.seed": [[566, "dgl-seed"]], "dgl.segmented_knn_graph": [[567, "dgl-segmented-knn-graph"]], "dgl.shortest_dist": [[568, "dgl-shortest-dist"]], "dgl.slice_batch": [[569, "dgl-slice-batch"]], "dgl.softmax_edges": [[570, "dgl-softmax-edges"]], "dgl.softmax_nodes": [[571, "dgl-softmax-nodes"]], "dgl.sort_csc_by_tag": [[572, "dgl-sort-csc-by-tag"]], "dgl.sort_csr_by_tag": [[573, "dgl-sort-csr-by-tag"]], "dgl.sparse": [[12, "dgl-sparse"]], "dgl.sparse.SparseMatrix.T": [[574, "dgl-sparse-sparsematrix-t"]], "dgl.sparse.SparseMatrix.coalesce": [[575, "dgl-sparse-sparsematrix-coalesce"]], "dgl.sparse.SparseMatrix.col": [[576, "dgl-sparse-sparsematrix-col"]], "dgl.sparse.SparseMatrix.coo": [[577, "dgl-sparse-sparsematrix-coo"]], "dgl.sparse.SparseMatrix.cpu": [[578, "dgl-sparse-sparsematrix-cpu"]], "dgl.sparse.SparseMatrix.csc": [[579, "dgl-sparse-sparsematrix-csc"]], "dgl.sparse.SparseMatrix.csr": [[580, "dgl-sparse-sparsematrix-csr"]], "dgl.sparse.SparseMatrix.cuda": [[581, "dgl-sparse-sparsematrix-cuda"]], "dgl.sparse.SparseMatrix.device": [[582, "dgl-sparse-sparsematrix-device"]], "dgl.sparse.SparseMatrix.double": [[583, "dgl-sparse-sparsematrix-double"]], "dgl.sparse.SparseMatrix.dtype": [[584, "dgl-sparse-sparsematrix-dtype"]], "dgl.sparse.SparseMatrix.float": [[585, "dgl-sparse-sparsematrix-float"]], "dgl.sparse.SparseMatrix.has_duplicate": [[586, "dgl-sparse-sparsematrix-has-duplicate"]], "dgl.sparse.SparseMatrix.indices": [[587, "dgl-sparse-sparsematrix-indices"]], "dgl.sparse.SparseMatrix.int": [[588, "dgl-sparse-sparsematrix-int"]], "dgl.sparse.SparseMatrix.long": [[589, "dgl-sparse-sparsematrix-long"]], "dgl.sparse.SparseMatrix.neg": [[590, "dgl-sparse-sparsematrix-neg"]], "dgl.sparse.SparseMatrix.nnz": [[591, "dgl-sparse-sparsematrix-nnz"]], "dgl.sparse.SparseMatrix.reduce": [[592, "dgl-sparse-sparsematrix-reduce"]], "dgl.sparse.SparseMatrix.row": [[593, "dgl-sparse-sparsematrix-row"]], "dgl.sparse.SparseMatrix.shape": [[594, "dgl-sparse-sparsematrix-shape"]], "dgl.sparse.SparseMatrix.smax": [[595, "dgl-sparse-sparsematrix-smax"]], "dgl.sparse.SparseMatrix.smean": [[596, "dgl-sparse-sparsematrix-smean"]], "dgl.sparse.SparseMatrix.smin": [[597, "dgl-sparse-sparsematrix-smin"]], "dgl.sparse.SparseMatrix.softmax": [[598, "dgl-sparse-sparsematrix-softmax"]], "dgl.sparse.SparseMatrix.sum": [[599, "dgl-sparse-sparsematrix-sum"]], "dgl.sparse.SparseMatrix.t": [[600, "dgl-sparse-sparsematrix-t"]], "dgl.sparse.SparseMatrix.to": [[601, "dgl-sparse-sparsematrix-to"]], "dgl.sparse.SparseMatrix.to_dense": [[602, "dgl-sparse-sparsematrix-to-dense"]], "dgl.sparse.SparseMatrix.transpose": [[603, "dgl-sparse-sparsematrix-transpose"]], "dgl.sparse.SparseMatrix.val": [[604, "dgl-sparse-sparsematrix-val"]], "dgl.sparse.add": [[605, "dgl-sparse-add"]], "dgl.sparse.bsddmm": [[606, "dgl-sparse-bsddmm"]], "dgl.sparse.bspmm": [[607, "dgl-sparse-bspmm"]], "dgl.sparse.diag": [[608, "dgl-sparse-diag"]], "dgl.sparse.div": [[609, "dgl-sparse-div"]], "dgl.sparse.from_coo": [[610, "dgl-sparse-from-coo"]], "dgl.sparse.from_csc": [[611, "dgl-sparse-from-csc"]], "dgl.sparse.from_csr": [[612, "dgl-sparse-from-csr"]], "dgl.sparse.identity": [[613, "dgl-sparse-identity"]], "dgl.sparse.matmul": [[614, "dgl-sparse-matmul"]], "dgl.sparse.mul": [[615, "dgl-sparse-mul"]], "dgl.sparse.power": [[616, "dgl-sparse-power"]], "dgl.sparse.sddmm": [[617, "dgl-sparse-sddmm"]], "dgl.sparse.softmax": [[618, "dgl-sparse-softmax"]], "dgl.sparse.sp_add_v": [[619, "dgl-sparse-sp-add-v"]], "dgl.sparse.sp_broadcast_v": [[620, "dgl-sparse-sp-broadcast-v"]], "dgl.sparse.sp_div_v": [[621, "dgl-sparse-sp-div-v"]], "dgl.sparse.sp_mul_v": [[622, "dgl-sparse-sp-mul-v"]], "dgl.sparse.sp_sub_v": [[623, "dgl-sparse-sp-sub-v"]], "dgl.sparse.spmatrix": [[624, "dgl-sparse-spmatrix"]], "dgl.sparse.spmm": [[625, "dgl-sparse-spmm"]], "dgl.sparse.spspmm": [[626, "dgl-sparse-spspmm"]], "dgl.sparse.sub": [[627, "dgl-sparse-sub"]], "dgl.sparse.val_like": [[628, "dgl-sparse-val-like"]], "dgl.sum_edges": [[629, "dgl-sum-edges"]], "dgl.sum_nodes": [[630, "dgl-sum-nodes"]], "dgl.svd_pe": [[631, "dgl-svd-pe"]], "dgl.to_bidirected": [[632, "dgl-to-bidirected"]], "dgl.to_block": [[633, "dgl-to-block"]], "dgl.to_cugraph": [[634, "dgl-to-cugraph"]], "dgl.to_double": [[635, "dgl-to-double"]], "dgl.to_float": [[636, "dgl-to-float"]], "dgl.to_half": [[637, "dgl-to-half"]], "dgl.to_heterogeneous": [[638, "dgl-to-heterogeneous"]], "dgl.to_homogeneous": [[639, "dgl-to-homogeneous"]], "dgl.to_networkx": [[640, "dgl-to-networkx"]], "dgl.to_simple": [[641, "dgl-to-simple"]], "dgl.to_simple_graph": [[642, "dgl-to-simple-graph"]], "dgl.topk_edges": [[643, "dgl-topk-edges"]], "dgl.topk_nodes": [[644, "dgl-topk-nodes"]], "dgl.topological_nodes_generator": [[645, "dgl-topological-nodes-generator"]], "dgl.transforms": [[19, "module-dgl.transforms"]], "dgl.udf.EdgeBatch.batch_size": [[670, "dgl-udf-edgebatch-batch-size"]], "dgl.udf.EdgeBatch.data": [[671, "dgl-udf-edgebatch-data"]], "dgl.udf.EdgeBatch.dst": [[672, "dgl-udf-edgebatch-dst"]], "dgl.udf.EdgeBatch.edges": [[673, "dgl-udf-edgebatch-edges"]], "dgl.udf.EdgeBatch.src": [[674, "dgl-udf-edgebatch-src"]], "dgl.udf.NodeBatch.batch_size": [[675, "dgl-udf-nodebatch-batch-size"]], "dgl.udf.NodeBatch.data": [[676, "dgl-udf-nodebatch-data"]], "dgl.udf.NodeBatch.mailbox": [[677, "dgl-udf-nodebatch-mailbox"]], "dgl.udf.NodeBatch.nodes": [[678, "dgl-udf-nodebatch-nodes"]], "dgl.unbatch": [[679, "dgl-unbatch"]], "dgl.use_libxsmm": [[680, "dgl-use-libxsmm"]], "download": [[200, "download"]], "edges.csv": [[699, "id2"], [743, "id6"], [784, "id6"]], "extract_archive": [[201, "extract-archive"]], "feature_data": [[831, "feature-data"]], "get_download_dir": [[202, "get-download-dir"]], "graph": [[831, "graph"]], "load_info": [[203, "load-info"]], "load_labels": [[204, "load-labels"]], "macOS": [[815, "macos"]], "mask_nodes_by_property": [[205, "mask-nodes-by-property"]], "nodes.csv": [[699, "id1"], [743, "id5"], [784, "id5"]], "save_info": [[206, "save-info"]], "set_dst_lazy_features": [[222, "set-dst-lazy-features"]], "set_edge_lazy_features": [[223, "set-edge-lazy-features"]], "set_node_lazy_features": [[224, "set-node-lazy-features"]], "set_src_lazy_features": [[225, "set-src-lazy-features"]], "split_dataset": [[207, "split-dataset"]], "tasks": [[831, "tasks"]], "v0.4.3 Benchmarks": [[822, "v0-4-3-benchmarks"]], "v0.5 Benchmarks": [[822, "v0-5-benchmarks"]], "v0.6 Benchmarks": [[822, "v0-6-benchmarks"]], "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": [[766, "id3"]], "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": [[743, "id2"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": [[743, "id3"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": [[747, "id4"]], "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": [[747, "id3"]], "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": [[767, "id2"]], "\u5206\u5272\u6570\u636e\u96c6": [[738, "id8"]], "\u5206\u5e03\u5f0f\u56fe": [[738, "id1"]], "\u5206\u5e03\u5f0f\u5d4c\u5165": [[738, "id6"]], "\u5206\u5e03\u5f0f\u5f20\u91cf": [[738, "id5"]], "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": [[738, "id2"]], "\u5206\u5e03\u5f0f\u91c7\u6837": [[738, "id7"]], "\u521b\u5efaDistGraph": [[738, "distgraph"]], "\u521b\u5efa\u5f02\u6784\u56fe": [[747, "id2"]], "\u56fe\u8bfb\u51fa": [[768, "id4"]], "\u5728NN\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": [[767, "nn"]], "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": [[766, "id6"]], "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": [[735, "id2"]], "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": [[735, "id3"]], "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": [[735, "id4"]], "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": [[755, "id4"]], "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[756, "id2"], [760, "id2"]], "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": [[755, "guide-cn-minibatch-customizing-neighborhood-sampler-impl"]], "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": [[757, "id2"]], "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe\u3001\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": [[759, "id2"]], "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": [[747, "id6"]], "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": [[756, "id3"]], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": [[760, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[768, "id10"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": [[759, "id1"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": [[756, "id6"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[770, "guide-cn-training-rgcn-node-classification"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[766, "guide-cn-training-edge-classification-heterogeneous-graph"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": [[755, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[769, "id4"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": [[758, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": [[755, "id7"]], "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": [[765, "guide-cn-training-heterogeneous-graph-example"]], "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": [[768, "id6"]], "\u6279\u6b21\u7684\u56fe": [[768, "id3"]], "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": [[755, "id3"]], "\u6570\u636e\u52a0\u8f7d": [[768, "id9"]], "\u672c\u7ae0\u8def\u7ebf\u56fe": [[731, "id2"], [741, "id2"], [749, "id3"], [754, "id3"], [761, "id1"], [765, "id4"]], "\u6982\u8ff0": [[765, "id2"], [766, "id2"], [768, "id2"], [769, "id2"], [770, "id2"]], "\u6a21\u578b\u5b9a\u4e49": [[768, "id7"]], "\u6a21\u578b\u7684\u8bad\u7ec3": [[756, "id5"], [758, "id4"], [760, "id4"], [766, "id4"], [768, "id8"], [769, "id3"], [770, "id4"]], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": [[763, "id2"]], "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[749, "id2"]], "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": [[755, "id2"]], "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011": [[748, "id1"]], "\u7b2c1\u7ae0\uff1a\u56fe": [[741, "guide-cn-graph"]], "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[749, "guide-cn-message-passing"]], "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757": [[761, "gnn"]], "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [[731, "guide-cn-data-pipeline"]], "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [[765, "guide-cn-training"]], "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3": [[754, "guide-cn-minibatch"]], "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3": [[737, "guide-cn-distributed"]], "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[758, "id2"]], "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [[768, "id5"], [770, "id3"]], "\u805a\u5408\u540e\uff0c\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": [[763, "id3"]], "\u8bbf\u95ee\u56fe\u7ed3\u6784": [[738, "id3"]], "\u8bbf\u95ee\u8282\u70b9/\u8fb9\u6570\u636e": [[738, "id4"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [[758, "id3"], [760, "guide-cn-minibatch-node-classification-model"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": [[756, "id4"]], "\u8d1f\u8f7d\u5747\u8861": [[739, "id2"]], "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": [[763, "id1"]], "\u8fb9\u7c7b\u578b\u5b50\u56fe": [[747, "id5"]], "\u9017\u53f7\u5206\u9694\u503c\uff08CSV\uff09": [[743, "csv"], [747, "csv"]], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": [[754, "id2"]], "\uac1c\uc694": [[809, "id2"], [810, "id1"], [811, "id2"], [812, "id2"], [813, "id1"]], "\uadf8\ub798\ud504 \uad6c\uc870 \uc811\uadfc": [[778, "id1"]], "\uadf8\ub798\ud504 \ub9ac\ub4dc\uc544\uc6c3(readout)": [[811, "readout"]], "\uadf8\ub798\ud504 \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[775, "id2"]], "\uadf8\ub798\ud504 \uccb4\ud06c\uc640 \uadf8\ub798\ud504 \ud0c0\uc785 \uba85\uc138\ud654(graph type specification)": [[807, "graph-type-specification"]], "\uadf8\ub798\ud504\ub4e4\uc758 \ubc30\uce58(batch)": [[811, "batch"]], "\ub178\ub4dc \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[775, "id3"]], "\ub178\ub4dc \ubd84\ub958 \ubaa8\ub378\uacfc \uad6c\ud604\uc0c1\uc758 \ucc28\uc774\uc810": [[810, "id2"]], "\ub178\ub4dc/\uc5d0\uc9c0 \ub370\uc774\ud130 \uc811\uadfc": [[778, "id2"]], "\ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc791\uc131\ud558\uae30": [[811, "id3"], [813, "id2"]], "\ub2e4\uc591\ud55c \ud0c0\uc785\uc744 \ub2e4\ub8e8\uae30": [[788, "id2"]], "\ub370\uc774\ud130 \ub85c\ub529": [[811, "id7"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[784, "id3"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uc774\uc885 \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[788, "id3"]], "\ub85c\ub4dc \ubc38\ub7f0\uc2f1": [[780, "id2"]], "\ub85c\ub4dc\ub9f5": [[771, "id2"], [782, "id2"], [790, "id1"], [796, "id1"], [805, "id1"], [809, "id3"]], "\ub9c1\ud06c \uc608\uce21 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[775, "id4"]], "\uba40\ud2f0-\ub808\uc774\uc5b4 \ubbf8\ub2c8\ubc30\uce58 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc744 \uc704\ud55c \uc774\ubd84 \uad6c\uc870(Bipartite Structure)": [[797, "bipartite-structure"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec \uc758\uc874\uc131 \ucc3e\uae30": [[797, "id3"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec\uacfc \ucd95\uc57d": [[807, "id1"]], "\uba54\uc9c0\uc2dc \uc804\ub2ec \ud328\ub7ec\ub2e4\uc784(Message Passing Paradigm)": [[790, "message-passing-paradigm"]], "\ubaa8\ub378 \uc815\uc758\ud558\uae30": [[811, "id5"]], "\ubaa8\ub378\uc744 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc5d0 \ub9de\uac8c \ub9cc\ub4e4\uae30": [[798, "id3"], [801, "id1"], [803, "guide-ko-minibatch-node-classification-model"]], "\ubc30\uce58 \uadf8\ub798\ud504\uc5d0 \uc5f0\uc0b0\ud558\uae30": [[811, "id4"]], "\ubd84\uc0b0 DistEmbedding": [[778, "distembedding"]], "\ubd84\uc0b0 \ubaa8\ub4dc vs. \ub2e8\ub3c5(standalone) \ubaa8\ub4dc": [[778, "vs-standalone"]], "\ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[778, "id3"]], "\ubd84\uc0b0 \ud150\uc11c(Distributed Tensor)": [[778, "distributed-tensor"]], "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]": [[789, "id1"]], "\uc5d0\uc9c0 \ud0c0\uc785 \uc11c\ube0c\uadf8\ub798\ud504": [[788, "id4"]], "\uc624\ud504\ub77c\uc778 \ucd94\ub860 \uad6c\ud604\ud558\uae30": [[800, "id2"]], "\uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[784, "id2"]], "\uc6cc\ud06c\ub85c\ub4dc \ub098\ub204\uae30(Split workloads)": [[778, "split-workloads"]], "\uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[798, "id1"], [803, "id1"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc9c1\uc811 \ud574\ubcf4\uae30": [[797, "id2"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1(Neighborhood Sampling) \ubc29\ubc95 \uac1c\uc694": [[796, "neighborhood-sampling"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc704\ud574\uc11c \uc6d0\ubcf8 \uadf8\ub798\ud504\uc5d0\uc11c \ubbf8\ub2c8 \ubc30\uce58\uc758 \uc5d0\uc9c0\ub4e4 \uc81c\uac70\ud558\uae30": [[798, "id2"]], "\uc774\uc885 \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[788, "id1"]], "\uc774\uc885 \uadf8\ub798\ud504\ub97c \ub3d9\uc885 \uadf8\ub798\ud504\ub85c \ubcc0\ud658\ud558\uae30": [[788, "id5"]], "\ucd9c\ub825\uac12\uc744 \uc704\ud55c \ucd95\uc57d \ud6c4 \ud53c\uccd0 \uc5c5\ub370\uc774\ud2b8": [[807, "id2"]], "\ucee4\uc2a4\ud140 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \uad6c\ud604\ud558\uae30": [[797, "guide-ko-minibatch-customizing-neighborhood-sampler-impl"]], "\ud559\uc2b5 \ub8f9": [[798, "id4"], [801, "id2"], [803, "id3"], [811, "id6"], [812, "id3"]], "\ud559\uc2b5 \ub8f9(loop)": [[810, "loop"], [813, "loop"]], "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt": [[825, "stochastic-training-of-gnns-with-graphbolt"]], "\ud83c\udd95 Tutorial: Graph Transformer": [[682, "tutorial-graph-transformer"]], "\ud83c\udd95 dgl.graphbolt": [[7, "dgl-graphbolt"]]}, "docnames": ["api/python/dgl", "api/python/dgl.DGLGraph", "api/python/dgl.data", "api/python/dgl.dataloading", "api/python/dgl.distributed", "api/python/dgl.function", "api/python/dgl.geometry", "api/python/dgl.graphbolt", "api/python/dgl.multiprocessing", "api/python/dgl.ops", "api/python/dgl.optim", "api/python/dgl.sampling", "api/python/dgl.sparse_v0", "api/python/index", "api/python/knn_benchmark", "api/python/nn-mxnet", "api/python/nn-pytorch", "api/python/nn-tensorflow", "api/python/nn.functional", "api/python/transforms", "api/python/udf", "contribute", "developer/ffi", "env_var", "faq", "features/dataset", "generated/dgl.DGLGraph.__getitem__", "generated/dgl.DGLGraph.add_edges", "generated/dgl.DGLGraph.add_nodes", "generated/dgl.DGLGraph.add_self_loop", "generated/dgl.DGLGraph.adj", "generated/dgl.DGLGraph.adj_external", "generated/dgl.DGLGraph.adj_tensors", "generated/dgl.DGLGraph.adjacency_matrix", "generated/dgl.DGLGraph.apply_edges", "generated/dgl.DGLGraph.apply_nodes", "generated/dgl.DGLGraph.batch_num_edges", "generated/dgl.DGLGraph.batch_num_nodes", "generated/dgl.DGLGraph.batch_size", "generated/dgl.DGLGraph.canonical_etypes", "generated/dgl.DGLGraph.cpu", "generated/dgl.DGLGraph.create_formats_", "generated/dgl.DGLGraph.device", "generated/dgl.DGLGraph.dstdata", "generated/dgl.DGLGraph.dstnodes", "generated/dgl.DGLGraph.dsttypes", "generated/dgl.DGLGraph.edata", "generated/dgl.DGLGraph.edge_attr_schemes", "generated/dgl.DGLGraph.edge_ids", "generated/dgl.DGLGraph.edge_subgraph", "generated/dgl.DGLGraph.edge_type_subgraph", "generated/dgl.DGLGraph.edges", "generated/dgl.DGLGraph.etypes", "generated/dgl.DGLGraph.filter_edges", "generated/dgl.DGLGraph.filter_nodes", "generated/dgl.DGLGraph.find_edges", "generated/dgl.DGLGraph.formats", "generated/dgl.DGLGraph.has_edges_between", "generated/dgl.DGLGraph.has_nodes", "generated/dgl.DGLGraph.idtype", "generated/dgl.DGLGraph.in_degrees", "generated/dgl.DGLGraph.in_edges", "generated/dgl.DGLGraph.inc", "generated/dgl.DGLGraph.incidence_matrix", "generated/dgl.DGLGraph.int", "generated/dgl.DGLGraph.is_homogeneous", "generated/dgl.DGLGraph.is_multigraph", "generated/dgl.DGLGraph.is_pinned", "generated/dgl.DGLGraph.is_unibipartite", "generated/dgl.DGLGraph.line_graph", "generated/dgl.DGLGraph.local_scope", "generated/dgl.DGLGraph.long", "generated/dgl.DGLGraph.metagraph", "generated/dgl.DGLGraph.multi_update_all", "generated/dgl.DGLGraph.ndata", "generated/dgl.DGLGraph.node_attr_schemes", "generated/dgl.DGLGraph.node_type_subgraph", "generated/dgl.DGLGraph.nodes", "generated/dgl.DGLGraph.ntypes", "generated/dgl.DGLGraph.num_dst_nodes", "generated/dgl.DGLGraph.num_edges", "generated/dgl.DGLGraph.num_nodes", "generated/dgl.DGLGraph.num_src_nodes", "generated/dgl.DGLGraph.number_of_dst_nodes", "generated/dgl.DGLGraph.number_of_edges", "generated/dgl.DGLGraph.number_of_nodes", "generated/dgl.DGLGraph.number_of_src_nodes", "generated/dgl.DGLGraph.out_degrees", "generated/dgl.DGLGraph.out_edges", "generated/dgl.DGLGraph.pin_memory_", "generated/dgl.DGLGraph.predecessors", "generated/dgl.DGLGraph.prop_edges", "generated/dgl.DGLGraph.prop_nodes", "generated/dgl.DGLGraph.pull", "generated/dgl.DGLGraph.push", "generated/dgl.DGLGraph.remove_edges", "generated/dgl.DGLGraph.remove_nodes", "generated/dgl.DGLGraph.remove_self_loop", "generated/dgl.DGLGraph.reorder_graph", "generated/dgl.DGLGraph.reverse", "generated/dgl.DGLGraph.send_and_recv", "generated/dgl.DGLGraph.set_batch_num_edges", "generated/dgl.DGLGraph.set_batch_num_nodes", "generated/dgl.DGLGraph.srcdata", "generated/dgl.DGLGraph.srcnodes", "generated/dgl.DGLGraph.srctypes", "generated/dgl.DGLGraph.subgraph", "generated/dgl.DGLGraph.successors", "generated/dgl.DGLGraph.to", "generated/dgl.DGLGraph.to_canonical_etype", "generated/dgl.DGLGraph.to_cugraph", "generated/dgl.DGLGraph.to_simple", "generated/dgl.DGLGraph.unpin_memory_", "generated/dgl.DGLGraph.update_all", "generated/dgl.add_edges", "generated/dgl.add_nodes", "generated/dgl.add_reverse_edges", "generated/dgl.add_self_loop", "generated/dgl.adj_product_graph", "generated/dgl.adj_sum_graph", "generated/dgl.adjusted_homophily", "generated/dgl.apply_each", "generated/dgl.batch", "generated/dgl.bfs_edges_generator", "generated/dgl.bfs_nodes_generator", "generated/dgl.bipartite_from_networkx", "generated/dgl.bipartite_from_scipy", "generated/dgl.block_to_graph", "generated/dgl.broadcast_edges", "generated/dgl.broadcast_nodes", "generated/dgl.compact_graphs", "generated/dgl.create_block", "generated/dgl.data.AIFBDataset", "generated/dgl.data.AMDataset", "generated/dgl.data.ActorDataset", "generated/dgl.data.AmazonCoBuyComputerDataset", "generated/dgl.data.AmazonCoBuyPhotoDataset", "generated/dgl.data.AmazonRatingsDataset", "generated/dgl.data.AsGraphPredDataset", "generated/dgl.data.AsLinkPredDataset", "generated/dgl.data.AsNodePredDataset", "generated/dgl.data.BA2MotifDataset", "generated/dgl.data.BACommunityDataset", "generated/dgl.data.BAShapeDataset", "generated/dgl.data.BGSDataset", "generated/dgl.data.BitcoinOTCDataset", "generated/dgl.data.CIFAR10SuperPixelDataset", "generated/dgl.data.CLUSTERDataset", "generated/dgl.data.CSVDataset", "generated/dgl.data.ChameleonDataset", "generated/dgl.data.CiteseerGraphDataset", "generated/dgl.data.CoauthorCSDataset", "generated/dgl.data.CoauthorPhysicsDataset", "generated/dgl.data.CoraFullDataset", "generated/dgl.data.CoraGraphDataset", "generated/dgl.data.CornellDataset", "generated/dgl.data.DGLDataset", "generated/dgl.data.FB15k237Dataset", "generated/dgl.data.FB15kDataset", "generated/dgl.data.FakeNewsDataset", "generated/dgl.data.FlickrDataset", "generated/dgl.data.FraudAmazonDataset", "generated/dgl.data.FraudDataset", "generated/dgl.data.FraudYelpDataset", "generated/dgl.data.GDELTDataset", "generated/dgl.data.GINDataset", "generated/dgl.data.ICEWS18Dataset", "generated/dgl.data.KarateClubDataset", "generated/dgl.data.LegacyTUDataset", "generated/dgl.data.MNISTSuperPixelDataset", "generated/dgl.data.MUTAGDataset", "generated/dgl.data.MinesweeperDataset", "generated/dgl.data.MiniGCDataset", "generated/dgl.data.MovieLensDataset", "generated/dgl.data.PATTERNDataset", "generated/dgl.data.PPIDataset", "generated/dgl.data.PubmedGraphDataset", "generated/dgl.data.QM7bDataset", "generated/dgl.data.QM9Dataset", "generated/dgl.data.QM9EdgeDataset", "generated/dgl.data.QuestionsDataset", "generated/dgl.data.RedditDataset", "generated/dgl.data.RomanEmpireDataset", "generated/dgl.data.SBMMixtureDataset", "generated/dgl.data.SSTDataset", "generated/dgl.data.SquirrelDataset", "generated/dgl.data.TUDataset", "generated/dgl.data.TexasDataset", "generated/dgl.data.TolokersDataset", "generated/dgl.data.TreeCycleDataset", "generated/dgl.data.TreeGridDataset", "generated/dgl.data.WN18Dataset", "generated/dgl.data.WikiCSDataset", "generated/dgl.data.WisconsinDataset", "generated/dgl.data.YelpDataset", "generated/dgl.data.ZINCDataset", "generated/dgl.data.utils.Subset", "generated/dgl.data.utils.add_node_property_split", "generated/dgl.data.utils.add_nodepred_split", "generated/dgl.data.utils.check_sha1", "generated/dgl.data.utils.download", "generated/dgl.data.utils.extract_archive", "generated/dgl.data.utils.get_download_dir", "generated/dgl.data.utils.load_info", "generated/dgl.data.utils.load_labels", "generated/dgl.data.utils.mask_nodes_by_property", "generated/dgl.data.utils.save_info", "generated/dgl.data.utils.split_dataset", "generated/dgl.dataloading.BlockSampler", "generated/dgl.dataloading.ClusterGCNSampler", "generated/dgl.dataloading.DataLoader", "generated/dgl.dataloading.DistEdgeDataLoader", "generated/dgl.dataloading.DistNodeDataLoader", "generated/dgl.dataloading.GraphDataLoader", "generated/dgl.dataloading.LaborSampler", "generated/dgl.dataloading.MultiLayerFullNeighborSampler", "generated/dgl.dataloading.NeighborSampler", "generated/dgl.dataloading.SAINTSampler", "generated/dgl.dataloading.Sampler", "generated/dgl.dataloading.ShaDowKHopSampler", "generated/dgl.dataloading.as_edge_prediction_sampler", "generated/dgl.dataloading.base.LazyFeature", "generated/dgl.dataloading.base.set_dst_lazy_features", "generated/dgl.dataloading.base.set_edge_lazy_features", "generated/dgl.dataloading.base.set_node_lazy_features", "generated/dgl.dataloading.base.set_src_lazy_features", "generated/dgl.dataloading.negative_sampler.GlobalUniform", "generated/dgl.dataloading.negative_sampler.PerSourceUniform", "generated/dgl.dataloading.negative_sampler.Uniform", "generated/dgl.dfs_edges_generator", "generated/dgl.dfs_labeled_edges_generator", "generated/dgl.distributed.dgl_partition_to_graphbolt", "generated/dgl.distributed.edge_split", "generated/dgl.distributed.find_edges", "generated/dgl.distributed.in_subgraph", "generated/dgl.distributed.initialize", "generated/dgl.distributed.load_partition", "generated/dgl.distributed.load_partition_book", "generated/dgl.distributed.load_partition_feats", "generated/dgl.distributed.node_split", "generated/dgl.distributed.partition_graph", "generated/dgl.distributed.sample_etype_neighbors", "generated/dgl.distributed.sample_neighbors", "generated/dgl.double_radius_node_labeling", "generated/dgl.edge_homophily", "generated/dgl.edge_label_informativeness", "generated/dgl.edge_subgraph", "generated/dgl.edge_type_subgraph", "generated/dgl.from_cugraph", "generated/dgl.from_networkx", "generated/dgl.from_scipy", "generated/dgl.function.copy_e", "generated/dgl.function.copy_u", "generated/dgl.function.e_add_u", "generated/dgl.function.e_add_v", "generated/dgl.function.e_div_u", "generated/dgl.function.e_div_v", "generated/dgl.function.e_dot_u", "generated/dgl.function.e_dot_v", "generated/dgl.function.e_mul_u", "generated/dgl.function.e_mul_v", "generated/dgl.function.e_sub_u", "generated/dgl.function.e_sub_v", "generated/dgl.function.max", "generated/dgl.function.mean", "generated/dgl.function.min", "generated/dgl.function.sum", "generated/dgl.function.u_add_e", "generated/dgl.function.u_add_v", "generated/dgl.function.u_div_e", "generated/dgl.function.u_div_v", "generated/dgl.function.u_dot_e", "generated/dgl.function.u_dot_v", "generated/dgl.function.u_mul_e", "generated/dgl.function.u_mul_v", "generated/dgl.function.u_sub_e", "generated/dgl.function.u_sub_v", "generated/dgl.function.v_add_e", "generated/dgl.function.v_add_u", "generated/dgl.function.v_div_e", "generated/dgl.function.v_div_u", "generated/dgl.function.v_dot_e", "generated/dgl.function.v_dot_u", "generated/dgl.function.v_mul_e", "generated/dgl.function.v_mul_u", "generated/dgl.function.v_sub_e", "generated/dgl.function.v_sub_u", "generated/dgl.graph", "generated/dgl.graphbolt.BasicFeatureStore", "generated/dgl.graphbolt.BuiltinDataset", "generated/dgl.graphbolt.CopyTo", "generated/dgl.graphbolt.DataLoader", "generated/dgl.graphbolt.Dataset", "generated/dgl.graphbolt.DistributedItemSampler", "generated/dgl.graphbolt.Feature", "generated/dgl.graphbolt.FeatureFetcher", "generated/dgl.graphbolt.FeatureStore", "generated/dgl.graphbolt.FusedCSCSamplingGraph", "generated/dgl.graphbolt.GPUCachedFeature", "generated/dgl.graphbolt.HeteroItemSet", "generated/dgl.graphbolt.InSubgraphSampler", "generated/dgl.graphbolt.ItemSampler", "generated/dgl.graphbolt.ItemSet", "generated/dgl.graphbolt.LayerNeighborSampler", "generated/dgl.graphbolt.LegacyDataset", "generated/dgl.graphbolt.MiniBatch", "generated/dgl.graphbolt.MiniBatchTransformer", "generated/dgl.graphbolt.NegativeSampler", "generated/dgl.graphbolt.NeighborSampler", "generated/dgl.graphbolt.OnDiskDataset", "generated/dgl.graphbolt.SampledSubgraph", "generated/dgl.graphbolt.SampledSubgraphImpl", "generated/dgl.graphbolt.SamplingGraph", "generated/dgl.graphbolt.SubgraphSampler", "generated/dgl.graphbolt.Task", "generated/dgl.graphbolt.TorchBasedFeature", "generated/dgl.graphbolt.TorchBasedFeatureStore", "generated/dgl.graphbolt.UniformNegativeSampler", "generated/dgl.graphbolt.add_reverse_edges", "generated/dgl.graphbolt.compact_csc_format", "generated/dgl.graphbolt.etype_str_to_tuple", "generated/dgl.graphbolt.etype_tuple_to_str", "generated/dgl.graphbolt.exclude_seed_edges", "generated/dgl.graphbolt.expand_indptr", "generated/dgl.graphbolt.from_dglgraph", "generated/dgl.graphbolt.fused_csc_sampling_graph", "generated/dgl.graphbolt.index_select", "generated/dgl.graphbolt.isin", "generated/dgl.graphbolt.load_from_shared_memory", "generated/dgl.graphbolt.seed", "generated/dgl.graphbolt.unique_and_compact", "generated/dgl.graphbolt.unique_and_compact_csc_formats", "generated/dgl.heterograph", "generated/dgl.in_subgraph", "generated/dgl.is_libxsmm_enabled", "generated/dgl.khop_adj", "generated/dgl.khop_graph", "generated/dgl.khop_in_subgraph", "generated/dgl.khop_out_subgraph", "generated/dgl.knn_graph", "generated/dgl.lap_pe", "generated/dgl.laplacian_lambda_max", "generated/dgl.line_graph", "generated/dgl.linkx_homophily", "generated/dgl.load_graphs", "generated/dgl.max_edges", "generated/dgl.max_nodes", "generated/dgl.mean_edges", "generated/dgl.mean_nodes", "generated/dgl.merge", "generated/dgl.metapath_reachable_graph", "generated/dgl.metis_partition", "generated/dgl.metis_partition_assignment", "generated/dgl.multiprocessing.pytorch.call_once_and_share", "generated/dgl.multiprocessing.pytorch.shared_tensor", "generated/dgl.nn.functional.edge_softmax", "generated/dgl.nn.mxnet.HeteroGraphConv", "generated/dgl.nn.mxnet.conv.AGNNConv", "generated/dgl.nn.mxnet.conv.APPNPConv", "generated/dgl.nn.mxnet.conv.ChebConv", "generated/dgl.nn.mxnet.conv.DenseChebConv", "generated/dgl.nn.mxnet.conv.DenseGraphConv", "generated/dgl.nn.mxnet.conv.DenseSAGEConv", "generated/dgl.nn.mxnet.conv.EdgeConv", "generated/dgl.nn.mxnet.conv.GATConv", "generated/dgl.nn.mxnet.conv.GINConv", "generated/dgl.nn.mxnet.conv.GMMConv", "generated/dgl.nn.mxnet.conv.GatedGraphConv", "generated/dgl.nn.mxnet.conv.GraphConv", "generated/dgl.nn.mxnet.conv.NNConv", "generated/dgl.nn.mxnet.conv.RelGraphConv", "generated/dgl.nn.mxnet.conv.SAGEConv", "generated/dgl.nn.mxnet.conv.SGConv", "generated/dgl.nn.mxnet.conv.TAGConv", "generated/dgl.nn.mxnet.glob.AvgPooling", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling", "generated/dgl.nn.mxnet.glob.MaxPooling", "generated/dgl.nn.mxnet.glob.Set2Set", "generated/dgl.nn.mxnet.glob.SortPooling", "generated/dgl.nn.mxnet.glob.SumPooling", "generated/dgl.nn.mxnet.utils.Sequential", "generated/dgl.nn.pytorch.DeepWalk", "generated/dgl.nn.pytorch.HeteroEmbedding", "generated/dgl.nn.pytorch.HeteroGraphConv", "generated/dgl.nn.pytorch.HeteroLinear", "generated/dgl.nn.pytorch.MetaPath2Vec", "generated/dgl.nn.pytorch.TypedLinear", "generated/dgl.nn.pytorch.conv.AGNNConv", "generated/dgl.nn.pytorch.conv.APPNPConv", "generated/dgl.nn.pytorch.conv.AtomicConv", "generated/dgl.nn.pytorch.conv.CFConv", "generated/dgl.nn.pytorch.conv.ChebConv", "generated/dgl.nn.pytorch.conv.CuGraphGATConv", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv", "generated/dgl.nn.pytorch.conv.DGNConv", "generated/dgl.nn.pytorch.conv.DenseChebConv", "generated/dgl.nn.pytorch.conv.DenseGraphConv", "generated/dgl.nn.pytorch.conv.DenseSAGEConv", "generated/dgl.nn.pytorch.conv.DotGatConv", "generated/dgl.nn.pytorch.conv.EGATConv", "generated/dgl.nn.pytorch.conv.EGNNConv", "generated/dgl.nn.pytorch.conv.EdgeConv", "generated/dgl.nn.pytorch.conv.EdgeGATConv", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm", "generated/dgl.nn.pytorch.conv.GATConv", "generated/dgl.nn.pytorch.conv.GATv2Conv", "generated/dgl.nn.pytorch.conv.GCN2Conv", "generated/dgl.nn.pytorch.conv.GINConv", "generated/dgl.nn.pytorch.conv.GINEConv", "generated/dgl.nn.pytorch.conv.GMMConv", "generated/dgl.nn.pytorch.conv.GatedGCNConv", "generated/dgl.nn.pytorch.conv.GatedGraphConv", "generated/dgl.nn.pytorch.conv.GraphConv", "generated/dgl.nn.pytorch.conv.GroupRevRes", "generated/dgl.nn.pytorch.conv.HGTConv", "generated/dgl.nn.pytorch.conv.NNConv", "generated/dgl.nn.pytorch.conv.PNAConv", "generated/dgl.nn.pytorch.conv.RelGraphConv", "generated/dgl.nn.pytorch.conv.SAGEConv", "generated/dgl.nn.pytorch.conv.SGConv", "generated/dgl.nn.pytorch.conv.TAGConv", "generated/dgl.nn.pytorch.conv.TWIRLSConv", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", "generated/dgl.nn.pytorch.explain.GNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX", "generated/dgl.nn.pytorch.explain.PGExplainer", "generated/dgl.nn.pytorch.explain.SubgraphX", "generated/dgl.nn.pytorch.factory.KNNGraph", "generated/dgl.nn.pytorch.factory.RadiusGraph", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph", "generated/dgl.nn.pytorch.glob.AvgPooling", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling", "generated/dgl.nn.pytorch.glob.MaxPooling", "generated/dgl.nn.pytorch.glob.Set2Set", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder", "generated/dgl.nn.pytorch.glob.SortPooling", "generated/dgl.nn.pytorch.glob.SumPooling", "generated/dgl.nn.pytorch.glob.WeightAndSum", "generated/dgl.nn.pytorch.gt.BiasedMHA", "generated/dgl.nn.pytorch.gt.DegreeEncoder", "generated/dgl.nn.pytorch.gt.EGTLayer", "generated/dgl.nn.pytorch.gt.GraphormerLayer", "generated/dgl.nn.pytorch.gt.LapPosEncoder", "generated/dgl.nn.pytorch.gt.PathEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d", "generated/dgl.nn.pytorch.link.EdgePredictor", "generated/dgl.nn.pytorch.link.TransE", "generated/dgl.nn.pytorch.link.TransR", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding", "generated/dgl.nn.pytorch.utils.JumpingKnowledge", "generated/dgl.nn.pytorch.utils.LabelPropagation", "generated/dgl.nn.pytorch.utils.Sequential", "generated/dgl.nn.pytorch.utils.WeightBasis", "generated/dgl.nn.tensorflow.conv.APPNPConv", "generated/dgl.nn.tensorflow.conv.ChebConv", "generated/dgl.nn.tensorflow.conv.GATConv", "generated/dgl.nn.tensorflow.conv.GINConv", "generated/dgl.nn.tensorflow.conv.GraphConv", "generated/dgl.nn.tensorflow.conv.RelGraphConv", "generated/dgl.nn.tensorflow.conv.SAGEConv", "generated/dgl.nn.tensorflow.conv.SGConv", "generated/dgl.nn.tensorflow.glob.AvgPooling", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv", "generated/dgl.nn.tensorflow.glob.MaxPooling", "generated/dgl.nn.tensorflow.glob.SortPooling", "generated/dgl.nn.tensorflow.glob.SumPooling", "generated/dgl.node_homophily", "generated/dgl.node_label_informativeness", "generated/dgl.node_subgraph", "generated/dgl.node_type_subgraph", "generated/dgl.norm_by_dst", "generated/dgl.ops.copy_e_max", "generated/dgl.ops.copy_e_mean", "generated/dgl.ops.copy_e_min", "generated/dgl.ops.copy_e_sum", "generated/dgl.ops.copy_u", "generated/dgl.ops.copy_u_max", "generated/dgl.ops.copy_u_mean", "generated/dgl.ops.copy_u_min", "generated/dgl.ops.copy_u_sum", "generated/dgl.ops.copy_v", "generated/dgl.ops.e_add_u", "generated/dgl.ops.e_add_v", "generated/dgl.ops.e_div_u", "generated/dgl.ops.e_div_v", "generated/dgl.ops.e_dot_u", "generated/dgl.ops.e_dot_v", "generated/dgl.ops.e_mul_u", "generated/dgl.ops.e_mul_v", "generated/dgl.ops.e_sub_u", "generated/dgl.ops.e_sub_v", "generated/dgl.ops.gather_mm", "generated/dgl.ops.gsddmm", "generated/dgl.ops.gspmm", "generated/dgl.ops.segment_mm", "generated/dgl.ops.segment_reduce", "generated/dgl.ops.u_add_e", "generated/dgl.ops.u_add_e_max", "generated/dgl.ops.u_add_e_mean", "generated/dgl.ops.u_add_e_min", "generated/dgl.ops.u_add_e_sum", "generated/dgl.ops.u_add_v", "generated/dgl.ops.u_div_e", "generated/dgl.ops.u_div_e_max", "generated/dgl.ops.u_div_e_mean", "generated/dgl.ops.u_div_e_min", "generated/dgl.ops.u_div_e_sum", "generated/dgl.ops.u_div_v", "generated/dgl.ops.u_dot_e", "generated/dgl.ops.u_dot_v", "generated/dgl.ops.u_mul_e", "generated/dgl.ops.u_mul_e_max", "generated/dgl.ops.u_mul_e_mean", "generated/dgl.ops.u_mul_e_min", "generated/dgl.ops.u_mul_e_sum", "generated/dgl.ops.u_mul_v", "generated/dgl.ops.u_sub_e", "generated/dgl.ops.u_sub_e_max", "generated/dgl.ops.u_sub_e_mean", "generated/dgl.ops.u_sub_e_min", "generated/dgl.ops.u_sub_e_sum", "generated/dgl.ops.u_sub_v", "generated/dgl.ops.v_add_e", "generated/dgl.ops.v_add_u", "generated/dgl.ops.v_div_e", "generated/dgl.ops.v_div_u", "generated/dgl.ops.v_dot_e", "generated/dgl.ops.v_dot_u", "generated/dgl.ops.v_mul_e", "generated/dgl.ops.v_mul_u", "generated/dgl.ops.v_sub_e", "generated/dgl.ops.v_sub_u", "generated/dgl.out_subgraph", "generated/dgl.partition_graph_with_halo", "generated/dgl.prop_edges", "generated/dgl.prop_edges_dfs", "generated/dgl.prop_nodes", "generated/dgl.prop_nodes_bfs", "generated/dgl.prop_nodes_topo", "generated/dgl.radius_graph", "generated/dgl.rand_bipartite", "generated/dgl.rand_graph", "generated/dgl.random_walk_pe", "generated/dgl.readout_edges", "generated/dgl.readout_nodes", "generated/dgl.remove_edges", "generated/dgl.remove_nodes", "generated/dgl.remove_self_loop", "generated/dgl.reorder_graph", "generated/dgl.reverse", "generated/dgl.sampling.PinSAGESampler", "generated/dgl.sampling.global_uniform_negative_sampling", "generated/dgl.sampling.node2vec_random_walk", "generated/dgl.sampling.pack_traces", "generated/dgl.sampling.random_walk", "generated/dgl.sampling.sample_labors", "generated/dgl.sampling.sample_neighbors", "generated/dgl.sampling.sample_neighbors_biased", "generated/dgl.sampling.select_topk", "generated/dgl.save_graphs", "generated/dgl.seed", "generated/dgl.segmented_knn_graph", "generated/dgl.shortest_dist", "generated/dgl.slice_batch", "generated/dgl.softmax_edges", "generated/dgl.softmax_nodes", "generated/dgl.sort_csc_by_tag", "generated/dgl.sort_csr_by_tag", "generated/dgl.sparse.SparseMatrix.T", "generated/dgl.sparse.SparseMatrix.coalesce", "generated/dgl.sparse.SparseMatrix.col", "generated/dgl.sparse.SparseMatrix.coo", "generated/dgl.sparse.SparseMatrix.cpu", "generated/dgl.sparse.SparseMatrix.csc", "generated/dgl.sparse.SparseMatrix.csr", "generated/dgl.sparse.SparseMatrix.cuda", "generated/dgl.sparse.SparseMatrix.device", "generated/dgl.sparse.SparseMatrix.double", "generated/dgl.sparse.SparseMatrix.dtype", "generated/dgl.sparse.SparseMatrix.float", "generated/dgl.sparse.SparseMatrix.has_duplicate", "generated/dgl.sparse.SparseMatrix.indices", "generated/dgl.sparse.SparseMatrix.int", "generated/dgl.sparse.SparseMatrix.long", "generated/dgl.sparse.SparseMatrix.neg", "generated/dgl.sparse.SparseMatrix.nnz", "generated/dgl.sparse.SparseMatrix.reduce", "generated/dgl.sparse.SparseMatrix.row", "generated/dgl.sparse.SparseMatrix.shape", "generated/dgl.sparse.SparseMatrix.smax", "generated/dgl.sparse.SparseMatrix.smean", "generated/dgl.sparse.SparseMatrix.smin", "generated/dgl.sparse.SparseMatrix.softmax", "generated/dgl.sparse.SparseMatrix.sum", "generated/dgl.sparse.SparseMatrix.t", "generated/dgl.sparse.SparseMatrix.to", "generated/dgl.sparse.SparseMatrix.to_dense", "generated/dgl.sparse.SparseMatrix.transpose", "generated/dgl.sparse.SparseMatrix.val", "generated/dgl.sparse.add", "generated/dgl.sparse.bsddmm", "generated/dgl.sparse.bspmm", "generated/dgl.sparse.diag", "generated/dgl.sparse.div", "generated/dgl.sparse.from_coo", "generated/dgl.sparse.from_csc", "generated/dgl.sparse.from_csr", "generated/dgl.sparse.identity", "generated/dgl.sparse.matmul", "generated/dgl.sparse.mul", "generated/dgl.sparse.power", "generated/dgl.sparse.sddmm", "generated/dgl.sparse.softmax", "generated/dgl.sparse.sp_add_v", "generated/dgl.sparse.sp_broadcast_v", "generated/dgl.sparse.sp_div_v", "generated/dgl.sparse.sp_mul_v", "generated/dgl.sparse.sp_sub_v", "generated/dgl.sparse.spmatrix", "generated/dgl.sparse.spmm", "generated/dgl.sparse.spspmm", "generated/dgl.sparse.sub", "generated/dgl.sparse.val_like", "generated/dgl.sum_edges", "generated/dgl.sum_nodes", "generated/dgl.svd_pe", "generated/dgl.to_bidirected", "generated/dgl.to_block", "generated/dgl.to_cugraph", "generated/dgl.to_double", "generated/dgl.to_float", "generated/dgl.to_half", "generated/dgl.to_heterogeneous", "generated/dgl.to_homogeneous", "generated/dgl.to_networkx", "generated/dgl.to_simple", "generated/dgl.to_simple_graph", "generated/dgl.topk_edges", "generated/dgl.topk_nodes", "generated/dgl.topological_nodes_generator", "generated/dgl.transforms.AddEdge", "generated/dgl.transforms.AddMetaPaths", "generated/dgl.transforms.AddReverse", "generated/dgl.transforms.AddSelfLoop", "generated/dgl.transforms.BaseTransform", "generated/dgl.transforms.Compose", "generated/dgl.transforms.DropEdge", "generated/dgl.transforms.DropNode", "generated/dgl.transforms.FeatMask", "generated/dgl.transforms.GCNNorm", "generated/dgl.transforms.GDC", "generated/dgl.transforms.HeatKernel", "generated/dgl.transforms.KHopGraph", "generated/dgl.transforms.LapPE", "generated/dgl.transforms.LineGraph", "generated/dgl.transforms.NodeShuffle", "generated/dgl.transforms.PPR", "generated/dgl.transforms.RandomWalkPE", "generated/dgl.transforms.RemoveSelfLoop", "generated/dgl.transforms.RowFeatNormalizer", "generated/dgl.transforms.SIGNDiffusion", "generated/dgl.transforms.SVDPE", "generated/dgl.transforms.ToLevi", "generated/dgl.transforms.ToSimple", "generated/dgl.udf.EdgeBatch.batch_size", "generated/dgl.udf.EdgeBatch.data", "generated/dgl.udf.EdgeBatch.dst", "generated/dgl.udf.EdgeBatch.edges", "generated/dgl.udf.EdgeBatch.src", "generated/dgl.udf.NodeBatch.batch_size", "generated/dgl.udf.NodeBatch.data", "generated/dgl.udf.NodeBatch.mailbox", "generated/dgl.udf.NodeBatch.nodes", "generated/dgl.unbatch", "generated/dgl.use_libxsmm", "graphtransformer/data", "graphtransformer/index", "graphtransformer/model", "guide/data", "guide/data-dataset", "guide/data-download", "guide/data-loadcsv", "guide/data-loadogb", "guide/data-process", "guide/data-savenload", "guide/distributed", "guide/distributed-apis", "guide/distributed-hetero", "guide/distributed-partition", "guide/distributed-preprocessing", "guide/distributed-tools", "guide/graph", "guide/graph-basic", "guide/graph-external", "guide/graph-feature", "guide/graph-gpu", "guide/graph-graphs-nodes-edges", "guide/graph-heterogeneous", "guide/index", "guide/message", "guide/message-api", "guide/message-efficient", "guide/message-heterograph", "guide/message-part", "guide/minibatch", "guide/minibatch-custom-sampler", "guide/minibatch-edge", "guide/minibatch-gpu-sampling", "guide/minibatch-inference", "guide/minibatch-link", "guide/minibatch-nn", "guide/minibatch-node", "guide/minibatch-parallelism", "guide/minibatch-sparse", "guide/mixed_precision", "guide/nn", "guide/nn-construction", "guide/nn-forward", "guide/nn-heterograph", "guide/training", "guide/training-edge", "guide/training-eweight", "guide/training-graph", "guide/training-link", "guide/training-node", "guide_cn/data", "guide_cn/data-dataset", "guide_cn/data-download", "guide_cn/data-loadogb", "guide_cn/data-process", "guide_cn/data-savenload", "guide_cn/distributed", "guide_cn/distributed-apis", "guide_cn/distributed-preprocessing", "guide_cn/distributed-tools", "guide_cn/graph", "guide_cn/graph-basic", "guide_cn/graph-external", "guide_cn/graph-feature", "guide_cn/graph-gpu", "guide_cn/graph-graphs-nodes-edges", "guide_cn/graph-heterogeneous", "guide_cn/index", "guide_cn/message", "guide_cn/message-api", "guide_cn/message-efficient", "guide_cn/message-heterograph", "guide_cn/message-part", "guide_cn/minibatch", "guide_cn/minibatch-custom-sampler", "guide_cn/minibatch-edge", "guide_cn/minibatch-inference", "guide_cn/minibatch-link", "guide_cn/minibatch-nn", "guide_cn/minibatch-node", "guide_cn/nn", "guide_cn/nn-construction", "guide_cn/nn-forward", "guide_cn/nn-heterograph", "guide_cn/training", "guide_cn/training-edge", "guide_cn/training-eweight", "guide_cn/training-graph", "guide_cn/training-link", "guide_cn/training-node", "guide_ko/data", "guide_ko/data-dataset", "guide_ko/data-download", "guide_ko/data-loadogb", "guide_ko/data-process", "guide_ko/data-savenload", "guide_ko/distributed", "guide_ko/distributed-apis", "guide_ko/distributed-hetero", "guide_ko/distributed-preprocessing", "guide_ko/distributed-tools", "guide_ko/graph", "guide_ko/graph-basic", "guide_ko/graph-external", "guide_ko/graph-feature", "guide_ko/graph-gpu", "guide_ko/graph-graphs-nodes-edges", "guide_ko/graph-heterogeneous", "guide_ko/index", "guide_ko/message", "guide_ko/message-api", "guide_ko/message-edge", "guide_ko/message-efficient", "guide_ko/message-heterograph", "guide_ko/message-part", "guide_ko/minibatch", "guide_ko/minibatch-custom-sampler", "guide_ko/minibatch-edge", "guide_ko/minibatch-gpu-sampling", "guide_ko/minibatch-inference", "guide_ko/minibatch-link", "guide_ko/minibatch-nn", "guide_ko/minibatch-node", "guide_ko/mixed_precision", "guide_ko/nn", "guide_ko/nn-construction", "guide_ko/nn-forward", "guide_ko/nn-heterograph", "guide_ko/training", "guide_ko/training-edge", "guide_ko/training-graph", "guide_ko/training-link", "guide_ko/training-node", "index", "install/index", "notebooks/sparse/gcn", "notebooks/sparse/graph_diffusion", "notebooks/sparse/graph_transformer", "notebooks/sparse/hgnn", "notebooks/sparse/index", "notebooks/sparse/quickstart", "performance", "resources", "sg_execution_times", "stochastic_training/index", "stochastic_training/link_prediction", "stochastic_training/multigpu_node_classification", "stochastic_training/neighbor_sampling_overview", "stochastic_training/node_classification", "stochastic_training/ondisk-dataset", "stochastic_training/ondisk-dataset-specification", "stochastic_training/ondisk_dataset_heterograph", "stochastic_training/ondisk_dataset_homograph", "tutorials/blitz/1_introduction", "tutorials/blitz/2_dglgraph", "tutorials/blitz/3_message_passing", "tutorials/blitz/4_link_predict", "tutorials/blitz/5_graph_classification", "tutorials/blitz/6_load_data", "tutorials/blitz/index", "tutorials/blitz/sg_execution_times", "tutorials/cpu/argo_tutorial", "tutorials/cpu/cpu_best_practises", "tutorials/cpu/index", "tutorials/cpu/sg_execution_times", "tutorials/dist/1_node_classification", "tutorials/dist/2_link_prediction", "tutorials/dist/index", "tutorials/dist/sg_execution_times", "tutorials/models/1_gnn/1_gcn", "tutorials/models/1_gnn/4_rgcn", "tutorials/models/1_gnn/6_line_graph", "tutorials/models/1_gnn/9_gat", "tutorials/models/1_gnn/index", "tutorials/models/1_gnn/sg_execution_times", "tutorials/models/2_small_graph/3_tree-lstm", "tutorials/models/2_small_graph/index", "tutorials/models/2_small_graph/sg_execution_times", "tutorials/models/3_generative_model/5_dgmg", "tutorials/models/3_generative_model/index", "tutorials/models/3_generative_model/sg_execution_times", "tutorials/models/4_old_wines/2_capsule", "tutorials/models/4_old_wines/7_transformer", "tutorials/models/4_old_wines/index", "tutorials/models/4_old_wines/sg_execution_times", "tutorials/models/index", "tutorials/models/sg_execution_times", "tutorials/multi/1_graph_classification", "tutorials/multi/2_node_classification", "tutorials/multi/index", "tutorials/multi/sg_execution_times"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/python/dgl.rst", "api/python/dgl.DGLGraph.rst", "api/python/dgl.data.rst", "api/python/dgl.dataloading.rst", "api/python/dgl.distributed.rst", "api/python/dgl.function.rst", "api/python/dgl.geometry.rst", "api/python/dgl.graphbolt.rst", "api/python/dgl.multiprocessing.rst", "api/python/dgl.ops.rst", "api/python/dgl.optim.rst", "api/python/dgl.sampling.rst", "api/python/dgl.sparse_v0.rst", "api/python/index.rst", "api/python/knn_benchmark.rst", "api/python/nn-mxnet.rst", "api/python/nn-pytorch.rst", "api/python/nn-tensorflow.rst", "api/python/nn.functional.rst", "api/python/transforms.rst", "api/python/udf.rst", "contribute.rst", "developer/ffi.rst", "env_var.rst", "faq.rst", "features/dataset.rst", "generated/dgl.DGLGraph.__getitem__.rst", "generated/dgl.DGLGraph.add_edges.rst", "generated/dgl.DGLGraph.add_nodes.rst", "generated/dgl.DGLGraph.add_self_loop.rst", "generated/dgl.DGLGraph.adj.rst", "generated/dgl.DGLGraph.adj_external.rst", "generated/dgl.DGLGraph.adj_tensors.rst", "generated/dgl.DGLGraph.adjacency_matrix.rst", "generated/dgl.DGLGraph.apply_edges.rst", "generated/dgl.DGLGraph.apply_nodes.rst", "generated/dgl.DGLGraph.batch_num_edges.rst", "generated/dgl.DGLGraph.batch_num_nodes.rst", "generated/dgl.DGLGraph.batch_size.rst", "generated/dgl.DGLGraph.canonical_etypes.rst", "generated/dgl.DGLGraph.cpu.rst", "generated/dgl.DGLGraph.create_formats_.rst", "generated/dgl.DGLGraph.device.rst", "generated/dgl.DGLGraph.dstdata.rst", "generated/dgl.DGLGraph.dstnodes.rst", "generated/dgl.DGLGraph.dsttypes.rst", "generated/dgl.DGLGraph.edata.rst", "generated/dgl.DGLGraph.edge_attr_schemes.rst", "generated/dgl.DGLGraph.edge_ids.rst", "generated/dgl.DGLGraph.edge_subgraph.rst", "generated/dgl.DGLGraph.edge_type_subgraph.rst", "generated/dgl.DGLGraph.edges.rst", "generated/dgl.DGLGraph.etypes.rst", "generated/dgl.DGLGraph.filter_edges.rst", "generated/dgl.DGLGraph.filter_nodes.rst", "generated/dgl.DGLGraph.find_edges.rst", "generated/dgl.DGLGraph.formats.rst", "generated/dgl.DGLGraph.has_edges_between.rst", "generated/dgl.DGLGraph.has_nodes.rst", "generated/dgl.DGLGraph.idtype.rst", "generated/dgl.DGLGraph.in_degrees.rst", "generated/dgl.DGLGraph.in_edges.rst", "generated/dgl.DGLGraph.inc.rst", "generated/dgl.DGLGraph.incidence_matrix.rst", "generated/dgl.DGLGraph.int.rst", "generated/dgl.DGLGraph.is_homogeneous.rst", "generated/dgl.DGLGraph.is_multigraph.rst", "generated/dgl.DGLGraph.is_pinned.rst", "generated/dgl.DGLGraph.is_unibipartite.rst", "generated/dgl.DGLGraph.line_graph.rst", "generated/dgl.DGLGraph.local_scope.rst", "generated/dgl.DGLGraph.long.rst", "generated/dgl.DGLGraph.metagraph.rst", "generated/dgl.DGLGraph.multi_update_all.rst", "generated/dgl.DGLGraph.ndata.rst", "generated/dgl.DGLGraph.node_attr_schemes.rst", "generated/dgl.DGLGraph.node_type_subgraph.rst", "generated/dgl.DGLGraph.nodes.rst", "generated/dgl.DGLGraph.ntypes.rst", "generated/dgl.DGLGraph.num_dst_nodes.rst", "generated/dgl.DGLGraph.num_edges.rst", "generated/dgl.DGLGraph.num_nodes.rst", "generated/dgl.DGLGraph.num_src_nodes.rst", "generated/dgl.DGLGraph.number_of_dst_nodes.rst", "generated/dgl.DGLGraph.number_of_edges.rst", "generated/dgl.DGLGraph.number_of_nodes.rst", "generated/dgl.DGLGraph.number_of_src_nodes.rst", "generated/dgl.DGLGraph.out_degrees.rst", "generated/dgl.DGLGraph.out_edges.rst", "generated/dgl.DGLGraph.pin_memory_.rst", "generated/dgl.DGLGraph.predecessors.rst", "generated/dgl.DGLGraph.prop_edges.rst", "generated/dgl.DGLGraph.prop_nodes.rst", "generated/dgl.DGLGraph.pull.rst", "generated/dgl.DGLGraph.push.rst", "generated/dgl.DGLGraph.remove_edges.rst", "generated/dgl.DGLGraph.remove_nodes.rst", "generated/dgl.DGLGraph.remove_self_loop.rst", "generated/dgl.DGLGraph.reorder_graph.rst", "generated/dgl.DGLGraph.reverse.rst", "generated/dgl.DGLGraph.send_and_recv.rst", "generated/dgl.DGLGraph.set_batch_num_edges.rst", "generated/dgl.DGLGraph.set_batch_num_nodes.rst", "generated/dgl.DGLGraph.srcdata.rst", "generated/dgl.DGLGraph.srcnodes.rst", "generated/dgl.DGLGraph.srctypes.rst", "generated/dgl.DGLGraph.subgraph.rst", "generated/dgl.DGLGraph.successors.rst", "generated/dgl.DGLGraph.to.rst", "generated/dgl.DGLGraph.to_canonical_etype.rst", "generated/dgl.DGLGraph.to_cugraph.rst", "generated/dgl.DGLGraph.to_simple.rst", "generated/dgl.DGLGraph.unpin_memory_.rst", "generated/dgl.DGLGraph.update_all.rst", "generated/dgl.add_edges.rst", "generated/dgl.add_nodes.rst", "generated/dgl.add_reverse_edges.rst", "generated/dgl.add_self_loop.rst", "generated/dgl.adj_product_graph.rst", "generated/dgl.adj_sum_graph.rst", "generated/dgl.adjusted_homophily.rst", "generated/dgl.apply_each.rst", "generated/dgl.batch.rst", "generated/dgl.bfs_edges_generator.rst", "generated/dgl.bfs_nodes_generator.rst", "generated/dgl.bipartite_from_networkx.rst", "generated/dgl.bipartite_from_scipy.rst", "generated/dgl.block_to_graph.rst", "generated/dgl.broadcast_edges.rst", "generated/dgl.broadcast_nodes.rst", "generated/dgl.compact_graphs.rst", "generated/dgl.create_block.rst", "generated/dgl.data.AIFBDataset.rst", "generated/dgl.data.AMDataset.rst", "generated/dgl.data.ActorDataset.rst", "generated/dgl.data.AmazonCoBuyComputerDataset.rst", "generated/dgl.data.AmazonCoBuyPhotoDataset.rst", "generated/dgl.data.AmazonRatingsDataset.rst", "generated/dgl.data.AsGraphPredDataset.rst", "generated/dgl.data.AsLinkPredDataset.rst", "generated/dgl.data.AsNodePredDataset.rst", "generated/dgl.data.BA2MotifDataset.rst", "generated/dgl.data.BACommunityDataset.rst", "generated/dgl.data.BAShapeDataset.rst", "generated/dgl.data.BGSDataset.rst", "generated/dgl.data.BitcoinOTCDataset.rst", "generated/dgl.data.CIFAR10SuperPixelDataset.rst", "generated/dgl.data.CLUSTERDataset.rst", "generated/dgl.data.CSVDataset.rst", "generated/dgl.data.ChameleonDataset.rst", "generated/dgl.data.CiteseerGraphDataset.rst", "generated/dgl.data.CoauthorCSDataset.rst", "generated/dgl.data.CoauthorPhysicsDataset.rst", "generated/dgl.data.CoraFullDataset.rst", "generated/dgl.data.CoraGraphDataset.rst", "generated/dgl.data.CornellDataset.rst", "generated/dgl.data.DGLDataset.rst", "generated/dgl.data.FB15k237Dataset.rst", "generated/dgl.data.FB15kDataset.rst", "generated/dgl.data.FakeNewsDataset.rst", "generated/dgl.data.FlickrDataset.rst", "generated/dgl.data.FraudAmazonDataset.rst", "generated/dgl.data.FraudDataset.rst", "generated/dgl.data.FraudYelpDataset.rst", "generated/dgl.data.GDELTDataset.rst", "generated/dgl.data.GINDataset.rst", "generated/dgl.data.ICEWS18Dataset.rst", "generated/dgl.data.KarateClubDataset.rst", "generated/dgl.data.LegacyTUDataset.rst", "generated/dgl.data.MNISTSuperPixelDataset.rst", "generated/dgl.data.MUTAGDataset.rst", "generated/dgl.data.MinesweeperDataset.rst", "generated/dgl.data.MiniGCDataset.rst", "generated/dgl.data.MovieLensDataset.rst", "generated/dgl.data.PATTERNDataset.rst", "generated/dgl.data.PPIDataset.rst", "generated/dgl.data.PubmedGraphDataset.rst", "generated/dgl.data.QM7bDataset.rst", "generated/dgl.data.QM9Dataset.rst", "generated/dgl.data.QM9EdgeDataset.rst", "generated/dgl.data.QuestionsDataset.rst", "generated/dgl.data.RedditDataset.rst", "generated/dgl.data.RomanEmpireDataset.rst", "generated/dgl.data.SBMMixtureDataset.rst", "generated/dgl.data.SSTDataset.rst", "generated/dgl.data.SquirrelDataset.rst", "generated/dgl.data.TUDataset.rst", "generated/dgl.data.TexasDataset.rst", "generated/dgl.data.TolokersDataset.rst", "generated/dgl.data.TreeCycleDataset.rst", "generated/dgl.data.TreeGridDataset.rst", "generated/dgl.data.WN18Dataset.rst", "generated/dgl.data.WikiCSDataset.rst", "generated/dgl.data.WisconsinDataset.rst", "generated/dgl.data.YelpDataset.rst", "generated/dgl.data.ZINCDataset.rst", "generated/dgl.data.utils.Subset.rst", "generated/dgl.data.utils.add_node_property_split.rst", "generated/dgl.data.utils.add_nodepred_split.rst", "generated/dgl.data.utils.check_sha1.rst", "generated/dgl.data.utils.download.rst", "generated/dgl.data.utils.extract_archive.rst", "generated/dgl.data.utils.get_download_dir.rst", "generated/dgl.data.utils.load_info.rst", "generated/dgl.data.utils.load_labels.rst", "generated/dgl.data.utils.mask_nodes_by_property.rst", "generated/dgl.data.utils.save_info.rst", "generated/dgl.data.utils.split_dataset.rst", "generated/dgl.dataloading.BlockSampler.rst", "generated/dgl.dataloading.ClusterGCNSampler.rst", "generated/dgl.dataloading.DataLoader.rst", "generated/dgl.dataloading.DistEdgeDataLoader.rst", "generated/dgl.dataloading.DistNodeDataLoader.rst", "generated/dgl.dataloading.GraphDataLoader.rst", "generated/dgl.dataloading.LaborSampler.rst", "generated/dgl.dataloading.MultiLayerFullNeighborSampler.rst", "generated/dgl.dataloading.NeighborSampler.rst", "generated/dgl.dataloading.SAINTSampler.rst", "generated/dgl.dataloading.Sampler.rst", "generated/dgl.dataloading.ShaDowKHopSampler.rst", "generated/dgl.dataloading.as_edge_prediction_sampler.rst", "generated/dgl.dataloading.base.LazyFeature.rst", "generated/dgl.dataloading.base.set_dst_lazy_features.rst", "generated/dgl.dataloading.base.set_edge_lazy_features.rst", "generated/dgl.dataloading.base.set_node_lazy_features.rst", "generated/dgl.dataloading.base.set_src_lazy_features.rst", "generated/dgl.dataloading.negative_sampler.GlobalUniform.rst", "generated/dgl.dataloading.negative_sampler.PerSourceUniform.rst", "generated/dgl.dataloading.negative_sampler.Uniform.rst", "generated/dgl.dfs_edges_generator.rst", "generated/dgl.dfs_labeled_edges_generator.rst", "generated/dgl.distributed.dgl_partition_to_graphbolt.rst", "generated/dgl.distributed.edge_split.rst", "generated/dgl.distributed.find_edges.rst", "generated/dgl.distributed.in_subgraph.rst", "generated/dgl.distributed.initialize.rst", "generated/dgl.distributed.load_partition.rst", "generated/dgl.distributed.load_partition_book.rst", "generated/dgl.distributed.load_partition_feats.rst", "generated/dgl.distributed.node_split.rst", "generated/dgl.distributed.partition_graph.rst", "generated/dgl.distributed.sample_etype_neighbors.rst", "generated/dgl.distributed.sample_neighbors.rst", "generated/dgl.double_radius_node_labeling.rst", "generated/dgl.edge_homophily.rst", "generated/dgl.edge_label_informativeness.rst", "generated/dgl.edge_subgraph.rst", "generated/dgl.edge_type_subgraph.rst", "generated/dgl.from_cugraph.rst", "generated/dgl.from_networkx.rst", "generated/dgl.from_scipy.rst", "generated/dgl.function.copy_e.rst", "generated/dgl.function.copy_u.rst", "generated/dgl.function.e_add_u.rst", "generated/dgl.function.e_add_v.rst", "generated/dgl.function.e_div_u.rst", "generated/dgl.function.e_div_v.rst", "generated/dgl.function.e_dot_u.rst", "generated/dgl.function.e_dot_v.rst", "generated/dgl.function.e_mul_u.rst", "generated/dgl.function.e_mul_v.rst", "generated/dgl.function.e_sub_u.rst", "generated/dgl.function.e_sub_v.rst", "generated/dgl.function.max.rst", "generated/dgl.function.mean.rst", "generated/dgl.function.min.rst", "generated/dgl.function.sum.rst", "generated/dgl.function.u_add_e.rst", "generated/dgl.function.u_add_v.rst", "generated/dgl.function.u_div_e.rst", "generated/dgl.function.u_div_v.rst", "generated/dgl.function.u_dot_e.rst", "generated/dgl.function.u_dot_v.rst", "generated/dgl.function.u_mul_e.rst", "generated/dgl.function.u_mul_v.rst", "generated/dgl.function.u_sub_e.rst", "generated/dgl.function.u_sub_v.rst", "generated/dgl.function.v_add_e.rst", "generated/dgl.function.v_add_u.rst", "generated/dgl.function.v_div_e.rst", "generated/dgl.function.v_div_u.rst", "generated/dgl.function.v_dot_e.rst", "generated/dgl.function.v_dot_u.rst", "generated/dgl.function.v_mul_e.rst", "generated/dgl.function.v_mul_u.rst", "generated/dgl.function.v_sub_e.rst", "generated/dgl.function.v_sub_u.rst", "generated/dgl.graph.rst", "generated/dgl.graphbolt.BasicFeatureStore.rst", "generated/dgl.graphbolt.BuiltinDataset.rst", "generated/dgl.graphbolt.CopyTo.rst", "generated/dgl.graphbolt.DataLoader.rst", "generated/dgl.graphbolt.Dataset.rst", "generated/dgl.graphbolt.DistributedItemSampler.rst", "generated/dgl.graphbolt.Feature.rst", "generated/dgl.graphbolt.FeatureFetcher.rst", "generated/dgl.graphbolt.FeatureStore.rst", "generated/dgl.graphbolt.FusedCSCSamplingGraph.rst", "generated/dgl.graphbolt.GPUCachedFeature.rst", "generated/dgl.graphbolt.HeteroItemSet.rst", "generated/dgl.graphbolt.InSubgraphSampler.rst", "generated/dgl.graphbolt.ItemSampler.rst", "generated/dgl.graphbolt.ItemSet.rst", "generated/dgl.graphbolt.LayerNeighborSampler.rst", "generated/dgl.graphbolt.LegacyDataset.rst", "generated/dgl.graphbolt.MiniBatch.rst", "generated/dgl.graphbolt.MiniBatchTransformer.rst", "generated/dgl.graphbolt.NegativeSampler.rst", "generated/dgl.graphbolt.NeighborSampler.rst", "generated/dgl.graphbolt.OnDiskDataset.rst", "generated/dgl.graphbolt.SampledSubgraph.rst", "generated/dgl.graphbolt.SampledSubgraphImpl.rst", "generated/dgl.graphbolt.SamplingGraph.rst", "generated/dgl.graphbolt.SubgraphSampler.rst", "generated/dgl.graphbolt.Task.rst", "generated/dgl.graphbolt.TorchBasedFeature.rst", "generated/dgl.graphbolt.TorchBasedFeatureStore.rst", "generated/dgl.graphbolt.UniformNegativeSampler.rst", "generated/dgl.graphbolt.add_reverse_edges.rst", "generated/dgl.graphbolt.compact_csc_format.rst", "generated/dgl.graphbolt.etype_str_to_tuple.rst", "generated/dgl.graphbolt.etype_tuple_to_str.rst", "generated/dgl.graphbolt.exclude_seed_edges.rst", "generated/dgl.graphbolt.expand_indptr.rst", "generated/dgl.graphbolt.from_dglgraph.rst", "generated/dgl.graphbolt.fused_csc_sampling_graph.rst", "generated/dgl.graphbolt.index_select.rst", "generated/dgl.graphbolt.isin.rst", "generated/dgl.graphbolt.load_from_shared_memory.rst", "generated/dgl.graphbolt.seed.rst", "generated/dgl.graphbolt.unique_and_compact.rst", "generated/dgl.graphbolt.unique_and_compact_csc_formats.rst", "generated/dgl.heterograph.rst", "generated/dgl.in_subgraph.rst", "generated/dgl.is_libxsmm_enabled.rst", "generated/dgl.khop_adj.rst", "generated/dgl.khop_graph.rst", "generated/dgl.khop_in_subgraph.rst", "generated/dgl.khop_out_subgraph.rst", "generated/dgl.knn_graph.rst", "generated/dgl.lap_pe.rst", "generated/dgl.laplacian_lambda_max.rst", "generated/dgl.line_graph.rst", "generated/dgl.linkx_homophily.rst", "generated/dgl.load_graphs.rst", "generated/dgl.max_edges.rst", "generated/dgl.max_nodes.rst", "generated/dgl.mean_edges.rst", "generated/dgl.mean_nodes.rst", "generated/dgl.merge.rst", "generated/dgl.metapath_reachable_graph.rst", "generated/dgl.metis_partition.rst", "generated/dgl.metis_partition_assignment.rst", "generated/dgl.multiprocessing.pytorch.call_once_and_share.rst", "generated/dgl.multiprocessing.pytorch.shared_tensor.rst", "generated/dgl.nn.functional.edge_softmax.rst", "generated/dgl.nn.mxnet.HeteroGraphConv.rst", "generated/dgl.nn.mxnet.conv.AGNNConv.rst", "generated/dgl.nn.mxnet.conv.APPNPConv.rst", "generated/dgl.nn.mxnet.conv.ChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseGraphConv.rst", "generated/dgl.nn.mxnet.conv.DenseSAGEConv.rst", "generated/dgl.nn.mxnet.conv.EdgeConv.rst", "generated/dgl.nn.mxnet.conv.GATConv.rst", "generated/dgl.nn.mxnet.conv.GINConv.rst", "generated/dgl.nn.mxnet.conv.GMMConv.rst", "generated/dgl.nn.mxnet.conv.GatedGraphConv.rst", "generated/dgl.nn.mxnet.conv.GraphConv.rst", "generated/dgl.nn.mxnet.conv.NNConv.rst", "generated/dgl.nn.mxnet.conv.RelGraphConv.rst", "generated/dgl.nn.mxnet.conv.SAGEConv.rst", "generated/dgl.nn.mxnet.conv.SGConv.rst", "generated/dgl.nn.mxnet.conv.TAGConv.rst", "generated/dgl.nn.mxnet.glob.AvgPooling.rst", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.mxnet.glob.MaxPooling.rst", "generated/dgl.nn.mxnet.glob.Set2Set.rst", "generated/dgl.nn.mxnet.glob.SortPooling.rst", "generated/dgl.nn.mxnet.glob.SumPooling.rst", "generated/dgl.nn.mxnet.utils.Sequential.rst", "generated/dgl.nn.pytorch.DeepWalk.rst", "generated/dgl.nn.pytorch.HeteroEmbedding.rst", "generated/dgl.nn.pytorch.HeteroGraphConv.rst", "generated/dgl.nn.pytorch.HeteroLinear.rst", "generated/dgl.nn.pytorch.MetaPath2Vec.rst", "generated/dgl.nn.pytorch.TypedLinear.rst", "generated/dgl.nn.pytorch.conv.AGNNConv.rst", "generated/dgl.nn.pytorch.conv.APPNPConv.rst", "generated/dgl.nn.pytorch.conv.AtomicConv.rst", "generated/dgl.nn.pytorch.conv.CFConv.rst", "generated/dgl.nn.pytorch.conv.ChebConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphGATConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DGNConv.rst", "generated/dgl.nn.pytorch.conv.DenseChebConv.rst", "generated/dgl.nn.pytorch.conv.DenseGraphConv.rst", "generated/dgl.nn.pytorch.conv.DenseSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DotGatConv.rst", "generated/dgl.nn.pytorch.conv.EGATConv.rst", "generated/dgl.nn.pytorch.conv.EGNNConv.rst", "generated/dgl.nn.pytorch.conv.EdgeConv.rst", "generated/dgl.nn.pytorch.conv.EdgeGATConv.rst", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm.rst", "generated/dgl.nn.pytorch.conv.GATConv.rst", "generated/dgl.nn.pytorch.conv.GATv2Conv.rst", "generated/dgl.nn.pytorch.conv.GCN2Conv.rst", "generated/dgl.nn.pytorch.conv.GINConv.rst", "generated/dgl.nn.pytorch.conv.GINEConv.rst", "generated/dgl.nn.pytorch.conv.GMMConv.rst", "generated/dgl.nn.pytorch.conv.GatedGCNConv.rst", "generated/dgl.nn.pytorch.conv.GatedGraphConv.rst", "generated/dgl.nn.pytorch.conv.GraphConv.rst", "generated/dgl.nn.pytorch.conv.GroupRevRes.rst", "generated/dgl.nn.pytorch.conv.HGTConv.rst", "generated/dgl.nn.pytorch.conv.NNConv.rst", "generated/dgl.nn.pytorch.conv.PNAConv.rst", "generated/dgl.nn.pytorch.conv.RelGraphConv.rst", "generated/dgl.nn.pytorch.conv.SAGEConv.rst", "generated/dgl.nn.pytorch.conv.SGConv.rst", "generated/dgl.nn.pytorch.conv.TAGConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.rst", "generated/dgl.nn.pytorch.explain.GNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX.rst", "generated/dgl.nn.pytorch.explain.PGExplainer.rst", "generated/dgl.nn.pytorch.explain.SubgraphX.rst", "generated/dgl.nn.pytorch.factory.KNNGraph.rst", "generated/dgl.nn.pytorch.factory.RadiusGraph.rst", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph.rst", "generated/dgl.nn.pytorch.glob.AvgPooling.rst", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.pytorch.glob.MaxPooling.rst", "generated/dgl.nn.pytorch.glob.Set2Set.rst", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder.rst", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder.rst", "generated/dgl.nn.pytorch.glob.SortPooling.rst", "generated/dgl.nn.pytorch.glob.SumPooling.rst", "generated/dgl.nn.pytorch.glob.WeightAndSum.rst", "generated/dgl.nn.pytorch.gt.BiasedMHA.rst", "generated/dgl.nn.pytorch.gt.DegreeEncoder.rst", "generated/dgl.nn.pytorch.gt.EGTLayer.rst", "generated/dgl.nn.pytorch.gt.GraphormerLayer.rst", "generated/dgl.nn.pytorch.gt.LapPosEncoder.rst", "generated/dgl.nn.pytorch.gt.PathEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.link.EdgePredictor.rst", "generated/dgl.nn.pytorch.link.TransE.rst", "generated/dgl.nn.pytorch.link.TransR.rst", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding.rst", "generated/dgl.nn.pytorch.utils.JumpingKnowledge.rst", "generated/dgl.nn.pytorch.utils.LabelPropagation.rst", "generated/dgl.nn.pytorch.utils.Sequential.rst", "generated/dgl.nn.pytorch.utils.WeightBasis.rst", "generated/dgl.nn.tensorflow.conv.APPNPConv.rst", "generated/dgl.nn.tensorflow.conv.ChebConv.rst", "generated/dgl.nn.tensorflow.conv.GATConv.rst", "generated/dgl.nn.tensorflow.conv.GINConv.rst", "generated/dgl.nn.tensorflow.conv.GraphConv.rst", "generated/dgl.nn.tensorflow.conv.RelGraphConv.rst", "generated/dgl.nn.tensorflow.conv.SAGEConv.rst", "generated/dgl.nn.tensorflow.conv.SGConv.rst", "generated/dgl.nn.tensorflow.glob.AvgPooling.rst", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv.rst", "generated/dgl.nn.tensorflow.glob.MaxPooling.rst", "generated/dgl.nn.tensorflow.glob.SortPooling.rst", "generated/dgl.nn.tensorflow.glob.SumPooling.rst", "generated/dgl.node_homophily.rst", "generated/dgl.node_label_informativeness.rst", "generated/dgl.node_subgraph.rst", "generated/dgl.node_type_subgraph.rst", "generated/dgl.norm_by_dst.rst", "generated/dgl.ops.copy_e_max.rst", "generated/dgl.ops.copy_e_mean.rst", "generated/dgl.ops.copy_e_min.rst", "generated/dgl.ops.copy_e_sum.rst", "generated/dgl.ops.copy_u.rst", "generated/dgl.ops.copy_u_max.rst", "generated/dgl.ops.copy_u_mean.rst", "generated/dgl.ops.copy_u_min.rst", "generated/dgl.ops.copy_u_sum.rst", "generated/dgl.ops.copy_v.rst", "generated/dgl.ops.e_add_u.rst", "generated/dgl.ops.e_add_v.rst", "generated/dgl.ops.e_div_u.rst", "generated/dgl.ops.e_div_v.rst", "generated/dgl.ops.e_dot_u.rst", "generated/dgl.ops.e_dot_v.rst", "generated/dgl.ops.e_mul_u.rst", "generated/dgl.ops.e_mul_v.rst", "generated/dgl.ops.e_sub_u.rst", "generated/dgl.ops.e_sub_v.rst", "generated/dgl.ops.gather_mm.rst", "generated/dgl.ops.gsddmm.rst", "generated/dgl.ops.gspmm.rst", "generated/dgl.ops.segment_mm.rst", "generated/dgl.ops.segment_reduce.rst", "generated/dgl.ops.u_add_e.rst", "generated/dgl.ops.u_add_e_max.rst", "generated/dgl.ops.u_add_e_mean.rst", "generated/dgl.ops.u_add_e_min.rst", "generated/dgl.ops.u_add_e_sum.rst", "generated/dgl.ops.u_add_v.rst", "generated/dgl.ops.u_div_e.rst", "generated/dgl.ops.u_div_e_max.rst", "generated/dgl.ops.u_div_e_mean.rst", "generated/dgl.ops.u_div_e_min.rst", "generated/dgl.ops.u_div_e_sum.rst", "generated/dgl.ops.u_div_v.rst", "generated/dgl.ops.u_dot_e.rst", "generated/dgl.ops.u_dot_v.rst", "generated/dgl.ops.u_mul_e.rst", "generated/dgl.ops.u_mul_e_max.rst", "generated/dgl.ops.u_mul_e_mean.rst", "generated/dgl.ops.u_mul_e_min.rst", "generated/dgl.ops.u_mul_e_sum.rst", "generated/dgl.ops.u_mul_v.rst", "generated/dgl.ops.u_sub_e.rst", "generated/dgl.ops.u_sub_e_max.rst", "generated/dgl.ops.u_sub_e_mean.rst", "generated/dgl.ops.u_sub_e_min.rst", "generated/dgl.ops.u_sub_e_sum.rst", "generated/dgl.ops.u_sub_v.rst", "generated/dgl.ops.v_add_e.rst", "generated/dgl.ops.v_add_u.rst", "generated/dgl.ops.v_div_e.rst", "generated/dgl.ops.v_div_u.rst", "generated/dgl.ops.v_dot_e.rst", "generated/dgl.ops.v_dot_u.rst", "generated/dgl.ops.v_mul_e.rst", "generated/dgl.ops.v_mul_u.rst", "generated/dgl.ops.v_sub_e.rst", "generated/dgl.ops.v_sub_u.rst", "generated/dgl.out_subgraph.rst", "generated/dgl.partition_graph_with_halo.rst", "generated/dgl.prop_edges.rst", "generated/dgl.prop_edges_dfs.rst", "generated/dgl.prop_nodes.rst", "generated/dgl.prop_nodes_bfs.rst", "generated/dgl.prop_nodes_topo.rst", "generated/dgl.radius_graph.rst", "generated/dgl.rand_bipartite.rst", "generated/dgl.rand_graph.rst", "generated/dgl.random_walk_pe.rst", "generated/dgl.readout_edges.rst", "generated/dgl.readout_nodes.rst", "generated/dgl.remove_edges.rst", "generated/dgl.remove_nodes.rst", "generated/dgl.remove_self_loop.rst", "generated/dgl.reorder_graph.rst", "generated/dgl.reverse.rst", "generated/dgl.sampling.PinSAGESampler.rst", "generated/dgl.sampling.global_uniform_negative_sampling.rst", "generated/dgl.sampling.node2vec_random_walk.rst", "generated/dgl.sampling.pack_traces.rst", "generated/dgl.sampling.random_walk.rst", "generated/dgl.sampling.sample_labors.rst", "generated/dgl.sampling.sample_neighbors.rst", "generated/dgl.sampling.sample_neighbors_biased.rst", "generated/dgl.sampling.select_topk.rst", "generated/dgl.save_graphs.rst", "generated/dgl.seed.rst", "generated/dgl.segmented_knn_graph.rst", "generated/dgl.shortest_dist.rst", "generated/dgl.slice_batch.rst", "generated/dgl.softmax_edges.rst", "generated/dgl.softmax_nodes.rst", "generated/dgl.sort_csc_by_tag.rst", "generated/dgl.sort_csr_by_tag.rst", "generated/dgl.sparse.SparseMatrix.T.rst", "generated/dgl.sparse.SparseMatrix.coalesce.rst", "generated/dgl.sparse.SparseMatrix.col.rst", "generated/dgl.sparse.SparseMatrix.coo.rst", "generated/dgl.sparse.SparseMatrix.cpu.rst", "generated/dgl.sparse.SparseMatrix.csc.rst", "generated/dgl.sparse.SparseMatrix.csr.rst", "generated/dgl.sparse.SparseMatrix.cuda.rst", "generated/dgl.sparse.SparseMatrix.device.rst", "generated/dgl.sparse.SparseMatrix.double.rst", "generated/dgl.sparse.SparseMatrix.dtype.rst", "generated/dgl.sparse.SparseMatrix.float.rst", "generated/dgl.sparse.SparseMatrix.has_duplicate.rst", "generated/dgl.sparse.SparseMatrix.indices.rst", "generated/dgl.sparse.SparseMatrix.int.rst", "generated/dgl.sparse.SparseMatrix.long.rst", "generated/dgl.sparse.SparseMatrix.neg.rst", "generated/dgl.sparse.SparseMatrix.nnz.rst", "generated/dgl.sparse.SparseMatrix.reduce.rst", "generated/dgl.sparse.SparseMatrix.row.rst", "generated/dgl.sparse.SparseMatrix.shape.rst", "generated/dgl.sparse.SparseMatrix.smax.rst", "generated/dgl.sparse.SparseMatrix.smean.rst", "generated/dgl.sparse.SparseMatrix.smin.rst", "generated/dgl.sparse.SparseMatrix.softmax.rst", "generated/dgl.sparse.SparseMatrix.sum.rst", "generated/dgl.sparse.SparseMatrix.t.rst", "generated/dgl.sparse.SparseMatrix.to.rst", "generated/dgl.sparse.SparseMatrix.to_dense.rst", "generated/dgl.sparse.SparseMatrix.transpose.rst", "generated/dgl.sparse.SparseMatrix.val.rst", "generated/dgl.sparse.add.rst", "generated/dgl.sparse.bsddmm.rst", "generated/dgl.sparse.bspmm.rst", "generated/dgl.sparse.diag.rst", "generated/dgl.sparse.div.rst", "generated/dgl.sparse.from_coo.rst", "generated/dgl.sparse.from_csc.rst", "generated/dgl.sparse.from_csr.rst", "generated/dgl.sparse.identity.rst", "generated/dgl.sparse.matmul.rst", "generated/dgl.sparse.mul.rst", "generated/dgl.sparse.power.rst", "generated/dgl.sparse.sddmm.rst", "generated/dgl.sparse.softmax.rst", "generated/dgl.sparse.sp_add_v.rst", "generated/dgl.sparse.sp_broadcast_v.rst", "generated/dgl.sparse.sp_div_v.rst", "generated/dgl.sparse.sp_mul_v.rst", "generated/dgl.sparse.sp_sub_v.rst", "generated/dgl.sparse.spmatrix.rst", "generated/dgl.sparse.spmm.rst", "generated/dgl.sparse.spspmm.rst", "generated/dgl.sparse.sub.rst", "generated/dgl.sparse.val_like.rst", "generated/dgl.sum_edges.rst", "generated/dgl.sum_nodes.rst", "generated/dgl.svd_pe.rst", "generated/dgl.to_bidirected.rst", "generated/dgl.to_block.rst", "generated/dgl.to_cugraph.rst", "generated/dgl.to_double.rst", "generated/dgl.to_float.rst", "generated/dgl.to_half.rst", "generated/dgl.to_heterogeneous.rst", "generated/dgl.to_homogeneous.rst", "generated/dgl.to_networkx.rst", "generated/dgl.to_simple.rst", "generated/dgl.to_simple_graph.rst", "generated/dgl.topk_edges.rst", "generated/dgl.topk_nodes.rst", "generated/dgl.topological_nodes_generator.rst", "generated/dgl.transforms.AddEdge.rst", "generated/dgl.transforms.AddMetaPaths.rst", "generated/dgl.transforms.AddReverse.rst", "generated/dgl.transforms.AddSelfLoop.rst", "generated/dgl.transforms.BaseTransform.rst", "generated/dgl.transforms.Compose.rst", "generated/dgl.transforms.DropEdge.rst", "generated/dgl.transforms.DropNode.rst", "generated/dgl.transforms.FeatMask.rst", "generated/dgl.transforms.GCNNorm.rst", "generated/dgl.transforms.GDC.rst", "generated/dgl.transforms.HeatKernel.rst", "generated/dgl.transforms.KHopGraph.rst", "generated/dgl.transforms.LapPE.rst", "generated/dgl.transforms.LineGraph.rst", "generated/dgl.transforms.NodeShuffle.rst", "generated/dgl.transforms.PPR.rst", "generated/dgl.transforms.RandomWalkPE.rst", "generated/dgl.transforms.RemoveSelfLoop.rst", "generated/dgl.transforms.RowFeatNormalizer.rst", "generated/dgl.transforms.SIGNDiffusion.rst", "generated/dgl.transforms.SVDPE.rst", "generated/dgl.transforms.ToLevi.rst", "generated/dgl.transforms.ToSimple.rst", "generated/dgl.udf.EdgeBatch.batch_size.rst", "generated/dgl.udf.EdgeBatch.data.rst", "generated/dgl.udf.EdgeBatch.dst.rst", "generated/dgl.udf.EdgeBatch.edges.rst", "generated/dgl.udf.EdgeBatch.src.rst", "generated/dgl.udf.NodeBatch.batch_size.rst", "generated/dgl.udf.NodeBatch.data.rst", "generated/dgl.udf.NodeBatch.mailbox.rst", "generated/dgl.udf.NodeBatch.nodes.rst", "generated/dgl.unbatch.rst", "generated/dgl.use_libxsmm.rst", "graphtransformer/data.rst", "graphtransformer/index.rst", "graphtransformer/model.rst", "guide/data.rst", "guide/data-dataset.rst", "guide/data-download.rst", "guide/data-loadcsv.rst", "guide/data-loadogb.rst", "guide/data-process.rst", "guide/data-savenload.rst", "guide/distributed.rst", "guide/distributed-apis.rst", "guide/distributed-hetero.rst", "guide/distributed-partition.rst", "guide/distributed-preprocessing.rst", "guide/distributed-tools.rst", "guide/graph.rst", "guide/graph-basic.rst", "guide/graph-external.rst", "guide/graph-feature.rst", "guide/graph-gpu.rst", "guide/graph-graphs-nodes-edges.rst", "guide/graph-heterogeneous.rst", "guide/index.rst", "guide/message.rst", "guide/message-api.rst", "guide/message-efficient.rst", "guide/message-heterograph.rst", "guide/message-part.rst", "guide/minibatch.rst", "guide/minibatch-custom-sampler.rst", "guide/minibatch-edge.rst", "guide/minibatch-gpu-sampling.rst", "guide/minibatch-inference.rst", "guide/minibatch-link.rst", "guide/minibatch-nn.rst", "guide/minibatch-node.rst", "guide/minibatch-parallelism.rst", "guide/minibatch-sparse.rst", "guide/mixed_precision.rst", "guide/nn.rst", "guide/nn-construction.rst", "guide/nn-forward.rst", "guide/nn-heterograph.rst", "guide/training.rst", "guide/training-edge.rst", "guide/training-eweight.rst", "guide/training-graph.rst", "guide/training-link.rst", "guide/training-node.rst", "guide_cn/data.rst", "guide_cn/data-dataset.rst", "guide_cn/data-download.rst", "guide_cn/data-loadogb.rst", "guide_cn/data-process.rst", "guide_cn/data-savenload.rst", "guide_cn/distributed.rst", "guide_cn/distributed-apis.rst", "guide_cn/distributed-preprocessing.rst", "guide_cn/distributed-tools.rst", "guide_cn/graph.rst", "guide_cn/graph-basic.rst", "guide_cn/graph-external.rst", "guide_cn/graph-feature.rst", "guide_cn/graph-gpu.rst", "guide_cn/graph-graphs-nodes-edges.rst", "guide_cn/graph-heterogeneous.rst", "guide_cn/index.rst", "guide_cn/message.rst", "guide_cn/message-api.rst", "guide_cn/message-efficient.rst", "guide_cn/message-heterograph.rst", "guide_cn/message-part.rst", "guide_cn/minibatch.rst", "guide_cn/minibatch-custom-sampler.rst", "guide_cn/minibatch-edge.rst", "guide_cn/minibatch-inference.rst", "guide_cn/minibatch-link.rst", "guide_cn/minibatch-nn.rst", "guide_cn/minibatch-node.rst", "guide_cn/nn.rst", "guide_cn/nn-construction.rst", "guide_cn/nn-forward.rst", "guide_cn/nn-heterograph.rst", "guide_cn/training.rst", "guide_cn/training-edge.rst", "guide_cn/training-eweight.rst", "guide_cn/training-graph.rst", "guide_cn/training-link.rst", "guide_cn/training-node.rst", "guide_ko/data.rst", "guide_ko/data-dataset.rst", "guide_ko/data-download.rst", "guide_ko/data-loadogb.rst", "guide_ko/data-process.rst", "guide_ko/data-savenload.rst", "guide_ko/distributed.rst", "guide_ko/distributed-apis.rst", "guide_ko/distributed-hetero.rst", "guide_ko/distributed-preprocessing.rst", "guide_ko/distributed-tools.rst", "guide_ko/graph.rst", "guide_ko/graph-basic.rst", "guide_ko/graph-external.rst", "guide_ko/graph-feature.rst", "guide_ko/graph-gpu.rst", "guide_ko/graph-graphs-nodes-edges.rst", "guide_ko/graph-heterogeneous.rst", "guide_ko/index.rst", "guide_ko/message.rst", "guide_ko/message-api.rst", "guide_ko/message-edge.rst", "guide_ko/message-efficient.rst", "guide_ko/message-heterograph.rst", "guide_ko/message-part.rst", "guide_ko/minibatch.rst", "guide_ko/minibatch-custom-sampler.rst", "guide_ko/minibatch-edge.rst", "guide_ko/minibatch-gpu-sampling.rst", "guide_ko/minibatch-inference.rst", "guide_ko/minibatch-link.rst", "guide_ko/minibatch-nn.rst", "guide_ko/minibatch-node.rst", "guide_ko/mixed_precision.rst", "guide_ko/nn.rst", "guide_ko/nn-construction.rst", "guide_ko/nn-forward.rst", "guide_ko/nn-heterograph.rst", "guide_ko/training.rst", "guide_ko/training-edge.rst", "guide_ko/training-graph.rst", "guide_ko/training-link.rst", "guide_ko/training-node.rst", "index.rst", "install/index.rst", "notebooks/sparse/gcn.nblink", "notebooks/sparse/graph_diffusion.nblink", "notebooks/sparse/graph_transformer.nblink", "notebooks/sparse/hgnn.nblink", "notebooks/sparse/index.rst", "notebooks/sparse/quickstart.nblink", "performance.rst", "resources.rst", "sg_execution_times.rst", "stochastic_training/index.rst", "stochastic_training/link_prediction.nblink", "stochastic_training/multigpu_node_classification.nblink", "stochastic_training/neighbor_sampling_overview.nblink", "stochastic_training/node_classification.nblink", "stochastic_training/ondisk-dataset.rst", "stochastic_training/ondisk-dataset-specification.rst", "stochastic_training/ondisk_dataset_heterograph.nblink", "stochastic_training/ondisk_dataset_homograph.nblink", "tutorials/blitz/1_introduction.ipynb", "tutorials/blitz/2_dglgraph.ipynb", "tutorials/blitz/3_message_passing.ipynb", "tutorials/blitz/4_link_predict.ipynb", "tutorials/blitz/5_graph_classification.ipynb", "tutorials/blitz/6_load_data.ipynb", "tutorials/blitz/index.rst", "tutorials/blitz/sg_execution_times.rst", "tutorials/cpu/argo_tutorial.ipynb", "tutorials/cpu/cpu_best_practises.ipynb", "tutorials/cpu/index.rst", "tutorials/cpu/sg_execution_times.rst", "tutorials/dist/1_node_classification.ipynb", "tutorials/dist/2_link_prediction.ipynb", "tutorials/dist/index.rst", "tutorials/dist/sg_execution_times.rst", "tutorials/models/1_gnn/1_gcn.ipynb", "tutorials/models/1_gnn/4_rgcn.ipynb", "tutorials/models/1_gnn/6_line_graph.ipynb", "tutorials/models/1_gnn/9_gat.ipynb", "tutorials/models/1_gnn/index.rst", "tutorials/models/1_gnn/sg_execution_times.rst", "tutorials/models/2_small_graph/3_tree-lstm.ipynb", "tutorials/models/2_small_graph/index.rst", "tutorials/models/2_small_graph/sg_execution_times.rst", "tutorials/models/3_generative_model/5_dgmg.ipynb", "tutorials/models/3_generative_model/index.rst", "tutorials/models/3_generative_model/sg_execution_times.rst", "tutorials/models/4_old_wines/2_capsule.ipynb", "tutorials/models/4_old_wines/7_transformer.ipynb", "tutorials/models/4_old_wines/index.rst", "tutorials/models/4_old_wines/sg_execution_times.rst", "tutorials/models/index.rst", "tutorials/models/sg_execution_times.rst", "tutorials/multi/1_graph_classification.ipynb", "tutorials/multi/2_node_classification.ipynb", "tutorials/multi/index.rst", "tutorials/multi/sg_execution_times.rst"], "indexentries": {"__getitem__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__getitem__", false]], "__getitem__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__getitem__", false]], "__getitem__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__getitem__", false]], "__getitem__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__getitem__", false]], "__getitem__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__getitem__", false]], "__getitem__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__getitem__", false]], "__getitem__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__getitem__", false]], "__getitem__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__getitem__", false]], "__getitem__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__getitem__", false]], "__getitem__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__getitem__", false]], "__getitem__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__getitem__", false]], "__getitem__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__getitem__", false]], "__getitem__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__getitem__", false]], "__getitem__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__getitem__", false]], "__getitem__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__getitem__", false]], "__getitem__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__getitem__", false]], "__getitem__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__getitem__", false]], "__getitem__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__getitem__", false]], "__getitem__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__getitem__", false]], "__getitem__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__getitem__", false]], "__getitem__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__getitem__", false]], "__getitem__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__getitem__", false]], "__getitem__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__getitem__", false]], "__getitem__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__getitem__", false]], "__getitem__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__getitem__", false]], "__getitem__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__getitem__", false]], "__getitem__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__getitem__", false]], "__getitem__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__getitem__", false]], "__getitem__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__getitem__", false]], "__getitem__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__getitem__", false]], "__getitem__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__getitem__", false]], "__getitem__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__getitem__", false]], "__getitem__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__getitem__", false]], "__getitem__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__getitem__", false]], "__getitem__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__getitem__", false]], "__getitem__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__getitem__", false]], "__getitem__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__getitem__", false]], "__getitem__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__getitem__", false]], "__getitem__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__getitem__", false]], "__getitem__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__getitem__", false]], "__getitem__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__getitem__", false]], "__getitem__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__getitem__", false]], "__getitem__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__getitem__", false]], "__getitem__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__getitem__", false]], "__getitem__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__getitem__", false]], "__getitem__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__getitem__", false]], "__getitem__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__getitem__", false]], "__getitem__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__getitem__", false]], "__getitem__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__getitem__", false]], "__getitem__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__getitem__", false]], "__getitem__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__getitem__", false]], "__getitem__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__getitem__", false]], "__getitem__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__getitem__", false]], "__getitem__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__getitem__", false]], "__getitem__() (dgl.dglgraph method)": [[26, "dgl.DGLGraph.__getitem__", false]], "__init__() (dgl.dataloading.blocksampler method)": [[208, "dgl.dataloading.BlockSampler.__init__", false]], "__init__() (dgl.sampling.pinsagesampler method)": [[556, "dgl.sampling.PinSAGESampler.__init__", false]], "__len__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__len__", false]], "__len__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__len__", false]], "__len__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__len__", false]], "__len__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__len__", false]], "__len__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__len__", false]], "__len__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__len__", false]], "__len__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__len__", false]], "__len__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__len__", false]], "__len__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__len__", false]], "__len__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__len__", false]], "__len__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__len__", false]], "__len__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__len__", false]], "__len__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__len__", false]], "__len__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__len__", false]], "__len__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__len__", false]], "__len__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__len__", false]], "__len__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__len__", false]], "__len__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__len__", false]], "__len__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__len__", false]], "__len__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__len__", false]], "__len__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__len__", false]], "__len__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__len__", false]], "__len__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__len__", false]], "__len__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__len__", false]], "__len__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__len__", false]], "__len__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__len__", false]], "__len__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__len__", false]], "__len__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__len__", false]], "__len__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__len__", false]], "__len__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__len__", false]], "__len__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__len__", false]], "__len__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__len__", false]], "__len__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__len__", false]], "__len__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__len__", false]], "__len__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__len__", false]], "__len__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__len__", false]], "__len__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__len__", false]], "__len__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__len__", false]], "__len__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__len__", false]], "__len__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__len__", false]], "__len__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__len__", false]], "__len__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__len__", false]], "__len__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__len__", false]], "__len__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__len__", false]], "__len__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__len__", false]], "__len__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__len__", false]], "__len__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__len__", false]], "__len__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__len__", false]], "__len__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__len__", false]], "__len__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__len__", false]], "__len__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__len__", false]], "__len__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__len__", false]], "__len__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__len__", false]], "__len__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__len__", false]], "__len__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__len__", false]], "__len__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__len__", false]], "__len__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__len__", false]], "__len__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__len__", false]], "__len__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__len__", false]], "__len__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__len__", false]], "__len__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__len__", false]], "__len__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__len__", false]], "__len__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__len__", false]], "__len__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__len__", false]], "__len__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__len__", false]], "actordataset (class in dgl.data)": [[134, "dgl.data.ActorDataset", false]], "add() (in module dgl.sparse)": [[605, "dgl.sparse.add", false]], "add_edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.add_edge_attribute", false]], "add_edges() (dgl.dglgraph method)": [[27, "dgl.DGLGraph.add_edges", false]], "add_edges() (in module dgl)": [[114, "dgl.add_edges", false]], "add_node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.add_node_attribute", false]], "add_node_property_split (class in dgl.data.utils)": [[197, "dgl.data.utils.add_node_property_split", false]], "add_nodepred_split (class in dgl.data.utils)": [[198, "dgl.data.utils.add_nodepred_split", false]], "add_nodes() (dgl.dglgraph method)": [[28, "dgl.DGLGraph.add_nodes", false]], "add_nodes() (in module dgl)": [[115, "dgl.add_nodes", false]], "add_reverse_edges() (in module dgl)": [[116, "dgl.add_reverse_edges", false]], "add_reverse_edges() (in module dgl.graphbolt)": [[318, "dgl.graphbolt.add_reverse_edges", false]], "add_self_loop() (dgl.dglgraph method)": [[29, "dgl.DGLGraph.add_self_loop", false]], "add_self_loop() (in module dgl)": [[117, "dgl.add_self_loop", false]], "addedge (class in dgl.transforms)": [[646, "dgl.transforms.AddEdge", false]], "addmetapaths (class in dgl.transforms)": [[647, "dgl.transforms.AddMetaPaths", false]], "addreverse (class in dgl.transforms)": [[648, "dgl.transforms.AddReverse", false]], "addselfloop (class in dgl.transforms)": [[649, "dgl.transforms.AddSelfLoop", false]], "adj() (dgl.dglgraph method)": [[30, "dgl.DGLGraph.adj", false]], "adj_external() (dgl.dglgraph method)": [[31, "dgl.DGLGraph.adj_external", false]], "adj_product_graph() (in module dgl)": [[118, "dgl.adj_product_graph", false]], "adj_sum_graph() (in module dgl)": [[119, "dgl.adj_sum_graph", false]], "adj_tensors() (dgl.dglgraph method)": [[32, "dgl.DGLGraph.adj_tensors", false]], "adjacency_matrix() (dgl.dglgraph method)": [[33, "dgl.DGLGraph.adjacency_matrix", false]], "adjusted_homophily() (in module dgl)": [[120, "dgl.adjusted_homophily", false]], "agnnconv (class in dgl.nn.mxnet.conv)": [[357, "dgl.nn.mxnet.conv.AGNNConv", false]], "agnnconv (class in dgl.nn.pytorch.conv)": [[387, "dgl.nn.pytorch.conv.AGNNConv", false]], "aifbdataset (class in dgl.data)": [[132, "dgl.data.AIFBDataset", false]], "all_nodes_set (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.all_nodes_set", false]], "amazoncobuycomputerdataset (class in dgl.data)": [[135, "dgl.data.AmazonCoBuyComputerDataset", false]], "amazoncobuyphotodataset (class in dgl.data)": [[136, "dgl.data.AmazonCoBuyPhotoDataset", false]], "amazonratingsdataset (class in dgl.data)": [[137, "dgl.data.AmazonRatingsDataset", false]], "amdataset (class in dgl.data)": [[133, "dgl.data.AMDataset", false]], "apply_each() (in module dgl)": [[121, "dgl.apply_each", false]], "apply_edges() (dgl.dglgraph method)": [[34, "dgl.DGLGraph.apply_edges", false]], "apply_nodes() (dgl.dglgraph method)": [[35, "dgl.DGLGraph.apply_nodes", false]], "appnpconv (class in dgl.nn.mxnet.conv)": [[358, "dgl.nn.mxnet.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.pytorch.conv)": [[388, "dgl.nn.pytorch.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.tensorflow.conv)": [[458, "dgl.nn.tensorflow.conv.APPNPConv", false]], "as_edge_prediction_sampler() (in module dgl.dataloading)": [[220, "dgl.dataloading.as_edge_prediction_sampler", false]], "asgraphpreddataset (class in dgl.data)": [[138, "dgl.data.AsGraphPredDataset", false]], "aslinkpreddataset (class in dgl.data)": [[139, "dgl.data.AsLinkPredDataset", false]], "asnodepreddataset (class in dgl.data)": [[140, "dgl.data.AsNodePredDataset", false]], "atomicconv (class in dgl.nn.pytorch.conv)": [[389, "dgl.nn.pytorch.conv.AtomicConv", false]], "avgpooling (class in dgl.nn.mxnet.glob)": [[374, "dgl.nn.mxnet.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.pytorch.glob)": [[433, "dgl.nn.pytorch.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.tensorflow.glob)": [[466, "dgl.nn.tensorflow.glob.AvgPooling", false]], "ba2motifdataset (class in dgl.data)": [[141, "dgl.data.BA2MotifDataset", false]], "bacommunitydataset (class in dgl.data)": [[142, "dgl.data.BACommunityDataset", false]], "barrier() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.barrier", false]], "basetransform (class in dgl.transforms)": [[650, "dgl.transforms.BaseTransform", false]], "bashapedataset (class in dgl.data)": [[143, "dgl.data.BAShapeDataset", false]], "basicfeaturestore (class in dgl.graphbolt)": [[288, "dgl.graphbolt.BasicFeatureStore", false]], "batch() (in module dgl)": [[122, "dgl.batch", false]], "batch_num_edges() (dgl.dglgraph method)": [[36, "dgl.DGLGraph.batch_num_edges", false]], "batch_num_nodes() (dgl.dglgraph method)": [[37, "dgl.DGLGraph.batch_num_nodes", false]], "batch_size (dgl.dglgraph property)": [[38, "dgl.DGLGraph.batch_size", false]], "batch_size() (dgl.udf.edgebatch method)": [[670, "dgl.udf.EdgeBatch.batch_size", false]], "batch_size() (dgl.udf.nodebatch method)": [[675, "dgl.udf.NodeBatch.batch_size", false]], "bfs_edges_generator() (in module dgl)": [[123, "dgl.bfs_edges_generator", false]], "bfs_nodes_generator() (in module dgl)": [[124, "dgl.bfs_nodes_generator", false]], "bgsdataset (class in dgl.data)": [[144, "dgl.data.BGSDataset", false]], "bias (dgl.nn.pytorch.conv.graphconv attribute)": [[413, "dgl.nn.pytorch.conv.GraphConv.bias", false]], "biasedmha (class in dgl.nn.pytorch.gt)": [[442, "dgl.nn.pytorch.gt.BiasedMHA", false]], "bipartite_from_networkx() (in module dgl)": [[125, "dgl.bipartite_from_networkx", false]], "bipartite_from_scipy() (in module dgl)": [[126, "dgl.bipartite_from_scipy", false]], "bitcoinotcdataset (class in dgl.data)": [[145, "dgl.data.BitcoinOTCDataset", false]], "block_to_graph() (in module dgl)": [[127, "dgl.block_to_graph", false]], "blocks (dgl.graphbolt.minibatch property)": [[305, "dgl.graphbolt.MiniBatch.blocks", false]], "blocksampler (class in dgl.dataloading)": [[208, "dgl.dataloading.BlockSampler", false]], "broadcast_edges() (in module dgl)": [[128, "dgl.broadcast_edges", false]], "broadcast_nodes() (in module dgl)": [[129, "dgl.broadcast_nodes", false]], "bsddmm() (in module dgl.sparse)": [[606, "dgl.sparse.bsddmm", false]], "bspmm() (in module dgl.sparse)": [[607, "dgl.sparse.bspmm", false]], "builtindataset (class in dgl.graphbolt)": [[289, "dgl.graphbolt.BuiltinDataset", false]], "call_once_and_share() (in module dgl.multiprocessing.pytorch)": [[353, "dgl.multiprocessing.pytorch.call_once_and_share", false]], "canonical_etypes (dgl.dglgraph property)": [[39, "dgl.DGLGraph.canonical_etypes", false]], "canonical_etypes (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.canonical_etypes", false]], "cfconv (class in dgl.nn.pytorch.conv)": [[390, "dgl.nn.pytorch.conv.CFConv", false]], "chameleondataset (class in dgl.data)": [[149, "dgl.data.ChameleonDataset", false]], "chebconv (class in dgl.nn.mxnet.conv)": [[359, "dgl.nn.mxnet.conv.ChebConv", false]], "chebconv (class in dgl.nn.pytorch.conv)": [[391, "dgl.nn.pytorch.conv.ChebConv", false]], "chebconv (class in dgl.nn.tensorflow.conv)": [[459, "dgl.nn.tensorflow.conv.ChebConv", false]], "check_sha1 (class in dgl.data.utils)": [[199, "dgl.data.utils.check_sha1", false]], "cifar10superpixeldataset (class in dgl.data)": [[146, "dgl.data.CIFAR10SuperPixelDataset", false]], "citeseergraphdataset (class in dgl.data)": [[150, "dgl.data.CiteseerGraphDataset", false]], "clusterdataset (class in dgl.data)": [[147, "dgl.data.CLUSTERDataset", false]], "clustergcnsampler (class in dgl.dataloading)": [[209, "dgl.dataloading.ClusterGCNSampler", false]], "coalesce() (dgl.sparse.sparsematrix method)": [[575, "dgl.sparse.SparseMatrix.coalesce", false]], "coauthorcsdataset (class in dgl.data)": [[151, "dgl.data.CoauthorCSDataset", false]], "coauthorphysicsdataset (class in dgl.data)": [[152, "dgl.data.CoauthorPhysicsDataset", false]], "col (dgl.sparse.sparsematrix property)": [[576, "dgl.sparse.SparseMatrix.col", false]], "collate_fn() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.collate_fn", false]], "compact_csc_format() (in module dgl.graphbolt)": [[319, "dgl.graphbolt.compact_csc_format", false]], "compact_graphs() (in module dgl)": [[130, "dgl.compact_graphs", false]], "compacted_seeds (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.compacted_seeds", false]], "compose (class in dgl.transforms)": [[651, "dgl.transforms.Compose", false]], "compute_blocks() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.compute_blocks", false]], "coo() (dgl.sparse.sparsematrix method)": [[577, "dgl.sparse.SparseMatrix.coo", false]], "copy_e() (in module dgl.function)": [[251, "dgl.function.copy_e", false]], "copy_e_max() (in module dgl.ops)": [[477, "dgl.ops.copy_e_max", false]], "copy_e_mean() (in module dgl.ops)": [[478, "dgl.ops.copy_e_mean", false]], "copy_e_min() (in module dgl.ops)": [[479, "dgl.ops.copy_e_min", false]], "copy_e_sum() (in module dgl.ops)": [[480, "dgl.ops.copy_e_sum", false]], "copy_to_shared_memory() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.copy_to_shared_memory", false]], "copy_to_shared_memory() (dgl.graphbolt.samplinggraph method)": [[312, "dgl.graphbolt.SamplingGraph.copy_to_shared_memory", false]], "copy_u() (in module dgl.function)": [[252, "dgl.function.copy_u", false]], "copy_u() (in module dgl.ops)": [[481, "dgl.ops.copy_u", false]], "copy_u_max() (in module dgl.ops)": [[482, "dgl.ops.copy_u_max", false]], "copy_u_mean() (in module dgl.ops)": [[483, "dgl.ops.copy_u_mean", false]], "copy_u_min() (in module dgl.ops)": [[484, "dgl.ops.copy_u_min", false]], "copy_u_sum() (in module dgl.ops)": [[485, "dgl.ops.copy_u_sum", false]], "copy_v() (in module dgl.ops)": [[486, "dgl.ops.copy_v", false]], "copyto (class in dgl.graphbolt)": [[290, "dgl.graphbolt.CopyTo", false]], "corafulldataset (class in dgl.data)": [[153, "dgl.data.CoraFullDataset", false]], "coragraphdataset (class in dgl.data)": [[154, "dgl.data.CoraGraphDataset", false]], "cornelldataset (class in dgl.data)": [[155, "dgl.data.CornellDataset", false]], "cpu() (dgl.dglgraph method)": [[40, "dgl.DGLGraph.cpu", false]], "cpu() (dgl.sparse.sparsematrix method)": [[578, "dgl.sparse.SparseMatrix.cpu", false]], "create_block() (in module dgl)": [[131, "dgl.create_block", false]], "create_formats_() (dgl.dglgraph method)": [[41, "dgl.DGLGraph.create_formats_", false]], "csc() (dgl.sparse.sparsematrix method)": [[579, "dgl.sparse.SparseMatrix.csc", false]], "csc_indptr (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.csc_indptr", false]], "csr() (dgl.sparse.sparsematrix method)": [[580, "dgl.sparse.SparseMatrix.csr", false]], "csvdataset (class in dgl.data)": [[148, "dgl.data.CSVDataset", false]], "cuda() (dgl.sparse.sparsematrix method)": [[581, "dgl.sparse.SparseMatrix.cuda", false]], "cugraphgatconv (class in dgl.nn.pytorch.conv)": [[392, "dgl.nn.pytorch.conv.CuGraphGATConv", false]], "cugraphrelgraphconv (class in dgl.nn.pytorch.conv)": [[393, "dgl.nn.pytorch.conv.CuGraphRelGraphConv", false]], "cugraphsageconv (class in dgl.nn.pytorch.conv)": [[394, "dgl.nn.pytorch.conv.CuGraphSAGEConv", false]], "data (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.data", false]], "data (dgl.udf.edgebatch property)": [[671, "dgl.udf.EdgeBatch.data", false]], "data (dgl.udf.nodebatch property)": [[676, "dgl.udf.NodeBatch.data", false]], "dataloader (class in dgl.dataloading)": [[210, "dgl.dataloading.DataLoader", false]], "dataloader (class in dgl.graphbolt)": [[291, "dgl.graphbolt.DataLoader", false]], "dataset (class in dgl.graphbolt)": [[292, "dgl.graphbolt.Dataset", false]], "dataset_name (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.dataset_name", false]], "dataset_name (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.dataset_name", false]], "dataset_name (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.dataset_name", false]], "deepwalk (class in dgl.nn.pytorch)": [[381, "dgl.nn.pytorch.DeepWalk", false]], "degreeencoder (class in dgl.nn.pytorch.gt)": [[443, "dgl.nn.pytorch.gt.DegreeEncoder", false]], "densechebconv (class in dgl.nn.mxnet.conv)": [[360, "dgl.nn.mxnet.conv.DenseChebConv", false]], "densechebconv (class in dgl.nn.pytorch.conv)": [[396, "dgl.nn.pytorch.conv.DenseChebConv", false]], "densegraphconv (class in dgl.nn.mxnet.conv)": [[361, "dgl.nn.mxnet.conv.DenseGraphConv", false]], "densegraphconv (class in dgl.nn.pytorch.conv)": [[397, "dgl.nn.pytorch.conv.DenseGraphConv", false]], "densesageconv (class in dgl.nn.mxnet.conv)": [[362, "dgl.nn.mxnet.conv.DenseSAGEConv", false]], "densesageconv (class in dgl.nn.pytorch.conv)": [[398, "dgl.nn.pytorch.conv.DenseSAGEConv", false]], "device (dgl.dglgraph property)": [[42, "dgl.DGLGraph.device", false]], "device (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.device", false]], "device (dgl.sparse.sparsematrix property)": [[582, "dgl.sparse.SparseMatrix.device", false]], "dfs_edges_generator() (in module dgl)": [[229, "dgl.dfs_edges_generator", false]], "dfs_labeled_edges_generator() (in module dgl)": [[230, "dgl.dfs_labeled_edges_generator", false]], "dgl": [[0, "module-dgl", false]], "dgl.data": [[2, "module-dgl.data", false]], "dgl.geometry": [[6, "module-dgl.geometry", false]], "dgl.nn.functional": [[18, "module-dgl.nn.functional", false]], "dgl.optim": [[10, "module-dgl.optim", false]], "dgl.sampling": [[11, "module-dgl.sampling", false]], "dgl.transforms": [[19, "module-dgl.transforms", false]], "dgl_partition_to_graphbolt() (in module dgl.distributed)": [[231, "dgl.distributed.dgl_partition_to_graphbolt", false]], "dgldataset (class in dgl.data)": [[156, "dgl.data.DGLDataset", false]], "dglgraph (class in dgl)": [[1, "dgl.DGLGraph", false]], "dgnconv (class in dgl.nn.pytorch.conv)": [[395, "dgl.nn.pytorch.conv.DGNConv", false]], "diag() (in module dgl.sparse)": [[608, "dgl.sparse.diag", false]], "distdataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistDataLoader", false]], "distedgedataloader (class in dgl.dataloading)": [[211, "dgl.dataloading.DistEdgeDataLoader", false]], "distembedding (class in dgl.distributed)": [[4, "dgl.distributed.DistEmbedding", false]], "distgraph (class in dgl.distributed)": [[4, "dgl.distributed.DistGraph", false]], "distnodedataloader (class in dgl.dataloading)": [[212, "dgl.dataloading.DistNodeDataLoader", false]], "distributeditemsampler (class in dgl.graphbolt)": [[293, "dgl.graphbolt.DistributedItemSampler", false]], "disttensor (class in dgl.distributed)": [[4, "dgl.distributed.DistTensor", false]], "div() (in module dgl.sparse)": [[609, "dgl.sparse.div", false]], "dotgatconv (class in dgl.nn.pytorch.conv)": [[399, "dgl.nn.pytorch.conv.DotGatConv", false]], "double() (dgl.sparse.sparsematrix method)": [[583, "dgl.sparse.SparseMatrix.double", false]], "double_radius_node_labeling() (in module dgl)": [[243, "dgl.double_radius_node_labeling", false]], "download (class in dgl.data.utils)": [[200, "dgl.data.utils.download", false]], "dropedge (class in dgl.transforms)": [[652, "dgl.transforms.DropEdge", false]], "dropnode (class in dgl.transforms)": [[653, "dgl.transforms.DropNode", false]], "dst (dgl.udf.edgebatch property)": [[672, "dgl.udf.EdgeBatch.dst", false]], "dstdata (dgl.dglgraph property)": [[43, "dgl.DGLGraph.dstdata", false]], "dstnodes (dgl.dglgraph property)": [[44, "dgl.DGLGraph.dstnodes", false]], "dsttypes (dgl.dglgraph property)": [[45, "dgl.DGLGraph.dsttypes", false]], "dtype (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.dtype", false]], "dtype (dgl.sparse.sparsematrix property)": [[584, "dgl.sparse.SparseMatrix.dtype", false]], "e_add_u() (in module dgl.function)": [[253, "dgl.function.e_add_u", false]], "e_add_u() (in module dgl.ops)": [[487, "dgl.ops.e_add_u", false]], "e_add_v() (in module dgl.function)": [[254, "dgl.function.e_add_v", false]], "e_add_v() (in module dgl.ops)": [[488, "dgl.ops.e_add_v", false]], "e_div_u() (in module dgl.function)": [[255, "dgl.function.e_div_u", false]], "e_div_u() (in module dgl.ops)": [[489, "dgl.ops.e_div_u", false]], "e_div_v() (in module dgl.function)": [[256, "dgl.function.e_div_v", false]], "e_div_v() (in module dgl.ops)": [[490, "dgl.ops.e_div_v", false]], "e_dot_u() (in module dgl.function)": [[257, "dgl.function.e_dot_u", false]], "e_dot_u() (in module dgl.ops)": [[491, "dgl.ops.e_dot_u", false]], "e_dot_v() (in module dgl.function)": [[258, "dgl.function.e_dot_v", false]], "e_dot_v() (in module dgl.ops)": [[492, "dgl.ops.e_dot_v", false]], "e_mul_u() (in module dgl.function)": [[259, "dgl.function.e_mul_u", false]], "e_mul_u() (in module dgl.ops)": [[493, "dgl.ops.e_mul_u", false]], "e_mul_v() (in module dgl.function)": [[260, "dgl.function.e_mul_v", false]], "e_mul_v() (in module dgl.ops)": [[494, "dgl.ops.e_mul_v", false]], "e_sub_u() (in module dgl.function)": [[261, "dgl.function.e_sub_u", false]], "e_sub_u() (in module dgl.ops)": [[495, "dgl.ops.e_sub_u", false]], "e_sub_v() (in module dgl.function)": [[262, "dgl.function.e_sub_v", false]], "e_sub_v() (in module dgl.ops)": [[496, "dgl.ops.e_sub_v", false]], "edata (dgl.dglgraph property)": [[46, "dgl.DGLGraph.edata", false]], "edata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edata", false]], "edge_attr_schemes() (dgl.dglgraph method)": [[47, "dgl.DGLGraph.edge_attr_schemes", false]], "edge_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.edge_attr_schemes", false]], "edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attribute", false]], "edge_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attributes", false]], "edge_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.edge_feat_size", false]], "edge_features (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.edge_features", false]], "edge_homophily() (in module dgl)": [[244, "dgl.edge_homophily", false]], "edge_ids() (dgl.dglgraph method)": [[48, "dgl.DGLGraph.edge_ids", false]], "edge_ids() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.edge_ids", false]], "edge_label_informativeness() (in module dgl)": [[245, "dgl.edge_label_informativeness", false]], "edge_softmax() (in module dgl.nn.functional)": [[355, "dgl.nn.functional.edge_softmax", false]], "edge_split() (in module dgl.distributed)": [[232, "dgl.distributed.edge_split", false]], "edge_subgraph() (dgl.dglgraph method)": [[49, "dgl.DGLGraph.edge_subgraph", false]], "edge_subgraph() (in module dgl)": [[246, "dgl.edge_subgraph", false]], "edge_type_subgraph() (dgl.dglgraph method)": [[50, "dgl.DGLGraph.edge_type_subgraph", false]], "edge_type_subgraph() (in module dgl)": [[247, "dgl.edge_type_subgraph", false]], "edge_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_type_to_id", false]], "edgeconv (class in dgl.nn.mxnet.conv)": [[363, "dgl.nn.mxnet.conv.EdgeConv", false]], "edgeconv (class in dgl.nn.pytorch.conv)": [[402, "dgl.nn.pytorch.conv.EdgeConv", false]], "edgegatconv (class in dgl.nn.pytorch.conv)": [[403, "dgl.nn.pytorch.conv.EdgeGATConv", false]], "edgepredictor (class in dgl.nn.pytorch.link)": [[450, "dgl.nn.pytorch.link.EdgePredictor", false]], "edges (dgl.dglgraph property)": [[51, "dgl.DGLGraph.edges", false]], "edges (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edges", false]], "edges() (dgl.udf.edgebatch method)": [[673, "dgl.udf.EdgeBatch.edges", false]], "edgeweightnorm (class in dgl.nn.pytorch.conv)": [[404, "dgl.nn.pytorch.conv.EdgeWeightNorm", false]], "egatconv (class in dgl.nn.pytorch.conv)": [[400, "dgl.nn.pytorch.conv.EGATConv", false]], "egnnconv (class in dgl.nn.pytorch.conv)": [[401, "dgl.nn.pytorch.conv.EGNNConv", false]], "egtlayer (class in dgl.nn.pytorch.gt)": [[444, "dgl.nn.pytorch.gt.EGTLayer", false]], "eid2localeid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2localeid", false]], "eid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2partid", false]], "end_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.end_time", false]], "etype_str_to_tuple() (in module dgl.graphbolt)": [[320, "dgl.graphbolt.etype_str_to_tuple", false]], "etype_tuple_to_str() (in module dgl.graphbolt)": [[321, "dgl.graphbolt.etype_tuple_to_str", false]], "etypes (dgl.dglgraph property)": [[52, "dgl.DGLGraph.etypes", false]], "etypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.etypes", false]], "exclude_edges() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.exclude_edges", false]], "exclude_seed_edges() (in module dgl.graphbolt)": [[322, "dgl.graphbolt.exclude_seed_edges", false]], "expand_indptr() (in module dgl.graphbolt)": [[323, "dgl.graphbolt.expand_indptr", false]], "explain_graph() (dgl.nn.pytorch.explain.gnnexplainer method)": [[424, "dgl.nn.pytorch.explain.GNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[425, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[426, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[427, "dgl.nn.pytorch.explain.HeteroSubgraphX.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.pgexplainer method)": [[428, "dgl.nn.pytorch.explain.PGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.subgraphx method)": [[429, "dgl.nn.pytorch.explain.SubgraphX.explain_graph", false]], "explain_node() (dgl.nn.pytorch.explain.gnnexplainer method)": [[424, "dgl.nn.pytorch.explain.GNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[425, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[426, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[428, "dgl.nn.pytorch.explain.PGExplainer.explain_node", false]], "extract_archive (class in dgl.data.utils)": [[201, "dgl.data.utils.extract_archive", false]], "fakenewsdataset (class in dgl.data)": [[159, "dgl.data.FakeNewsDataset", false]], "farthest_point_sampler (class in dgl.geometry)": [[6, "dgl.geometry.farthest_point_sampler", false]], "fb15k237dataset (class in dgl.data)": [[157, "dgl.data.FB15k237Dataset", false]], "fb15kdataset (class in dgl.data)": [[158, "dgl.data.FB15kDataset", false]], "feat_size (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.feat_size", false]], "featmask (class in dgl.transforms)": [[654, "dgl.transforms.FeatMask", false]], "feature (class in dgl.graphbolt)": [[294, "dgl.graphbolt.Feature", false]], "feature (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature", false]], "feature (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.feature", false]], "feature (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.feature", false]], "feature (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.feature", false]], "feature_name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature_name", false]], "featurefetcher (class in dgl.graphbolt)": [[295, "dgl.graphbolt.FeatureFetcher", false]], "features (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.features", false]], "featurestore (class in dgl.graphbolt)": [[296, "dgl.graphbolt.FeatureStore", false]], "filter_edges() (dgl.dglgraph method)": [[53, "dgl.DGLGraph.filter_edges", false]], "filter_nodes() (dgl.dglgraph method)": [[54, "dgl.DGLGraph.filter_nodes", false]], "find_edges() (dgl.dglgraph method)": [[55, "dgl.DGLGraph.find_edges", false]], "find_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.find_edges", false]], "find_edges() (in module dgl.distributed)": [[233, "dgl.distributed.find_edges", false]], "flickrdataset (class in dgl.data)": [[160, "dgl.data.FlickrDataset", false]], "float() (dgl.sparse.sparsematrix method)": [[585, "dgl.sparse.SparseMatrix.float", false]], "formats() (dgl.dglgraph method)": [[56, "dgl.DGLGraph.formats", false]], "forward() (dgl.nn.pytorch.conv.agnnconv method)": [[387, "dgl.nn.pytorch.conv.AGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.appnpconv method)": [[388, "dgl.nn.pytorch.conv.APPNPConv.forward", false]], "forward() (dgl.nn.pytorch.conv.atomicconv method)": [[389, "dgl.nn.pytorch.conv.AtomicConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cfconv method)": [[390, "dgl.nn.pytorch.conv.CFConv.forward", false]], "forward() (dgl.nn.pytorch.conv.chebconv method)": [[391, "dgl.nn.pytorch.conv.ChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[392, "dgl.nn.pytorch.conv.CuGraphGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[393, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[394, "dgl.nn.pytorch.conv.CuGraphSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densechebconv method)": [[396, "dgl.nn.pytorch.conv.DenseChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densegraphconv method)": [[397, "dgl.nn.pytorch.conv.DenseGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densesageconv method)": [[398, "dgl.nn.pytorch.conv.DenseSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dgnconv method)": [[395, "dgl.nn.pytorch.conv.DGNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dotgatconv method)": [[399, "dgl.nn.pytorch.conv.DotGatConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeconv method)": [[402, "dgl.nn.pytorch.conv.EdgeConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgegatconv method)": [[403, "dgl.nn.pytorch.conv.EdgeGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeweightnorm method)": [[404, "dgl.nn.pytorch.conv.EdgeWeightNorm.forward", false]], "forward() (dgl.nn.pytorch.conv.egatconv method)": [[400, "dgl.nn.pytorch.conv.EGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.egnnconv method)": [[401, "dgl.nn.pytorch.conv.EGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatconv method)": [[405, "dgl.nn.pytorch.conv.GATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgcnconv method)": [[411, "dgl.nn.pytorch.conv.GatedGCNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[412, "dgl.nn.pytorch.conv.GatedGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatv2conv method)": [[406, "dgl.nn.pytorch.conv.GATv2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.gcn2conv method)": [[407, "dgl.nn.pytorch.conv.GCN2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.ginconv method)": [[408, "dgl.nn.pytorch.conv.GINConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gineconv method)": [[409, "dgl.nn.pytorch.conv.GINEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gmmconv method)": [[410, "dgl.nn.pytorch.conv.GMMConv.forward", false]], "forward() (dgl.nn.pytorch.conv.graphconv method)": [[413, "dgl.nn.pytorch.conv.GraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.grouprevres method)": [[414, "dgl.nn.pytorch.conv.GroupRevRes.forward", false]], "forward() (dgl.nn.pytorch.conv.hgtconv method)": [[415, "dgl.nn.pytorch.conv.HGTConv.forward", false]], "forward() (dgl.nn.pytorch.conv.nnconv method)": [[416, "dgl.nn.pytorch.conv.NNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.pnaconv method)": [[417, "dgl.nn.pytorch.conv.PNAConv.forward", false]], "forward() (dgl.nn.pytorch.conv.relgraphconv method)": [[418, "dgl.nn.pytorch.conv.RelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sageconv method)": [[419, "dgl.nn.pytorch.conv.SAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sgconv method)": [[420, "dgl.nn.pytorch.conv.SGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.tagconv method)": [[421, "dgl.nn.pytorch.conv.TAGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsconv method)": [[422, "dgl.nn.pytorch.conv.TWIRLSConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsunfoldingandattention method)": [[423, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.forward", false]], "forward() (dgl.nn.pytorch.deepwalk method)": [[381, "dgl.nn.pytorch.DeepWalk.forward", false]], "forward() (dgl.nn.pytorch.explain.gnnexplainer method)": [[424, "dgl.nn.pytorch.explain.GNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[425, "dgl.nn.pytorch.explain.HeteroGNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[426, "dgl.nn.pytorch.explain.HeteroPGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[427, "dgl.nn.pytorch.explain.HeteroSubgraphX.forward", false]], "forward() (dgl.nn.pytorch.explain.pgexplainer method)": [[428, "dgl.nn.pytorch.explain.PGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.subgraphx method)": [[429, "dgl.nn.pytorch.explain.SubgraphX.forward", false]], "forward() (dgl.nn.pytorch.factory.knngraph method)": [[430, "dgl.nn.pytorch.factory.KNNGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.radiusgraph method)": [[431, "dgl.nn.pytorch.factory.RadiusGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.segmentedknngraph method)": [[432, "dgl.nn.pytorch.factory.SegmentedKNNGraph.forward", false]], "forward() (dgl.nn.pytorch.glob.avgpooling method)": [[433, "dgl.nn.pytorch.glob.AvgPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.globalattentionpooling method)": [[434, "dgl.nn.pytorch.glob.GlobalAttentionPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.maxpooling method)": [[435, "dgl.nn.pytorch.glob.MaxPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.set2set method)": [[436, "dgl.nn.pytorch.glob.Set2Set.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerdecoder method)": [[437, "dgl.nn.pytorch.glob.SetTransformerDecoder.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerencoder method)": [[438, "dgl.nn.pytorch.glob.SetTransformerEncoder.forward", false]], "forward() (dgl.nn.pytorch.glob.sortpooling method)": [[439, "dgl.nn.pytorch.glob.SortPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.sumpooling method)": [[440, "dgl.nn.pytorch.glob.SumPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.weightandsum method)": [[441, "dgl.nn.pytorch.glob.WeightAndSum.forward", false]], "forward() (dgl.nn.pytorch.gt.biasedmha method)": [[442, "dgl.nn.pytorch.gt.BiasedMHA.forward", false]], "forward() (dgl.nn.pytorch.gt.degreeencoder method)": [[443, "dgl.nn.pytorch.gt.DegreeEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.egtlayer method)": [[444, "dgl.nn.pytorch.gt.EGTLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.graphormerlayer method)": [[445, "dgl.nn.pytorch.gt.GraphormerLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.lapposencoder method)": [[446, "dgl.nn.pytorch.gt.LapPosEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.pathencoder method)": [[447, "dgl.nn.pytorch.gt.PathEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder method)": [[448, "dgl.nn.pytorch.gt.SpatialEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder3d method)": [[449, "dgl.nn.pytorch.gt.SpatialEncoder3d.forward", false]], "forward() (dgl.nn.pytorch.heteroembedding method)": [[382, "dgl.nn.pytorch.HeteroEmbedding.forward", false]], "forward() (dgl.nn.pytorch.heterographconv method)": [[383, "dgl.nn.pytorch.HeteroGraphConv.forward", false]], "forward() (dgl.nn.pytorch.heterolinear method)": [[384, "dgl.nn.pytorch.HeteroLinear.forward", false]], "forward() (dgl.nn.pytorch.link.edgepredictor method)": [[450, "dgl.nn.pytorch.link.EdgePredictor.forward", false]], "forward() (dgl.nn.pytorch.link.transe method)": [[451, "dgl.nn.pytorch.link.TransE.forward", false]], "forward() (dgl.nn.pytorch.link.transr method)": [[452, "dgl.nn.pytorch.link.TransR.forward", false]], "forward() (dgl.nn.pytorch.metapath2vec method)": [[385, "dgl.nn.pytorch.MetaPath2Vec.forward", false]], "forward() (dgl.nn.pytorch.typedlinear method)": [[386, "dgl.nn.pytorch.TypedLinear.forward", false]], "forward() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[454, "dgl.nn.pytorch.utils.JumpingKnowledge.forward", false]], "forward() (dgl.nn.pytorch.utils.labelpropagation method)": [[455, "dgl.nn.pytorch.utils.LabelPropagation.forward", false]], "forward() (dgl.nn.pytorch.utils.sequential method)": [[456, "dgl.nn.pytorch.utils.Sequential.forward", false]], "forward() (dgl.nn.pytorch.utils.weightbasis method)": [[457, "dgl.nn.pytorch.utils.WeightBasis.forward", false]], "fraudamazondataset (class in dgl.data)": [[161, "dgl.data.FraudAmazonDataset", false]], "frauddataset (class in dgl.data)": [[162, "dgl.data.FraudDataset", false]], "fraudyelpdataset (class in dgl.data)": [[163, "dgl.data.FraudYelpDataset", false]], "from_coo() (in module dgl.sparse)": [[610, "dgl.sparse.from_coo", false]], "from_csc() (in module dgl.sparse)": [[611, "dgl.sparse.from_csc", false]], "from_csr() (in module dgl.sparse)": [[612, "dgl.sparse.from_csr", false]], "from_cugraph() (in module dgl)": [[248, "dgl.from_cugraph", false]], "from_dglgraph() (in module dgl.graphbolt)": [[324, "dgl.graphbolt.from_dglgraph", false]], "from_networkx() (in module dgl)": [[249, "dgl.from_networkx", false]], "from_scipy() (in module dgl)": [[250, "dgl.from_scipy", false]], "fused_csc_sampling_graph() (in module dgl.graphbolt)": [[325, "dgl.graphbolt.fused_csc_sampling_graph", false]], "fusedcscsamplinggraph (class in dgl.graphbolt)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph", false]], "gatconv (class in dgl.nn.mxnet.conv)": [[364, "dgl.nn.mxnet.conv.GATConv", false]], "gatconv (class in dgl.nn.pytorch.conv)": [[405, "dgl.nn.pytorch.conv.GATConv", false]], "gatconv (class in dgl.nn.tensorflow.conv)": [[460, "dgl.nn.tensorflow.conv.GATConv", false]], "gatedgcnconv (class in dgl.nn.pytorch.conv)": [[411, "dgl.nn.pytorch.conv.GatedGCNConv", false]], "gatedgraphconv (class in dgl.nn.mxnet.conv)": [[367, "dgl.nn.mxnet.conv.GatedGraphConv", false]], "gatedgraphconv (class in dgl.nn.pytorch.conv)": [[412, "dgl.nn.pytorch.conv.GatedGraphConv", false]], "gather_mm() (in module dgl.ops)": [[497, "dgl.ops.gather_mm", false]], "gatv2conv (class in dgl.nn.pytorch.conv)": [[406, "dgl.nn.pytorch.conv.GATv2Conv", false]], "gcn2conv (class in dgl.nn.pytorch.conv)": [[407, "dgl.nn.pytorch.conv.GCN2Conv", false]], "gcnnorm (class in dgl.transforms)": [[655, "dgl.transforms.GCNNorm", false]], "gdc (class in dgl.transforms)": [[656, "dgl.transforms.GDC", false]], "gdeltdataset (class in dgl.data)": [[164, "dgl.data.GDELTDataset", false]], "get_download_dir (class in dgl.data.utils)": [[202, "dgl.data.utils.get_download_dir", false]], "get_edge_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_edge_partition_policy", false]], "get_etype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_etype_id", false]], "get_node_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_node_partition_policy", false]], "get_ntype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_ntype_id", false]], "get_part_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_part_size", false]], "get_partition_book() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_partition_book", false]], "get_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_size", false]], "ginconv (class in dgl.nn.mxnet.conv)": [[365, "dgl.nn.mxnet.conv.GINConv", false]], "ginconv (class in dgl.nn.pytorch.conv)": [[408, "dgl.nn.pytorch.conv.GINConv", false]], "ginconv (class in dgl.nn.tensorflow.conv)": [[461, "dgl.nn.tensorflow.conv.GINConv", false]], "gindataset (class in dgl.data)": [[165, "dgl.data.GINDataset", false]], "gineconv (class in dgl.nn.pytorch.conv)": [[409, "dgl.nn.pytorch.conv.GINEConv", false]], "global_uniform_negative_sampling() (in module dgl.sampling)": [[557, "dgl.sampling.global_uniform_negative_sampling", false]], "globalattentionpooling (class in dgl.nn.mxnet.glob)": [[375, "dgl.nn.mxnet.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.pytorch.glob)": [[434, "dgl.nn.pytorch.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.tensorflow.glob)": [[467, "dgl.nn.tensorflow.glob.GlobalAttentionPooling", false]], "globaluniform (class in dgl.dataloading.negative_sampler)": [[226, "dgl.dataloading.negative_sampler.GlobalUniform", false]], "gmmconv (class in dgl.nn.mxnet.conv)": [[366, "dgl.nn.mxnet.conv.GMMConv", false]], "gmmconv (class in dgl.nn.pytorch.conv)": [[410, "dgl.nn.pytorch.conv.GMMConv", false]], "gnnexplainer (class in dgl.nn.pytorch.explain)": [[424, "dgl.nn.pytorch.explain.GNNExplainer", false]], "gpucachedfeature (class in dgl.graphbolt)": [[298, "dgl.graphbolt.GPUCachedFeature", false]], "graph (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.graph", false]], "graph (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.graph", false]], "graph (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.graph", false]], "graph (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.graph", false]], "graph (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.graph", false]], "graph() (in module dgl)": [[287, "dgl.graph", false]], "graphconv (class in dgl.nn.mxnet.conv)": [[368, "dgl.nn.mxnet.conv.GraphConv", false]], "graphconv (class in dgl.nn.pytorch.conv)": [[413, "dgl.nn.pytorch.conv.GraphConv", false]], "graphconv (class in dgl.nn.tensorflow.conv)": [[462, "dgl.nn.tensorflow.conv.GraphConv", false]], "graphdataloader (class in dgl.dataloading)": [[213, "dgl.dataloading.GraphDataLoader", false]], "graphormerlayer (class in dgl.nn.pytorch.gt)": [[445, "dgl.nn.pytorch.gt.GraphormerLayer", false]], "graphpartitionbook (class in dgl.distributed)": [[4, "dgl.distributed.GraphPartitionBook", false]], "graphs (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.graphs", false]], "graphs (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.graphs", false]], "graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.graphs", false]], "grouprevres (class in dgl.nn.pytorch.conv)": [[414, "dgl.nn.pytorch.conv.GroupRevRes", false]], "gsddmm() (in module dgl.ops)": [[498, "dgl.ops.gsddmm", false]], "gspmm() (in module dgl.ops)": [[499, "dgl.ops.gspmm", false]], "has_duplicate() (dgl.sparse.sparsematrix method)": [[586, "dgl.sparse.SparseMatrix.has_duplicate", false]], "has_edges_between() (dgl.dglgraph method)": [[57, "dgl.DGLGraph.has_edges_between", false]], "has_nodes() (dgl.dglgraph method)": [[58, "dgl.DGLGraph.has_nodes", false]], "hash (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.hash", false]], "heatkernel (class in dgl.transforms)": [[657, "dgl.transforms.HeatKernel", false]], "heteroembedding (class in dgl.nn.pytorch)": [[382, "dgl.nn.pytorch.HeteroEmbedding", false]], "heterognnexplainer (class in dgl.nn.pytorch.explain)": [[425, "dgl.nn.pytorch.explain.HeteroGNNExplainer", false]], "heterograph() (in module dgl)": [[332, "dgl.heterograph", false]], "heterographconv (class in dgl.nn.mxnet)": [[356, "dgl.nn.mxnet.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.pytorch)": [[383, "dgl.nn.pytorch.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.tensorflow.glob)": [[468, "dgl.nn.tensorflow.glob.HeteroGraphConv", false]], "heteroitemset (class in dgl.graphbolt)": [[299, "dgl.graphbolt.HeteroItemSet", false]], "heterolinear (class in dgl.nn.pytorch)": [[384, "dgl.nn.pytorch.HeteroLinear", false]], "heteropgexplainer (class in dgl.nn.pytorch.explain)": [[426, "dgl.nn.pytorch.explain.HeteroPGExplainer", false]], "heterosubgraphx (class in dgl.nn.pytorch.explain)": [[427, "dgl.nn.pytorch.explain.HeteroSubgraphX", false]], "hgtconv (class in dgl.nn.pytorch.conv)": [[415, "dgl.nn.pytorch.conv.HGTConv", false]], "icews18dataset (class in dgl.data)": [[166, "dgl.data.ICEWS18Dataset", false]], "identity() (in module dgl.sparse)": [[613, "dgl.sparse.identity", false]], "idtype (dgl.dglgraph property)": [[59, "dgl.DGLGraph.idtype", false]], "idtype (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.idtype", false]], "in_degrees() (dgl.dglgraph method)": [[60, "dgl.DGLGraph.in_degrees", false]], "in_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.in_degrees", false]], "in_edges() (dgl.dglgraph method)": [[61, "dgl.DGLGraph.in_edges", false]], "in_subgraph() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.in_subgraph", false]], "in_subgraph() (in module dgl)": [[333, "dgl.in_subgraph", false]], "in_subgraph() (in module dgl.distributed)": [[234, "dgl.distributed.in_subgraph", false]], "inc() (dgl.dglgraph method)": [[62, "dgl.DGLGraph.inc", false]], "incidence_matrix() (dgl.dglgraph method)": [[63, "dgl.DGLGraph.incidence_matrix", false]], "index_select() (in module dgl.graphbolt)": [[326, "dgl.graphbolt.index_select", false]], "indexes (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.indexes", false]], "indices (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.indices", false]], "indices() (dgl.sparse.sparsematrix method)": [[587, "dgl.sparse.SparseMatrix.indices", false]], "initialize() (in module dgl.distributed)": [[235, "dgl.distributed.initialize", false]], "input_nodes (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.input_nodes", false]], "insubgraphsampler (class in dgl.graphbolt)": [[300, "dgl.graphbolt.InSubgraphSampler", false]], "int() (dgl.dglgraph method)": [[64, "dgl.DGLGraph.int", false]], "int() (dgl.sparse.sparsematrix method)": [[588, "dgl.sparse.SparseMatrix.int", false]], "is_homogeneous (dgl.dglgraph property)": [[65, "dgl.DGLGraph.is_homogeneous", false]], "is_libxsmm_enabled() (in module dgl)": [[334, "dgl.is_libxsmm_enabled", false]], "is_multigraph (dgl.dglgraph property)": [[66, "dgl.DGLGraph.is_multigraph", false]], "is_pinned() (dgl.dglgraph method)": [[67, "dgl.DGLGraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeature method)": [[315, "dgl.graphbolt.TorchBasedFeature.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeaturestore method)": [[316, "dgl.graphbolt.TorchBasedFeatureStore.is_pinned", false]], "is_temporal (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.is_temporal", false]], "is_temporal (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.is_temporal", false]], "is_temporal (dgl.data.icews18dataset attribute)": [[166, "dgl.data.ICEWS18Dataset.is_temporal", false]], "is_unibipartite (dgl.dglgraph property)": [[68, "dgl.DGLGraph.is_unibipartite", false]], "isin() (in module dgl.graphbolt)": [[327, "dgl.graphbolt.isin", false]], "itemsampler (class in dgl.graphbolt)": [[301, "dgl.graphbolt.ItemSampler", false]], "itemset (class in dgl.graphbolt)": [[302, "dgl.graphbolt.ItemSet", false]], "jumpingknowledge (class in dgl.nn.pytorch.utils)": [[454, "dgl.nn.pytorch.utils.JumpingKnowledge", false]], "karateclubdataset (class in dgl.data)": [[167, "dgl.data.KarateClubDataset", false]], "keys() (dgl.graphbolt.basicfeaturestore method)": [[288, "dgl.graphbolt.BasicFeatureStore.keys", false]], "keys() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.keys", false]], "khop_adj() (in module dgl)": [[335, "dgl.khop_adj", false]], "khop_graph() (in module dgl)": [[336, "dgl.khop_graph", false]], "khop_in_subgraph() (in module dgl)": [[337, "dgl.khop_in_subgraph", false]], "khop_out_subgraph() (in module dgl)": [[338, "dgl.khop_out_subgraph", false]], "khopgraph (class in dgl.transforms)": [[658, "dgl.transforms.KHopGraph", false]], "knn_graph() (in module dgl)": [[339, "dgl.knn_graph", false]], "knngraph (class in dgl.nn.pytorch.factory)": [[430, "dgl.nn.pytorch.factory.KNNGraph", false]], "labelpropagation (class in dgl.nn.pytorch.utils)": [[455, "dgl.nn.pytorch.utils.LabelPropagation", false]], "labels (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.labels", false]], "labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.labels", false]], "labels (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.labels", false]], "laborsampler (class in dgl.dataloading)": [[214, "dgl.dataloading.LaborSampler", false]], "lap_pe() (in module dgl)": [[340, "dgl.lap_pe", false]], "laplacian_lambda_max() (in module dgl)": [[341, "dgl.laplacian_lambda_max", false]], "lappe (class in dgl.transforms)": [[659, "dgl.transforms.LapPE", false]], "lapposencoder (class in dgl.nn.pytorch.gt)": [[446, "dgl.nn.pytorch.gt.LapPosEncoder", false]], "layerneighborsampler (class in dgl.graphbolt)": [[303, "dgl.graphbolt.LayerNeighborSampler", false]], "lazyfeature (class in dgl.dataloading.base)": [[221, "dgl.dataloading.base.LazyFeature", false]], "legacydataset (class in dgl.graphbolt)": [[304, "dgl.graphbolt.LegacyDataset", false]], "legacytudataset (class in dgl.data)": [[168, "dgl.data.LegacyTUDataset", false]], "lin (dgl.nn.pytorch.conv.tagconv attribute)": [[421, "dgl.nn.pytorch.conv.TAGConv.lin", false]], "line_graph() (dgl.dglgraph method)": [[69, "dgl.DGLGraph.line_graph", false]], "line_graph() (in module dgl)": [[342, "dgl.line_graph", false]], "linegraph (class in dgl.transforms)": [[660, "dgl.transforms.LineGraph", false]], "linkx_homophily() (in module dgl)": [[343, "dgl.linkx_homophily", false]], "load() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.load", false]], "load() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.load", false]], "load() (dgl.graphbolt.ondiskdataset method)": [[309, "dgl.graphbolt.OnDiskDataset.load", false]], "load_from_shared_memory() (in module dgl.graphbolt)": [[328, "dgl.graphbolt.load_from_shared_memory", false]], "load_graphs() (in module dgl)": [[344, "dgl.load_graphs", false]], "load_info (class in dgl.data.utils)": [[203, "dgl.data.utils.load_info", false]], "load_labels (class in dgl.data.utils)": [[204, "dgl.data.utils.load_labels", false]], "load_partition() (in module dgl.distributed)": [[236, "dgl.distributed.load_partition", false]], "load_partition_book() (in module dgl.distributed)": [[237, "dgl.distributed.load_partition_book", false]], "load_partition_feats() (in module dgl.distributed)": [[238, "dgl.distributed.load_partition_feats", false]], "local_partition (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.local_partition", false]], "local_scope() (dgl.dglgraph method)": [[70, "dgl.DGLGraph.local_scope", false]], "local_to_global_nid (dgl.nn.pytorch.metapath2vec attribute)": [[385, "dgl.nn.pytorch.MetaPath2Vec.local_to_global_nid", false]], "long() (dgl.dglgraph method)": [[71, "dgl.DGLGraph.long", false]], "long() (dgl.sparse.sparsematrix method)": [[589, "dgl.sparse.SparseMatrix.long", false]], "mailbox (dgl.udf.nodebatch property)": [[677, "dgl.udf.NodeBatch.mailbox", false]], "map_to_homo_eid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_eid", false]], "map_to_homo_nid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_nid", false]], "map_to_per_etype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_etype", false]], "map_to_per_ntype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_ntype", false]], "mask_nodes_by_property (class in dgl.data.utils)": [[205, "dgl.data.utils.mask_nodes_by_property", false]], "matmul() (in module dgl.sparse)": [[614, "dgl.sparse.matmul", false]], "max() (in module dgl.function)": [[263, "dgl.function.max", false]], "max_edges() (in module dgl)": [[345, "dgl.max_edges", false]], "max_nodes() (in module dgl)": [[346, "dgl.max_nodes", false]], "max_num_node (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.max_num_node", false]], "max_num_node (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.max_num_node", false]], "max_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.max_num_v", false]], "maxpooling (class in dgl.nn.mxnet.glob)": [[376, "dgl.nn.mxnet.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.pytorch.glob)": [[435, "dgl.nn.pytorch.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.tensorflow.glob)": [[469, "dgl.nn.tensorflow.glob.MaxPooling", false]], "mean() (in module dgl.function)": [[264, "dgl.function.mean", false]], "mean_edges() (in module dgl)": [[347, "dgl.mean_edges", false]], "mean_nodes() (in module dgl)": [[348, "dgl.mean_nodes", false]], "merge() (in module dgl)": [[349, "dgl.merge", false]], "metadata (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.metadata", false]], "metadata() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.metadata", false]], "metadata() (dgl.graphbolt.basicfeaturestore method)": [[288, "dgl.graphbolt.BasicFeatureStore.metadata", false]], "metadata() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.metadata", false]], "metadata() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.metadata", false]], "metadata() (dgl.graphbolt.torchbasedfeature method)": [[315, "dgl.graphbolt.TorchBasedFeature.metadata", false]], "metagraph() (dgl.dglgraph method)": [[72, "dgl.DGLGraph.metagraph", false]], "metapath2vec (class in dgl.nn.pytorch)": [[385, "dgl.nn.pytorch.MetaPath2Vec", false]], "metapath_reachable_graph() (in module dgl)": [[350, "dgl.metapath_reachable_graph", false]], "metis_partition() (in module dgl)": [[351, "dgl.metis_partition", false]], "metis_partition_assignment() (in module dgl)": [[352, "dgl.metis_partition_assignment", false]], "min() (in module dgl.function)": [[265, "dgl.function.min", false]], "min_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.min_num_v", false]], "minesweeperdataset (class in dgl.data)": [[171, "dgl.data.MinesweeperDataset", false]], "minibatch (class in dgl.graphbolt)": [[305, "dgl.graphbolt.MiniBatch", false]], "minibatchtransformer (class in dgl.graphbolt)": [[306, "dgl.graphbolt.MiniBatchTransformer", false]], "minigcdataset (class in dgl.data)": [[172, "dgl.data.MiniGCDataset", false]], "mnistsuperpixeldataset (class in dgl.data)": [[169, "dgl.data.MNISTSuperPixelDataset", false]], "mods (dgl.nn.pytorch.heterographconv attribute)": [[383, "dgl.nn.pytorch.HeteroGraphConv.mods", false]], "module": [[0, "module-dgl", false], [2, "module-dgl.data", false], [6, "module-dgl.geometry", false], [10, "module-dgl.optim", false], [11, "module-dgl.sampling", false], [18, "module-dgl.nn.functional", false], [19, "module-dgl.transforms", false]], "movielensdataset (class in dgl.data)": [[173, "dgl.data.MovieLensDataset", false]], "mul() (in module dgl.sparse)": [[615, "dgl.sparse.mul", false]], "multi_update_all() (dgl.dglgraph method)": [[73, "dgl.DGLGraph.multi_update_all", false]], "multilayerfullneighborsampler (class in dgl.dataloading)": [[215, "dgl.dataloading.MultiLayerFullNeighborSampler", false]], "mutagdataset (class in dgl.data)": [[170, "dgl.data.MUTAGDataset", false]], "name (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.name", false]], "name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.name", false]], "name (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.name", false]], "names (dgl.graphbolt.heteroitemset property)": [[299, "dgl.graphbolt.HeteroItemSet.names", false]], "names (dgl.graphbolt.itemset property)": [[302, "dgl.graphbolt.ItemSet.names", false]], "ndata (dgl.dglgraph property)": [[74, "dgl.DGLGraph.ndata", false]], "ndata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ndata", false]], "neg() (dgl.sparse.sparsematrix method)": [[590, "dgl.sparse.SparseMatrix.neg", false]], "negativesampler (class in dgl.graphbolt)": [[307, "dgl.graphbolt.NegativeSampler", false]], "neighbor_matching (class in dgl.geometry)": [[6, "dgl.geometry.neighbor_matching", false]], "neighborsampler (class in dgl.dataloading)": [[216, "dgl.dataloading.NeighborSampler", false]], "neighborsampler (class in dgl.graphbolt)": [[308, "dgl.graphbolt.NeighborSampler", false]], "nid2localnid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2localnid", false]], "nid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2partid", false]], "nnconv (class in dgl.nn.mxnet.conv)": [[369, "dgl.nn.mxnet.conv.NNConv", false]], "nnconv (class in dgl.nn.pytorch.conv)": [[416, "dgl.nn.pytorch.conv.NNConv", false]], "nnz (dgl.sparse.sparsematrix property)": [[591, "dgl.sparse.SparseMatrix.nnz", false]], "node2vec_random_walk() (in module dgl.sampling)": [[558, "dgl.sampling.node2vec_random_walk", false]], "node_attr_schemes() (dgl.dglgraph method)": [[75, "dgl.DGLGraph.node_attr_schemes", false]], "node_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.node_attr_schemes", false]], "node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_attribute", false]], "node_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_attributes", false]], "node_embed (dgl.nn.pytorch.deepwalk attribute)": [[381, "dgl.nn.pytorch.DeepWalk.node_embed", false]], "node_embed (dgl.nn.pytorch.metapath2vec attribute)": [[385, "dgl.nn.pytorch.MetaPath2Vec.node_embed", false]], "node_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.node_feat_size", false]], "node_features (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.node_features", false]], "node_homophily() (in module dgl)": [[472, "dgl.node_homophily", false]], "node_ids() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.node_ids", false]], "node_label_informativeness() (in module dgl)": [[473, "dgl.node_label_informativeness", false]], "node_split() (in module dgl.distributed)": [[239, "dgl.distributed.node_split", false]], "node_subgraph() (in module dgl)": [[474, "dgl.node_subgraph", false]], "node_type_offset (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_offset", false]], "node_type_subgraph() (dgl.dglgraph method)": [[76, "dgl.DGLGraph.node_type_subgraph", false]], "node_type_subgraph() (in module dgl)": [[475, "dgl.node_type_subgraph", false]], "node_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_to_id", false]], "nodeembedding (class in dgl.nn.pytorch.sparse_emb)": [[453, "dgl.nn.pytorch.sparse_emb.NodeEmbedding", false]], "nodes (dgl.dglgraph property)": [[77, "dgl.DGLGraph.nodes", false]], "nodes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.nodes", false]], "nodes() (dgl.udf.nodebatch method)": [[678, "dgl.udf.NodeBatch.nodes", false]], "nodeshuffle (class in dgl.transforms)": [[661, "dgl.transforms.NodeShuffle", false]], "norm_by_dst() (in module dgl)": [[476, "dgl.norm_by_dst", false]], "ntypes (dgl.dglgraph property)": [[78, "dgl.DGLGraph.ntypes", false]], "ntypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ntypes", false]], "num_atom_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_atom_types", false]], "num_bond_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_bond_types", false]], "num_classes (dgl.data.actordataset attribute)": [[134, "dgl.data.ActorDataset.num_classes", false]], "num_classes (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuycomputerdataset attribute)": [[135, "dgl.data.AmazonCoBuyComputerDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuyphotodataset attribute)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.num_classes", false]], "num_classes (dgl.data.amazonratingsdataset attribute)": [[137, "dgl.data.AmazonRatingsDataset.num_classes", false]], "num_classes (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.num_classes", false]], "num_classes (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_classes", false]], "num_classes (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.num_classes", false]], "num_classes (dgl.data.ba2motifdataset attribute)": [[141, "dgl.data.BA2MotifDataset.num_classes", false]], "num_classes (dgl.data.bacommunitydataset attribute)": [[142, "dgl.data.BACommunityDataset.num_classes", false]], "num_classes (dgl.data.bashapedataset attribute)": [[143, "dgl.data.BAShapeDataset.num_classes", false]], "num_classes (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.num_classes", false]], "num_classes (dgl.data.chameleondataset attribute)": [[149, "dgl.data.ChameleonDataset.num_classes", false]], "num_classes (dgl.data.citeseergraphdataset attribute)": [[150, "dgl.data.CiteseerGraphDataset.num_classes", false]], "num_classes (dgl.data.clusterdataset attribute)": [[147, "dgl.data.CLUSTERDataset.num_classes", false]], "num_classes (dgl.data.coauthorcsdataset attribute)": [[151, "dgl.data.CoauthorCSDataset.num_classes", false]], "num_classes (dgl.data.coauthorphysicsdataset attribute)": [[152, "dgl.data.CoauthorPhysicsDataset.num_classes", false]], "num_classes (dgl.data.corafulldataset attribute)": [[153, "dgl.data.CoraFullDataset.num_classes", false]], "num_classes (dgl.data.coragraphdataset attribute)": [[154, "dgl.data.CoraGraphDataset.num_classes", false]], "num_classes (dgl.data.cornelldataset attribute)": [[155, "dgl.data.CornellDataset.num_classes", false]], "num_classes (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_classes", false]], "num_classes (dgl.data.flickrdataset attribute)": [[160, "dgl.data.FlickrDataset.num_classes", false]], "num_classes (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.num_classes", false]], "num_classes (dgl.data.gindataset attribute)": [[165, "dgl.data.GINDataset.num_classes", false]], "num_classes (dgl.data.karateclubdataset attribute)": [[167, "dgl.data.KarateClubDataset.num_classes", false]], "num_classes (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_classes", false]], "num_classes (dgl.data.minesweeperdataset attribute)": [[171, "dgl.data.MinesweeperDataset.num_classes", false]], "num_classes (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_classes", false]], "num_classes (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.num_classes", false]], "num_classes (dgl.data.patterndataset attribute)": [[174, "dgl.data.PATTERNDataset.num_classes", false]], "num_classes (dgl.data.pubmedgraphdataset attribute)": [[176, "dgl.data.PubmedGraphDataset.num_classes", false]], "num_classes (dgl.data.questionsdataset attribute)": [[180, "dgl.data.QuestionsDataset.num_classes", false]], "num_classes (dgl.data.redditdataset attribute)": [[181, "dgl.data.RedditDataset.num_classes", false]], "num_classes (dgl.data.romanempiredataset attribute)": [[182, "dgl.data.RomanEmpireDataset.num_classes", false]], "num_classes (dgl.data.squirreldataset attribute)": [[185, "dgl.data.SquirrelDataset.num_classes", false]], "num_classes (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.num_classes", false]], "num_classes (dgl.data.texasdataset attribute)": [[187, "dgl.data.TexasDataset.num_classes", false]], "num_classes (dgl.data.tolokersdataset attribute)": [[188, "dgl.data.TolokersDataset.num_classes", false]], "num_classes (dgl.data.treecycledataset attribute)": [[189, "dgl.data.TreeCycleDataset.num_classes", false]], "num_classes (dgl.data.treegriddataset attribute)": [[190, "dgl.data.TreeGridDataset.num_classes", false]], "num_classes (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_classes", false]], "num_classes (dgl.data.wikicsdataset attribute)": [[192, "dgl.data.WikiCSDataset.num_classes", false]], "num_classes (dgl.data.wisconsindataset attribute)": [[193, "dgl.data.WisconsinDataset.num_classes", false]], "num_classes (dgl.data.yelpdataset attribute)": [[194, "dgl.data.YelpDataset.num_classes", false]], "num_dst_nodes() (dgl.dglgraph method)": [[79, "dgl.DGLGraph.num_dst_nodes", false]], "num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.num_edges", false]], "num_edges (dgl.graphbolt.samplinggraph property)": [[312, "dgl.graphbolt.SamplingGraph.num_edges", false]], "num_edges() (dgl.dglgraph method)": [[80, "dgl.DGLGraph.num_edges", false]], "num_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_edges", false]], "num_graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_graphs", false]], "num_graphs (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_graphs", false]], "num_items (dgl.graphbolt.itemset property)": [[302, "dgl.graphbolt.ItemSet.num_items", false]], "num_labels (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_labels", false]], "num_labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.num_labels", false]], "num_labels (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_labels", false]], "num_labels (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_labels", false]], "num_labels (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_labels", false]], "num_labels (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_labels", false]], "num_layers() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.num_layers", false]], "num_nodes (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_nodes", false]], "num_nodes (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_nodes", false]], "num_nodes (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_nodes", false]], "num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.num_nodes", false]], "num_nodes (dgl.graphbolt.samplinggraph property)": [[312, "dgl.graphbolt.SamplingGraph.num_nodes", false]], "num_nodes() (dgl.dglgraph method)": [[81, "dgl.DGLGraph.num_nodes", false]], "num_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_nodes", false]], "num_partitions() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.num_partitions", false]], "num_rels (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_rels", false]], "num_rels (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_rels", false]], "num_rels (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_rels", false]], "num_src_nodes() (dgl.dglgraph method)": [[82, "dgl.DGLGraph.num_src_nodes", false]], "num_tasks (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_tasks", false]], "num_tasks (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_tasks", false]], "num_tasks (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_tasks", false]], "num_tasks (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_tasks", false]], "number_of_dst_nodes() (dgl.dglgraph method)": [[83, "dgl.DGLGraph.number_of_dst_nodes", false]], "number_of_edges() (dgl.dglgraph method)": [[84, "dgl.DGLGraph.number_of_edges", false]], "number_of_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_edges", false]], "number_of_nodes() (dgl.dglgraph method)": [[85, "dgl.DGLGraph.number_of_nodes", false]], "number_of_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_nodes", false]], "number_of_src_nodes() (dgl.dglgraph method)": [[86, "dgl.DGLGraph.number_of_src_nodes", false]], "ondiskdataset (class in dgl.graphbolt)": [[309, "dgl.graphbolt.OnDiskDataset", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_column_node_ids", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_column_node_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_edge_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_edge_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_row_node_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_row_node_ids", false]], "out_degrees() (dgl.dglgraph method)": [[87, "dgl.DGLGraph.out_degrees", false]], "out_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.out_degrees", false]], "out_edges() (dgl.dglgraph method)": [[88, "dgl.DGLGraph.out_edges", false]], "out_subgraph() (in module dgl)": [[538, "dgl.out_subgraph", false]], "pack_traces() (in module dgl.sampling)": [[559, "dgl.sampling.pack_traces", false]], "part_id (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.part_id", false]], "part_policy (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.part_policy", false]], "partid (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.partid", false]], "partid2eids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2eids", false]], "partid2nids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2nids", false]], "partition_book (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.partition_book", false]], "partition_graph() (in module dgl.distributed)": [[240, "dgl.distributed.partition_graph", false]], "partition_graph_with_halo() (in module dgl)": [[539, "dgl.partition_graph_with_halo", false]], "partitionpolicy (class in dgl.distributed)": [[4, "dgl.distributed.PartitionPolicy", false]], "pathencoder (class in dgl.nn.pytorch.gt)": [[447, "dgl.nn.pytorch.gt.PathEncoder", false]], "patterndataset (class in dgl.data)": [[174, "dgl.data.PATTERNDataset", false]], "persourceuniform (class in dgl.dataloading.negative_sampler)": [[227, "dgl.dataloading.negative_sampler.PerSourceUniform", false]], "pgexplainer (class in dgl.nn.pytorch.explain)": [[428, "dgl.nn.pytorch.explain.PGExplainer", false]], "pin_memory_() (dgl.dglgraph method)": [[89, "dgl.DGLGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeature method)": [[315, "dgl.graphbolt.TorchBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeaturestore method)": [[316, "dgl.graphbolt.TorchBasedFeatureStore.pin_memory_", false]], "pinsagesampler (class in dgl.sampling)": [[556, "dgl.sampling.PinSAGESampler", false]], "pnaconv (class in dgl.nn.pytorch.conv)": [[417, "dgl.nn.pytorch.conv.PNAConv", false]], "policy_str (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.policy_str", false]], "power() (in module dgl.sparse)": [[616, "dgl.sparse.power", false]], "ppidataset (class in dgl.data)": [[175, "dgl.data.PPIDataset", false]], "ppr (class in dgl.transforms)": [[662, "dgl.transforms.PPR", false]], "predecessors() (dgl.dglgraph method)": [[90, "dgl.DGLGraph.predecessors", false]], "predict_category (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.predict_category", false]], "predict_category (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.predict_category", false]], "predict_category (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.predict_category", false]], "predict_category (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.predict_category", false]], "pretrained_emb (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.pretrained_emb", false]], "prop_edges() (dgl.dglgraph method)": [[91, "dgl.DGLGraph.prop_edges", false]], "prop_edges() (in module dgl)": [[540, "dgl.prop_edges", false]], "prop_edges_dfs() (in module dgl)": [[541, "dgl.prop_edges_dfs", false]], "prop_nodes() (dgl.dglgraph method)": [[92, "dgl.DGLGraph.prop_nodes", false]], "prop_nodes() (in module dgl)": [[542, "dgl.prop_nodes", false]], "prop_nodes_bfs() (in module dgl)": [[543, "dgl.prop_nodes_bfs", false]], "prop_nodes_topo() (in module dgl)": [[544, "dgl.prop_nodes_topo", false]], "pubmedgraphdataset (class in dgl.data)": [[176, "dgl.data.PubmedGraphDataset", false]], "pull() (dgl.dglgraph method)": [[93, "dgl.DGLGraph.pull", false]], "push() (dgl.dglgraph method)": [[94, "dgl.DGLGraph.push", false]], "qm7bdataset (class in dgl.data)": [[177, "dgl.data.QM7bDataset", false]], "qm9dataset (class in dgl.data)": [[178, "dgl.data.QM9Dataset", false]], "qm9edgedataset (class in dgl.data)": [[179, "dgl.data.QM9EdgeDataset", false]], "questionsdataset (class in dgl.data)": [[180, "dgl.data.QuestionsDataset", false]], "radius_graph() (in module dgl)": [[545, "dgl.radius_graph", false]], "radiusgraph (class in dgl.nn.pytorch.factory)": [[431, "dgl.nn.pytorch.factory.RadiusGraph", false]], "rand_bipartite() (in module dgl)": [[546, "dgl.rand_bipartite", false]], "rand_graph() (in module dgl)": [[547, "dgl.rand_graph", false]], "random_walk() (in module dgl.sampling)": [[560, "dgl.sampling.random_walk", false]], "random_walk_pe() (in module dgl)": [[548, "dgl.random_walk_pe", false]], "randomwalkpe (class in dgl.transforms)": [[663, "dgl.transforms.RandomWalkPE", false]], "rank() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.rank", false]], "raw_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_dir", false]], "raw_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_path", false]], "read() (dgl.graphbolt.basicfeaturestore method)": [[288, "dgl.graphbolt.BasicFeatureStore.read", false]], "read() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.read", false]], "read() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.read", false]], "read() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.read", false]], "read() (dgl.graphbolt.torchbasedfeature method)": [[315, "dgl.graphbolt.TorchBasedFeature.read", false]], "readout_edges() (in module dgl)": [[549, "dgl.readout_edges", false]], "readout_nodes() (in module dgl)": [[550, "dgl.readout_nodes", false]], "redditdataset (class in dgl.data)": [[181, "dgl.data.RedditDataset", false]], "reduce() (dgl.sparse.sparsematrix method)": [[592, "dgl.sparse.SparseMatrix.reduce", false]], "rel_emb (dgl.nn.pytorch.link.transe attribute)": [[451, "dgl.nn.pytorch.link.TransE.rel_emb", false]], "rel_emb (dgl.nn.pytorch.link.transr attribute)": [[452, "dgl.nn.pytorch.link.TransR.rel_emb", false]], "rel_project (dgl.nn.pytorch.link.transr attribute)": [[452, "dgl.nn.pytorch.link.TransR.rel_project", false]], "relgraphconv (class in dgl.nn.mxnet.conv)": [[370, "dgl.nn.mxnet.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.pytorch.conv)": [[418, "dgl.nn.pytorch.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.tensorflow.conv)": [[463, "dgl.nn.tensorflow.conv.RelGraphConv", false]], "remove_edges() (dgl.dglgraph method)": [[95, "dgl.DGLGraph.remove_edges", false]], "remove_edges() (in module dgl)": [[551, "dgl.remove_edges", false]], "remove_nodes() (dgl.dglgraph method)": [[96, "dgl.DGLGraph.remove_nodes", false]], "remove_nodes() (in module dgl)": [[552, "dgl.remove_nodes", false]], "remove_self_loop() (dgl.dglgraph method)": [[97, "dgl.DGLGraph.remove_self_loop", false]], "remove_self_loop() (in module dgl)": [[553, "dgl.remove_self_loop", false]], "removeselfloop (class in dgl.transforms)": [[664, "dgl.transforms.RemoveSelfLoop", false]], "reorder_graph() (dgl.dglgraph method)": [[98, "dgl.DGLGraph.reorder_graph", false]], "reorder_graph() (in module dgl)": [[554, "dgl.reorder_graph", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[392, "dgl.nn.pytorch.conv.CuGraphGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[393, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[394, "dgl.nn.pytorch.conv.CuGraphSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densechebconv method)": [[396, "dgl.nn.pytorch.conv.DenseChebConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densegraphconv method)": [[397, "dgl.nn.pytorch.conv.DenseGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densesageconv method)": [[398, "dgl.nn.pytorch.conv.DenseSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.edgegatconv method)": [[403, "dgl.nn.pytorch.conv.EdgeGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.egatconv method)": [[400, "dgl.nn.pytorch.conv.EGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatconv method)": [[405, "dgl.nn.pytorch.conv.GATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[412, "dgl.nn.pytorch.conv.GatedGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatv2conv method)": [[406, "dgl.nn.pytorch.conv.GATv2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gcn2conv method)": [[407, "dgl.nn.pytorch.conv.GCN2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gmmconv method)": [[410, "dgl.nn.pytorch.conv.GMMConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.graphconv method)": [[413, "dgl.nn.pytorch.conv.GraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.nnconv method)": [[416, "dgl.nn.pytorch.conv.NNConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sageconv method)": [[419, "dgl.nn.pytorch.conv.SAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sgconv method)": [[420, "dgl.nn.pytorch.conv.SGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.tagconv method)": [[421, "dgl.nn.pytorch.conv.TAGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.deepwalk method)": [[381, "dgl.nn.pytorch.DeepWalk.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.glob.set2set method)": [[436, "dgl.nn.pytorch.glob.Set2Set.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.gt.biasedmha method)": [[442, "dgl.nn.pytorch.gt.BiasedMHA.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.heteroembedding method)": [[382, "dgl.nn.pytorch.HeteroEmbedding.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.edgepredictor method)": [[450, "dgl.nn.pytorch.link.EdgePredictor.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transe method)": [[451, "dgl.nn.pytorch.link.TransE.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transr method)": [[452, "dgl.nn.pytorch.link.TransR.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.metapath2vec method)": [[385, "dgl.nn.pytorch.MetaPath2Vec.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.typedlinear method)": [[386, "dgl.nn.pytorch.TypedLinear.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[454, "dgl.nn.pytorch.utils.JumpingKnowledge.reset_parameters", false]], "reverse() (dgl.dglgraph method)": [[99, "dgl.DGLGraph.reverse", false]], "reverse() (in module dgl)": [[555, "dgl.reverse", false]], "romanempiredataset (class in dgl.data)": [[182, "dgl.data.RomanEmpireDataset", false]], "row (dgl.sparse.sparsematrix property)": [[593, "dgl.sparse.SparseMatrix.row", false]], "rowfeatnormalizer (class in dgl.transforms)": [[665, "dgl.transforms.RowFeatNormalizer", false]], "sageconv (class in dgl.nn.mxnet.conv)": [[371, "dgl.nn.mxnet.conv.SAGEConv", false]], "sageconv (class in dgl.nn.pytorch.conv)": [[419, "dgl.nn.pytorch.conv.SAGEConv", false]], "sageconv (class in dgl.nn.tensorflow.conv)": [[464, "dgl.nn.tensorflow.conv.SAGEConv", false]], "saintsampler (class in dgl.dataloading)": [[217, "dgl.dataloading.SAINTSampler", false]], "sample_etype_neighbors() (in module dgl.distributed)": [[241, "dgl.distributed.sample_etype_neighbors", false]], "sample_labors() (in module dgl.sampling)": [[561, "dgl.sampling.sample_labors", false]], "sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_layer_neighbors", false]], "sample_negative_edges_uniform() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_negative_edges_uniform", false]], "sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_neighbors", false]], "sample_neighbors() (in module dgl.distributed)": [[242, "dgl.distributed.sample_neighbors", false]], "sample_neighbors() (in module dgl.sampling)": [[562, "dgl.sampling.sample_neighbors", false]], "sample_neighbors_biased() (in module dgl.sampling)": [[563, "dgl.sampling.sample_neighbors_biased", false]], "sample_subgraphs() (dgl.graphbolt.insubgraphsampler method)": [[300, "dgl.graphbolt.InSubgraphSampler.sample_subgraphs", false]], "sample_subgraphs() (dgl.graphbolt.subgraphsampler method)": [[313, "dgl.graphbolt.SubgraphSampler.sample_subgraphs", false]], "sampled_csc (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.sampled_csc", false]], "sampled_csc (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.sampled_csc", false]], "sampled_subgraphs (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.sampled_subgraphs", false]], "sampledsubgraph (class in dgl.graphbolt)": [[310, "dgl.graphbolt.SampledSubgraph", false]], "sampledsubgraphimpl (class in dgl.graphbolt)": [[311, "dgl.graphbolt.SampledSubgraphImpl", false]], "sampler (class in dgl.dataloading)": [[218, "dgl.dataloading.Sampler", false]], "sampling_stages() (dgl.graphbolt.subgraphsampler method)": [[313, "dgl.graphbolt.SubgraphSampler.sampling_stages", false]], "samplinggraph (class in dgl.graphbolt)": [[312, "dgl.graphbolt.SamplingGraph", false]], "save() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.save", false]], "save() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.save", false]], "save_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_dir", false]], "save_graphs() (in module dgl)": [[565, "dgl.save_graphs", false]], "save_info (class in dgl.data.utils)": [[206, "dgl.data.utils.save_info", false]], "save_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_path", false]], "sbmmixturedataset (class in dgl.data)": [[183, "dgl.data.SBMMixtureDataset", false]], "sddmm() (in module dgl.sparse)": [[617, "dgl.sparse.sddmm", false]], "seed (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.seed", false]], "seed() (in module dgl)": [[566, "dgl.seed", false]], "seed() (in module dgl.graphbolt)": [[329, "dgl.graphbolt.seed", false]], "seeds (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.seeds", false]], "segment_mm() (in module dgl.ops)": [[500, "dgl.ops.segment_mm", false]], "segment_reduce() (in module dgl.ops)": [[501, "dgl.ops.segment_reduce", false]], "segmented_knn_graph() (in module dgl)": [[567, "dgl.segmented_knn_graph", false]], "segmentedknngraph (class in dgl.nn.pytorch.factory)": [[432, "dgl.nn.pytorch.factory.SegmentedKNNGraph", false]], "select_topk() (in module dgl.sampling)": [[564, "dgl.sampling.select_topk", false]], "send_and_recv() (dgl.dglgraph method)": [[100, "dgl.DGLGraph.send_and_recv", false]], "sequential (class in dgl.nn.mxnet.utils)": [[380, "dgl.nn.mxnet.utils.Sequential", false]], "sequential (class in dgl.nn.pytorch.utils)": [[456, "dgl.nn.pytorch.utils.Sequential", false]], "set2set (class in dgl.nn.mxnet.glob)": [[377, "dgl.nn.mxnet.glob.Set2Set", false]], "set2set (class in dgl.nn.pytorch.glob)": [[436, "dgl.nn.pytorch.glob.Set2Set", false]], "set_batch_num_edges() (dgl.dglgraph method)": [[101, "dgl.DGLGraph.set_batch_num_edges", false]], "set_batch_num_nodes() (dgl.dglgraph method)": [[102, "dgl.DGLGraph.set_batch_num_nodes", false]], "set_dst_lazy_features (class in dgl.dataloading.base)": [[222, "dgl.dataloading.base.set_dst_lazy_features", false]], "set_edge_features() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.set_edge_features", false]], "set_edge_lazy_features (class in dgl.dataloading.base)": [[223, "dgl.dataloading.base.set_edge_lazy_features", false]], "set_node_features() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.set_node_features", false]], "set_node_lazy_features (class in dgl.dataloading.base)": [[224, "dgl.dataloading.base.set_node_lazy_features", false]], "set_src_lazy_features (class in dgl.dataloading.base)": [[225, "dgl.dataloading.base.set_src_lazy_features", false]], "settransformerdecoder (class in dgl.nn.pytorch.glob)": [[437, "dgl.nn.pytorch.glob.SetTransformerDecoder", false]], "settransformerencoder (class in dgl.nn.pytorch.glob)": [[438, "dgl.nn.pytorch.glob.SetTransformerEncoder", false]], "sgconv (class in dgl.nn.mxnet.conv)": [[372, "dgl.nn.mxnet.conv.SGConv", false]], "sgconv (class in dgl.nn.pytorch.conv)": [[420, "dgl.nn.pytorch.conv.SGConv", false]], "sgconv (class in dgl.nn.tensorflow.conv)": [[465, "dgl.nn.tensorflow.conv.SGConv", false]], "shadowkhopsampler (class in dgl.dataloading)": [[219, "dgl.dataloading.ShaDowKHopSampler", false]], "shape (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.shape", false]], "shape (dgl.sparse.sparsematrix property)": [[594, "dgl.sparse.SparseMatrix.shape", false]], "shared_memory() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.shared_memory", false]], "shared_tensor() (in module dgl.multiprocessing.pytorch)": [[354, "dgl.multiprocessing.pytorch.shared_tensor", false]], "shortest_dist() (in module dgl)": [[568, "dgl.shortest_dist", false]], "signdiffusion (class in dgl.transforms)": [[666, "dgl.transforms.SIGNDiffusion", false]], "size() (dgl.graphbolt.basicfeaturestore method)": [[288, "dgl.graphbolt.BasicFeatureStore.size", false]], "size() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.size", false]], "size() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.size", false]], "size() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.size", false]], "size() (dgl.graphbolt.torchbasedfeature method)": [[315, "dgl.graphbolt.TorchBasedFeature.size", false]], "slice_batch() (in module dgl)": [[569, "dgl.slice_batch", false]], "smax() (dgl.sparse.sparsematrix method)": [[595, "dgl.sparse.SparseMatrix.smax", false]], "smean() (dgl.sparse.sparsematrix method)": [[596, "dgl.sparse.SparseMatrix.smean", false]], "smin() (dgl.sparse.sparsematrix method)": [[597, "dgl.sparse.SparseMatrix.smin", false]], "softmax() (dgl.sparse.sparsematrix method)": [[598, "dgl.sparse.SparseMatrix.softmax", false]], "softmax() (in module dgl.sparse)": [[618, "dgl.sparse.softmax", false]], "softmax_edges() (in module dgl)": [[570, "dgl.softmax_edges", false]], "softmax_nodes() (in module dgl)": [[571, "dgl.softmax_nodes", false]], "sort_csc_by_tag() (in module dgl)": [[572, "dgl.sort_csc_by_tag", false]], "sort_csr_by_tag() (in module dgl)": [[573, "dgl.sort_csr_by_tag", false]], "sortpooling (class in dgl.nn.mxnet.glob)": [[378, "dgl.nn.mxnet.glob.SortPooling", false]], "sortpooling (class in dgl.nn.pytorch.glob)": [[439, "dgl.nn.pytorch.glob.SortPooling", false]], "sortpooling (class in dgl.nn.tensorflow.glob)": [[470, "dgl.nn.tensorflow.glob.SortPooling", false]], "sp_add_v() (in module dgl.sparse)": [[619, "dgl.sparse.sp_add_v", false]], "sp_broadcast_v() (in module dgl.sparse)": [[620, "dgl.sparse.sp_broadcast_v", false]], "sp_div_v() (in module dgl.sparse)": [[621, "dgl.sparse.sp_div_v", false]], "sp_mul_v() (in module dgl.sparse)": [[622, "dgl.sparse.sp_mul_v", false]], "sp_sub_v() (in module dgl.sparse)": [[623, "dgl.sparse.sp_sub_v", false]], "sparseadagrad (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdagrad", false]], "sparseadagrad (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdagrad", false]], "sparseadam (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdam", false]], "sparseadam (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdam", false]], "sparsematrix (class in dgl.sparse)": [[12, "dgl.sparse.SparseMatrix", false]], "spatialencoder (class in dgl.nn.pytorch.gt)": [[448, "dgl.nn.pytorch.gt.SpatialEncoder", false]], "spatialencoder3d (class in dgl.nn.pytorch.gt)": [[449, "dgl.nn.pytorch.gt.SpatialEncoder3d", false]], "split_dataset (class in dgl.data.utils)": [[207, "dgl.data.utils.split_dataset", false]], "spmatrix() (in module dgl.sparse)": [[624, "dgl.sparse.spmatrix", false]], "spmm() (in module dgl.sparse)": [[625, "dgl.sparse.spmm", false]], "spspmm() (in module dgl.sparse)": [[626, "dgl.sparse.spspmm", false]], "squirreldataset (class in dgl.data)": [[185, "dgl.data.SquirrelDataset", false]], "src (dgl.udf.edgebatch property)": [[674, "dgl.udf.EdgeBatch.src", false]], "srcdata (dgl.dglgraph property)": [[103, "dgl.DGLGraph.srcdata", false]], "srcnodes (dgl.dglgraph property)": [[104, "dgl.DGLGraph.srcnodes", false]], "srctypes (dgl.dglgraph property)": [[105, "dgl.DGLGraph.srctypes", false]], "sstdataset (class in dgl.data)": [[184, "dgl.data.SSTDataset", false]], "start_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.start_time", false]], "step() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.step", false]], "step() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.step", false]], "sub() (in module dgl.sparse)": [[627, "dgl.sparse.sub", false]], "subgraph() (dgl.dglgraph method)": [[106, "dgl.DGLGraph.subgraph", false]], "subgraphsampler (class in dgl.graphbolt)": [[313, "dgl.graphbolt.SubgraphSampler", false]], "subgraphx (class in dgl.nn.pytorch.explain)": [[429, "dgl.nn.pytorch.explain.SubgraphX", false]], "subset (class in dgl.data.utils)": [[196, "dgl.data.utils.Subset", false]], "successors() (dgl.dglgraph method)": [[107, "dgl.DGLGraph.successors", false]], "sum() (dgl.sparse.sparsematrix method)": [[599, "dgl.sparse.SparseMatrix.sum", false]], "sum() (in module dgl.function)": [[266, "dgl.function.sum", false]], "sum_edges() (in module dgl)": [[629, "dgl.sum_edges", false]], "sum_nodes() (in module dgl)": [[630, "dgl.sum_nodes", false]], "sumpooling (class in dgl.nn.mxnet.glob)": [[379, "dgl.nn.mxnet.glob.SumPooling", false]], "sumpooling (class in dgl.nn.pytorch.glob)": [[440, "dgl.nn.pytorch.glob.SumPooling", false]], "sumpooling (class in dgl.nn.tensorflow.glob)": [[471, "dgl.nn.tensorflow.glob.SumPooling", false]], "svd_pe() (in module dgl)": [[631, "dgl.svd_pe", false]], "svdpe (class in dgl.transforms)": [[667, "dgl.transforms.SVDPE", false]], "t (dgl.sparse.sparsematrix property)": [[574, "dgl.sparse.SparseMatrix.T", false]], "t() (dgl.sparse.sparsematrix method)": [[600, "dgl.sparse.SparseMatrix.t", false]], "tagconv (class in dgl.nn.mxnet.conv)": [[373, "dgl.nn.mxnet.conv.TAGConv", false]], "tagconv (class in dgl.nn.pytorch.conv)": [[421, "dgl.nn.pytorch.conv.TAGConv", false]], "task (class in dgl.graphbolt)": [[314, "dgl.graphbolt.Task", false]], "tasks (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.tasks", false]], "tasks (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.tasks", false]], "tasks (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.tasks", false]], "temporal_sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_neighbors", false]], "test_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.test_edges", false]], "test_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.test_idx", false]], "test_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.test_idx", false]], "test_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.test_mask", false]], "test_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.test_set", false]], "texasdataset (class in dgl.data)": [[187, "dgl.data.TexasDataset", false]], "to() (dgl.dglgraph method)": [[108, "dgl.DGLGraph.to", false]], "to() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.to", false]], "to() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.to", false]], "to() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.to", false]], "to() (dgl.graphbolt.samplinggraph method)": [[312, "dgl.graphbolt.SamplingGraph.to", false]], "to() (dgl.graphbolt.torchbasedfeature method)": [[315, "dgl.graphbolt.TorchBasedFeature.to", false]], "to() (dgl.graphbolt.torchbasedfeaturestore method)": [[316, "dgl.graphbolt.TorchBasedFeatureStore.to", false]], "to() (dgl.sparse.sparsematrix method)": [[601, "dgl.sparse.SparseMatrix.to", false]], "to_bidirected() (in module dgl)": [[632, "dgl.to_bidirected", false]], "to_block() (in module dgl)": [[633, "dgl.to_block", false]], "to_canonical_etype() (dgl.dglgraph method)": [[109, "dgl.DGLGraph.to_canonical_etype", false]], "to_cugraph() (dgl.dglgraph method)": [[110, "dgl.DGLGraph.to_cugraph", false]], "to_cugraph() (in module dgl)": [[634, "dgl.to_cugraph", false]], "to_dense() (dgl.sparse.sparsematrix method)": [[602, "dgl.sparse.SparseMatrix.to_dense", false]], "to_double() (in module dgl)": [[635, "dgl.to_double", false]], "to_float() (in module dgl)": [[636, "dgl.to_float", false]], "to_half() (in module dgl)": [[637, "dgl.to_half", false]], "to_heterogeneous() (in module dgl)": [[638, "dgl.to_heterogeneous", false]], "to_homogeneous() (in module dgl)": [[639, "dgl.to_homogeneous", false]], "to_local() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_local", false]], "to_networkx() (in module dgl)": [[640, "dgl.to_networkx", false]], "to_partid() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_partid", false]], "to_pyg_data() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.to_pyg_data", false]], "to_simple() (dgl.dglgraph method)": [[111, "dgl.DGLGraph.to_simple", false]], "to_simple() (in module dgl)": [[641, "dgl.to_simple", false]], "to_simple_graph() (in module dgl)": [[642, "dgl.to_simple_graph", false]], "tolevi (class in dgl.transforms)": [[668, "dgl.transforms.ToLevi", false]], "tolokersdataset (class in dgl.data)": [[188, "dgl.data.TolokersDataset", false]], "topk_edges() (in module dgl)": [[643, "dgl.topk_edges", false]], "topk_nodes() (in module dgl)": [[644, "dgl.topk_nodes", false]], "topological_nodes_generator() (in module dgl)": [[645, "dgl.topological_nodes_generator", false]], "torchbasedfeature (class in dgl.graphbolt)": [[315, "dgl.graphbolt.TorchBasedFeature", false]], "torchbasedfeaturestore (class in dgl.graphbolt)": [[316, "dgl.graphbolt.TorchBasedFeatureStore", false]], "tosimple (class in dgl.transforms)": [[669, "dgl.transforms.ToSimple", false]], "total_num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_edges", false]], "total_num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_nodes", false]], "train_graph (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.train_graph", false]], "train_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.train_idx", false]], "train_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.train_idx", false]], "train_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.train_mask", false]], "train_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.train_set", false]], "train_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.train_size", false]], "train_step() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[426, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step", false]], "train_step() (dgl.nn.pytorch.explain.pgexplainer method)": [[428, "dgl.nn.pytorch.explain.PGExplainer.train_step", false]], "train_step_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[426, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step_node", false]], "train_step_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[428, "dgl.nn.pytorch.explain.PGExplainer.train_step_node", false]], "transe (class in dgl.nn.pytorch.link)": [[451, "dgl.nn.pytorch.link.TransE", false]], "transpose() (dgl.sparse.sparsematrix method)": [[603, "dgl.sparse.SparseMatrix.transpose", false]], "transr (class in dgl.nn.pytorch.link)": [[452, "dgl.nn.pytorch.link.TransR", false]], "treecycledataset (class in dgl.data)": [[189, "dgl.data.TreeCycleDataset", false]], "treegriddataset (class in dgl.data)": [[190, "dgl.data.TreeGridDataset", false]], "tudataset (class in dgl.data)": [[186, "dgl.data.TUDataset", false]], "twirlsconv (class in dgl.nn.pytorch.conv)": [[422, "dgl.nn.pytorch.conv.TWIRLSConv", false]], "twirlsunfoldingandattention (class in dgl.nn.pytorch.conv)": [[423, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", false]], "type_per_edge (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.type_per_edge", false]], "typedlinear (class in dgl.nn.pytorch)": [[386, "dgl.nn.pytorch.TypedLinear", false]], "u_add_e() (in module dgl.function)": [[267, "dgl.function.u_add_e", false]], "u_add_e() (in module dgl.ops)": [[502, "dgl.ops.u_add_e", false]], "u_add_e_max() (in module dgl.ops)": [[503, "dgl.ops.u_add_e_max", false]], "u_add_e_mean() (in module dgl.ops)": [[504, "dgl.ops.u_add_e_mean", false]], "u_add_e_min() (in module dgl.ops)": [[505, "dgl.ops.u_add_e_min", false]], "u_add_e_sum() (in module dgl.ops)": [[506, "dgl.ops.u_add_e_sum", false]], "u_add_v() (in module dgl.function)": [[268, "dgl.function.u_add_v", false]], "u_add_v() (in module dgl.ops)": [[507, "dgl.ops.u_add_v", false]], "u_div_e() (in module dgl.function)": [[269, "dgl.function.u_div_e", false]], "u_div_e() (in module dgl.ops)": [[508, "dgl.ops.u_div_e", false]], "u_div_e_max() (in module dgl.ops)": [[509, "dgl.ops.u_div_e_max", false]], "u_div_e_mean() (in module dgl.ops)": [[510, "dgl.ops.u_div_e_mean", false]], "u_div_e_min() (in module dgl.ops)": [[511, "dgl.ops.u_div_e_min", false]], "u_div_e_sum() (in module dgl.ops)": [[512, "dgl.ops.u_div_e_sum", false]], "u_div_v() (in module dgl.function)": [[270, "dgl.function.u_div_v", false]], "u_div_v() (in module dgl.ops)": [[513, "dgl.ops.u_div_v", false]], "u_dot_e() (in module dgl.function)": [[271, "dgl.function.u_dot_e", false]], "u_dot_e() (in module dgl.ops)": [[514, "dgl.ops.u_dot_e", false]], "u_dot_v() (in module dgl.function)": [[272, "dgl.function.u_dot_v", false]], "u_dot_v() (in module dgl.ops)": [[515, "dgl.ops.u_dot_v", false]], "u_mul_e() (in module dgl.function)": [[273, "dgl.function.u_mul_e", false]], "u_mul_e() (in module dgl.ops)": [[516, "dgl.ops.u_mul_e", false]], "u_mul_e_max() (in module dgl.ops)": [[517, "dgl.ops.u_mul_e_max", false]], "u_mul_e_mean() (in module dgl.ops)": [[518, "dgl.ops.u_mul_e_mean", false]], "u_mul_e_min() (in module dgl.ops)": [[519, "dgl.ops.u_mul_e_min", false]], "u_mul_e_sum() (in module dgl.ops)": [[520, "dgl.ops.u_mul_e_sum", false]], "u_mul_v() (in module dgl.function)": [[274, "dgl.function.u_mul_v", false]], "u_mul_v() (in module dgl.ops)": [[521, "dgl.ops.u_mul_v", false]], "u_sub_e() (in module dgl.function)": [[275, "dgl.function.u_sub_e", false]], "u_sub_e() (in module dgl.ops)": [[522, "dgl.ops.u_sub_e", false]], "u_sub_e_max() (in module dgl.ops)": [[523, "dgl.ops.u_sub_e_max", false]], "u_sub_e_mean() (in module dgl.ops)": [[524, "dgl.ops.u_sub_e_mean", false]], "u_sub_e_min() (in module dgl.ops)": [[525, "dgl.ops.u_sub_e_min", false]], "u_sub_e_sum() (in module dgl.ops)": [[526, "dgl.ops.u_sub_e_sum", false]], "u_sub_v() (in module dgl.function)": [[276, "dgl.function.u_sub_v", false]], "u_sub_v() (in module dgl.ops)": [[527, "dgl.ops.u_sub_v", false]], "unbatch() (in module dgl)": [[679, "dgl.unbatch", false]], "uniform (in module dgl.dataloading.negative_sampler)": [[228, "dgl.dataloading.negative_sampler.Uniform", false]], "uniformnegativesampler (class in dgl.graphbolt)": [[317, "dgl.graphbolt.UniformNegativeSampler", false]], "unique_and_compact() (in module dgl.graphbolt)": [[330, "dgl.graphbolt.unique_and_compact", false]], "unique_and_compact_csc_formats() (in module dgl.graphbolt)": [[331, "dgl.graphbolt.unique_and_compact_csc_formats", false]], "unpin_memory_() (dgl.dglgraph method)": [[112, "dgl.DGLGraph.unpin_memory_", false]], "update() (dgl.graphbolt.basicfeaturestore method)": [[288, "dgl.graphbolt.BasicFeatureStore.update", false]], "update() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.update", false]], "update() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.update", false]], "update() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.update", false]], "update() (dgl.graphbolt.torchbasedfeature method)": [[315, "dgl.graphbolt.TorchBasedFeature.update", false]], "update_all() (dgl.dglgraph method)": [[113, "dgl.DGLGraph.update_all", false]], "url (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.url", false]], "use_libxsmm() (in module dgl)": [[680, "dgl.use_libxsmm", false]], "v_add_e() (in module dgl.function)": [[277, "dgl.function.v_add_e", false]], "v_add_e() (in module dgl.ops)": [[528, "dgl.ops.v_add_e", false]], "v_add_u() (in module dgl.function)": [[278, "dgl.function.v_add_u", false]], "v_add_u() (in module dgl.ops)": [[529, "dgl.ops.v_add_u", false]], "v_div_e() (in module dgl.function)": [[279, "dgl.function.v_div_e", false]], "v_div_e() (in module dgl.ops)": [[530, "dgl.ops.v_div_e", false]], "v_div_u() (in module dgl.function)": [[280, "dgl.function.v_div_u", false]], "v_div_u() (in module dgl.ops)": [[531, "dgl.ops.v_div_u", false]], "v_dot_e() (in module dgl.function)": [[281, "dgl.function.v_dot_e", false]], "v_dot_e() (in module dgl.ops)": [[532, "dgl.ops.v_dot_e", false]], "v_dot_u() (in module dgl.function)": [[282, "dgl.function.v_dot_u", false]], "v_dot_u() (in module dgl.ops)": [[533, "dgl.ops.v_dot_u", false]], "v_mul_e() (in module dgl.function)": [[283, "dgl.function.v_mul_e", false]], "v_mul_e() (in module dgl.ops)": [[534, "dgl.ops.v_mul_e", false]], "v_mul_u() (in module dgl.function)": [[284, "dgl.function.v_mul_u", false]], "v_mul_u() (in module dgl.ops)": [[535, "dgl.ops.v_mul_u", false]], "v_sub_e() (in module dgl.function)": [[285, "dgl.function.v_sub_e", false]], "v_sub_e() (in module dgl.ops)": [[536, "dgl.ops.v_sub_e", false]], "v_sub_u() (in module dgl.function)": [[286, "dgl.function.v_sub_u", false]], "v_sub_u() (in module dgl.ops)": [[537, "dgl.ops.v_sub_u", false]], "val (dgl.sparse.sparsematrix property)": [[604, "dgl.sparse.SparseMatrix.val", false]], "val_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.val_edges", false]], "val_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.val_idx", false]], "val_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.val_idx", false]], "val_like() (in module dgl.sparse)": [[628, "dgl.sparse.val_like", false]], "val_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.val_mask", false]], "val_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.val_size", false]], "validation_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.validation_set", false]], "verbose (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.verbose", false]], "vocab (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab", false]], "vocab_size (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab_size", false]], "weight (dgl.nn.pytorch.conv.graphconv attribute)": [[413, "dgl.nn.pytorch.conv.GraphConv.weight", false]], "weightandsum (class in dgl.nn.pytorch.glob)": [[441, "dgl.nn.pytorch.glob.WeightAndSum", false]], "weightbasis (class in dgl.nn.pytorch.utils)": [[457, "dgl.nn.pytorch.utils.WeightBasis", false]], "wikicsdataset (class in dgl.data)": [[192, "dgl.data.WikiCSDataset", false]], "wisconsindataset (class in dgl.data)": [[193, "dgl.data.WisconsinDataset", false]], "wn18dataset (class in dgl.data)": [[191, "dgl.data.WN18Dataset", false]], "yaml_data (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.yaml_data", false]], "yelpdataset (class in dgl.data)": [[194, "dgl.data.YelpDataset", false]], "zincdataset (class in dgl.data)": [[195, "dgl.data.ZINCDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "dgl"]], "dgl": [[1, 1, 1, "", "DGLGraph"], [114, 4, 1, "", "add_edges"], [115, 4, 1, "", "add_nodes"], [116, 4, 1, "", "add_reverse_edges"], [117, 4, 1, "", "add_self_loop"], [118, 4, 1, "", "adj_product_graph"], [119, 4, 1, "", "adj_sum_graph"], [120, 4, 1, "", "adjusted_homophily"], [121, 4, 1, "", "apply_each"], [122, 4, 1, "", "batch"], [123, 4, 1, "", "bfs_edges_generator"], [124, 4, 1, "", "bfs_nodes_generator"], [125, 4, 1, "", "bipartite_from_networkx"], [126, 4, 1, "", "bipartite_from_scipy"], [127, 4, 1, "", "block_to_graph"], [128, 4, 1, "", "broadcast_edges"], [129, 4, 1, "", "broadcast_nodes"], [130, 4, 1, "", "compact_graphs"], [131, 4, 1, "", "create_block"], [2, 0, 0, "-", "data"], [229, 4, 1, "", "dfs_edges_generator"], [230, 4, 1, "", "dfs_labeled_edges_generator"], [243, 4, 1, "", "double_radius_node_labeling"], [244, 4, 1, "", "edge_homophily"], [245, 4, 1, "", "edge_label_informativeness"], [246, 4, 1, "", "edge_subgraph"], [247, 4, 1, "", "edge_type_subgraph"], [248, 4, 1, "", "from_cugraph"], [249, 4, 1, "", "from_networkx"], [250, 4, 1, "", "from_scipy"], [6, 0, 0, "-", "geometry"], [287, 4, 1, "", "graph"], [332, 4, 1, "", "heterograph"], [333, 4, 1, "", "in_subgraph"], [334, 4, 1, "", "is_libxsmm_enabled"], [335, 4, 1, "", "khop_adj"], [336, 4, 1, "", "khop_graph"], [337, 4, 1, "", "khop_in_subgraph"], [338, 4, 1, "", "khop_out_subgraph"], [339, 4, 1, "", "knn_graph"], [340, 4, 1, "", "lap_pe"], [341, 4, 1, "", "laplacian_lambda_max"], [342, 4, 1, "", "line_graph"], [343, 4, 1, "", "linkx_homophily"], [344, 4, 1, "", "load_graphs"], [345, 4, 1, "", "max_edges"], [346, 4, 1, "", "max_nodes"], [347, 4, 1, "", "mean_edges"], [348, 4, 1, "", "mean_nodes"], [349, 4, 1, "", "merge"], [350, 4, 1, "", "metapath_reachable_graph"], [351, 4, 1, "", "metis_partition"], [352, 4, 1, "", "metis_partition_assignment"], [472, 4, 1, "", "node_homophily"], [473, 4, 1, "", "node_label_informativeness"], [474, 4, 1, "", "node_subgraph"], [475, 4, 1, "", "node_type_subgraph"], [476, 4, 1, "", "norm_by_dst"], [10, 0, 0, "-", "optim"], [538, 4, 1, "", "out_subgraph"], [539, 4, 1, "", "partition_graph_with_halo"], [540, 4, 1, "", "prop_edges"], [541, 4, 1, "", "prop_edges_dfs"], [542, 4, 1, "", "prop_nodes"], [543, 4, 1, "", "prop_nodes_bfs"], [544, 4, 1, "", "prop_nodes_topo"], [545, 4, 1, "", "radius_graph"], [546, 4, 1, "", "rand_bipartite"], [547, 4, 1, "", "rand_graph"], [548, 4, 1, "", "random_walk_pe"], [549, 4, 1, "", "readout_edges"], [550, 4, 1, "", "readout_nodes"], [551, 4, 1, "", "remove_edges"], [552, 4, 1, "", "remove_nodes"], [553, 4, 1, "", "remove_self_loop"], [554, 4, 1, "", "reorder_graph"], [555, 4, 1, "", "reverse"], [11, 0, 0, "-", "sampling"], [565, 4, 1, "", "save_graphs"], [566, 4, 1, "", "seed"], [567, 4, 1, "", "segmented_knn_graph"], [568, 4, 1, "", "shortest_dist"], [569, 4, 1, "", "slice_batch"], [570, 4, 1, "", "softmax_edges"], [571, 4, 1, "", "softmax_nodes"], [572, 4, 1, "", "sort_csc_by_tag"], [573, 4, 1, "", "sort_csr_by_tag"], [629, 4, 1, "", "sum_edges"], [630, 4, 1, "", "sum_nodes"], [631, 4, 1, "", "svd_pe"], [632, 4, 1, "", "to_bidirected"], [633, 4, 1, "", "to_block"], [634, 4, 1, "", "to_cugraph"], [635, 4, 1, "", "to_double"], [636, 4, 1, "", "to_float"], [637, 4, 1, "", "to_half"], [638, 4, 1, "", "to_heterogeneous"], [639, 4, 1, "", "to_homogeneous"], [640, 4, 1, "", "to_networkx"], [641, 4, 1, "", "to_simple"], [642, 4, 1, "", "to_simple_graph"], [643, 4, 1, "", "topk_edges"], [644, 4, 1, "", "topk_nodes"], [645, 4, 1, "", "topological_nodes_generator"], [19, 0, 0, "-", "transforms"], [679, 4, 1, "", "unbatch"], [680, 4, 1, "", "use_libxsmm"]], "dgl.DGLGraph": [[26, 2, 1, "", "__getitem__"], [27, 2, 1, "", "add_edges"], [28, 2, 1, "", "add_nodes"], [29, 2, 1, "", "add_self_loop"], [30, 2, 1, "", "adj"], [31, 2, 1, "", "adj_external"], [32, 2, 1, "", "adj_tensors"], [33, 2, 1, "", "adjacency_matrix"], [34, 2, 1, "", "apply_edges"], [35, 2, 1, "", "apply_nodes"], [36, 2, 1, "", "batch_num_edges"], [37, 2, 1, "", "batch_num_nodes"], [38, 3, 1, "", "batch_size"], [39, 3, 1, "", "canonical_etypes"], [40, 2, 1, "", "cpu"], [41, 2, 1, "", "create_formats_"], [42, 3, 1, "", "device"], [43, 3, 1, "", "dstdata"], [44, 3, 1, "", "dstnodes"], [45, 3, 1, "", "dsttypes"], [46, 3, 1, "", "edata"], [47, 2, 1, "", "edge_attr_schemes"], [48, 2, 1, "", "edge_ids"], [49, 2, 1, "", "edge_subgraph"], [50, 2, 1, "", "edge_type_subgraph"], [51, 3, 1, "", "edges"], [52, 3, 1, "", "etypes"], [53, 2, 1, "", "filter_edges"], [54, 2, 1, "", "filter_nodes"], [55, 2, 1, "", "find_edges"], [56, 2, 1, "", "formats"], [57, 2, 1, "", "has_edges_between"], [58, 2, 1, "", "has_nodes"], [59, 3, 1, "", "idtype"], [60, 2, 1, "", "in_degrees"], [61, 2, 1, "", "in_edges"], [62, 2, 1, "", "inc"], [63, 2, 1, "", "incidence_matrix"], [64, 2, 1, "", "int"], [65, 3, 1, "", "is_homogeneous"], [66, 3, 1, "", "is_multigraph"], [67, 2, 1, "", "is_pinned"], [68, 3, 1, "", "is_unibipartite"], [69, 2, 1, "", "line_graph"], [70, 2, 1, "", "local_scope"], [71, 2, 1, "", "long"], [72, 2, 1, "", "metagraph"], [73, 2, 1, "", "multi_update_all"], [74, 3, 1, "", "ndata"], [75, 2, 1, "", "node_attr_schemes"], [76, 2, 1, "", "node_type_subgraph"], [77, 3, 1, "", "nodes"], [78, 3, 1, "", "ntypes"], [79, 2, 1, "", "num_dst_nodes"], [80, 2, 1, "", "num_edges"], [81, 2, 1, "", "num_nodes"], [82, 2, 1, "", "num_src_nodes"], [83, 2, 1, "", "number_of_dst_nodes"], [84, 2, 1, "", "number_of_edges"], [85, 2, 1, "", "number_of_nodes"], [86, 2, 1, "", "number_of_src_nodes"], [87, 2, 1, "", "out_degrees"], [88, 2, 1, "", "out_edges"], [89, 2, 1, "", "pin_memory_"], [90, 2, 1, "", "predecessors"], [91, 2, 1, "", "prop_edges"], [92, 2, 1, "", "prop_nodes"], [93, 2, 1, "", "pull"], [94, 2, 1, "", "push"], [95, 2, 1, "", "remove_edges"], [96, 2, 1, "", "remove_nodes"], [97, 2, 1, "", "remove_self_loop"], [98, 2, 1, "", "reorder_graph"], [99, 2, 1, "", "reverse"], [100, 2, 1, "", "send_and_recv"], [101, 2, 1, "", "set_batch_num_edges"], [102, 2, 1, "", "set_batch_num_nodes"], [103, 3, 1, "", "srcdata"], [104, 3, 1, "", "srcnodes"], [105, 3, 1, "", "srctypes"], [106, 2, 1, "", "subgraph"], [107, 2, 1, "", "successors"], [108, 2, 1, "", "to"], [109, 2, 1, "", "to_canonical_etype"], [110, 2, 1, "", "to_cugraph"], [111, 2, 1, "", "to_simple"], [112, 2, 1, "", "unpin_memory_"], [113, 2, 1, "", "update_all"]], "dgl.data": [[132, 1, 1, "", "AIFBDataset"], [133, 1, 1, "", "AMDataset"], [134, 1, 1, "", "ActorDataset"], [135, 1, 1, "", "AmazonCoBuyComputerDataset"], [136, 1, 1, "", "AmazonCoBuyPhotoDataset"], [137, 1, 1, "", "AmazonRatingsDataset"], [138, 1, 1, "", "AsGraphPredDataset"], [139, 1, 1, "", "AsLinkPredDataset"], [140, 1, 1, "", "AsNodePredDataset"], [141, 1, 1, "", "BA2MotifDataset"], [142, 1, 1, "", "BACommunityDataset"], [143, 1, 1, "", "BAShapeDataset"], [144, 1, 1, "", "BGSDataset"], [145, 1, 1, "", "BitcoinOTCDataset"], [146, 1, 1, "", "CIFAR10SuperPixelDataset"], [147, 1, 1, "", "CLUSTERDataset"], [148, 1, 1, "", "CSVDataset"], [149, 1, 1, "", "ChameleonDataset"], [150, 1, 1, "", "CiteseerGraphDataset"], [151, 1, 1, "", "CoauthorCSDataset"], [152, 1, 1, "", "CoauthorPhysicsDataset"], [153, 1, 1, "", "CoraFullDataset"], [154, 1, 1, "", "CoraGraphDataset"], [155, 1, 1, "", "CornellDataset"], [156, 1, 1, "", "DGLDataset"], [157, 1, 1, "", "FB15k237Dataset"], [158, 1, 1, "", "FB15kDataset"], [159, 1, 1, "", "FakeNewsDataset"], [160, 1, 1, "", "FlickrDataset"], [161, 1, 1, "", "FraudAmazonDataset"], [162, 1, 1, "", "FraudDataset"], [163, 1, 1, "", "FraudYelpDataset"], [164, 1, 1, "", "GDELTDataset"], [165, 1, 1, "", "GINDataset"], [166, 1, 1, "", "ICEWS18Dataset"], [167, 1, 1, "", "KarateClubDataset"], [168, 1, 1, "", "LegacyTUDataset"], [169, 1, 1, "", "MNISTSuperPixelDataset"], [170, 1, 1, "", "MUTAGDataset"], [171, 1, 1, "", "MinesweeperDataset"], [172, 1, 1, "", "MiniGCDataset"], [173, 1, 1, "", "MovieLensDataset"], [174, 1, 1, "", "PATTERNDataset"], [175, 1, 1, "", "PPIDataset"], [176, 1, 1, "", "PubmedGraphDataset"], [177, 1, 1, "", "QM7bDataset"], [178, 1, 1, "", "QM9Dataset"], [179, 1, 1, "", "QM9EdgeDataset"], [180, 1, 1, "", "QuestionsDataset"], [181, 1, 1, "", "RedditDataset"], [182, 1, 1, "", "RomanEmpireDataset"], [183, 1, 1, "", "SBMMixtureDataset"], [184, 1, 1, "", "SSTDataset"], [185, 1, 1, "", "SquirrelDataset"], [186, 1, 1, "", "TUDataset"], [187, 1, 1, "", "TexasDataset"], [188, 1, 1, "", "TolokersDataset"], [189, 1, 1, "", "TreeCycleDataset"], [190, 1, 1, "", "TreeGridDataset"], [191, 1, 1, "", "WN18Dataset"], [192, 1, 1, "", "WikiCSDataset"], [193, 1, 1, "", "WisconsinDataset"], [194, 1, 1, "", "YelpDataset"], [195, 1, 1, "", "ZINCDataset"]], "dgl.data.AIFBDataset": [[132, 2, 1, "", "__getitem__"], [132, 2, 1, "", "__len__"], [132, 5, 1, "", "num_classes"], [132, 5, 1, "", "predict_category"]], "dgl.data.AMDataset": [[133, 2, 1, "", "__getitem__"], [133, 2, 1, "", "__len__"], [133, 5, 1, "", "num_classes"], [133, 5, 1, "", "predict_category"]], "dgl.data.ActorDataset": [[134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__len__"], [134, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyComputerDataset": [[135, 2, 1, "", "__getitem__"], [135, 2, 1, "", "__len__"], [135, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyPhotoDataset": [[136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__len__"], [136, 5, 1, "", "num_classes"]], "dgl.data.AmazonRatingsDataset": [[137, 2, 1, "", "__getitem__"], [137, 2, 1, "", "__len__"], [137, 5, 1, "", "num_classes"]], "dgl.data.AsGraphPredDataset": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "__len__"], [138, 5, 1, "", "edge_feat_size"], [138, 5, 1, "", "node_feat_size"], [138, 5, 1, "", "num_classes"], [138, 5, 1, "", "num_tasks"], [138, 5, 1, "", "test_idx"], [138, 5, 1, "", "train_idx"], [138, 5, 1, "", "val_idx"]], "dgl.data.AsLinkPredDataset": [[139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__len__"], [139, 5, 1, "", "feat_size"], [139, 5, 1, "", "test_edges"], [139, 5, 1, "", "train_graph"], [139, 5, 1, "", "val_edges"]], "dgl.data.AsNodePredDataset": [[140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__len__"], [140, 5, 1, "", "num_classes"], [140, 5, 1, "", "test_idx"], [140, 5, 1, "", "train_idx"], [140, 5, 1, "", "val_idx"]], "dgl.data.BA2MotifDataset": [[141, 2, 1, "", "__getitem__"], [141, 2, 1, "", "__len__"], [141, 5, 1, "", "num_classes"]], "dgl.data.BACommunityDataset": [[142, 2, 1, "", "__getitem__"], [142, 2, 1, "", "__len__"], [142, 5, 1, "", "num_classes"]], "dgl.data.BAShapeDataset": [[143, 2, 1, "", "__getitem__"], [143, 2, 1, "", "__len__"], [143, 5, 1, "", "num_classes"]], "dgl.data.BGSDataset": [[144, 2, 1, "", "__getitem__"], [144, 2, 1, "", "__len__"], [144, 5, 1, "", "num_classes"], [144, 5, 1, "", "predict_category"]], "dgl.data.BitcoinOTCDataset": [[145, 2, 1, "", "__getitem__"], [145, 2, 1, "", "__len__"], [145, 5, 1, "", "graphs"], [145, 5, 1, "", "is_temporal"]], "dgl.data.CIFAR10SuperPixelDataset": [[146, 2, 1, "", "__getitem__"], [146, 2, 1, "", "__len__"]], "dgl.data.CLUSTERDataset": [[147, 2, 1, "", "__getitem__"], [147, 2, 1, "", "__len__"], [147, 5, 1, "", "num_classes"]], "dgl.data.CSVDataset": [[148, 2, 1, "", "__getitem__"], [148, 2, 1, "", "__len__"], [148, 5, 1, "", "data"], [148, 5, 1, "", "graphs"]], "dgl.data.ChameleonDataset": [[149, 2, 1, "", "__getitem__"], [149, 2, 1, "", "__len__"], [149, 5, 1, "", "num_classes"]], "dgl.data.CiteseerGraphDataset": [[150, 2, 1, "", "__getitem__"], [150, 2, 1, "", "__len__"], [150, 5, 1, "", "num_classes"]], "dgl.data.CoauthorCSDataset": [[151, 2, 1, "", "__getitem__"], [151, 2, 1, "", "__len__"], [151, 5, 1, "", "num_classes"]], "dgl.data.CoauthorPhysicsDataset": [[152, 2, 1, "", "__getitem__"], [152, 2, 1, "", "__len__"], [152, 5, 1, "", "num_classes"]], "dgl.data.CoraFullDataset": [[153, 2, 1, "", "__getitem__"], [153, 2, 1, "", "__len__"], [153, 5, 1, "", "num_classes"]], "dgl.data.CoraGraphDataset": [[154, 2, 1, "", "__getitem__"], [154, 2, 1, "", "__len__"], [154, 5, 1, "", "num_classes"]], "dgl.data.CornellDataset": [[155, 2, 1, "", "__getitem__"], [155, 2, 1, "", "__len__"], [155, 5, 1, "", "num_classes"]], "dgl.data.DGLDataset": [[156, 2, 1, "", "__getitem__"], [156, 2, 1, "", "__len__"], [156, 5, 1, "", "hash"], [156, 5, 1, "", "name"], [156, 5, 1, "", "raw_dir"], [156, 5, 1, "", "raw_path"], [156, 5, 1, "", "save_dir"], [156, 5, 1, "", "save_path"], [156, 5, 1, "", "url"], [156, 5, 1, "", "verbose"]], "dgl.data.FB15k237Dataset": [[157, 2, 1, "", "__getitem__"], [157, 2, 1, "", "__len__"], [157, 5, 1, "", "num_nodes"], [157, 5, 1, "", "num_rels"]], "dgl.data.FB15kDataset": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "__len__"], [158, 5, 1, "", "num_nodes"], [158, 5, 1, "", "num_rels"]], "dgl.data.FakeNewsDataset": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__len__"], [159, 5, 1, "", "feature"], [159, 5, 1, "", "feature_name"], [159, 5, 1, "", "graphs"], [159, 5, 1, "", "labels"], [159, 5, 1, "", "name"], [159, 5, 1, "", "num_classes"], [159, 5, 1, "", "num_graphs"], [159, 5, 1, "", "test_mask"], [159, 5, 1, "", "train_mask"], [159, 5, 1, "", "val_mask"]], "dgl.data.FlickrDataset": [[160, 2, 1, "", "__getitem__"], [160, 2, 1, "", "__len__"], [160, 5, 1, "", "num_classes"]], "dgl.data.FraudAmazonDataset": [[161, 2, 1, "", "__getitem__"], [161, 2, 1, "", "__len__"]], "dgl.data.FraudDataset": [[162, 2, 1, "", "__getitem__"], [162, 2, 1, "", "__len__"], [162, 5, 1, "", "graph"], [162, 5, 1, "", "num_classes"], [162, 5, 1, "", "seed"], [162, 5, 1, "", "train_size"], [162, 5, 1, "", "val_size"]], "dgl.data.FraudYelpDataset": [[163, 2, 1, "", "__getitem__"], [163, 2, 1, "", "__len__"]], "dgl.data.GDELTDataset": [[164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__len__"], [164, 5, 1, "", "end_time"], [164, 5, 1, "", "is_temporal"], [164, 5, 1, "", "start_time"]], "dgl.data.GINDataset": [[165, 2, 1, "", "__getitem__"], [165, 2, 1, "", "__len__"], [165, 5, 1, "", "num_classes"]], "dgl.data.ICEWS18Dataset": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__len__"], [166, 5, 1, "", "is_temporal"]], "dgl.data.KarateClubDataset": [[167, 2, 1, "", "__getitem__"], [167, 2, 1, "", "__len__"], [167, 5, 1, "", "num_classes"]], "dgl.data.LegacyTUDataset": [[168, 2, 1, "", "__getitem__"], [168, 2, 1, "", "__len__"], [168, 5, 1, "", "max_num_node"], [168, 5, 1, "", "num_classes"], [168, 5, 1, "", "num_labels"]], "dgl.data.MNISTSuperPixelDataset": [[169, 2, 1, "", "__getitem__"], [169, 2, 1, "", "__len__"]], "dgl.data.MUTAGDataset": [[170, 2, 1, "", "__getitem__"], [170, 2, 1, "", "__len__"], [170, 5, 1, "", "graph"], [170, 5, 1, "", "num_classes"], [170, 5, 1, "", "predict_category"]], "dgl.data.MinesweeperDataset": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__len__"], [171, 5, 1, "", "num_classes"]], "dgl.data.MiniGCDataset": [[172, 2, 1, "", "__getitem__"], [172, 2, 1, "", "__len__"], [172, 5, 1, "", "max_num_v"], [172, 5, 1, "", "min_num_v"], [172, 5, 1, "", "num_classes"], [172, 5, 1, "", "num_graphs"]], "dgl.data.MovieLensDataset": [[173, 2, 1, "", "__getitem__"], [173, 2, 1, "", "__len__"]], "dgl.data.PATTERNDataset": [[174, 2, 1, "", "__getitem__"], [174, 2, 1, "", "__len__"], [174, 5, 1, "", "num_classes"]], "dgl.data.PPIDataset": [[175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__len__"], [175, 5, 1, "", "features"], [175, 5, 1, "", "labels"], [175, 5, 1, "", "num_labels"]], "dgl.data.PubmedGraphDataset": [[176, 2, 1, "", "__getitem__"], [176, 2, 1, "", "__len__"], [176, 5, 1, "", "num_classes"]], "dgl.data.QM7bDataset": [[177, 2, 1, "", "__getitem__"], [177, 2, 1, "", "__len__"], [177, 5, 1, "", "num_labels"], [177, 5, 1, "", "num_tasks"]], "dgl.data.QM9Dataset": [[178, 2, 1, "", "__getitem__"], [178, 2, 1, "", "__len__"], [178, 5, 1, "", "num_labels"], [178, 5, 1, "", "num_tasks"]], "dgl.data.QM9EdgeDataset": [[179, 2, 1, "", "__getitem__"], [179, 2, 1, "", "__len__"], [179, 5, 1, "", "num_labels"], [179, 5, 1, "", "num_tasks"]], "dgl.data.QuestionsDataset": [[180, 2, 1, "", "__getitem__"], [180, 2, 1, "", "__len__"], [180, 5, 1, "", "num_classes"]], "dgl.data.RedditDataset": [[181, 2, 1, "", "__getitem__"], [181, 2, 1, "", "__len__"], [181, 5, 1, "", "num_classes"]], "dgl.data.RomanEmpireDataset": [[182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__len__"], [182, 5, 1, "", "num_classes"]], "dgl.data.SBMMixtureDataset": [[183, 2, 1, "", "__getitem__"], [183, 2, 1, "", "__len__"], [183, 2, 1, "", "collate_fn"]], "dgl.data.SSTDataset": [[184, 2, 1, "", "__getitem__"], [184, 2, 1, "", "__len__"], [184, 5, 1, "", "num_classes"], [184, 5, 1, "", "pretrained_emb"], [184, 5, 1, "", "vocab"], [184, 5, 1, "", "vocab_size"]], "dgl.data.SquirrelDataset": [[185, 2, 1, "", "__getitem__"], [185, 2, 1, "", "__len__"], [185, 5, 1, "", "num_classes"]], "dgl.data.TUDataset": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__len__"], [186, 5, 1, "", "max_num_node"], [186, 5, 1, "", "num_classes"], [186, 5, 1, "", "num_labels"]], "dgl.data.TexasDataset": [[187, 2, 1, "", "__getitem__"], [187, 2, 1, "", "__len__"], [187, 5, 1, "", "num_classes"]], "dgl.data.TolokersDataset": [[188, 2, 1, "", "__getitem__"], [188, 2, 1, "", "__len__"], [188, 5, 1, "", "num_classes"]], "dgl.data.TreeCycleDataset": [[189, 2, 1, "", "__getitem__"], [189, 2, 1, "", "__len__"], [189, 5, 1, "", "num_classes"]], "dgl.data.TreeGridDataset": [[190, 2, 1, "", "__getitem__"], [190, 2, 1, "", "__len__"], [190, 5, 1, "", "num_classes"]], "dgl.data.WN18Dataset": [[191, 2, 1, "", "__getitem__"], [191, 2, 1, "", "__len__"], [191, 5, 1, "", "num_nodes"], [191, 5, 1, "", "num_rels"]], "dgl.data.WikiCSDataset": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__len__"], [192, 5, 1, "", "num_classes"]], "dgl.data.WisconsinDataset": [[193, 2, 1, "", "__getitem__"], [193, 2, 1, "", "__len__"], [193, 5, 1, "", "num_classes"]], "dgl.data.YelpDataset": [[194, 2, 1, "", "__getitem__"], [194, 2, 1, "", "__len__"], [194, 5, 1, "", "num_classes"]], "dgl.data.ZINCDataset": [[195, 2, 1, "", "__getitem__"], [195, 2, 1, "", "__len__"], [195, 5, 1, "", "num_atom_types"], [195, 5, 1, "", "num_bond_types"]], "dgl.data.utils": [[196, 1, 1, "", "Subset"], [197, 1, 1, "", "add_node_property_split"], [198, 1, 1, "", "add_nodepred_split"], [199, 1, 1, "", "check_sha1"], [200, 1, 1, "", "download"], [201, 1, 1, "", "extract_archive"], [202, 1, 1, "", "get_download_dir"], [203, 1, 1, "", "load_info"], [204, 1, 1, "", "load_labels"], [205, 1, 1, "", "mask_nodes_by_property"], [206, 1, 1, "", "save_info"], [207, 1, 1, "", "split_dataset"]], "dgl.data.utils.Subset": [[196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__len__"]], "dgl.dataloading": [[208, 1, 1, "", "BlockSampler"], [209, 1, 1, "", "ClusterGCNSampler"], [210, 1, 1, "", "DataLoader"], [211, 1, 1, "", "DistEdgeDataLoader"], [212, 1, 1, "", "DistNodeDataLoader"], [213, 1, 1, "", "GraphDataLoader"], [214, 1, 1, "", "LaborSampler"], [215, 1, 1, "", "MultiLayerFullNeighborSampler"], [216, 1, 1, "", "NeighborSampler"], [217, 1, 1, "", "SAINTSampler"], [218, 1, 1, "", "Sampler"], [219, 1, 1, "", "ShaDowKHopSampler"], [220, 4, 1, "", "as_edge_prediction_sampler"]], "dgl.dataloading.BlockSampler": [[208, 2, 1, "", "__init__"]], "dgl.dataloading.base": [[221, 1, 1, "", "LazyFeature"], [222, 1, 1, "", "set_dst_lazy_features"], [223, 1, 1, "", "set_edge_lazy_features"], [224, 1, 1, "", "set_node_lazy_features"], [225, 1, 1, "", "set_src_lazy_features"]], "dgl.dataloading.negative_sampler": [[226, 1, 1, "", "GlobalUniform"], [227, 1, 1, "", "PerSourceUniform"], [228, 5, 1, "", "Uniform"]], "dgl.distributed": [[4, 1, 1, "", "DistDataLoader"], [4, 1, 1, "", "DistEmbedding"], [4, 1, 1, "", "DistGraph"], [4, 1, 1, "", "DistTensor"], [4, 1, 1, "", "GraphPartitionBook"], [4, 1, 1, "", "PartitionPolicy"], [231, 4, 1, "", "dgl_partition_to_graphbolt"], [232, 4, 1, "", "edge_split"], [233, 4, 1, "", "find_edges"], [234, 4, 1, "", "in_subgraph"], [235, 4, 1, "", "initialize"], [236, 4, 1, "", "load_partition"], [237, 4, 1, "", "load_partition_book"], [238, 4, 1, "", "load_partition_feats"], [239, 4, 1, "", "node_split"], [240, 4, 1, "", "partition_graph"], [241, 4, 1, "", "sample_etype_neighbors"], [242, 4, 1, "", "sample_neighbors"]], "dgl.distributed.DistGraph": [[4, 2, 1, "", "barrier"], [4, 3, 1, "", "device"], [4, 3, 1, "", "edata"], [4, 2, 1, "", "edge_attr_schemes"], [4, 3, 1, "", "edges"], [4, 3, 1, "", "etypes"], [4, 2, 1, "", "find_edges"], [4, 2, 1, "", "get_edge_partition_policy"], [4, 2, 1, "", "get_etype_id"], [4, 2, 1, "", "get_node_partition_policy"], [4, 2, 1, "", "get_ntype_id"], [4, 2, 1, "", "get_partition_book"], [4, 3, 1, "", "idtype"], [4, 2, 1, "", "in_degrees"], [4, 3, 1, "", "local_partition"], [4, 3, 1, "", "ndata"], [4, 2, 1, "", "node_attr_schemes"], [4, 3, 1, "", "nodes"], [4, 3, 1, "", "ntypes"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_nodes"], [4, 2, 1, "", "number_of_edges"], [4, 2, 1, "", "number_of_nodes"], [4, 2, 1, "", "out_degrees"], [4, 2, 1, "", "rank"]], "dgl.distributed.DistTensor": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "name"], [4, 3, 1, "", "part_policy"], [4, 3, 1, "", "shape"]], "dgl.distributed.GraphPartitionBook": [[4, 3, 1, "", "canonical_etypes"], [4, 2, 1, "", "eid2localeid"], [4, 2, 1, "", "eid2partid"], [4, 2, 1, "", "map_to_homo_eid"], [4, 2, 1, "", "map_to_homo_nid"], [4, 2, 1, "", "map_to_per_etype"], [4, 2, 1, "", "map_to_per_ntype"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "nid2localnid"], [4, 2, 1, "", "nid2partid"], [4, 2, 1, "", "num_partitions"], [4, 3, 1, "", "partid"], [4, 2, 1, "", "partid2eids"], [4, 2, 1, "", "partid2nids"], [4, 2, 1, "", "shared_memory"]], "dgl.distributed.PartitionPolicy": [[4, 2, 1, "", "get_part_size"], [4, 2, 1, "", "get_size"], [4, 3, 1, "", "part_id"], [4, 3, 1, "", "partition_book"], [4, 3, 1, "", "policy_str"], [4, 2, 1, "", "to_local"], [4, 2, 1, "", "to_partid"]], "dgl.distributed.optim": [[4, 1, 1, "", "SparseAdagrad"], [4, 1, 1, "", "SparseAdam"]], "dgl.distributed.optim.SparseAdagrad": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.distributed.optim.SparseAdam": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.function": [[251, 4, 1, "", "copy_e"], [252, 4, 1, "", "copy_u"], [253, 4, 1, "", "e_add_u"], [254, 4, 1, "", "e_add_v"], [255, 4, 1, "", "e_div_u"], [256, 4, 1, "", "e_div_v"], [257, 4, 1, "", "e_dot_u"], [258, 4, 1, "", "e_dot_v"], [259, 4, 1, "", "e_mul_u"], [260, 4, 1, "", "e_mul_v"], [261, 4, 1, "", "e_sub_u"], [262, 4, 1, "", "e_sub_v"], [263, 4, 1, "", "max"], [264, 4, 1, "", "mean"], [265, 4, 1, "", "min"], [266, 4, 1, "", "sum"], [267, 4, 1, "", "u_add_e"], [268, 4, 1, "", "u_add_v"], [269, 4, 1, "", "u_div_e"], [270, 4, 1, "", "u_div_v"], [271, 4, 1, "", "u_dot_e"], [272, 4, 1, "", "u_dot_v"], [273, 4, 1, "", "u_mul_e"], [274, 4, 1, "", "u_mul_v"], [275, 4, 1, "", "u_sub_e"], [276, 4, 1, "", "u_sub_v"], [277, 4, 1, "", "v_add_e"], [278, 4, 1, "", "v_add_u"], [279, 4, 1, "", "v_div_e"], [280, 4, 1, "", "v_div_u"], [281, 4, 1, "", "v_dot_e"], [282, 4, 1, "", "v_dot_u"], [283, 4, 1, "", "v_mul_e"], [284, 4, 1, "", "v_mul_u"], [285, 4, 1, "", "v_sub_e"], [286, 4, 1, "", "v_sub_u"]], "dgl.geometry": [[6, 1, 1, "", "farthest_point_sampler"], [6, 1, 1, "", "neighbor_matching"]], "dgl.graphbolt": [[288, 1, 1, "", "BasicFeatureStore"], [289, 1, 1, "", "BuiltinDataset"], [290, 1, 1, "", "CopyTo"], [291, 1, 1, "", "DataLoader"], [292, 1, 1, "", "Dataset"], [293, 1, 1, "", "DistributedItemSampler"], [294, 1, 1, "", "Feature"], [295, 1, 1, "", "FeatureFetcher"], [296, 1, 1, "", "FeatureStore"], [297, 1, 1, "", "FusedCSCSamplingGraph"], [298, 1, 1, "", "GPUCachedFeature"], [299, 1, 1, "", "HeteroItemSet"], [300, 1, 1, "", "InSubgraphSampler"], [301, 1, 1, "", "ItemSampler"], [302, 1, 1, "", "ItemSet"], [303, 1, 1, "", "LayerNeighborSampler"], [304, 1, 1, "", "LegacyDataset"], [305, 1, 1, "", "MiniBatch"], [306, 1, 1, "", "MiniBatchTransformer"], [307, 1, 1, "", "NegativeSampler"], [308, 1, 1, "", "NeighborSampler"], [309, 1, 1, "", "OnDiskDataset"], [310, 1, 1, "", "SampledSubgraph"], [311, 1, 1, "", "SampledSubgraphImpl"], [312, 1, 1, "", "SamplingGraph"], [313, 1, 1, "", "SubgraphSampler"], [314, 1, 1, "", "Task"], [315, 1, 1, "", "TorchBasedFeature"], [316, 1, 1, "", "TorchBasedFeatureStore"], [317, 1, 1, "", "UniformNegativeSampler"], [318, 4, 1, "", "add_reverse_edges"], [319, 4, 1, "", "compact_csc_format"], [320, 4, 1, "", "etype_str_to_tuple"], [321, 4, 1, "", "etype_tuple_to_str"], [322, 4, 1, "", "exclude_seed_edges"], [323, 4, 1, "", "expand_indptr"], [324, 4, 1, "", "from_dglgraph"], [325, 4, 1, "", "fused_csc_sampling_graph"], [326, 4, 1, "", "index_select"], [327, 4, 1, "", "isin"], [328, 4, 1, "", "load_from_shared_memory"], [329, 4, 1, "", "seed"], [330, 4, 1, "", "unique_and_compact"], [331, 4, 1, "", "unique_and_compact_csc_formats"]], "dgl.graphbolt.BasicFeatureStore": [[288, 2, 1, "", "keys"], [288, 2, 1, "", "metadata"], [288, 2, 1, "", "read"], [288, 2, 1, "", "size"], [288, 2, 1, "", "update"]], "dgl.graphbolt.Dataset": [[292, 3, 1, "", "all_nodes_set"], [292, 3, 1, "", "dataset_name"], [292, 3, 1, "", "feature"], [292, 3, 1, "", "graph"], [292, 3, 1, "", "tasks"]], "dgl.graphbolt.Feature": [[294, 2, 1, "", "metadata"], [294, 2, 1, "", "read"], [294, 2, 1, "", "size"], [294, 2, 1, "", "update"]], "dgl.graphbolt.FeatureStore": [[296, 2, 1, "", "keys"], [296, 2, 1, "", "metadata"], [296, 2, 1, "", "read"], [296, 2, 1, "", "size"], [296, 2, 1, "", "update"]], "dgl.graphbolt.FusedCSCSamplingGraph": [[297, 2, 1, "", "add_edge_attribute"], [297, 2, 1, "", "add_node_attribute"], [297, 2, 1, "", "copy_to_shared_memory"], [297, 3, 1, "", "csc_indptr"], [297, 2, 1, "", "edge_attribute"], [297, 3, 1, "", "edge_attributes"], [297, 3, 1, "", "edge_type_to_id"], [297, 2, 1, "", "in_subgraph"], [297, 3, 1, "", "indices"], [297, 2, 1, "", "node_attribute"], [297, 3, 1, "", "node_attributes"], [297, 3, 1, "", "node_type_offset"], [297, 3, 1, "", "node_type_to_id"], [297, 3, 1, "", "num_edges"], [297, 3, 1, "", "num_nodes"], [297, 2, 1, "", "pin_memory_"], [297, 2, 1, "", "sample_layer_neighbors"], [297, 2, 1, "", "sample_negative_edges_uniform"], [297, 2, 1, "", "sample_neighbors"], [297, 2, 1, "", "temporal_sample_neighbors"], [297, 2, 1, "", "to"], [297, 3, 1, "", "total_num_edges"], [297, 3, 1, "", "total_num_nodes"], [297, 3, 1, "", "type_per_edge"]], "dgl.graphbolt.GPUCachedFeature": [[298, 2, 1, "", "read"], [298, 2, 1, "", "size"], [298, 2, 1, "", "update"]], "dgl.graphbolt.HeteroItemSet": [[299, 3, 1, "", "names"]], "dgl.graphbolt.InSubgraphSampler": [[300, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.ItemSet": [[302, 3, 1, "", "names"], [302, 3, 1, "", "num_items"]], "dgl.graphbolt.LegacyDataset": [[304, 3, 1, "", "all_nodes_set"], [304, 3, 1, "", "dataset_name"], [304, 3, 1, "", "feature"], [304, 3, 1, "", "graph"], [304, 3, 1, "", "tasks"]], "dgl.graphbolt.MiniBatch": [[305, 3, 1, "", "blocks"], [305, 5, 1, "", "compacted_seeds"], [305, 2, 1, "", "compute_blocks"], [305, 5, 1, "", "edge_features"], [305, 2, 1, "", "edge_ids"], [305, 5, 1, "", "indexes"], [305, 5, 1, "", "input_nodes"], [305, 5, 1, "", "labels"], [305, 5, 1, "", "node_features"], [305, 2, 1, "", "node_ids"], [305, 2, 1, "", "num_layers"], [305, 5, 1, "", "sampled_subgraphs"], [305, 5, 1, "", "seeds"], [305, 2, 1, "", "set_edge_features"], [305, 2, 1, "", "set_node_features"], [305, 2, 1, "", "to"], [305, 2, 1, "", "to_pyg_data"]], "dgl.graphbolt.OnDiskDataset": [[309, 3, 1, "", "all_nodes_set"], [309, 3, 1, "", "dataset_name"], [309, 3, 1, "", "feature"], [309, 3, 1, "", "graph"], [309, 2, 1, "", "load"], [309, 3, 1, "", "tasks"], [309, 3, 1, "", "yaml_data"]], "dgl.graphbolt.SampledSubgraph": [[310, 2, 1, "", "exclude_edges"], [310, 3, 1, "", "original_column_node_ids"], [310, 3, 1, "", "original_edge_ids"], [310, 3, 1, "", "original_row_node_ids"], [310, 3, 1, "", "sampled_csc"], [310, 2, 1, "", "to"]], "dgl.graphbolt.SampledSubgraphImpl": [[311, 5, 1, "", "original_column_node_ids"], [311, 5, 1, "", "original_edge_ids"], [311, 5, 1, "", "original_row_node_ids"], [311, 5, 1, "", "sampled_csc"]], "dgl.graphbolt.SamplingGraph": [[312, 2, 1, "", "copy_to_shared_memory"], [312, 3, 1, "", "num_edges"], [312, 3, 1, "", "num_nodes"], [312, 2, 1, "", "to"]], "dgl.graphbolt.SubgraphSampler": [[313, 2, 1, "", "sample_subgraphs"], [313, 2, 1, "", "sampling_stages"]], "dgl.graphbolt.Task": [[314, 3, 1, "", "metadata"], [314, 3, 1, "", "test_set"], [314, 3, 1, "", "train_set"], [314, 3, 1, "", "validation_set"]], "dgl.graphbolt.TorchBasedFeature": [[315, 2, 1, "", "is_pinned"], [315, 2, 1, "", "metadata"], [315, 2, 1, "", "pin_memory_"], [315, 2, 1, "", "read"], [315, 2, 1, "", "size"], [315, 2, 1, "", "to"], [315, 2, 1, "", "update"]], "dgl.graphbolt.TorchBasedFeatureStore": [[316, 2, 1, "", "is_pinned"], [316, 2, 1, "", "pin_memory_"], [316, 2, 1, "", "to"]], "dgl.multiprocessing.pytorch": [[353, 4, 1, "", "call_once_and_share"], [354, 4, 1, "", "shared_tensor"]], "dgl.nn": [[18, 0, 0, "-", "functional"]], "dgl.nn.functional": [[355, 4, 1, "", "edge_softmax"]], "dgl.nn.mxnet": [[356, 1, 1, "", "HeteroGraphConv"]], "dgl.nn.mxnet.conv": [[357, 1, 1, "", "AGNNConv"], [358, 1, 1, "", "APPNPConv"], [359, 1, 1, "", "ChebConv"], [360, 1, 1, "", "DenseChebConv"], [361, 1, 1, "", "DenseGraphConv"], [362, 1, 1, "", "DenseSAGEConv"], [363, 1, 1, "", "EdgeConv"], [364, 1, 1, "", "GATConv"], [365, 1, 1, "", "GINConv"], [366, 1, 1, "", "GMMConv"], [367, 1, 1, "", "GatedGraphConv"], [368, 1, 1, "", "GraphConv"], [369, 1, 1, "", "NNConv"], [370, 1, 1, "", "RelGraphConv"], [371, 1, 1, "", "SAGEConv"], [372, 1, 1, "", "SGConv"], [373, 1, 1, "", "TAGConv"]], "dgl.nn.mxnet.glob": [[374, 1, 1, "", "AvgPooling"], [375, 1, 1, "", "GlobalAttentionPooling"], [376, 1, 1, "", "MaxPooling"], [377, 1, 1, "", "Set2Set"], [378, 1, 1, "", "SortPooling"], [379, 1, 1, "", "SumPooling"]], "dgl.nn.mxnet.utils": [[380, 1, 1, "", "Sequential"]], "dgl.nn.pytorch": [[381, 1, 1, "", "DeepWalk"], [382, 1, 1, "", "HeteroEmbedding"], [383, 1, 1, "", "HeteroGraphConv"], [384, 1, 1, "", "HeteroLinear"], [385, 1, 1, "", "MetaPath2Vec"], [386, 1, 1, "", "TypedLinear"]], "dgl.nn.pytorch.DeepWalk": [[381, 2, 1, "", "forward"], [381, 5, 1, "", "node_embed"], [381, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroEmbedding": [[382, 2, 1, "", "forward"], [382, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroGraphConv": [[383, 2, 1, "", "forward"], [383, 5, 1, "", "mods"]], "dgl.nn.pytorch.HeteroLinear": [[384, 2, 1, "", "forward"]], "dgl.nn.pytorch.MetaPath2Vec": [[385, 2, 1, "", "forward"], [385, 5, 1, "", "local_to_global_nid"], [385, 5, 1, "", "node_embed"], [385, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.TypedLinear": [[386, 2, 1, "", "forward"], [386, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv": [[387, 1, 1, "", "AGNNConv"], [388, 1, 1, "", "APPNPConv"], [389, 1, 1, "", "AtomicConv"], [390, 1, 1, "", "CFConv"], [391, 1, 1, "", "ChebConv"], [392, 1, 1, "", "CuGraphGATConv"], [393, 1, 1, "", "CuGraphRelGraphConv"], [394, 1, 1, "", "CuGraphSAGEConv"], [395, 1, 1, "", "DGNConv"], [396, 1, 1, "", "DenseChebConv"], [397, 1, 1, "", "DenseGraphConv"], [398, 1, 1, "", "DenseSAGEConv"], [399, 1, 1, "", "DotGatConv"], [400, 1, 1, "", "EGATConv"], [401, 1, 1, "", "EGNNConv"], [402, 1, 1, "", "EdgeConv"], [403, 1, 1, "", "EdgeGATConv"], [404, 1, 1, "", "EdgeWeightNorm"], [405, 1, 1, "", "GATConv"], [406, 1, 1, "", "GATv2Conv"], [407, 1, 1, "", "GCN2Conv"], [408, 1, 1, "", "GINConv"], [409, 1, 1, "", "GINEConv"], [410, 1, 1, "", "GMMConv"], [411, 1, 1, "", "GatedGCNConv"], [412, 1, 1, "", "GatedGraphConv"], [413, 1, 1, "", "GraphConv"], [414, 1, 1, "", "GroupRevRes"], [415, 1, 1, "", "HGTConv"], [416, 1, 1, "", "NNConv"], [417, 1, 1, "", "PNAConv"], [418, 1, 1, "", "RelGraphConv"], [419, 1, 1, "", "SAGEConv"], [420, 1, 1, "", "SGConv"], [421, 1, 1, "", "TAGConv"], [422, 1, 1, "", "TWIRLSConv"], [423, 1, 1, "", "TWIRLSUnfoldingAndAttention"]], "dgl.nn.pytorch.conv.AGNNConv": [[387, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.APPNPConv": [[388, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.AtomicConv": [[389, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CFConv": [[390, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.ChebConv": [[391, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CuGraphGATConv": [[392, 2, 1, "", "forward"], [392, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphRelGraphConv": [[393, 2, 1, "", "forward"], [393, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphSAGEConv": [[394, 2, 1, "", "forward"], [394, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DGNConv": [[395, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.DenseChebConv": [[396, 2, 1, "", "forward"], [396, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseGraphConv": [[397, 2, 1, "", "forward"], [397, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseSAGEConv": [[398, 2, 1, "", "forward"], [398, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DotGatConv": [[399, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EGATConv": [[400, 2, 1, "", "forward"], [400, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EGNNConv": [[401, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeConv": [[402, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeGATConv": [[403, 2, 1, "", "forward"], [403, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EdgeWeightNorm": [[404, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GATConv": [[405, 2, 1, "", "forward"], [405, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GATv2Conv": [[406, 2, 1, "", "forward"], [406, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GCN2Conv": [[407, 2, 1, "", "forward"], [407, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GINConv": [[408, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GINEConv": [[409, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GMMConv": [[410, 2, 1, "", "forward"], [410, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GatedGCNConv": [[411, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GatedGraphConv": [[412, 2, 1, "", "forward"], [412, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GraphConv": [[413, 5, 1, "", "bias"], [413, 2, 1, "", "forward"], [413, 2, 1, "", "reset_parameters"], [413, 5, 1, "", "weight"]], "dgl.nn.pytorch.conv.GroupRevRes": [[414, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.HGTConv": [[415, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.NNConv": [[416, 2, 1, "", "forward"], [416, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.PNAConv": [[417, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.RelGraphConv": [[418, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.SAGEConv": [[419, 2, 1, "", "forward"], [419, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.SGConv": [[420, 2, 1, "", "forward"], [420, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TAGConv": [[421, 2, 1, "", "forward"], [421, 5, 1, "", "lin"], [421, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TWIRLSConv": [[422, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention": [[423, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain": [[424, 1, 1, "", "GNNExplainer"], [425, 1, 1, "", "HeteroGNNExplainer"], [426, 1, 1, "", "HeteroPGExplainer"], [427, 1, 1, "", "HeteroSubgraphX"], [428, 1, 1, "", "PGExplainer"], [429, 1, 1, "", "SubgraphX"]], "dgl.nn.pytorch.explain.GNNExplainer": [[424, 2, 1, "", "explain_graph"], [424, 2, 1, "", "explain_node"], [424, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroGNNExplainer": [[425, 2, 1, "", "explain_graph"], [425, 2, 1, "", "explain_node"], [425, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroPGExplainer": [[426, 2, 1, "", "explain_graph"], [426, 2, 1, "", "explain_node"], [426, 2, 1, "", "forward"], [426, 2, 1, "", "train_step"], [426, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.HeteroSubgraphX": [[427, 2, 1, "", "explain_graph"], [427, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.PGExplainer": [[428, 2, 1, "", "explain_graph"], [428, 2, 1, "", "explain_node"], [428, 2, 1, "", "forward"], [428, 2, 1, "", "train_step"], [428, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.SubgraphX": [[429, 2, 1, "", "explain_graph"], [429, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory": [[430, 1, 1, "", "KNNGraph"], [431, 1, 1, "", "RadiusGraph"], [432, 1, 1, "", "SegmentedKNNGraph"]], "dgl.nn.pytorch.factory.KNNGraph": [[430, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.RadiusGraph": [[431, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.SegmentedKNNGraph": [[432, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob": [[433, 1, 1, "", "AvgPooling"], [434, 1, 1, "", "GlobalAttentionPooling"], [435, 1, 1, "", "MaxPooling"], [436, 1, 1, "", "Set2Set"], [437, 1, 1, "", "SetTransformerDecoder"], [438, 1, 1, "", "SetTransformerEncoder"], [439, 1, 1, "", "SortPooling"], [440, 1, 1, "", "SumPooling"], [441, 1, 1, "", "WeightAndSum"]], "dgl.nn.pytorch.glob.AvgPooling": [[433, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.GlobalAttentionPooling": [[434, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.MaxPooling": [[435, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.Set2Set": [[436, 2, 1, "", "forward"], [436, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.glob.SetTransformerDecoder": [[437, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SetTransformerEncoder": [[438, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SortPooling": [[439, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SumPooling": [[440, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.WeightAndSum": [[441, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt": [[442, 1, 1, "", "BiasedMHA"], [443, 1, 1, "", "DegreeEncoder"], [444, 1, 1, "", "EGTLayer"], [445, 1, 1, "", "GraphormerLayer"], [446, 1, 1, "", "LapPosEncoder"], [447, 1, 1, "", "PathEncoder"], [448, 1, 1, "", "SpatialEncoder"], [449, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt.BiasedMHA": [[442, 2, 1, "", "forward"], [442, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.gt.DegreeEncoder": [[443, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.EGTLayer": [[444, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.GraphormerLayer": [[445, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.LapPosEncoder": [[446, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.PathEncoder": [[447, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder": [[448, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder3d": [[449, 2, 1, "", "forward"]], "dgl.nn.pytorch.link": [[450, 1, 1, "", "EdgePredictor"], [451, 1, 1, "", "TransE"], [452, 1, 1, "", "TransR"]], "dgl.nn.pytorch.link.EdgePredictor": [[450, 2, 1, "", "forward"], [450, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransE": [[451, 2, 1, "", "forward"], [451, 5, 1, "", "rel_emb"], [451, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransR": [[452, 2, 1, "", "forward"], [452, 5, 1, "", "rel_emb"], [452, 5, 1, "", "rel_project"], [452, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.sparse_emb": [[453, 1, 1, "", "NodeEmbedding"]], "dgl.nn.pytorch.utils": [[454, 1, 1, "", "JumpingKnowledge"], [455, 1, 1, "", "LabelPropagation"], [456, 1, 1, "", "Sequential"], [457, 1, 1, "", "WeightBasis"]], "dgl.nn.pytorch.utils.JumpingKnowledge": [[454, 2, 1, "", "forward"], [454, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.utils.LabelPropagation": [[455, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.Sequential": [[456, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.WeightBasis": [[457, 2, 1, "", "forward"]], "dgl.nn.tensorflow.conv": [[458, 1, 1, "", "APPNPConv"], [459, 1, 1, "", "ChebConv"], [460, 1, 1, "", "GATConv"], [461, 1, 1, "", "GINConv"], [462, 1, 1, "", "GraphConv"], [463, 1, 1, "", "RelGraphConv"], [464, 1, 1, "", "SAGEConv"], [465, 1, 1, "", "SGConv"]], "dgl.nn.tensorflow.glob": [[466, 1, 1, "", "AvgPooling"], [467, 1, 1, "", "GlobalAttentionPooling"], [468, 1, 1, "", "HeteroGraphConv"], [469, 1, 1, "", "MaxPooling"], [470, 1, 1, "", "SortPooling"], [471, 1, 1, "", "SumPooling"]], "dgl.ops": [[477, 4, 1, "", "copy_e_max"], [478, 4, 1, "", "copy_e_mean"], [479, 4, 1, "", "copy_e_min"], [480, 4, 1, "", "copy_e_sum"], [481, 4, 1, "", "copy_u"], [482, 4, 1, "", "copy_u_max"], [483, 4, 1, "", "copy_u_mean"], [484, 4, 1, "", "copy_u_min"], [485, 4, 1, "", "copy_u_sum"], [486, 4, 1, "", "copy_v"], [487, 4, 1, "", "e_add_u"], [488, 4, 1, "", "e_add_v"], [489, 4, 1, "", "e_div_u"], [490, 4, 1, "", "e_div_v"], [491, 4, 1, "", "e_dot_u"], [492, 4, 1, "", "e_dot_v"], [493, 4, 1, "", "e_mul_u"], [494, 4, 1, "", "e_mul_v"], [495, 4, 1, "", "e_sub_u"], [496, 4, 1, "", "e_sub_v"], [497, 4, 1, "", "gather_mm"], [498, 4, 1, "", "gsddmm"], [499, 4, 1, "", "gspmm"], [500, 4, 1, "", "segment_mm"], [501, 4, 1, "", "segment_reduce"], [502, 4, 1, "", "u_add_e"], [503, 4, 1, "", "u_add_e_max"], [504, 4, 1, "", "u_add_e_mean"], [505, 4, 1, "", "u_add_e_min"], [506, 4, 1, "", "u_add_e_sum"], [507, 4, 1, "", "u_add_v"], [508, 4, 1, "", "u_div_e"], [509, 4, 1, "", "u_div_e_max"], [510, 4, 1, "", "u_div_e_mean"], [511, 4, 1, "", "u_div_e_min"], [512, 4, 1, "", "u_div_e_sum"], [513, 4, 1, "", "u_div_v"], [514, 4, 1, "", "u_dot_e"], [515, 4, 1, "", "u_dot_v"], [516, 4, 1, "", "u_mul_e"], [517, 4, 1, "", "u_mul_e_max"], [518, 4, 1, "", "u_mul_e_mean"], [519, 4, 1, "", "u_mul_e_min"], [520, 4, 1, "", "u_mul_e_sum"], [521, 4, 1, "", "u_mul_v"], [522, 4, 1, "", "u_sub_e"], [523, 4, 1, "", "u_sub_e_max"], [524, 4, 1, "", "u_sub_e_mean"], [525, 4, 1, "", "u_sub_e_min"], [526, 4, 1, "", "u_sub_e_sum"], [527, 4, 1, "", "u_sub_v"], [528, 4, 1, "", "v_add_e"], [529, 4, 1, "", "v_add_u"], [530, 4, 1, "", "v_div_e"], [531, 4, 1, "", "v_div_u"], [532, 4, 1, "", "v_dot_e"], [533, 4, 1, "", "v_dot_u"], [534, 4, 1, "", "v_mul_e"], [535, 4, 1, "", "v_mul_u"], [536, 4, 1, "", "v_sub_e"], [537, 4, 1, "", "v_sub_u"]], "dgl.optim.pytorch": [[10, 1, 1, "", "SparseAdagrad"], [10, 1, 1, "", "SparseAdam"]], "dgl.sampling": [[556, 1, 1, "", "PinSAGESampler"], [557, 4, 1, "", "global_uniform_negative_sampling"], [558, 4, 1, "", "node2vec_random_walk"], [559, 4, 1, "", "pack_traces"], [560, 4, 1, "", "random_walk"], [561, 4, 1, "", "sample_labors"], [562, 4, 1, "", "sample_neighbors"], [563, 4, 1, "", "sample_neighbors_biased"], [564, 4, 1, "", "select_topk"]], "dgl.sampling.PinSAGESampler": [[556, 2, 1, "", "__init__"]], "dgl.sparse": [[12, 1, 1, "", "SparseMatrix"], [605, 4, 1, "", "add"], [606, 4, 1, "", "bsddmm"], [607, 4, 1, "", "bspmm"], [608, 4, 1, "", "diag"], [609, 4, 1, "", "div"], [610, 4, 1, "", "from_coo"], [611, 4, 1, "", "from_csc"], [612, 4, 1, "", "from_csr"], [613, 4, 1, "", "identity"], [614, 4, 1, "", "matmul"], [615, 4, 1, "", "mul"], [616, 4, 1, "", "power"], [617, 4, 1, "", "sddmm"], [618, 4, 1, "", "softmax"], [619, 4, 1, "", "sp_add_v"], [620, 4, 1, "", "sp_broadcast_v"], [621, 4, 1, "", "sp_div_v"], [622, 4, 1, "", "sp_mul_v"], [623, 4, 1, "", "sp_sub_v"], [624, 4, 1, "", "spmatrix"], [625, 4, 1, "", "spmm"], [626, 4, 1, "", "spspmm"], [627, 4, 1, "", "sub"], [628, 4, 1, "", "val_like"]], "dgl.sparse.SparseMatrix": [[574, 3, 1, "", "T"], [575, 2, 1, "", "coalesce"], [576, 3, 1, "", "col"], [577, 2, 1, "", "coo"], [578, 2, 1, "", "cpu"], [579, 2, 1, "", "csc"], [580, 2, 1, "", "csr"], [581, 2, 1, "", "cuda"], [582, 3, 1, "", "device"], [583, 2, 1, "", "double"], [584, 3, 1, "", "dtype"], [585, 2, 1, "", "float"], [586, 2, 1, "", "has_duplicate"], [587, 2, 1, "", "indices"], [588, 2, 1, "", "int"], [589, 2, 1, "", "long"], [590, 2, 1, "", "neg"], [591, 3, 1, "", "nnz"], [592, 2, 1, "", "reduce"], [593, 3, 1, "", "row"], [594, 3, 1, "", "shape"], [595, 2, 1, "", "smax"], [596, 2, 1, "", "smean"], [597, 2, 1, "", "smin"], [598, 2, 1, "", "softmax"], [599, 2, 1, "", "sum"], [600, 2, 1, "", "t"], [601, 2, 1, "", "to"], [602, 2, 1, "", "to_dense"], [603, 2, 1, "", "transpose"], [604, 3, 1, "", "val"]], "dgl.transforms": [[646, 1, 1, "", "AddEdge"], [647, 1, 1, "", "AddMetaPaths"], [648, 1, 1, "", "AddReverse"], [649, 1, 1, "", "AddSelfLoop"], [650, 1, 1, "", "BaseTransform"], [651, 1, 1, "", "Compose"], [652, 1, 1, "", "DropEdge"], [653, 1, 1, "", "DropNode"], [654, 1, 1, "", "FeatMask"], [655, 1, 1, "", "GCNNorm"], [656, 1, 1, "", "GDC"], [657, 1, 1, "", "HeatKernel"], [658, 1, 1, "", "KHopGraph"], [659, 1, 1, "", "LapPE"], [660, 1, 1, "", "LineGraph"], [661, 1, 1, "", "NodeShuffle"], [662, 1, 1, "", "PPR"], [663, 1, 1, "", "RandomWalkPE"], [664, 1, 1, "", "RemoveSelfLoop"], [665, 1, 1, "", "RowFeatNormalizer"], [666, 1, 1, "", "SIGNDiffusion"], [667, 1, 1, "", "SVDPE"], [668, 1, 1, "", "ToLevi"], [669, 1, 1, "", "ToSimple"]], "dgl.udf.EdgeBatch": [[670, 2, 1, "", "batch_size"], [671, 3, 1, "", "data"], [672, 3, 1, "", "dst"], [673, 2, 1, "", "edges"], [674, 3, 1, "", "src"]], "dgl.udf.NodeBatch": [[675, 2, 1, "", "batch_size"], [676, 3, 1, "", "data"], [677, 3, 1, "", "mailbox"], [678, 2, 1, "", "nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 5, 8, 11, 22, 34, 35, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 73, 74, 87, 88, 90, 93, 94, 100, 103, 107, 113, 122, 125, 130, 131, 151, 152, 161, 163, 167, 168, 180, 182, 183, 188, 208, 210, 213, 220, 221, 230, 231, 233, 235, 240, 241, 242, 243, 245, 246, 287, 293, 297, 301, 305, 310, 317, 332, 333, 337, 338, 349, 350, 389, 397, 399, 403, 412, 413, 415, 436, 456, 473, 474, 498, 499, 538, 554, 561, 562, 563, 565, 568, 572, 573, 659, 686, 687, 689, 690, 691, 693, 695, 697, 700, 702, 705, 706, 707, 708, 710, 711, 718, 720, 721, 723, 725, 727, 728, 730, 752, 773, 780, 785, 794, 804, 805, 811, 816, 817, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 832, 833, 839, 843, 846, 847, 850, 851, 852, 856, 859, 862, 863, 868, 869], "0": [0, 4, 5, 6, 9, 10, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 207, 210, 213, 214, 216, 217, 219, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 291, 293, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 315, 317, 318, 319, 323, 325, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 353, 355, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 472, 473, 474, 475, 476, 500, 501, 538, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 578, 579, 580, 581, 583, 585, 586, 588, 589, 592, 595, 596, 597, 598, 599, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 620, 625, 626, 627, 631, 632, 633, 634, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 687, 688, 689, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 709, 711, 712, 713, 714, 715, 717, 719, 720, 723, 724, 725, 726, 728, 729, 730, 734, 735, 737, 738, 740, 743, 744, 745, 746, 747, 753, 755, 756, 757, 758, 760, 763, 764, 765, 766, 768, 769, 770, 774, 775, 777, 778, 779, 780, 781, 784, 785, 786, 787, 788, 795, 797, 798, 799, 800, 801, 803, 804, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 824, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 845, 846, 847, 849, 850, 851, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 867, 868, 869, 871], "00": [25, 340, 631, 667, 818, 819, 822, 824, 827, 841, 845, 849, 855, 858, 861, 865, 867, 871], "000": [14, 146, 147, 169, 173, 174, 191, 195, 818, 824, 826, 845, 849, 865, 867], "0000": [9, 118, 173, 355, 389, 397, 408, 413, 418, 423, 476, 548, 592, 596, 598, 609, 618, 655, 659, 663, 817, 821, 826], "00000": [827, 850, 851, 853, 856], "000000": 817, "000007645": 843, "00001": [827, 850, 851, 853, 856], "00002": [827, 850, 851, 853, 856], "00003": [827, 850, 851, 853, 856], "00004": [827, 850, 851, 853, 856], "00005": [850, 851, 853, 856], "00006": [850, 851, 853, 856], "00007": [850, 851, 853, 856], "00008": [850, 851, 853, 856], "00009": [850, 851, 853, 856], "0000e": [340, 631, 667], "00010": [850, 851, 853], "00011": [850, 851, 853], "00012": [850, 851, 853], "00013": [850, 851, 853], "00014": [850, 851, 853], "00015": [850, 851, 853], "00016": [850, 851, 853], "00017": [850, 851, 853], "00018": [850, 851, 853], "00019": [850, 851, 853], "00020": [850, 851, 853], "00021": [850, 851, 853], "00022": [850, 851, 853], "00023": [850, 851, 853], "00024": [850, 851, 853], "00025": [850, 853], "00026": [850, 853], "00027": [850, 853], "00028": [850, 853], "00029": [850, 853], "00030": 850, "00031": 850, "00032": 850, "00033": 850, "00034": 850, "00035": 850, "00036": 850, "00037": 850, "00038": 850, "00039": 850, "00040": 850, "00041": 850, "00042": 850, "00043": 850, "00044": 850, "00045": 850, "00046": 850, "00047": 850, "00048": 850, "00049": 850, "0005": [426, 428], "001": [4, 10, 453, 563, 818, 819, 826, 827, 846, 847], "002": [14, 818, 826, 853], "002158116134429955": 687, "0028": 437, "003": [14, 556, 818, 836], "004": [14, 818, 824, 836, 871], "0046": [829, 850], "0047": 850, "0048": 850, "0049": 850, "005": [424, 425, 818, 836], "0052": 829, "0054": 821, "006": [14, 818, 836, 853], "007": [14, 818, 836], "00743445923710373": 687, "008": [14, 818, 836], "008790817766266334": 687, "0089": 408, "009": [14, 818, 836], "0093": 818, "0095": 832, "00982": [146, 147, 169, 174, 195], "0099": 438, "01": [142, 143, 189, 340, 381, 424, 425, 426, 428, 631, 667, 715, 824, 834, 836, 837, 838, 841, 851, 855, 863, 868, 869], "010": [14, 818, 836], "011": [14, 818], "0111": 832, "0118": 408, "0119": 851, "012": [818, 836], "01217200152200748": 687, "0129": 406, "013": 818, "0130": 821, "01315": 822, "0134": 456, "014": [14, 818, 836], "01404": 162, "0142": [433, 434, 435, 436, 437, 438, 439, 440, 441], "0145": 436, "0148": 822, "015": [14, 818], "0151": 832, "0152": 822, "0155": 416, "0156": [437, 822], "0157": 821, "016": [14, 818, 836], "0160": 832, "01600913": 832, "0163": 662, "0164": 391, "0167": 829, "0169": 456, "017": [14, 818, 836], "0177": 818, "018": 818, "0180": [598, 618], "0183": 850, "0184": 393, "0185": 822, "019": [14, 818, 824, 841], "0192": 822, "01937671": 832, "0194": 832, "0196": 850, "01973": 556, "02": [824, 858], "020": 836, "0200": 656, "0201": 818, "0202": 829, "0207": 408, "021": 836, "0210": 850, "0217": 662, "0219": [396, 832], "02216": 719, "0226": 850, "023": 14, "0235": 436, "0239": 406, "0244": 850, "025": [385, 836, 853], "0255": 662, "026": 14, "0264": 850, "0268": [399, 405], "02716009": 832, "0272": 832, "0276": 437, "0277": 829, "0278": 659, "0285": [818, 850], "029": 836, "0297": [643, 644], "03": [824, 827, 855], "030": 14, "0303": 832, "0310": 850, "0315": [399, 405], "0316": 833, "0331": 818, "03348": 444, "0337": 850, "034": 836, "0340": [818, 829], "0341": 456, "0342": 832, "0348": 833, "0361": 818, "0367": 850, "03671": 842, "0373": 821, "0375": 413, "0376": 436, "038": 834, "03819": 863, "0383": 662, "0386": 687, "038622249776255946": 687, "039": 14, "0390": [399, 405], "0397": 850, "03d": [818, 826], "03f": 829, "04": [14, 392, 393, 394, 815], "040": 173, "0400": [656, 850], "0401": [398, 829], "0406": [412, 657], "04133991340612775": 687, "0415578": 833, "0416": 833, "042": 836, "0425": 412, "0428": 437, "0429": 818, "043": 136, "043591": 839, "0438": [821, 850], "0442": 822, "0448": 456, "04486384200747007": 687, "045": 14, "0451": 818, "0455": 829, "04573": 428, "0460": 833, "0461": [437, 833], "0470": 437, "048": 836, "0480": 850, "0483": 436, "0483e": 340, "0486": 829, "04878384701995819": 687, "0489": 818, "049629338970987646": 687, "04it": 818, "05": [456, 662, 666, 699, 743, 784, 853, 856], "0500": 826, "0507": 832, "0510": 662, "0515": 829, "05152": 429, "0523": 412, "0524": 835, "0527": [396, 850], "05287": 134, "0531": 833, "05354099924658973": 687, "0539": [643, 644], "054": [14, 159, 173], "054016385555202384": 687, "0541": [408, 657], "0543": [399, 405, 829, 851], "0544": [128, 129], "05496823": 832, "0550": 832, "0553": 822, "0556": [456, 817], "0566": 851, "0577": 832, "058": [14, 822], "0580": [412, 433, 434, 435, 436, 437, 438, 439, 440, 441, 850], "0588": 817, "0591": [118, 832], "059172654879085296": 687, "0596": [406, 833], "05d": [827, 850, 851, 853, 856, 869], "06": [25, 822, 863], "060": 14, "0600": [173, 656], "0601": 832, "0608": 440, "0622": 832, "0630": 425, "0634": [438, 833], "0638": 662, "0639": 850, "064": 836, "0643": 818, "0654": 817, "0671": 821, "0684": 829, "0691": 833, "0699": [433, 434, 435, 436, 437, 438, 439, 440, 441, 829], "07": [631, 667, 824, 841], "0704": 850, "0705": 832, "0711e": 340, "0716": 832, "07164375": 832, "0722": 821, "0724": [128, 129], "0729": 441, "073": [161, 836], "0731": 817, "074": 14, "0744": 833, "07502571020414439": 687, "0758": 408, "0762": [399, 405], "0767": 817, "0768": 829, "0769": [817, 832], "07692542": 832, "077": 14, "0775": 821, "0778": 850, "07816474278491703": 687, "0783": [399, 405], "08": [4, 10, 245, 473], "0800": 656, "0804": [643, 644], "0810": 821, "0811": 818, "0812": 657, "0832": 412, "0833": 9, "0835": [396, 833], "0836": 817, "084": [824, 858], "0840": 856, "0845": 437, "0846": 832, "0852": [827, 832], "08543289788089736": 687, "08568116": 832, "0857": [412, 643, 644, 832], "086": 14, "0860": 850, "0862": 832, "0864": 829, "0868": 687, "08680051341900807": 687, "08691420300562658": 687, "08692": 162, "0874": 829, "0876": 393, "0877": 833, "0878": 829, "0880": [643, 644], "0888": 419, "0891": 817, "0892": 821, "08983": 863, "08it": 827, "09": [822, 827], "0901": 818, "0909": 817, "0911194482288028": 687, "0913": 438, "0915": 424, "0917": 817, "0920": 438, "0928555079874982": 687, "0935": 406, "0937": 424, "0947": 833, "09471621": 833, "0949": 818, "0952": 850, "0953": 817, "0956": 821, "0958": [832, 833], "09582967": 833, "095835": 832, "0969": 833, "09694628": 833, "0973": 856, "0988": 832, "0993": 821, "0a0": 827, "0k": [178, 179], "0x7fec820937b8": [692, 738, 778], "0\ubd80\ud130": [780, 787, 788], "0\uc5d0": 780, "0\uc73c\ub85c": 799, "0\uc740": [779, 780], "0\uc744": 780, "0\uc774": [804, 807], "0\uc774\uace0": 780, "0\uc778": 807, "1": [1, 4, 5, 6, 9, 10, 12, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 139, 140, 142, 143, 146, 147, 148, 158, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 183, 184, 186, 189, 190, 192, 195, 197, 198, 205, 207, 210, 214, 216, 217, 219, 226, 227, 229, 230, 232, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 263, 264, 265, 266, 287, 291, 293, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 315, 316, 317, 318, 319, 323, 325, 326, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 355, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 472, 473, 474, 475, 476, 497, 500, 501, 538, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 632, 633, 634, 638, 639, 640, 641, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 704, 705, 707, 708, 710, 712, 713, 714, 715, 716, 719, 720, 721, 723, 724, 725, 726, 728, 729, 731, 733, 734, 735, 737, 738, 740, 741, 748, 749, 751, 752, 754, 755, 756, 757, 758, 759, 761, 763, 764, 765, 766, 768, 769, 771, 773, 774, 775, 777, 778, 781, 782, 790, 793, 794, 796, 797, 798, 799, 800, 801, 802, 804, 805, 807, 808, 809, 810, 811, 812, 815, 816, 817, 818, 819, 822, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 843, 846, 847, 850, 851, 852, 858, 861, 862, 863, 868, 869], "10": [4, 5, 6, 9, 10, 14, 20, 26, 130, 134, 135, 137, 142, 145, 146, 147, 149, 155, 159, 161, 163, 166, 168, 169, 171, 173, 174, 180, 182, 185, 187, 188, 192, 193, 195, 210, 214, 216, 219, 220, 246, 293, 298, 299, 301, 302, 303, 308, 309, 310, 311, 315, 319, 333, 336, 337, 338, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 451, 452, 453, 455, 474, 500, 501, 538, 546, 547, 554, 556, 605, 608, 609, 615, 616, 620, 627, 640, 652, 654, 657, 661, 666, 687, 691, 692, 693, 703, 711, 712, 715, 717, 718, 719, 725, 726, 728, 729, 730, 737, 738, 747, 755, 765, 766, 768, 769, 770, 777, 778, 788, 797, 809, 810, 811, 812, 813, 815, 816, 817, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 846, 847, 850, 852, 853, 856, 859, 862, 863, 868, 869], "100": [9, 22, 172, 173, 174, 194, 287, 385, 386, 424, 425, 427, 429, 430, 432, 442, 444, 445, 449, 546, 547, 616, 689, 699, 720, 726, 729, 730, 735, 743, 766, 769, 770, 775, 784, 799, 804, 810, 812, 813, 816, 818, 819, 832, 833, 834, 836, 837, 853, 856, 859, 862, 863], "1000": [4, 9, 14, 141, 150, 154, 176, 205, 209, 217, 309, 385, 414, 609, 656, 669, 712, 713, 725, 726, 740, 765, 766, 781, 799, 809, 810, 816, 817, 818, 819, 821, 832, 833, 834, 836, 837, 850, 852, 853, 863], "10000": [14, 132, 133, 144, 147, 170, 171, 174, 183, 195, 832, 833, 838], "100000": 173, "1000000": 240, "1002": 456, "1008": 398, "100k": 173, "100x100": 171, "101": [184, 430, 432, 697, 782, 832, 833, 856, 863], "1014": [128, 129], "10150": 161, "102": [430, 432, 816, 832, 833, 856, 863], "1020": 835, "1022": 556, "1024": [168, 186, 210, 213, 214, 215, 216, 220, 683, 711, 714, 715, 717, 718, 719, 728, 755, 756, 758, 760, 768, 797, 798, 801, 803, 811, 827, 829, 846, 847, 869], "1025": 829, "1026": 829, "1028": 853, "1029": 853, "103": [816, 832, 833, 856, 863], "1030": 853, "1031": 853, "1032": 853, "1033": [832, 853], "1034": 853, "1035": 853, "1036": 853, "1037": 853, "1037097085190507": 687, "1038000": 188, "1039": [659, 853], "104": [832, 833, 856, 863], "1040": 853, "1041": [185, 853], "1042": 853, "1043": 853, "1043998": 780, "1046": 418, "1047": 818, "1048": [817, 853], "105": [832, 833, 834, 836, 856, 863], "1052": 687, "10522806046048205": 687, "1053": 853, "1054": 850, "10556": [25, 154, 816, 817, 819, 826, 834, 836, 837, 850, 852, 853], "106": [832, 833, 856, 863], "1060": 172, "1061": 853, "1064": 821, "1066": 118, "1067": 833, "107": [832, 833, 836, 838, 856, 863], "1075": 853, "108": [14, 174, 832, 833, 856, 863], "1083": 657, "1086": 687, "10864079337442234": 687, "1089": 556, "109": [832, 833, 856, 863], "10903": 767, "1092": 149, "1095": 822, "1099": 419, "10it": 827, "10m": 173, "11": [9, 14, 133, 161, 192, 293, 301, 310, 311, 424, 620, 640, 652, 653, 661, 720, 755, 797, 815, 816, 817, 818, 819, 821, 822, 827, 832, 833, 852, 856, 859, 863], "110": [832, 833, 836, 856, 863], "1102": 853, "1107": 410, "111": [832, 833, 856, 863], "1113": 25, "11158102039672668": 687, "1117": 851, "112": [832, 833, 856, 863], "112018": 829, "1123": 406, "1126": 437, "1127": 818, "113": [832, 833, 856, 863], "1133": 833, "1134649": 780, "1135": 390, "1138": 392, "1139": 456, "114": [181, 720, 816, 832, 833, 856, 863], "1140\uc5b5\uac1c\uc758": 804, "11446843700743892": 687, "1145": [134, 163, 173, 424, 687], "114615892": 25, "1147": 821, "115": [832, 833, 836, 856, 863], "1151": 833, "1152": 832, "115428": 829, "1154897249106891": 687, "1155": [406, 687], "1156": 406, "1157": 406, "116": [832, 833, 856, 863], "1164": 853, "11640": [137, 171, 180, 182, 188], "1166": [419, 833], "1167": 850, "117": [144, 147, 832, 833, 856, 863], "11701": 192, "11758": 188, "1178": [25, 168, 186], "1179": 821, "118": [832, 833, 834, 856, 863], "1182": 821, "119": [136, 832, 833, 836, 856, 863], "1191": 556, "1194614": 780, "11d": 179, "11\ubc88": 797, "11\ubc88\uc5d0\uc11c": 797, "11\uc6d4": 789, "12": [9, 14, 79, 81, 178, 179, 293, 297, 300, 301, 310, 311, 400, 403, 410, 411, 424, 427, 429, 620, 652, 661, 720, 804, 815, 821, 822, 826, 827, 829, 832, 833, 838, 852, 856, 863], "120": [150, 193, 824, 832, 833, 836, 841, 856, 863], "1200": 9, "1203": 695, "1203354": 780, "1209": 390, "121": [175, 821, 832, 833, 853, 856, 863], "122": [832, 833, 856, 863], "1222": 832, "1224": 829, "123": [14, 146, 192, 832, 833, 856, 863], "1230": 556, "1232": 832, "12345": [827, 868, 869], "12346": 453, "1237": [818, 851], "123718280": [4, 240], "124": [25, 832, 833, 856, 863], "12403": 303, "1243": 821, "1246": 832, "12463691": 832, "125": [832, 833, 836, 856, 863], "1250": 9, "126": [14, 153, 832, 833, 856, 863], "1261": 416, "1261310": 240, "1262": 438, "127": [453, 827, 832, 833, 842, 856, 863, 868, 869], "128": [5, 165, 381, 385, 422, 429, 444, 712, 826, 832, 833, 856, 863], "1282": 556, "1283": 390, "12860": 695, "12861": 695, "1289": 556, "129": [832, 833, 850, 853, 856, 863], "1290": 832, "1291": 826, "1293": 826, "1294": [826, 829, 850], "12k": 195, "13": [9, 135, 165, 194, 293, 301, 310, 311, 609, 652, 815, 818, 821, 827, 832, 833, 834, 852, 856, 863], "130": [178, 179, 832, 833, 836, 856, 863], "130622": 25, "13066706": 832, "1307": 832, "1309": 418, "131": [832, 833, 856, 863], "1311": 424, "132": [161, 832, 833, 856, 863], "1323": [643, 644], "1328": 118, "133": [14, 832, 833, 856, 863], "1330": 425, "1338": 829, "134": [832, 833, 834, 856, 863], "1342": 412, "1348": 832, "1349": 436, "135": [14, 832, 833, 836, 856, 863], "1350": 821, "1353": 657, "1355": 856, "1357": 832, "136": [25, 145, 832, 833, 856, 863], "1360": 832, "1361": [436, 659], "1364": 687, "1364240150959487": 687, "1366": 826, "137": [832, 833, 856, 863], "1371": 408, "1373e": [631, 667], "13752": 25, "137551": 829, "1376": 412, "1377": 410, "13774964202156292": 687, "138": [832, 833, 838, 856, 863], "1382": 821, "1388": 412, "139": [832, 833, 856, 863], "1390": 821, "1393": 687, "1393107840629273": 687, "1395": 408, "14": [14, 158, 177, 293, 300, 310, 311, 653, 689, 735, 775, 821, 826, 827, 829, 832, 833, 852, 856, 863], "140": [132, 154, 816, 817, 819, 832, 833, 834, 836, 837, 850, 852, 853, 856, 863], "1408": [408, 832], "141": [832, 833, 856, 863], "141442": 191, "142": [832, 833, 856, 863], "1428": 818, "1428571492433548": 120, "1429": 817, "143": [832, 833, 856, 863], "1431": 25, "1433": [154, 816, 817, 819, 834, 836, 837, 850, 852, 853], "1434": 850, "144": [832, 833, 836, 856, 863], "1440": 418, "1448": 850, "1449": 821, "145": [25, 832, 833, 836, 838, 856, 863], "14541": 157, "1458": [643, 644], "146": [832, 833, 856, 863], "1461": 832, "14627522432017592": 687, "146955": 829, "147": [163, 816, 832, 833, 856, 863], "1472": 826, "1479": [399, 405, 821], "148": [14, 832, 833, 856, 863], "148100": 170, "149": [832, 833, 856, 863], "1496": 424, "1497": 826, "15": [9, 14, 25, 151, 164, 177, 210, 214, 216, 219, 220, 293, 303, 308, 310, 311, 400, 403, 500, 649, 652, 662, 700, 711, 720, 804, 816, 821, 822, 824, 826, 829, 832, 833, 834, 836, 837, 839, 842, 852, 856, 861, 863], "150": [832, 833, 836, 856, 862, 863], "1500": 662, "1504": 829, "1505": 556, "1507": 832, "1508034646": 839, "151": [832, 833, 856, 863], "151139": 829, "1516": 412, "152": [832, 833, 856, 863], "1520": [134, 643, 644], "15218126307872892": 687, "1526": 832, "15279575": 833, "1528": 833, "1529": 833, "15292396": 833, "153": [181, 832, 833, 856, 863], "1533": 556, "154": [821, 832, 833, 856, 863], "155": [832, 833, 836, 856, 863], "1557019": 134, "1557108": 134, "1559": 410, "156": [25, 167, 826, 832, 833, 836, 839, 856, 863], "1560": 606, "1566": 821, "15694736": 780, "157": [159, 832, 833, 856, 863], "158": [14, 816, 832, 833, 856, 863], "1584": 832, "1587": 821, "159": [832, 833, 834, 856, 863], "1591": 850, "1594": [399, 405], "15979991": 832, "1598": 832, "15k": [178, 179], "15\u884c\u547d\u540d\u4e3a": 744, "15\uc5d0\uc11c": 785, "16": [165, 168, 172, 183, 186, 195, 340, 441, 442, 443, 444, 445, 446, 447, 456, 548, 663, 696, 700, 720, 740, 781, 804, 815, 816, 818, 819, 821, 822, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 842, 846, 850, 851, 852, 856, 859, 863], "160": [832, 833, 836, 856, 863], "1603": 863, "1607": 412, "161": [14, 832, 833, 856, 863], "162": [832, 833, 856, 863], "16228766": 832, "1623": 832, "1628": 832, "163": [136, 151, 832, 833, 856, 863], "1639": 556, "164": [817, 832, 833, 856, 863], "1642": 826, "1646": 410, "164812": 829, "165": [821, 832, 833, 836, 856, 863], "1651": 832, "1652": 832, "1658": 556, "166": [832, 833, 856, 863], "1664": 185, "1667": 9, "167": [14, 832, 833, 856, 863], "16738734": 780, "1678": 438, "168": [832, 833, 846, 856, 863], "1681": 829, "1681403185591509": 687, "1682": 173, "16846068931179736": 687, "1686": 832, "16863336": 832, "169": [832, 833, 856, 863], "1690": [394, 832], "16900733": 832, "1695": 818, "1696": 425, "16974127573016262": 687, "16gb": [14, 720, 804], "16\uc904": 785, "17": [14, 25, 182, 340, 653, 821, 826, 827, 829, 832, 833, 839, 852, 856, 863], "170": [14, 829, 832, 833, 836, 856, 863], "1701": 826, "1703": [821, 826], "1706": 719, "171": [832, 833, 856, 863], "1710": 767, "172": [695, 696, 740, 781, 832, 833, 856, 863], "1725": 826, "173": [14, 832, 833, 856, 863], "1735": [424, 606], "174": [832, 833, 856, 863], "1745": 556, "17488987": 832, "1749": [832, 851], "175": [696, 740, 781, 832, 833, 836, 856, 863], "1752": [643, 644], "17535": 157, "17583413999295983": 687, "1759": 826, "176": [832, 833, 836, 856, 863], "1764": [832, 850], "1767": 835, "177": [832, 833, 856, 863], "178": [832, 833, 856, 863], "1780": 440, "1783": 829, "1785": 425, "1789": 437, "179": [14, 832, 833, 856, 863], "1790": 832, "1797": 829, "1798": 826, "18": [9, 14, 151, 182, 191, 500, 620, 652, 700, 821, 827, 832, 833, 838, 852, 856, 863], "180": [832, 833, 836, 856, 863], "1804": 408, "1806": 556, "1807": 863, "1809": 391, "181": [832, 833, 856, 863], "1818": [556, 609], "182": [14, 832, 833, 856, 863], "1820": 835, "183": [155, 187, 832, 833, 856, 863], "18333": 25, "1835": 412, "18389137408509248": 687, "1839": 687, "184": [456, 832, 833, 856, 863], "1843": 687, "18431292077750894": 687, "1845": 832, "1847": 424, "1849": 404, "185": [832, 833, 836, 856, 863], "1850": 406, "1853": 832, "186": [832, 833, 856, 863], "186100": 137, "18626464175355095": 687, "187": [695, 832, 833, 856, 863], "1877": 456, "188": [25, 165, 174, 832, 833, 856, 863], "1881": 829, "189": [832, 833, 856, 863], "1890": 821, "18th": 182, "18\uc904\uc744": 785, "19": [138, 153, 179, 310, 311, 652, 695, 696, 740, 781, 821, 826, 827, 829, 832, 833, 852, 856, 863], "190": [147, 832, 833, 836, 856, 863], "1902": 437, "1908": 406, "1909": 822, "191": [832, 833, 834, 856, 863], "19117861103555467": 687, "1919": 832, "192": [832, 833, 846, 856, 863], "1925": 402, "1926": 821, "192640": 25, "1927": 821, "1929": [832, 851], "192it": 827, "193": [456, 832, 833, 856, 863], "193011360": 695, "1931": [643, 644], "1932390907048961": 687, "1939": 425, "1939743": 780, "194": [832, 833, 856, 863], "1943": 410, "1944": 821, "195": [832, 833, 836, 856, 863], "1951": 556, "1952": 394, "19536": [184, 856], "1954": 659, "1957": 850, "196": [456, 832, 833, 856, 863], "1963": 821, "1966": 425, "1967": 826, "197": [832, 833, 856, 863], "19717": [25, 176], "1979": 833, "19793": 25, "198": [133, 821, 832, 833, 834, 856, 863], "1983": 832, "1984": 829, "1985": 851, "1986": 832, "199": [832, 833, 856, 863], "1996": 438, "19989": 832, "1999": [832, 833], "19996": 832, "19999998807907104": 343, "1_gcn": [824, 852, 855], "1_gnn": [824, 855], "1_graph_classif": [824, 869, 871], "1_introduct": [824, 836, 837, 838, 839, 841], "1_node_classif": [824, 849], "1d": [48, 51, 53, 54, 61, 88, 122, 131, 214, 216, 219, 232, 239, 240, 287, 297, 303, 308, 323, 327, 332, 386, 393, 400, 405, 415, 418, 476, 539, 626], "1e": [4, 10, 245, 424, 428, 429, 473, 719, 720, 804, 816, 850, 852, 853, 856, 863], "1gb": [713, 799], "1m": 173, "1\u5b57\u7b26\u4e32": 733, "1\u8282": 741, "1\u8282\u4e2d": 757, "1\u8282\u4e2d\u5bf9\u5f02\u6784\u56fe\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": [766, 769], "1\u8282\u4e2d\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": 766, "1\u8282\u7684gnn\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a": [766, 769], "1\uc5d0": 780, "1\uc740": 780, "1\uc744": 780, "1\uc7a5": 789, "1\uc808\uc758": 782, "1\ucc28\uc6d0": 787, "2": [4, 5, 6, 9, 10, 12, 14, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 146, 147, 159, 161, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 197, 205, 207, 216, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 293, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 315, 316, 317, 318, 319, 325, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 355, 382, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 455, 456, 472, 473, 474, 475, 476, 497, 500, 538, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 632, 633, 634, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 684, 687, 691, 692, 694, 697, 699, 700, 701, 703, 704, 710, 711, 713, 715, 716, 717, 718, 720, 721, 725, 728, 730, 731, 737, 739, 740, 741, 743, 744, 745, 747, 748, 749, 754, 755, 757, 758, 759, 760, 761, 765, 768, 769, 770, 771, 777, 780, 781, 782, 784, 785, 786, 788, 790, 796, 797, 799, 800, 801, 802, 803, 804, 805, 809, 811, 813, 814, 815, 816, 817, 818, 819, 822, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 845, 846, 847, 849, 850, 851, 852, 863, 865, 868, 869, 871], "20": [9, 25, 130, 161, 162, 171, 172, 174, 175, 181, 192, 209, 235, 301, 310, 311, 319, 400, 403, 409, 411, 414, 416, 426, 427, 428, 429, 437, 438, 548, 605, 615, 616, 620, 627, 646, 652, 653, 663, 665, 666, 693, 695, 726, 728, 729, 730, 766, 768, 769, 770, 810, 811, 812, 813, 815, 816, 818, 821, 824, 827, 832, 833, 834, 836, 837, 838, 852, 853, 856, 859, 862, 863], "200": [200, 556, 693, 779, 817, 822, 832, 833, 836, 856, 863], "2000": [4, 9, 126, 250, 669, 818, 832], "20000": 832, "2002": [118, 134, 167, 406, 833], "2003": [146, 147, 169, 174, 195], "2005": 161, "2008": [162, 821], "200\uac1c": 779, "201": [832, 833, 836, 856, 863], "2010": 436, "2011": 428, "2014": 181, "2015": [135, 136, 406, 815, 856], "2016": [151, 152], "2017": [816, 818, 826, 827, 829, 832, 833, 836], "2018": [164, 166, 556, 687, 836, 863], "20181320245665535": 687, "2019": 815, "202": [832, 833, 856, 863], "2020": [818, 826, 829, 832, 833], "2020\u5e749\u6708": 748, "2021\ub144": 789, "2022": [826, 829, 832, 833], "2023": [214, 297, 303, 561, 827], "2024": [826, 829, 832, 833], "203": [832, 833, 856, 863], "2030": 832, "204": [832, 833, 856, 863], "20466": 157, "2048": 445, "205": [695, 696, 740, 781, 832, 833, 856, 863], "2053": [433, 434, 435, 436, 437, 438, 439, 440, 441], "206": [832, 833, 839, 856, 863], "2062": [456, 821], "207": [456, 832, 833, 838, 856, 863], "208": [456, 832, 833, 856, 863], "2080": 440, "2085": 402, "209": [173, 456, 832, 833, 856, 863], "2092": 821, "2095": 406, "20gb": 235, "20x10": 862, "21": [14, 162, 310, 311, 620, 695, 821, 822, 826, 827, 829, 832, 833, 852, 856, 863], "210": [184, 832, 833, 856, 863], "2101": 402, "2102": [407, 429], "2104": 162, "2106": 412, "2108": 444, "2109": 821, "211": [177, 832, 833, 856, 863], "2110": 556, "212": [832, 833, 856, 863], "21209": 25, "2124": 833, "2125": 412, "213": [456, 832, 833, 856, 863], "2134": 408, "2136": 437, "21394654203489705": 687, "214": [832, 833, 856, 863], "21474836480": 235, "2148": 821, "215": [832, 833, 856, 863], "2153": 832, "2154": 424, "2159": 397, "216": [161, 192, 816, 832, 833, 856, 863], "21606284": 832, "2161": 832, "2162it": 827, "2167": 425, "2168": 835, "2169": 850, "217": [832, 833, 856, 863], "217073": 185, "2178": 413, "218": [832, 833, 856, 863], "2182": 406, "2186": 832, "219": [832, 833, 856, 863], "21937428942781778": 687, "2194": 441, "2196": 832, "21st": 856, "22": [14, 25, 821, 832, 833, 856, 863], "220": [456, 832, 833, 856, 863], "2208": 804, "2209": 804, "221": [826, 832, 833, 856, 863], "2211": 833, "22131880861864428": 687, "22155005": 780, "2216": 425, "222": [832, 833, 856, 863], "2222": 9, "22296293": 695, "223": [832, 833, 856, 863], "22313538193702698": 837, "2235": 424, "224": [824, 832, 833, 841, 856, 863], "2240": 390, "2245": 25, "225": [456, 832, 833, 856, 863], "2253": 833, "2258": 829, "226": [832, 833, 856], "2262": 826, "2266": 829, "22662": 182, "227": [832, 833, 856], "2270": 829, "2271": 829, "2272": 412, "2277": 149, "228": [14, 832, 833, 856], "2282": [440, 826], "2284": 456, "2289": 390, "229": [832, 833, 856], "2291": [436, 437], "2299": 833, "23": [181, 195, 392, 393, 394, 695, 696, 699, 740, 743, 781, 784, 821, 827, 832, 833, 838, 856, 863], "230": [556, 832, 833, 834, 856], "2302": [137, 171, 180, 182, 188], "2303": 412, "23033": [25, 166], "2304": 25, "2306": 821, "231": [832, 833, 856], "2310": 303, "2312": 821, "23142237259162102": 687, "2316": 826, "232": [163, 181, 832, 833, 856], "2324": 436, "2326": [410, 829], "2327": 829, "232965": 25, "233": [832, 833, 856], "2330": 456, "23368113896545695": 687, "2337": 687, "2338": 390, "234": [456, 832, 833, 856], "2340": 392, "2342": 402, "2347": 402, "2348": 425, "235": [832, 833, 856], "2351": [433, 434, 435, 436, 437, 438, 439, 440, 441], "2355": 829, "2359": 832, "236": [832, 833, 856], "2360": 441, "2362": 424, "2363": 438, "2365": 832, "23682038840665198": 687, "237": [157, 832, 833, 856], "2370": 391, "2372": [175, 853], "2373": 556, "238": [136, 832, 833, 856], "2380": 821, "2384": 404, "2385": 851, "2386": 821, "2387": 408, "23879554": 833, "2388": 833, "239": [456, 826, 832, 833, 856], "2391": 833, "2396": 821, "24": [166, 175, 432, 620, 646, 821, 824, 827, 832, 833, 841, 853, 856, 863], "240": [25, 166, 456, 832, 833, 856], "2402": [842, 850], "2404": 832, "2408": 556, "241": [832, 833, 856], "2417": [434, 826], "242": [832, 833, 856], "2426": [433, 434, 435, 436, 437, 438, 439, 440, 441], "24285506608575758": 687, "243": [832, 833, 856], "2431": 829, "2432": [134, 821], "2435828596353531": 837, "244": [25, 818, 832, 833, 856], "2442": 829, "2443805": 832, "2444": 832, "2449029": [4, 240], "24492": 137, "245": [135, 177, 832, 833, 856], "2450": 425, "2451": 407, "246": [826, 832, 833, 856], "2467": 456, "2469": 412, "247": [152, 832, 833, 856], "2472": 832, "2472495901894738": 687, "2473": 413, "2477": 821, "2479": 833, "248": [832, 833, 855, 856], "2481": 397, "2486": 818, "249": [832, 833, 856], "2496": 185, "2497": 424, "25": [9, 147, 161, 400, 403, 431, 432, 456, 545, 691, 692, 737, 738, 777, 778, 816, 818, 821, 832, 833, 834, 836, 837, 846, 847, 851, 856, 863], "250": [160, 456, 818, 832, 833, 856], "2500": [9, 609, 821], "2502": 419, "250k": 195, "251": [193, 832, 833, 856], "2513": 425, "25177597999572754": 245, "2518": 829, "252": [832, 833, 856], "2524": [412, 821], "253": [832, 833, 856], "2530": 659, "2532": 832, "2533": 424, "253458867276219": 687, "2537": 821, "254": [832, 833, 856], "2541": [556, 826, 850], "25446424": 832, "2545": 832, "2548": 832, "255": [826, 832, 833, 846, 856], "2551": 833, "2556": 456, "2556053811659193": 838, "256": [719, 720, 804, 817, 818, 826, 827, 832, 833, 846, 847, 856, 869], "257": [14, 832, 833, 856], "258": [832, 833, 856], "259": [832, 833, 856], "2593": 832, "2597": [425, 826], "26": [165, 821, 826, 827, 829, 832, 833, 856, 863], "260": [826, 832, 833, 856], "2607": 425, "261": [832, 833, 852, 856], "2611": 425, "2618": 833, "262": [159, 832, 833, 856], "2622": 424, "263": [832, 833, 856], "2635": 832, "2637": 832, "2638": 424, "264": [832, 833, 856], "2642972469329834": 837, "2643": 424, "2644": [412, 425], "2649": 424, "26499036865016423": 687, "265": [832, 833, 856], "2650": 687, "2652": 433, "2654": [410, 436, 456], "2657": 826, "2658": 425, "2659": 456, "266": [832, 833, 856], "2660": 850, "2663": 425, "2665": 821, "2669": 404, "267": [456, 832, 833, 856], "2675": [424, 851], "268": [832, 833, 856], "2680": 832, "2684": [425, 832], "2685": 832, "2687": 556, "2688": [399, 405], "2689": [598, 618, 821, 833], "269": [832, 833, 856], "2695": [643, 644], "2697": 835, "27": [25, 627, 821, 832, 833, 838, 856, 863], "270": [832, 833, 856], "2701": 821, "2703": 436, "2708": [25, 154, 816, 817, 819, 826, 834, 836, 837, 850, 852, 853], "2709": [433, 434, 435, 436, 437, 438, 439, 440, 441], "271": [456, 832, 833, 856], "2716": 425, "27163": 170, "2719": 416, "272": [170, 832, 833, 856], "2721": [128, 129], "272115": 157, "273": [832, 833], "2730008213674695": 687, "2733": 424, "2738": [424, 425], "274": [832, 833], "2743": 434, "275": [832, 833], "2757": 412, "276": [832, 833], "2766": [643, 644], "277": [163, 832, 833], "2775": 118, "2778831166": 852, "278": [832, 833, 834], "2780": 425, "2781": 833, "2783258": 163, "2783370": 163, "2787": 456, "2789": [456, 832], "279": [832, 833], "2790": 832, "2794": 424, "2796588354307046": 687, "2797": 413, "28": [9, 169, 195, 423, 821, 822, 832, 833, 837, 856, 863], "280": [832, 833], "281": [832, 833], "282": [832, 833], "282119": 839, "2823": [425, 556], "2824": 833, "2826": 659, "2828": [431, 545, 833], "283": [816, 832, 833], "28357022069634585": 687, "28367647637469273": 687, "284": [25, 832, 833], "2848": 833, "285": [832, 833], "2852": 402, "28521814942359924": 837, "2855": 408, "286": [832, 833], "2863627767733977": 687, "2864": 687, "287": [832, 833], "287326": 25, "2876": 425, "288": [164, 816, 832, 833], "2882": 456, "289": [832, 833], "2894": 829, "2897": 821, "29": [144, 195, 620, 695, 696, 740, 781, 821, 822, 829, 832, 833, 856, 863], "290": [832, 833], "29000": 863, "2905": 835, "2908": 425, "291": [832, 833], "29163": 829, "2918": 556, "292": [832, 833], "2927": 456, "293": [832, 833], "294": [824, 832, 833, 871], "2942": 851, "2944": 850, "295": [832, 833], "29501": 842, "2953": 827, "296": [818, 832, 833], "2962": 424, "29660083": 780, "297": [832, 833], "2976": 425, "298": [155, 178, 179, 832, 833, 871], "299": [832, 833], "2994": [413, 437], "2_capsul": [824, 865], "2_dglgraph": [824, 834, 839, 841], "2_link_predict": [824, 849], "2_node_classif": [824, 871], "2_small_graph": [824, 858], "2a240410": [826, 829, 832, 833], "2d": [297, 339, 386, 393, 415, 418, 449, 567], "2gb": [720, 804], "2k": 631, "2motif": 141, "2x3": 31, "2xlarg": 14, "2\uac1c\uc758": 780, "2\ub97c": 791, "2\ubc88\uc9f8": 797, "2\uc7a5": [789, 809, 813], "3": [4, 5, 6, 9, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 142, 143, 161, 169, 172, 173, 174, 176, 178, 179, 183, 190, 197, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 315, 316, 317, 319, 325, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 355, 382, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 472, 473, 474, 475, 497, 500, 501, 538, 545, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 567, 568, 569, 572, 573, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 633, 634, 638, 639, 640, 641, 643, 644, 645, 649, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 665, 667, 668, 669, 675, 676, 677, 678, 679, 684, 687, 691, 694, 697, 699, 701, 702, 703, 704, 705, 710, 712, 713, 716, 719, 720, 725, 728, 730, 731, 737, 738, 741, 743, 745, 746, 747, 748, 749, 754, 755, 761, 765, 768, 770, 771, 777, 778, 780, 782, 784, 786, 787, 788, 790, 796, 797, 804, 805, 809, 811, 813, 815, 817, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 850, 851, 852, 863, 868, 869], "30": [25, 166, 181, 301, 400, 403, 411, 423, 451, 452, 456, 605, 615, 616, 620, 627, 720, 804, 816, 821, 829, 832, 833, 834, 836, 837, 853, 856, 863], "300": [137, 142, 143, 159, 182, 192, 194, 832, 833], "3000": [4, 126, 250, 556, 656, 725, 765, 809, 863], "3003": 863, "3005": 832, "30050": [696, 740, 781, 846, 847], "30050454": 832, "301": [180, 832, 833], "3010": 832, "302": [832, 833], "3020": 433, "3025": [399, 405], "3027939452162367": 687, "3028": 687, "303": [832, 833], "3030": [643, 644], "3036": 832, "3039": 424, "304": [164, 824, 832, 833, 865], "3048": 821, "305": [161, 832, 833], "3053": 397, "3056": 851, "306": [832, 833], "3062360882759094": 837, "3063": 412, "3068": 818, "307": [832, 833], "307080": 180, "3072": 821, "3075": 832, "3078": [436, 832], "308": [159, 824, 832, 833, 841], "3080": 413, "3082": 818, "3085": 821, "309": [832, 833], "3095": 821, "30k": 863, "30x": 842, "31": [118, 119, 164, 166, 695, 696, 702, 740, 746, 781, 787, 822, 827, 832, 833, 856, 863], "310": [159, 832, 833], "3105": [437, 832], "31051594": 832, "3109": 835, "311": [153, 826, 832, 833], "312": [832, 833], "3126": 456, "313": [832, 833], "3130": 833, "31328748118329997": 687, "3134": [433, 434, 435, 436, 437, 438, 439, 440, 441], "3135": 425, "314": [159, 832, 833], "3148": 687, "3148264185956532": 687, "315": [832, 833], "316": [832, 833, 836], "3161154827254189": 687, "3163": 419, "3168": [643, 644], "317": [14, 832, 833], "3171": 821, "3174": [643, 644], "3175": 821, "318": [832, 833], "3180": 850, "3189": 437, "319": [832, 833, 836], "3191": 407, "32": [25, 146, 163, 172, 207, 335, 386, 414, 444, 456, 688, 702, 734, 746, 774, 787, 815, 822, 824, 826, 829, 832, 833, 856, 863, 868], "320": [832, 833], "3203": 438, "3209": 829, "321": [832, 833], "3219496197945605": 687, "322": [832, 833], "3223": 851, "32268312": 832, "3227": 832, "323": [832, 833, 836], "3231": 437, "3235": 441, "324": [832, 833], "3243": 829, "3244": 829, "3245": 829, "3246": 829, "3246e": [631, 667], "325": [187, 832, 833], "326": [832, 833], "3261": 833, "3262": 850, "3267": 833, "327": [832, 833], "32715702056884766": 837, "327576": 25, "328": [832, 833], "329": [826, 832, 833], "3291": 832, "3293": 833, "3295": 393, "3299": 833, "32it": 827, "32x": 842, "33": [605, 620, 821, 824, 832, 833, 853, 855, 856, 863], "330": [165, 832, 833], "3302": 821, "3303": 418, "3304": 421, "331": [832, 833], "3316": 420, "332": [832, 833], "33234211884156384": 687, "3326": 413, "3327": [25, 150], "333": [151, 816, 832, 833], "3330": [433, 434, 435, 436, 437, 438, 439, 440, 441], "3333": [9, 355, 570, 571, 596, 655], "33391": 134, "334": [832, 833], "3342": 412, "3346": [643, 644], "335": [832, 833], "336": [832, 833], "3364": 412, "337": [832, 833], "3371": 408, "3372": 851, "338": [832, 833], "3381872773170471": 473, "339": [832, 833, 834], "3391": [804, 833], "33929432608774135": 687, "3394": 804, "34": [25, 152, 166, 167, 829, 832, 833, 839, 841, 852, 856, 863], "340": [832, 833], "3400": 606, "3403": 832, "3409": 832, "341": [832, 833, 836], "3419": 818, "342": [832, 833], "34270118": [694, 695], "343": [832, 833], "3439899477636117": 687, "344": [816, 832, 833], "3447": 412, "34493": 25, "345": [14, 158, 832, 833], "3455": [643, 644], "3456": 832, "346": [832, 833], "3462": 410, "3463": 832, "3466": 402, "3468": 456, "347": [832, 833], "3478": 833, "34782471": 833, "348": [832, 833], "3480415940284729": 837, "3482": 821, "34846782265758314": 687, "3488": 835, "3489": 659, "349": [832, 833], "3497": 413, "34it": 827, "35": [145, 147, 174, 816, 832, 833, 834, 836, 837, 856, 863], "350": [142, 832, 833], "3504": [850, 853], "35076354": 780, "351": [161, 832, 833], "3510": 832, "3514": 404, "3516": 396, "352": [832, 833], "3523777809254057": 687, "3525": 832, "353": [816, 832, 833], "354": [832, 833], "3541": 413, "3549": 832, "355": [832, 833], "356": [172, 832, 833], "3569": 408, "357": [832, 833, 834], "3574": 832, "358": [832, 833], "359": [14, 832, 833], "36": [132, 829, 832, 833, 856, 863], "360": [832, 833], "361": [832, 833], "36101": 149, "3611": [832, 851], "3613": 832, "3614": 832, "3619": 850, "362": [832, 833], "3620": 821, "3623": 407, "363": [832, 833], "3637": [433, 434, 435, 436, 437, 438, 439, 440, 441], "364": [832, 833], "3643": 456, "3648": 134, "365": [832, 833], "3658": 404, "366": [832, 833], "3661": 832, "3664": 391, "36649684241348557": 687, "3665": [441, 687], "367": [832, 833], "3670": 832, "3672": [118, 851], "36786902637778773": 687, "368": [832, 833], "3680": 832, "3684": 850, "3685": 397, "3686": 833, "3686477541923523": 837, "369": [832, 833], "37": [155, 187, 195, 832, 833, 838, 856, 863], "370": [832, 833], "3700": 406, "370293": 839, "3703": 150, "371": [832, 833], "3717": 413, "37199251": 832, "372": [832, 833], "3720": 832, "373": [14, 832, 833], "3736": 456, "3737": 438, "374": [832, 833], "375": [832, 833], "3758": 393, "376": [832, 833], "3760": 850, "377": [832, 833], "3770": 606, "3772": 456, "378": [832, 833], "3781": 412, "379": [14, 832, 833], "3790": 826, "3793": 826, "3796": 219, "3798": 826, "38": [832, 833, 856, 863], "380": [832, 833], "3803": 407, "38036276": 832, "3804": 832, "3805": [399, 405], "3808": [643, 644], "3809": 412, "381": [832, 833], "382": [832, 833], "3820": 437, "3825": [399, 405], "383": [832, 833], "384": [164, 832, 833], "3840": 118, "3847": 412, "385": [832, 833], "386": [832, 833], "3861": 851, "3864": 851, "3866": 419, "387": [832, 833], "3872": [643, 644], "388": [816, 832, 833], "389": [816, 832, 833], "3891": [433, 434, 435, 436, 437, 438, 439, 440, 441], "3893": 412, "3894040584564209": 837, "3899459713413202": 829, "39": [25, 163, 195, 456, 620, 826, 827, 829, 832, 833, 834, 835, 838, 839, 855, 856, 863], "390": [832, 833, 856], "391": [832, 833], "39161865931662243": 687, "3918": [821, 833], "39184907": 833, "392": [832, 833], "393": [822, 824, 832, 833], "3934": [643, 644], "3936": 835, "3938": 659, "394": [832, 833], "3943": [399, 405], "395": [832, 833], "39534097273254654": 687, "396": [832, 833], "39609141": 832, "3961": 832, "397": [832, 833], "398": [822, 832, 833], "3982": 821, "3985": 456, "399": [822, 832, 833], "3996": 418, "3997": 832, "39it": 827, "3_generative_model": [824, 861], "3_message_pass": [824, 834, 837, 841], "3_tree": [824, 858], "3d": [179, 339, 430, 432, 442, 444, 445, 449, 567], "3e": 817, "3f": [816, 817, 819, 826, 834, 836], "3x3": 821, "3\uac00\uc9c0": [775, 777, 801], "3\uac1c\uc758": [791, 800], "3\ub2e8\uacc4\ub85c": 807, "3\uc7a5": [789, 802, 809, 813], "4": [4, 5, 9, 12, 14, 20, 21, 22, 26, 27, 30, 34, 35, 36, 37, 46, 47, 51, 55, 56, 58, 60, 61, 73, 74, 75, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 107, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 132, 142, 143, 148, 172, 173, 195, 209, 210, 213, 214, 215, 216, 217, 219, 220, 229, 230, 240, 243, 244, 245, 246, 250, 287, 291, 293, 297, 298, 299, 300, 301, 302, 303, 308, 315, 316, 317, 319, 325, 327, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 349, 355, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 456, 472, 473, 474, 501, 538, 545, 553, 554, 555, 558, 560, 561, 562, 565, 567, 572, 573, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 608, 609, 610, 611, 612, 615, 616, 617, 618, 620, 624, 627, 628, 631, 638, 640, 641, 643, 644, 645, 654, 656, 657, 659, 661, 662, 665, 667, 668, 679, 691, 692, 695, 696, 697, 700, 701, 702, 703, 704, 710, 712, 713, 717, 719, 720, 725, 730, 731, 738, 739, 740, 741, 744, 745, 746, 747, 748, 754, 756, 758, 760, 765, 770, 771, 777, 778, 780, 782, 785, 786, 787, 788, 790, 796, 798, 801, 803, 804, 809, 813, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 843, 846, 847, 850, 851, 852, 855, 856, 859, 862, 863, 868, 869], "40": [138, 147, 159, 336, 381, 456, 615, 620, 816, 829, 832, 833, 834, 836, 837, 852, 856, 863], "400": [616, 693, 779, 832, 833, 859, 863], "4000": [173, 818, 821], "4000000": 210, "4007": 456, "400\uac1c\uc758": 779, "401": [832, 833], "402": [832, 833], "4022": 406, "4024": [821, 850], "4026": 832, "4028": 804, "403": [832, 833], "404": [832, 833], "4042": 437, "405": [832, 833], "40559906615287566": 687, "406": [556, 816, 832, 833], "4063": 412, "4065": 832, "407": [832, 833], "40707309111756307": 687, "4072": 832, "408": [832, 833], "4080": 832, "4081642382536248": 687, "4083": 832, "409": [832, 833], "40943": 191, "4096": 412, "41": [159, 191, 822, 832, 833, 856, 863], "410": [168, 186, 816, 832, 833], "41003847122192383": 837, "4102c744bb9d6fd7b40ac67a300e49cd87e28392": [689, 735, 775], "4104": 147, "411": [832, 833], "4111": [433, 434, 435, 436, 437, 438, 439, 440, 441], "41127": 138, "412": [832, 833], "4122": 827, "4126": 412, "413": [832, 833, 834], "414": [832, 833], "415": [152, 832, 833], "4150": 852, "41516080644186737": 687, "4152": 833, "41527155506593394": 687, "416": [832, 833], "4167": 9, "417": [832, 833], "41738253": 832, "4174": 832, "418": [832, 833], "4187": 832, "419": [14, 832, 833], "4197669213305396": 687, "41it": 827, "42": [25, 198, 818, 832, 833, 856, 863], "420": [832, 833], "421": [832, 833], "42129055": 833, "4213": 833, "4216530595907526": 687, "422": [832, 833], "4220": 456, "4221": 413, "42222014": 780, "4228": 821, "423": [832, 833], "424": [832, 833], "4240": 852, "4241": 832, "42412315": 832, "4249": [433, 434, 435, 436, 437, 438, 439, 440, 441], "425": [832, 833], "4250": 852, "4257": 832, "4259": 833, "426": [832, 833], "4265": 821, "4268": 687, "4268254673041745": 687, "427": [832, 833], "4273": 406, "4279": 412, "428": [832, 833, 836], "429": [826, 832, 833], "4293": 818, "42988138237505735": 687, "4299": 687, "43": [699, 743, 784, 832, 833, 856, 863], "430": [832, 833, 836], "4305190443992615": 837, "431": [181, 192, 832, 833], "4318": [643, 644], "432": [14, 832, 833], "4323": [418, 832], "4325": [128, 129], "433": [832, 833], "4331": 393, "4335": 393, "4338": 440, "4339": 832, "434": [832, 833], "4349": [433, 434, 435, 436, 437, 438, 439, 440, 441], "435": [832, 833], "4352": 852, "4353": 852, "436": [832, 833], "4363": 821, "437": [832, 833], "438": [832, 833], "43839568": 833, "4384": 833, "4387": 852, "439": [826, 832, 833], "44": [174, 821, 822, 827, 832, 833, 856, 863], "440": [832, 833], "4400": 173, "4401": 832, "44012174": 832, "4407": 827, "441": [832, 833], "4410": 821, "4411": 821, "442": [832, 833], "4421": 832, "4426": 832, "443": [832, 833], "4431": 852, "4435": 832, "44352349": 832, "444": [832, 833], "44412796119211184": 687, "445": [14, 826, 832, 833, 856], "4451": [643, 644], "4452": 832, "4457": 818, "4458": 412, "44587415": 832, "4459": 832, "446": [832, 833], "4465": 408, "447": [832, 833], "4470": 856, "4470617033458436": 687, "448": [832, 833], "4482": [413, 832], "4483": 850, "449": [826, 832, 833], "4497": 438, "45": [163, 456, 816, 826, 832, 833, 834, 836, 837, 839, 842, 856, 863], "450": [816, 832, 833], "4500966": 863, "4508": 659, "451": [832, 833], "4511": 440, "45119529": 833, "4512": 833, "452": [832, 833], "4523600060547709": 687, "4524": 835, "453": [832, 833], "4532330334186554": 837, "4535": 852, "454": [832, 833, 836], "454196": 833, "4542": [412, 456, 833], "45441619816038514": 687, "4546": 821, "455": [832, 833], "4550": 829, "4551": 821, "456": [149, 832, 833], "4567": 832, "457": [14, 832, 833], "4570": [399, 405, 804], "4572": 818, "458": [832, 833, 836], "459": [832, 833, 836], "4590": 456, "45927537": 832, "4593": [832, 833], "4595": 852, "46": [424, 822, 832, 833, 856, 863], "460": [832, 833], "4600": 173, "4609": 804, "461": [832, 833], "462": [832, 833], "4620": 456, "4628": 856, "4629": [128, 129], "463": [824, 832, 833, 855], "4630": 456, "4631": 413, "4634": 832, "464": [159, 832, 833, 836], "4640": 821, "4647410679872376": 687, "465": [832, 833], "4652": 412, "4653": 438, "4654086994009452": 687, "466": [832, 833], "4664": 118, "467": [832, 833], "4673": 413, "468": [832, 833], "4682": 408, "4684": 818, "4688": 852, "469": [832, 833], "4692371689047904": 687, "4696": 852, "4698": 393, "47": [424, 556, 620, 832, 833, 856, 863], "470": [824, 832, 833, 855], "47068559": 833, "4707": 833, "471": [832, 833], "4712": 856, "4713204503059387": 837, "4719": 833, "47190395": 833, "472": [816, 832, 833, 836], "4721": 818, "47224962583565544": 687, "4724": 852, "473": [832, 833], "4731": [659, 852], "4737": 835, "47382": [168, 186], "474": [161, 832, 833, 856], "475": [832, 833], "4754": 821, "4755": [433, 434, 435, 436, 437, 438, 439, 440, 441], "4756": 687, "47562693094002173": 687, "4757": 821, "476": [832, 833], "4760": 436, "4762": 434, "47676184": 832, "4768": 832, "477": [832, 833], "4770": 407, "4770019763881086": 687, "478": [14, 822, 832, 833], "4784": 821, "479": [832, 833], "4791": 852, "4797": 396, "48": [424, 832, 833, 856, 863], "480": [832, 833], "4800": 173, "4801": [399, 405], "4805": 406, "481": [816, 832, 833], "4817": 456, "482": [832, 833], "4820": 852, "4821": 408, "483": [832, 833], "483142": 158, "4837": 433, "484": [832, 833], "4847": 412, "485": [824, 832, 833, 841], "4854": [818, 833], "4858": 827, "486": [163, 832, 833], "487": [14, 832, 833], "4877": 852, "488": [832, 833], "48810": 132, "4884": 174, "4885": 438, "4888": 4, "489": [816, 832, 833], "48921": 180, "49": [25, 424, 832, 833, 856, 863], "490": [822, 832, 833], "49037522512771525": 687, "4904": 438, "4909": 687, "490938012147181": 687, "491": [135, 822, 832, 833], "4910e": 340, "4911": 821, "492": [181, 832, 833], "4920": 821, "4921e": 340, "4923": 852, "493": [152, 832, 833], "4931": 850, "4938": 832, "49381445": 832, "493888090726854": 687, "49397782380750765": 687, "494": [824, 832, 833, 855], "4940": [438, 687], "4945": 856, "4948": [412, 832], "495": [14, 152, 832, 833], "4954": [643, 644], "496": [832, 833], "4961": 835, "4962": 833, "4964": 818, "4967": 832, "497": [832, 833], "49707600474357605": 837, "4974": 833, "4977": 438, "498": [832, 833], "4983": 818, "499": [832, 833, 836], "4994": 818, "4996": 850, "4999": 833, "4_link_predict": [824, 834, 841], "4_old_win": [824, 865], "4_rgcn": [824, 855], "4d": 179, "4f": [818, 827, 850, 851, 852, 853, 856, 868, 869], "4m": [210, 713, 799], "4part_data": [846, 847], "4th": 720, "4\u6761\u8fb9": 744, "4\uac00\uc9c0": 776, "4\uac1c\uac00": 784, "4\uac1c\uc758": [787, 809], "4\uc7a5": [789, 809, 811, 813], "5": [5, 6, 9, 12, 14, 20, 22, 26, 27, 28, 34, 35, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 107, 113, 114, 115, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 137, 142, 143, 145, 146, 147, 148, 149, 152, 155, 156, 159, 161, 163, 172, 173, 174, 178, 184, 185, 187, 193, 197, 200, 205, 210, 214, 216, 219, 220, 229, 230, 243, 245, 246, 250, 293, 297, 298, 299, 300, 301, 302, 303, 308, 315, 316, 319, 325, 331, 332, 333, 336, 337, 338, 339, 340, 342, 349, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 455, 473, 474, 500, 501, 538, 545, 549, 550, 554, 555, 556, 559, 560, 561, 562, 563, 567, 572, 573, 592, 599, 605, 606, 608, 610, 611, 612, 613, 617, 624, 626, 627, 628, 638, 640, 641, 643, 644, 645, 646, 649, 652, 653, 654, 656, 657, 659, 661, 662, 665, 666, 679, 681, 683, 684, 687, 689, 691, 692, 694, 697, 698, 699, 700, 701, 702, 704, 705, 710, 711, 712, 713, 714, 715, 718, 720, 723, 731, 735, 738, 740, 741, 742, 743, 744, 745, 746, 748, 749, 754, 755, 758, 760, 763, 765, 771, 775, 778, 781, 782, 783, 784, 785, 786, 787, 790, 796, 797, 801, 803, 804, 807, 809, 815, 816, 817, 818, 819, 821, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "50": [146, 171, 174, 175, 181, 424, 430, 432, 456, 546, 556, 620, 816, 832, 833, 834, 836, 837, 850, 852, 853, 856, 863], "500": [150, 154, 160, 176, 699, 725, 726, 743, 765, 766, 784, 809, 810, 816, 817, 819, 832, 833, 834, 836, 837, 838, 850, 852, 853, 862], "5000": [4, 9, 25, 126, 191, 250, 355, 388, 389, 423, 476, 548, 556, 570, 571, 592, 596, 609, 655, 663, 725, 765, 809, 821, 850], "50000": [14, 146, 158], "500000": 210, "5001": 821, "5004": 832, "500k": 210, "501": [832, 833], "5010": 818, "5011": 408, "502": [832, 833], "50285768": 833, "5029": 833, "503": [832, 833], "5030": 412, "5031376891842008": 829, "5034": 804, "5039": 804, "504": [832, 833, 834], "5041": [399, 405], "5042": 416, "5044": 832, "5047": 821, "5048": 852, "505": [832, 833], "5053": 391, "5054": 434, "506": [832, 833, 834], "50636623": 832, "5064": 832, "5065": [643, 644], "507": [832, 833], "508": [832, 833], "5081": 835, "5083": 829, "5089": 832, "509": [832, 833, 853], "5096": 856, "5097": 456, "51": [193, 424, 832, 833, 856, 863], "510": [832, 833], "511": [826, 832, 833], "5117": 659, "512": [442, 445, 681, 683, 832, 833, 856], "5127": 821, "513": [832, 833], "514": [832, 833, 836], "5142": 456, "515": [193, 832, 833], "5159": 408, "516": [832, 833], "5169": 412, "517": [832, 833, 856], "5171": [643, 644], "518": [832, 833], "5182": [643, 644], "519": [832, 833], "5191": 833, "5191278830882644": 687, "5192": 396, "5197": [433, 434, 435, 436, 437, 438, 439, 440, 441, 643, 644, 687], "5197462471155317": 687, "52": [424, 818, 822, 832, 833, 856, 863], "520": [832, 833], "52000000": 240, "5201": 185, "52095": 829, "521": [832, 833], "5215": 421, "5217": 423, "522": [832, 833], "5221": [438, 456], "5227": 687, "5227112950269823": 687, "523": [832, 833], "5230": 832, "5236": 408, "5237": 438, "524": [14, 816, 826, 832, 833], "5243": 416, "525": [832, 833], "5251800239734318": 687, "5259": 396, "526": [832, 833], "5265": 832, "5266": 408, "5269": 835, "527": [832, 833], "5278": [433, 434, 435, 436, 437, 438, 439, 440, 441], "528": [832, 833], "5286": 404, "5287": 413, "529": [219, 832, 833, 853], "529195480661293": 687, "5297": [643, 644], "5299": 818, "52it": 827, "53": [14, 424, 822, 832, 833, 856, 863], "530": [832, 833], "5301": 832, "5303": [643, 644], "5306": 438, "531": [832, 833], "5311": 832, "5312": 456, "532": [832, 833], "5322": 441, "5327": 396, "5328": 821, "533": [832, 833], "5333": 9, "534": [832, 833], "5341": 818, "5347": [399, 405], "5348": 687, "534822233529295": 687, "535": [832, 833], "5352": 416, "5356282591819763": 837, "5357": [818, 832], "536": [832, 833], "5365": 687, "5365210052235699": 687, "5369": 832, "537": [832, 833], "5371": 832, "5371992348736535": 829, "538": [832, 833], "539": [832, 833, 836], "5392": 833, "5392093": 833, "5398": 419, "54": [424, 832, 833, 856, 863], "540": [832, 833], "5400687466285844": 687, "5401": 687, "5406": 617, "5409": 818, "541": [832, 833], "5418": [643, 644], "542": [14, 832, 833], "5420": 440, "5421": 406, "54218241": 832, "5422": [832, 833], "543": [832, 833], "544": [184, 832, 833, 834], "5445": 433, "545": [832, 833], "5452": 832, "5454": [412, 659], "5454703921677284": 687, "5455": 687, "5457": 821, "546": [832, 833], "5464": 832, "54641945": 832, "5466": 821, "547": [832, 833], "5475": 821, "5477868606453535": 687, "548": [832, 833], "549": [832, 833], "5490": 421, "5495035052928215": 687, "5497": 833, "54973076": 833, "55": [147, 181, 424, 816, 821, 832, 833, 834, 836, 837, 856, 863], "550": [832, 833], "5506560622839692": 829, "551": [832, 833, 836], "5511": 437, "5512": 406, "5513": 421, "5514": 818, "552": [832, 833], "5520": [456, 827], "5527": 818, "5529": 436, "553": [832, 833], "5538": [437, 821], "554": [832, 833], "5540": 413, "5541": [128, 129], "5543": 818, "555": [832, 833], "5551": 412, "5552": 832, "556": [832, 833], "5561": 818, "5563827995742111": 687, "5564": 687, "5565": 850, "557": [826, 832, 833], "5579": 832, "558": [816, 832, 833], "5585": 832, "559": [832, 833], "55it": 827, "56": [424, 832, 833, 856, 863], "560": [832, 833], "56035709": 833, "5604": 833, "561": [832, 833, 836], "5612": 659, "5614": 118, "5614197853127827": 687, "562": [816, 832, 833], "5623": [821, 832], "5628": 818, "5629": 833, "563": [832, 833], "5630054699822141": 829, "5638108661364475": 829, "564": [832, 833, 834], "5641": 856, "5643": 412, "5646": 827, "565": [832, 833], "5650": 832, "5658": [433, 434, 435, 436, 437, 438, 439, 440, 441], "566": [556, 816, 832, 833], "5667": 832, "5668682": 133, "567": [832, 833], "5671": 456, "5676": 821, "568": [169, 832, 833], "569": [832, 833], "5692": [643, 644, 821], "57": [424, 620, 819, 832, 833, 856, 863], "570": [832, 833], "571": [832, 833], "5711": 412, "5716970368133159": 829, "572": [832, 833, 836], "5721": [408, 832], "5725": [433, 434, 435, 436, 437, 438, 439, 440, 441], "5725330322207948": 687, "573": [14, 816, 832, 833], "574": [832, 833], "5740757584571838": 837, "574418": 25, "5746": 832, "5746912787380253": 687, "5749": 687, "5749339182767451": 687, "575": [832, 833], "576": [832, 833], "5765": 832, "577": [824, 832, 833, 841], "5772": 833, "578": [832, 833], "579": [832, 833], "5793": 833, "58": [14, 827, 832, 833, 856, 863], "580": [832, 833], "5805": 821, "581": [832, 833], "5812611161448371": 829, "5815966978757676": 829, "582": [832, 833], "5822": 436, "5825363267223732": 829, "583": [832, 833], "584": [832, 833], "5840": 441, "5845": [456, 832], "5847": 433, "5849": 402, "585": [832, 833], "5854": 804, "5859": 827, "586": [832, 833], "5861": 821, "587": [832, 833], "5873": 419, "5878": 412, "588": [14, 832, 833], "5886": 821, "5887": 818, "589": [832, 833], "5899": 835, "59": [25, 155, 187, 456, 832, 833, 856, 863], "590": [832, 833], "5901": [643, 644], "59071": 158, "5908": [804, 832], "59082296": 832, "591": [832, 833], "5913335505943637": 687, "5914": 821, "5916": 833, "59165987": 833, "5917": 833, "592": [145, 832, 833, 834], "5923": 659, "593": [832, 833], "5937484188166621": 687, "594": [832, 833], "5940": 852, "5942": 434, "5945": [399, 405], "595": [817, 832, 833], "596": [832, 833], "5960": 436, "5962": 804, "5967": 804, "597": [832, 833], "5971": 856, "5974": 832, "59742215": 832, "5977": 821, "598": [832, 833, 834], "599": [832, 833], "59949626": 832, "5995": 832, "5_dgmg": [824, 861], "5_graph_classif": [824, 834, 841, 868], "5a0c40b": 859, "5e": [426, 428, 719, 720, 804, 816], "5f": 819, "5x4": 835, "5\uac1c\uc758": 801, "5\uc7a5": [789, 796], "6": [3, 6, 9, 11, 20, 26, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 107, 117, 118, 119, 122, 130, 131, 142, 147, 148, 150, 151, 156, 163, 172, 173, 189, 210, 214, 215, 216, 243, 293, 297, 298, 299, 301, 302, 303, 308, 315, 316, 319, 331, 332, 339, 340, 355, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 550, 554, 556, 562, 567, 615, 631, 633, 638, 640, 641, 653, 661, 667, 683, 684, 697, 700, 704, 709, 723, 725, 726, 728, 741, 744, 748, 753, 754, 765, 766, 768, 779, 782, 785, 795, 796, 809, 810, 811, 815, 817, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 841, 850, 852, 853, 856, 859, 862, 863, 868, 869], "60": [169, 176, 189, 456, 615, 620, 816, 827, 832, 833, 834, 836, 837, 838, 856, 863], "600": [25, 832, 833, 859], "6000": 217, "60000": 169, "6000000238418579": 472, "6002": 832, "6003": 832, "6005": 25, "6008": 412, "601": [832, 833], "6012": 832, "6018": 832, "602": [181, 832, 833], "603": [832, 833], "6032": 434, "6035": 832, "604": [832, 833, 836], "604045": 173, "604094": 173, "6042": 821, "6044": 421, "6045": 438, "605": [832, 833, 852], "606": [822, 832, 833, 834], "6062": 832, "6066": [399, 405], "607": [832, 833], "6073": 818, "608": [822, 832, 833], "609": [832, 833], "6090": 850, "6095": 659, "6098": 833, "61": [827, 832, 833, 856, 863], "610": [817, 832, 833], "6106": 413, "6109": 832, "611": [832, 833], "6114": [643, 644], "6118": [433, 434, 435, 436, 437, 438, 439, 440, 441, 832], "6118386331195641": 687, "61191552": 695, "61191553": 695, "61191556": 695, "612": [832, 833], "613": [832, 833, 834], "614": [816, 832, 833], "6143": 412, "6144": 291, "6146": 434, "615": [181, 832, 833], "6154": 832, "6156748364694707": 687, "616": [832, 833], "6163": 391, "6165": 833, "617": [832, 833], "618": [832, 833], "6187": 835, "619": [832, 833], "6196": 850, "6199": 438, "61gb": 14, "61m": [713, 799], "62": [827, 832, 833, 856, 863], "620": [832, 833, 834], "620118223673067": 687, "621": [832, 833], "6211": 438, "6213": 456, "622": [832, 833], "6220": 412, "6221": 456, "6222": 433, "623": [832, 833], "6236": 821, "624": [832, 833], "625": [832, 833], "62539528": 240, "6254": 659, "626": [832, 833, 834, 836], "6267": 829, "6269": 829, "627": [832, 833, 836], "6270": 829, "628": [832, 833], "629": [832, 833, 836], "6295": 659, "63": [25, 702, 746, 832, 833, 856, 863], "630": [163, 832, 833, 836], "6305": 437, "631": [832, 833], "6317": 437, "6319": 456, "632": [832, 833, 834, 836], "6325": 659, "633": [832, 833], "634": [832, 833], "6340": [412, 818], "6344": 821, "634899790318452": 687, "635": [832, 833], "6355": 433, "6355288624763489": 837, "63563": 25, "636": [816, 832, 833], "6360": 850, "6365": [433, 434, 435, 436, 437, 438, 439, 440, 441], "637": [832, 833], "6373": 421, "6375": [402, 818], "6375445528248924": 687, "6379": [643, 644], "638": [832, 833], "6387": 833, "639": [14, 832, 833], "6393": 412, "6395": 821, "6399": 436, "64": [14, 172, 195, 386, 422, 424, 428, 429, 564, 702, 746, 787, 829, 832, 833, 842, 856, 863], "640": [817, 832, 833, 834], "6406": 833, "6408": 406, "641": [816, 832, 833], "6415": 832, "64150579": 832, "6418": 456, "642": [832, 833], "6422": 833, "643": [832, 833], "6430l": 842, "644": [832, 833], "6447": 835, "645": [832, 833], "6453746567017163": 687, "646": [832, 833], "6462162561249654": 687, "647": [832, 833], "64707546": 832, "6471": 832, "6477": [392, 832, 833], "64772459": 832, "648": [832, 833], "6481": 821, "64819194": 832, "6482": 832, "648874463": 695, "649": [832, 833], "6494437360242048": 687, "64d0f3f": 14, "65": [153, 816, 822, 832, 833, 834, 836, 837, 856, 863], "650": [136, 832, 833, 834], "651": [832, 833], "6512e": [631, 667], "6515": [643, 644], "652": [14, 832, 833, 836], "6526403892728874": 687, "653": [832, 833], "654": [832, 833], "6544": 818, "6549": 413, "655": [832, 833], "6557": [431, 545], "6558": 456, "656": [817, 832, 833], "6562": 804, "6568": [399, 405, 416], "657": [832, 833], "658": [14, 832, 833], "6580": 687, "6580438064356824": 687, "6585": 617, "65854": 182, "659": [832, 833], "6594951663841697": 687, "6595": 687, "6597": 419, "6598715708878852": 687, "66": [821, 826, 827, 829, 832, 833, 856, 863], "660": [832, 833, 834], "6609": [827, 832], "661": [832, 833], "662": [832, 833], "6624186423087752": 687, "6628": 818, "663": [816, 832, 833], "6639": 833, "664": [832, 833], "6642": 835, "665": [832, 833], "6655": 804, "666": [822, 832, 833], "6667": [596, 655], "667": [832, 833], "668": [832, 833], "669": [832, 833], "6694943496824788": 687, "6698": 821, "67": [832, 833, 856, 863], "670": [832, 833], "6702": [643, 644], "671": [816, 832, 833], "6717": 818, "672": [832, 833], "672884": 144, "673": [832, 833], "674": [822, 832, 833], "6746269314422184": 687, "6749348044395447": 837, "675": [832, 833], "6751": 818, "6753": 832, "6754": 437, "6755": 832, "676": [832, 833], "677": [163, 173, 832, 833, 836], "6771": 821, "6775121852608882": 826, "6776417760682221": 687, "6779": 852, "678": [832, 833, 834], "679": [832, 833], "6795": 818, "67985810014162": 687, "6799": 687, "68": [170, 822, 827, 832, 833, 856, 863], "680": [832, 833, 836], "6801": 821, "681": [832, 833], "6810484348765842": 687, "6811": 818, "6812": 832, "682": [173, 832, 833, 834], "6825": [433, 434, 435, 436, 437, 438, 439, 440, 441], "6827": 821, "6829": 832, "683": [816, 832, 833], "684": [816, 832, 833], "6845": 437, "685": [832, 833], "6850": 850, "686": [832, 833, 834], "687": [832, 833], "6871": 413, "6876": 436, "688": [14, 832, 833], "6882": 456, "6883": 832, "689": [832, 833], "6893": [643, 644], "6897": 850, "69": [173, 822, 832, 833, 853, 856, 863], "690": [817, 822, 832, 833], "6901745368284345": 687, "6905": 832, "6906": 118, "6907": 438, "6908": 397, "691": [832, 833], "6910": 659, "6911881566047668": 837, "692": [832, 833], "69236": 829, "6924": 835, "6925": [433, 434, 435, 436, 437, 438, 439, 440, 441], "692873149428549": 687, "693": [832, 833], "6931": 412, "6936": 832, "6937": 456, "694": [832, 833], "6943": 804, "695": [832, 833], "69516037": 833, "6952": 833, "6953": 832, "6954": 456, "6955": 438, "696": [832, 833, 836], "6962": 433, "697": [832, 833], "6976": [821, 833], "6979": 833, "698": [14, 832, 833], "6985674921582508": 687, "698592283371875": 687, "6986": 687, "699": [832, 833], "6994": 852, "6_line_graph": [824, 855], "6_load_data": [824, 834, 841], "6gb": 695, "6\u4e2a\u8282\u70b9": 744, "6\uc740": 779, "6\uc744": 797, "6\uc7a5": [789, 795, 807, 809], "7": [6, 9, 14, 20, 26, 79, 80, 81, 82, 122, 136, 142, 154, 160, 161, 162, 163, 165, 171, 172, 177, 179, 243, 293, 297, 298, 299, 300, 301, 302, 303, 308, 315, 325, 339, 340, 404, 432, 549, 550, 554, 559, 598, 618, 631, 638, 640, 652, 653, 661, 667, 700, 703, 704, 709, 710, 713, 728, 737, 744, 747, 748, 753, 755, 768, 777, 785, 788, 795, 796, 797, 811, 815, 816, 817, 819, 821, 822, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 850, 852, 853, 856, 859, 862, 863, 868, 869], "70": [25, 153, 184, 210, 816, 822, 827, 832, 833, 834, 836, 837, 856, 863], "700": [832, 833], "7000": [431, 545], "701": [192, 832, 833], "702": [832, 833], "7026": 804, "703": [181, 832, 833], "7031": 804, "7033": 856, "704": [832, 833, 836], "7048": [399, 405], "705": [832, 833], "7051530741717352": 687, "7052": 833, "7053": 412, "7054": 826, "7056": 826, "7057": 826, "706": [173, 832, 833], "7060": 821, "7063948512077332": 837, "707": [832, 833], "7071": 655, "708": [832, 833, 834, 836], "709": [832, 833], "7091": 437, "7092": 832, "7095": 456, "7099": 833, "70it": 819, "71": [169, 184, 832, 833, 856, 863], "710": [153, 832, 833], "711": [832, 833, 834], "7110": 850, "712": [817, 832, 833], "7121": 832, "713": [695, 816, 832, 833], "7138": [437, 835], "714": [832, 833, 834], "7141": 118, "715": [832, 833, 834], "7153": 118, "716": [194, 832, 833], "7163": 804, "7165": 835, "7168": 804, "717": [161, 162, 163, 832, 833], "7174910641836348": 687, "718": [832, 833], "7186": 832, "719": [832, 833], "7190": 850, "7195": 833, "7196969604886617": 687, "7197": 687, "72": [832, 833, 856, 863], "720": [832, 833, 836], "7200": 850, "72045199": 833, "7205": 833, "721": [832, 833], "7210": 850, "7211": 25, "722": [135, 832, 833], "723": [832, 833, 836], "724": [817, 832, 833, 836], "7243": 821, "725": [832, 833, 836], "726": [192, 816, 817, 824, 832, 833, 834, 838, 861], "7260": 850, "7262": 132, "7264": 829, "7265": 829, "7266": 829, "7267": 829, "7269": [128, 129], "727": [832, 833], "728": [832, 833], "7287": 438, "7287e": [631, 667], "7288": 833, "729": [149, 832, 833], "7291568018841328": 687, "7294": 833, "72944458": 833, "73": [832, 833, 856, 863], "730": [817, 832, 833], "7300": 850, "730570": 839, "7308": 835, "731": [832, 833], "7311": [598, 618, 821], "7319": 818, "732": [159, 817, 832, 833], "7320": 821, "7321742043493028": 687, "733": [832, 833, 834, 841], "7339": 835, "734": [817, 832, 833, 834], "7345": 832, "735": [832, 833], "7352138669985214": 687, "7356": [434, 818], "736": [832, 833], "7365": 456, "7368": 687, "736833152378035": 687, "737": [816, 832, 833, 834], "738": [832, 833], "7380": 850, "739": [832, 833], "7390": 850, "7399": 832, "73990423": 832, "74": [25, 832, 833, 856, 863], "740": [159, 816, 832, 833, 834], "7400": 850, "7401": 832, "7405": 818, "7406": [821, 833], "741": [832, 833], "7410": [434, 850], "742": [832, 833], "7420": [833, 850], "7426": 687, "7426272601929126": 687, "7427": 433, "743": [817, 832, 833], "7430": 850, "7434": 832, "7435": 832, "744": [832, 833, 836], "7440": 850, "745": [136, 817, 832, 833], "7450": 850, "7451": 832, "74513696": 832, "7454": 832, "7457985352827006": 687, "746": [817, 832, 833], "7460": 850, "7465": 456, "7468": 833, "7469": 821, "747": [832, 833], "748": [165, 832, 833], "7480": 850, "749": [832, 833], "75": [14, 244, 431, 545, 715, 758, 801, 816, 832, 833, 834, 836, 837, 856, 863], "750": [832, 833, 834, 836], "7500": [548, 663], "7507": [643, 644], "751": [816, 832, 833], "7510": 850, "7514": 827, "752": [135, 822, 832, 833, 834], "7525": 404, "7526": 832, "753": [817, 832, 833, 836], "7530": 850, "7533": 833, "754": [816, 832, 833, 836], "7540": [440, 850], "7541": 821, "755": [14, 832, 833, 834], "7550": 850, "7556": 391, "756": [160, 832, 833, 836], "7560": [436, 850], "7567": [433, 434, 435, 436, 437, 438, 439, 440, 441], "7568": 832, "75682661": 832, "757": [832, 833], "7570": 850, "7571": 852, "758": [832, 833, 836], "7580": 850, "7583372765843964": 687, "7587": 412, "7588": 687, "7588441197954202": 687, "759": [832, 833, 834], "7590": 850, "75it": 827, "76": [832, 833, 856, 863], "760": [816, 832, 833, 834, 836], "7600": 134, "7602": 835, "761": [832, 833, 836], "7613943085507672": 687, "7614": 687, "7616": 821, "7619": 832, "762": [816, 832, 833, 834, 836], "763": [832, 833, 836], "7638": 832, "764": [832, 833, 834, 836], "765": [832, 833, 834, 836], "7650": 25, "765544096939567": 687, "7656": [423, 832], "7658": 850, "766": [832, 833, 834, 836], "7665": 408, "7668": 852, "767": [135, 832, 833, 836], "76758842": 832, "7676": 832, "7678": 833, "768": [159, 816, 832, 833, 834, 836, 856], "7686": 852, "769": [832, 833, 836], "7690": 852, "7692": 412, "7697": 687, "7697294432580938": 687, "77": [822, 832, 833, 856, 863], "770": [832, 833, 836], "7709": 420, "771": [816, 832, 833, 836], "7710": [128, 129, 441], "7711": 413, "7713": 832, "772": [816, 832, 833, 836], "7720": 804, "7721": 412, "773": [832, 833, 836], "774": [832, 833, 836], "775": [832, 833, 836], "7752": 456, "7759": [821, 832], "776": [816, 817, 832, 833, 836], "776002616178397": 687, "7762": 456, "7766": 456, "777": [832, 833, 836], "7773": 408, "7774": 393, "778": [135, 832, 833], "7780": 832, "77800": 819, "7787": 424, "779": [832, 833], "77it": 818, "78": [827, 832, 833, 856, 863], "780": [816, 832, 833], "781": [816, 819, 832, 833], "78100": 819, "7812": 832, "7819": 687, "7819383771535038": 687, "782": [832, 833], "7825": 852, "7827": 804, "7828": 833, "783": [832, 833], "7835": 852, "784": [14, 816, 832, 833, 836], "78445484": 833, "7845": 833, "7846": 456, "7848": 852, "7849": 440, "785": [832, 833], "7854": 852, "7859": 818, "786": [816, 832, 833], "7861": 818, "7863421810531344": 687, "7865": 404, "7867": 835, "7869": 832, "78693675": 832, "787": [832, 833], "7875": 852, "788": [151, 816, 832, 833], "78804": 171, "7884": 818, "7886": 832, "7889": 851, "789": [832, 833], "7891": 687, "7891429392727503": 687, "7893727601272978": 687, "7894": 456, "78959052": 832, "7896": 832, "7898": 856, "79": [456, 822, 827, 832, 833, 856, 863], "790": [816, 832, 833], "7901988878812207": 687, "7902": [687, 852], "7905": 413, "791": [816, 832, 833], "7911": 821, "7913": 852, "7916": 852, "7918": 851, "792": [832, 833], "7924": 438, "7928": 852, "7929": 852, "793": [153, 832, 833], "7938": 827, "794": [14, 832, 833], "7946": 412, "7947": 851, "7949": [433, 434, 435, 436, 437, 438, 439, 440, 441], "795": [816, 832, 833], "796": [832, 833], "79642": 829, "797": [832, 833], "7973": 438, "7974": 851, "798": [159, 832, 833], "7989": 852, "799": [832, 833], "7993": 412, "7997": [643, 644], "7999": 851, "7_transform": [824, 863, 865], "7g": [720, 804], "7\u548c11": 755, "7\u884c": 737, "7\ubd80\ud130": 799, "7\uc7a5": 789, "8": [4, 6, 9, 10, 14, 20, 130, 136, 139, 140, 142, 152, 153, 172, 184, 189, 190, 198, 207, 245, 246, 293, 298, 299, 301, 302, 303, 308, 315, 325, 333, 337, 338, 339, 342, 392, 393, 394, 400, 403, 411, 442, 444, 445, 447, 448, 449, 450, 454, 456, 473, 474, 554, 556, 562, 620, 638, 640, 652, 661, 683, 699, 700, 702, 704, 710, 743, 746, 755, 784, 787, 797, 815, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 835, 836, 837, 838, 847, 852, 853, 856, 859, 862, 863, 868], "80": [142, 143, 161, 190, 193, 456, 816, 818, 827, 832, 833, 834, 836, 837, 856, 863, 868], "800": [832, 833], "801": [832, 833], "8013": 852, "802": [133, 556, 832, 833], "8022": 832, "80224344": 832, "8025": 851, "803": [832, 833], "8030": 438, "804": [14, 832, 833], "8043": [437, 852], "805": [151, 163, 832, 833], "8050": 821, "8051": 850, "8053": 851, "8058": 412, "8059": 856, "806": [832, 833], "8060": 821, "8065": 425, "8068": 419, "807": [817, 832, 833], "8077": 821, "808": [832, 833], "8080": 21, "80809125": 833, "8081": 833, "8086": [456, 851], "8088": 832, "809": [832, 833], "8090": 659, "809016994374948": 341, "81": [151, 815, 822, 832, 833, 853, 856, 863], "810": [832, 833], "8100": 832, "811": [832, 833], "8111": 434, "8113": 433, "811333": 25, "8117650553546695": 687, "812": [556, 832, 833], "8128": 852, "8129": 851, "813": [816, 832, 833], "8132": 424, "8135": 406, "8136": 852, "8137": [433, 434, 435, 436, 437, 438, 439, 440, 441], "814": [832, 833], "8146": 424, "8149": 687, "8149104951283953": 687, "815": [832, 833], "816": [832, 833], "817": [832, 833], "8174": 832, "81742498": 832, "818": [161, 832, 833], "8183": 832, "81833543": 832, "8187": 851, "8188": 835, "8189658": 780, "819": [194, 832, 833], "8196": 821, "8199": 436, "81ea7a4": 827, "82": [172, 832, 833, 853, 856, 863], "820": [832, 833], "8205": 856, "8208": 421, "821": [161, 824, 832, 833, 855], "821187": 839, "822": [816, 832, 833], "8220": 835, "8221": 821, "823": [14, 832, 833], "8235": 413, "824": [832, 833], "8245": 412, "825": [832, 833], "8250": 818, "826": [832, 833], "8262": 408, "8267": 851, "827": [832, 833, 836], "828": [832, 833], "8287": 424, "829": [14, 832, 833], "8291": 832, "82it": 827, "83": [195, 822, 832, 833, 853, 856, 863], "830": [832, 833], "8303": 835, "8305": 835, "8307": [643, 644], "831": [178, 179, 181, 832, 833], "8314": 833, "832": [832, 833], "8323": 404, "8325": [424, 832], "8326": 407, "8326121496142408": 687, "833": [832, 833], "8332": 835, "834": [817, 832, 833], "8347": 833, "83472778": 833, "835": [832, 833], "8352": 856, "836": [832, 833], "837": [832, 833], "8371": [425, 833], "8375": 851, "8377": [433, 434, 435, 436, 437, 438, 439, 440, 441], "838": [832, 833], "8380h": 842, "8387": 437, "8389": 821, "839": [832, 833], "84": [195, 832, 833, 856, 863], "840": [832, 833], "8400": 606, "8403": 851, "84059178": 832, "8406": 832, "8408": 833, "8409": 832, "841": [832, 833], "8412": 832, "8414": 851, "842": [153, 832, 833, 834], "8428": 851, "843": [832, 833], "8437": 424, "844": [832, 833], "8446": 851, "845": [832, 833], "8451870383322376": 687, "8453123358491914": 687, "846": [832, 833], "8467": 851, "847": [194, 832, 833], "8470": 438, "8478810655406659": 687, "848": [832, 833], "8487": 406, "8489": [643, 644, 832, 850], "849": [832, 833], "8494": 851, "8494919263589972": 687, "8495": 687, "849983324532477": 687, "85": [816, 832, 833, 834, 836, 837, 856, 863], "850": [832, 833], "851": [832, 833], "8514": 851, "8515": 424, "852": [832, 833], "8521": [433, 434, 435, 436, 437, 438, 439, 440, 441], "8528": 851, "853": [832, 833], "8536": 388, "854": [832, 833, 836], "8544": 184, "8549": 456, "855": [832, 833], "8554": 832, "8556": 827, "856": [832, 833], "857": [832, 833], "8572": 851, "8574": 832, "858": [832, 833], "8582": 404, "8586722047523594": 687, "8589": 821, "859": [817, 832, 833, 836], "8597": [456, 821], "86": [832, 833, 856, 863], "860": [14, 832, 833], "8600992789919365": 837, "861": [832, 833, 836], "8613": 687, "8613368738351794": 687, "862": [832, 833], "8629": [833, 851], "863": [832, 833], "8634": [399, 405], "8637": 833, "864": [832, 833], "86406537": 832, "8641": 832, "8643238446466464": 687, "8648": 456, "865": [832, 833], "8651": 835, "8654": 418, "86573472329756": 687, "866": [832, 833], "8662": 833, "8666": [821, 832], "8667": 440, "867": [832, 833], "8674": 404, "8678": 833, "8679": 407, "868": [832, 833], "869": [832, 833], "8692": 851, "8698": 856, "87": [155, 187, 832, 833, 856, 863], "870": [832, 833], "8704": 851, "8705": 821, "871": [832, 833], "8710": 219, "8714": 832, "8715767748481147": 687, "8716": 833, "8717": 853, "872": [832, 833], "8723": 832, "8726": 437, "873": [832, 833], "874": [832, 833], "8744": 853, "875": [832, 833], "8753101998792645": 687, "8757520744192612": 687, "876": [832, 833], "8764": 408, "8766": 832, "877": [832, 833], "8771": 853, "8778998699783784": 687, "878": [14, 173, 816, 832, 833], "8788": 827, "879": [832, 833], "8797": 853, "87it": 827, "88": [168, 186, 821, 822, 832, 833, 856, 863], "880": [817, 832, 833], "8800": 851, "881": [145, 832, 833], "8813": 687, "8813472954005022": 687, "881680": 133, "882": [832, 833], "8824": 853, "8825": 424, "8827": 832, "8828": 856, "883": [832, 833, 834], "884": [832, 833], "88418021": 833, "8842": 833, "8843": 408, "885": [832, 833], "8851": 853, "8851294998284638": 687, "8852": 827, "8854": 438, "8858": 832, "886": [832, 833], "88651": [25, 176], "8869": 437, "887": [832, 833], "8877": 853, "888": [832, 833], "889": [832, 833], "89": [145, 160, 168, 456, 827, 832, 833, 856, 863], "890": [832, 833], "8904": 853, "891": [832, 833], "8914": 851, "892": [181, 832, 833], "8920": [456, 827, 851], "8922": 425, "893": [832, 833], "8930": 853, "8937": 832, "8938": [433, 434, 435, 436, 437, 438, 439, 440, 441], "894": [151, 832, 833], "8943": 827, "8945": [433, 434, 435, 436, 437, 438, 439, 440, 441], "8948": [433, 434, 435, 436, 437, 438, 439, 440, 441], "8949": 833, "895": [832, 833], "8954": [643, 644], "8956": 853, "896": [832, 833], "8964": 687, "8964389655603473": 687, "8966": 821, "897": [14, 832, 833], "8975": 687, "8975240205792763": 687, "898": [817, 832, 833], "8982": 853, "899": [160, 816, 832, 833], "8g": [720, 804], "8\u548c": 755, "8\u548c11": 755, "8\uac1c\uc758": [780, 784], "8\uacfc": 785, "8\ubc88\uc774": 797, "8\uc5d0": 797, "8\uc758": 797, "8\uc7a5": 789, "9": [4, 9, 10, 20, 26, 138, 148, 163, 195, 246, 293, 297, 298, 299, 300, 301, 302, 315, 333, 337, 338, 340, 404, 424, 456, 474, 554, 615, 616, 638, 640, 661, 699, 700, 709, 710, 720, 743, 744, 753, 755, 784, 785, 795, 797, 815, 817, 819, 821, 822, 826, 827, 829, 832, 833, 835, 836, 837, 838, 842, 852, 856, 859, 863], "90": [456, 816, 832, 833, 834, 836, 837, 856, 863], "900": [14, 616, 832, 833], "9000": 863, "9008": 853, "901": [832, 833], "9011": [424, 856], "9016": [399, 405], "902": [14, 832, 833], "9025": 833, "9027": 397, "9028": [433, 434, 435, 436, 437, 438, 439, 440, 441], "903": [832, 833], "9030": [433, 434, 435, 436, 437, 438, 439, 440, 441], "9034": 853, "904": [832, 833], "905": [832, 833], "9059": 832, "90590371": 832, "906": [832, 833, 834], "9060": 853, "907": [832, 833], "9070": 851, "908": [832, 833], "9081": 438, "9085": 853, "9089": 416, "909": [832, 833], "9091": 408, "91": [832, 833, 856, 863], "910": [832, 833], "9105": [606, 643, 644], "9108": 456, "911": [832, 833], "9111": 853, "912": [832, 833], "9129": 835, "913": [832, 833], "9135": 832, "9137": [433, 434, 435, 436, 437, 438, 439, 440, 441, 853], "9137336384979067": 687, "914": [817, 832, 833], "9140": [643, 644], "915": [832, 833], "9156": 456, "916": [832, 833], "9162": 853, "9166": 425, "9167": 9, "9168191778828504": 687, "917": [832, 833], "9171": 832, "918": [832, 833], "9187": 853, "9189": 851, "919": [832, 833], "92": [832, 833, 856, 859, 862, 863], "920": [832, 833], "921": [816, 832, 833], "9213": 853, "9214": 832, "9219": 821, "922": [832, 833], "9226": 392, "9228": [25, 150], "923": [832, 833], "9230": 438, "9237": 833, "9238": 853, "924": [152, 826, 832, 833], "9241": 412, "925": [832, 833], "9253": 851, "9254": 835, "926": [817, 832, 833], "9263": 853, "9264": 833, "9268": 388, "927": [832, 833], "9272": 833, "9273": 420, "928": [14, 832, 833], "9280": [643, 644], "9288": 853, "9288e": 340, "929": [832, 833], "9297": 420, "9299984": 833, "93": [25, 822, 832, 833, 856, 863], "930": [832, 833], "9300": 833, "9302": 392, "9304": 856, "9307": 804, "931": [832, 833], "93127584": 832, "9313": [832, 853], "9315": 412, "932": [832, 833], "933": [832, 833], "9335": 832, "9338": 853, "934": [832, 833], "9343": 420, "935": [832, 833], "936": [832, 833], "9363": 853, "936706701616337": 687, "9368": [128, 129], "937": [817, 832, 833], "9370522452510665": 687, "938": [832, 833], "9388": 853, "939": [832, 833], "9397636966928355": 687, "94": [832, 833, 856, 863], "940": [832, 833], "9404": 804, "9406": 850, "941": [832, 833], "9413": 853, "9415": 832, "9417": 821, "9418796835016118": 687, "9419": 687, "942": [832, 833], "9422093637539785": 687, "9429": 851, "943": [173, 832, 833], "9430": 456, "9438": 853, "944": [161, 832, 833], "9441": 420, "9444": 851, "94478981": 833, "9448": 833, "9449": 832, "945": [832, 833], "9459": 850, "946": [817, 822, 832, 833, 834], "9463": 853, "947": [832, 833], "948": [832, 833, 836], "94806": 144, "9481": 851, "9487": 833, "949": [832, 833], "9490": 441, "94926414": 832, "9493": 832, "949566683": 852, "95": [25, 816, 832, 833, 834, 836, 837, 856, 863], "950": [832, 833], "9500": 851, "951": [158, 832, 833, 836], "9511783938523962": 687, "9512": 687, "9516": 833, "9518": 832, "952": [14, 832, 833], "953": [832, 833], "9534": 851, "9536": [821, 833], "9539": [168, 186], "954": [163, 194, 816, 832, 833], "955": [832, 833], "9552": 832, "9552039": 832, "956": [832, 833], "957": [832, 833], "9571": 851, "9572": 407, "958": [161, 832, 833], "959": [832, 833], "9594": 833, "9596": 833, "9599": 406, "96": [822, 832, 833, 856, 863], "960": [832, 833], "9600": 173, "9609": 441, "961": [832, 833], "9619": 832, "96191266": 832, "962": [152, 832, 833], "963": [14, 832, 833], "9633": 833, "96331221": 833, "9634": 388, "9637": 456, "9638": 821, "964": [832, 833], "9643": 851, "965": [181, 832, 833], "9652": 833, "966": [14, 832, 833], "966043": [694, 695], "967": [832, 833], "9674": 833, "968": [832, 833], "969": [832, 833], "9698": 391, "97": [832, 833, 856, 859, 863], "970": [14, 832, 833], "9703": 832, "971": [832, 833], "9714": 617, "9717": 832, "972": [556, 832, 833], "9721": 832, "9722": 851, "973": [14, 832, 833, 853], "9739": 833, "974": [695, 832, 833], "9742": 821, "975": [832, 833, 853], "976": [832, 833], "9764": 851, "977": [14, 832, 833], "9774471538377553": 687, "978": [832, 833], "9784264442230887": 687, "979": [832, 833], "9794634290792008": 687, "98": [25, 163, 696, 740, 781, 822, 832, 833, 856, 863], "980": [832, 833], "98039916": 832, "9804": 832, "981": [832, 833], "982": [832, 833], "9820": [598, 618], "983": [832, 833], "9830": 25, "98371": 829, "984": [146, 832, 833], "9840": 438, "9848072295736628": 687, "985": [14, 832, 833], "9851": 832, "986": [832, 833], "9868": 402, "987": [832, 833], "9870": 821, "9879": 856, "988": [832, 833], "9889": 821, "989": [832, 833], "99": [832, 833, 856, 863], "990": [832, 833], "991": [832, 833], "991848": 25, "9919": 821, "992": [832, 833], "9927": 421, "993": [832, 833], "9933": 821, "994": [832, 833], "9942": 832, "9949": [404, 832], "995": [14, 832, 833], "9952376085297715": 687, "996": [816, 832, 833], "997": [832, 833], "9971749359397111": 687, "9972": [438, 833], "9975": 851, "9977861": 832, "9978": 832, "998": [832, 833], "9982": 833, "9986": 392, "999": [4, 10, 14, 832, 833], "9990": [433, 434, 435, 436, 437, 438, 439, 440, 441], "9_gat": [824, 855], "9\uc5d0\uc11c": 785, "A": [4, 6, 7, 12, 14, 20, 21, 22, 26, 27, 28, 31, 34, 35, 39, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 71, 75, 79, 82, 87, 88, 93, 94, 95, 96, 100, 105, 109, 110, 118, 119, 121, 127, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 203, 205, 206, 207, 220, 230, 232, 236, 239, 241, 242, 245, 288, 289, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 315, 316, 318, 319, 323, 327, 335, 336, 341, 342, 350, 351, 352, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 413, 415, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 442, 444, 445, 455, 456, 473, 474, 475, 497, 539, 556, 558, 559, 560, 561, 562, 563, 564, 572, 573, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 648, 651, 656, 657, 662, 666, 681, 687, 689, 692, 693, 695, 696, 698, 700, 701, 703, 707, 719, 727, 728, 729, 786, 788, 816, 817, 818, 819, 821, 822, 825, 827, 830, 834, 836, 837, 839, 846, 850, 852, 853, 856, 863, 864, 866, 867], "AND": 21, "And": [168, 173, 186, 240, 297, 318, 319, 330, 331, 404, 432, 561, 562, 563, 821, 831, 832], "As": [14, 20, 22, 197, 231, 240, 561, 562, 563, 564, 633, 639, 689, 692, 694, 695, 718, 724, 827, 837, 838, 843, 846, 847, 852, 853, 863], "At": [231, 687, 722, 852, 859], "Be": [818, 853], "Being": [4, 10, 728], "But": [89, 293, 301, 718, 815, 819, 859], "By": [4, 31, 32, 41, 53, 54, 70, 122, 125, 126, 131, 200, 201, 207, 210, 220, 232, 239, 240, 249, 250, 293, 332, 351, 352, 355, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 546, 547, 639, 687, 692, 693, 702, 703, 714, 720, 728, 788, 815, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 846, 859, 862, 863], "For": [4, 5, 9, 10, 20, 21, 22, 24, 43, 46, 51, 52, 55, 59, 60, 61, 66, 72, 74, 87, 88, 89, 90, 103, 107, 113, 114, 115, 116, 118, 119, 122, 128, 129, 165, 179, 195, 209, 214, 215, 216, 217, 220, 221, 226, 227, 234, 235, 240, 241, 242, 288, 290, 294, 296, 297, 298, 305, 308, 309, 315, 316, 317, 342, 355, 381, 383, 386, 389, 436, 442, 445, 554, 556, 561, 562, 563, 564, 565, 570, 571, 572, 573, 611, 612, 632, 633, 638, 639, 641, 647, 648, 649, 655, 660, 664, 673, 681, 683, 687, 689, 690, 691, 692, 693, 694, 695, 698, 700, 702, 703, 706, 707, 709, 710, 711, 713, 716, 718, 719, 722, 723, 724, 726, 727, 728, 729, 730, 779, 788, 814, 815, 817, 818, 819, 821, 826, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 843, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868], "If": [4, 6, 21, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 43, 44, 45, 46, 48, 51, 54, 56, 57, 58, 60, 64, 65, 70, 71, 73, 74, 79, 80, 81, 82, 87, 89, 90, 93, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 144, 145, 148, 156, 165, 168, 170, 177, 178, 179, 183, 184, 207, 210, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 246, 248, 249, 250, 287, 288, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 315, 316, 318, 319, 323, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 344, 350, 351, 355, 381, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 430, 432, 433, 435, 439, 440, 442, 443, 445, 446, 449, 453, 457, 474, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 549, 551, 552, 553, 554, 555, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 578, 581, 583, 585, 588, 589, 592, 595, 596, 597, 598, 599, 601, 608, 609, 610, 611, 612, 613, 614, 615, 618, 620, 624, 631, 632, 633, 638, 639, 641, 643, 644, 645, 647, 648, 649, 656, 657, 659, 660, 662, 665, 667, 679, 680, 686, 687, 692, 694, 695, 699, 702, 703, 706, 709, 710, 711, 712, 713, 715, 716, 717, 720, 725, 726, 727, 730, 787, 815, 816, 817, 818, 819, 821, 823, 826, 827, 829, 831, 835, 837, 838, 839, 843, 846, 859], "In": [4, 6, 8, 14, 21, 22, 27, 41, 51, 70, 140, 150, 181, 183, 186, 210, 214, 221, 231, 232, 235, 239, 240, 245, 246, 247, 297, 300, 303, 308, 310, 315, 316, 318, 333, 337, 338, 341, 350, 381, 385, 389, 397, 398, 414, 453, 456, 473, 474, 475, 538, 560, 563, 567, 572, 573, 606, 614, 617, 620, 638, 641, 681, 683, 687, 689, 691, 692, 693, 695, 696, 698, 699, 702, 703, 705, 706, 711, 714, 716, 717, 718, 719, 721, 722, 723, 725, 726, 727, 728, 729, 730, 815, 816, 817, 819, 821, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 843, 846, 847, 851, 852, 853, 854, 856, 859, 862, 863, 866, 868, 869], "It": [4, 6, 7, 8, 9, 20, 21, 22, 34, 35, 48, 60, 73, 87, 91, 92, 93, 94, 100, 113, 120, 125, 126, 128, 129, 130, 131, 132, 138, 139, 141, 142, 143, 158, 162, 178, 179, 189, 190, 191, 197, 198, 205, 208, 210, 211, 212, 217, 219, 220, 231, 235, 240, 241, 242, 247, 249, 250, 287, 293, 295, 297, 303, 305, 308, 310, 317, 319, 331, 332, 337, 338, 339, 350, 382, 384, 385, 390, 392, 393, 394, 395, 402, 407, 409, 414, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 439, 444, 450, 451, 452, 453, 454, 457, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 545, 546, 547, 556, 557, 563, 564, 565, 567, 568, 638, 666, 683, 685, 687, 689, 692, 693, 694, 695, 698, 703, 706, 707, 718, 719, 720, 814, 817, 825, 827, 829, 831, 837, 838, 839, 846, 850, 851, 853, 854, 856, 859, 860, 862, 863, 866, 868, 869], "Its": [53, 54, 142, 240, 414, 426, 427, 428, 429, 501, 563, 695, 859], "NOT": [5, 21, 22, 230, 413, 850, 851, 852, 853, 856, 859, 862, 863], "No": [386, 723, 827, 853, 868, 869], "Not": 843, "ON": 815, "Of": 705, "On": [22, 116, 427, 429, 705, 712, 720], "One": [20, 21, 43, 44, 46, 51, 73, 74, 77, 103, 104, 122, 130, 221, 229, 230, 234, 293, 297, 391, 449, 561, 639, 679, 685, 687, 689, 691, 692, 699, 701, 702, 703, 706, 712, 713, 714, 723, 726, 727, 728, 730, 819, 834, 838, 853, 856], "Or": [216, 560, 712, 717, 815], "Such": [718, 726, 729, 832, 833, 838, 862], "That": [4, 22, 26, 232, 239, 241, 303, 308, 692, 852, 859, 868], "The": [0, 2, 3, 4, 6, 8, 9, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 381, 382, 383, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 578, 581, 582, 583, 585, 588, 589, 591, 592, 594, 595, 596, 597, 598, 599, 601, 602, 603, 606, 610, 611, 612, 613, 614, 618, 624, 625, 626, 628, 632, 633, 634, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 654, 655, 656, 657, 658, 660, 662, 663, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 733, 773, 788, 798, 799, 803, 815, 816, 817, 818, 819, 820, 821, 822, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 846, 847, 850, 852, 853, 857, 862, 863, 864, 866, 868, 869], "Then": [6, 113, 130, 174, 240, 339, 385, 389, 430, 432, 477, 478, 479, 480, 482, 483, 484, 485, 556, 567, 694, 717, 726, 846, 847, 852, 863], "There": [1, 22, 62, 63, 116, 126, 147, 217, 230, 232, 239, 292, 389, 455, 620, 687, 689, 693, 695, 699, 729, 821, 836, 853, 856, 859, 863], "These": [150, 162, 245, 473, 700, 717, 724, 815, 836, 864, 866], "To": [1, 4, 5, 14, 21, 22, 51, 68, 77, 89, 116, 122, 210, 213, 214, 215, 216, 219, 220, 240, 245, 313, 351, 352, 385, 413, 424, 425, 473, 546, 547, 560, 561, 562, 563, 641, 685, 687, 692, 693, 695, 702, 703, 711, 713, 717, 719, 724, 726, 729, 730, 788, 815, 817, 821, 822, 826, 827, 832, 833, 834, 843, 846, 851, 852, 853, 856, 859, 863, 868, 869], "Will": [200, 213], "With": [77, 209, 213, 386, 408, 559, 561, 562, 563, 640, 679, 710, 727, 728, 815, 834, 842, 850, 852, 859], "_": [0, 21, 245, 298, 300, 315, 403, 406, 407, 411, 415, 421, 424, 425, 427, 436, 444, 449, 473, 647, 673, 683, 694, 715, 716, 729, 730, 755, 758, 759, 769, 770, 797, 801, 802, 812, 813, 817, 818, 834, 835, 836, 837, 838, 839, 842, 843, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "_1": [395, 424, 425, 647], "_2": [450, 647], "_4": [755, 797], "_5": [755, 797, 828], "_7": [755, 797], "_8": [755, 797], "__": [137, 171, 180, 182, 188, 712, 719, 850, 851], "__all__": [4, 34, 35, 53, 54, 60, 87, 122, 355], "__call__": [651, 687, 758, 801], "__forward__": 852, "__getitem__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 685, 687, 689, 690, 732, 735, 736, 772, 775, 776, 839], "__init__": [21, 208, 218, 300, 313, 414, 424, 425, 426, 427, 428, 429, 456, 556, 685, 689, 693, 711, 712, 714, 715, 716, 717, 719, 720, 722, 724, 726, 728, 729, 730, 732, 735, 755, 756, 757, 758, 759, 760, 762, 764, 766, 768, 769, 770, 772, 775, 797, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "__len__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 685, 689, 732, 735, 755, 772, 775, 797, 839], "__main__": [827, 859, 868, 869], "__name__": [827, 859, 868, 869], "__path__": 21, "__version__": [816, 817, 818, 819, 821, 826, 827, 829, 832, 833], "__\u4e2d\u7684\u505a\u6cd5": 767, "_aggre_typ": [722, 723, 762, 763, 806, 807], "_basenegativesampl": [226, 227], "_block": 305, "_collate_fn": [688, 734, 774], "_continu": 863, "_dgl_graph": [690, 736, 776], "_dist_train": 562, "_dst": 127, "_e": [4, 118, 125, 126, 232, 240, 399, 402, 410, 413, 416, 419, 633], "_etype_str_to_tupl": 320, "_etype_tuple_to_str": 321, "_extract_gz": [686, 733, 773], "_ffi": 22, "_ft": [706, 750, 791], "_g": [689, 735, 775], "_gener": 0, "_get_dgl_url": [689, 735, 775], "_get_next": 859, "_get_previ": 859, "_i": [387, 403, 647, 666, 706, 750, 791, 821, 856, 863], "_id": [168, 186, 219, 246, 333, 337, 338, 474, 538, 554, 638, 639, 694, 695, 835], "_in_dst_feat": [719, 722, 762, 806], "_in_src_feat": [719, 722, 762, 806], "_info": [690, 736, 776], "_ini_api": 22, "_init_api": 22, "_initialize_edge_repr": 859, "_initialize_node_repr": 859, "_j": [403, 706, 750, 791, 821, 853], "_k": [343, 433, 434, 435, 440], "_l": 856, "_label": [689, 735, 775], "_load_graph": [689, 735, 775], "_mean": [850, 853], "_method": [850, 853], "_n": [4, 239, 240, 399, 402, 410, 416, 419], "_name": [689, 735, 775], "_num_task": [689, 735, 775], "_out_feat": [719, 722, 762, 806], "_p": [451, 452], "_preprocess_featur": [689, 735, 775], "_sample_with_etyp": 715, "_sha1_str": [686, 689, 733, 735, 773, 775], "_src": 127, "_static": [834, 835, 836, 837, 838, 839], "_t": 436, "_tag": [572, 573], "_tag_offset": [563, 572, 573], "_type": [638, 639], "_type_kei": 22, "_u": [4, 125, 126, 413, 729, 755, 769, 797, 812, 850], "_url": [689, 735, 775], "_v": [125, 126, 413, 729, 755, 769, 797, 812, 821], "a1": [26, 821], "a2": [26, 821], "a_": [355, 386, 401, 412, 418, 421, 457, 706, 750, 791, 851, 852, 853, 859], "a_0": [178, 179], "a_1": [817, 859], "a_1x": 817, "a_2x": 817, "a_div": 719, "a_dst": 127, "a_hat": [816, 817, 821], "a_i": 817, "a_new": 821, "a_r": 817, "a_rx": 817, "a_src": 127, "a_t": 859, "a_tild": 817, "a_tre": 856, "ab": [118, 119, 127, 131, 134, 137, 146, 169, 171, 180, 182, 188, 350, 429, 556, 822, 842], "ab1": 26, "ab2": 26, "abil": 853, "abl": [695, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842], "about": [1, 20, 21, 22, 158, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 389, 473, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 633, 680, 685, 692, 695, 697, 699, 700, 715, 728, 817, 838, 851, 852, 853, 856, 863], "abov": [5, 22, 130, 142, 178, 179, 210, 220, 246, 251, 252, 263, 264, 265, 266, 333, 337, 338, 355, 388, 389, 395, 404, 406, 407, 412, 413, 420, 421, 450, 454, 474, 538, 572, 573, 633, 683, 686, 689, 700, 703, 705, 706, 707, 711, 715, 717, 723, 726, 728, 729, 730, 819, 821, 827, 828, 829, 846, 847, 850, 851, 853, 859, 862, 869], "absent": 317, "absolut": [201, 202, 695, 814], "abstract": [156, 292, 310, 314, 650, 685, 697, 711, 821], "abund": 728, "ac": 144, "academ": [151, 152, 159, 289, 695], "academi": 851, "acc": [730, 770, 813, 816, 817, 819, 827, 829, 834, 836, 850, 852, 856, 868, 869], "acc_perm1": 852, "acc_perm2": 852, "acceler": [392, 393, 394, 453, 695, 817, 843, 856, 863], "accept": [21, 22, 209, 309, 353, 393, 647, 701, 717, 786, 829, 835, 846], "access": [4, 22, 89, 108, 122, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 288, 291, 292, 294, 296, 303, 316, 351, 354, 539, 689, 691, 695, 696, 700, 706, 712, 713, 717, 827, 869], "accompani": 341, "accomplish": 862, "accord": [9, 39, 52, 78, 91, 92, 139, 140, 141, 209, 214, 216, 220, 226, 227, 232, 239, 240, 243, 297, 339, 386, 395, 442, 449, 497, 500, 554, 556, 563, 565, 567, 643, 644, 679, 695, 715, 722, 723, 807, 818, 853, 863], "accordingli": [95, 96, 125, 249, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 554, 687, 694, 826, 829], "account": [120, 846], "accumul": [575, 863], "accur": 834, "accuraci": [21, 730, 813, 816, 817, 819, 822, 827, 829, 834, 836, 838, 846, 851, 852, 853, 862, 863, 869], "accuracy_scor": [829, 846], "achiev": [21, 22, 41, 385, 387, 397, 399, 402, 403, 405, 406, 407, 410, 413, 420, 707, 712, 718, 727, 729, 730, 818, 852, 862], "acl": 856, "acm": [134, 173], "acquaint": 814, "across": [22, 73, 113, 120, 128, 129, 130, 217, 245, 305, 414, 453, 454, 473, 639, 691, 692, 703, 723, 788, 843, 859, 868], "act": [235, 683, 863], "act_loss": 863, "act_loss_weight": 863, "action": [166, 427, 429], "action_step": 859, "activ": [151, 152, 180, 391, 392, 396, 397, 398, 403, 405, 406, 407, 408, 411, 413, 416, 418, 419, 420, 421, 444, 445, 631, 638, 667, 683, 720, 722, 723, 728, 762, 763, 804, 806, 807, 811, 816, 817, 850, 851, 853, 859, 862, 863], "actor": [134, 166], "actual": [4, 5, 22, 210, 221, 353, 557, 561, 562, 563, 723], "ad": [4, 10, 27, 28, 114, 115, 116, 142, 143, 150, 186, 189, 190, 289, 318, 349, 393, 418, 420, 455, 456, 649, 666, 687, 695, 702, 816, 831, 835, 842, 857, 859, 863, 866], "adagrad": [4, 10, 692, 778, 856], "adam": [4, 10, 424, 425, 426, 427, 428, 429, 691, 692, 712, 715, 717, 719, 720, 726, 728, 729, 730, 737, 738, 755, 756, 758, 760, 766, 768, 769, 770, 777, 778, 797, 798, 801, 803, 804, 810, 811, 812, 813, 816, 817, 818, 819, 826, 827, 829, 834, 836, 837, 838, 846, 847, 850, 851, 852, 853, 863, 868, 869], "adapt": [13, 165, 196, 407, 421, 425, 426, 427, 714, 862], "adavantag": 853, "add": [9, 21, 22, 27, 28, 114, 115, 116, 117, 125, 132, 133, 135, 136, 140, 142, 143, 144, 150, 151, 152, 153, 154, 157, 158, 165, 170, 176, 189, 190, 191, 192, 198, 249, 253, 254, 267, 268, 277, 278, 297, 340, 387, 391, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 442, 445, 487, 488, 498, 499, 502, 503, 504, 505, 506, 507, 528, 529, 620, 631, 646, 647, 648, 649, 659, 667, 679, 687, 689, 692, 706, 707, 711, 715, 750, 791, 819, 821, 831, 835, 839, 842, 843, 846, 850, 851, 853, 856, 863], "add_edg": [28, 95, 96, 115, 125, 249, 349, 456, 551, 552, 850, 859], "add_edge_ag": 859, "add_edge_attribut": 297, "add_edge_log_p": 859, "add_edge_or_not": 859, "add_edges_from": 859, "add_nod": [27, 95, 96, 114, 349, 456, 551, 552, 859], "add_node_ag": 859, "add_node_and_upd": 859, "add_node_attribut": 297, "add_node_log_p": 859, "add_nodes_from": [125, 249], "add_on": 301, "add_reverse_edg": 835, "add_self_loop": [387, 392, 394, 399, 402, 403, 404, 405, 406, 407, 410, 413, 416, 419, 420, 422, 423, 553, 804], "addbackward0": [391, 393, 396, 397, 404, 407, 410, 412, 413, 416, 418, 419], "addedg": [13, 859], "addit": [4, 8, 21, 121, 140, 148, 173, 179, 182, 229, 230, 240, 246, 247, 333, 337, 338, 355, 406, 407, 413, 414, 424, 425, 426, 427, 428, 429, 442, 443, 445, 474, 475, 538, 554, 605, 619, 681, 687, 689, 692, 695, 696, 703, 707, 711, 715, 723, 724, 727, 728, 815, 821, 846, 850, 853, 854, 859, 866], "addition": [220, 340, 558, 560, 640, 825, 863], "addmetapath": 13, "addmmbackward": [398, 408, 420, 421], "addmmbackward0": 394, "addnod": 859, "address": [210, 453, 696, 703, 713, 717, 720, 828, 846, 847, 859, 863], "addrevers": [13, 425, 426, 427, 651, 687], "addselfloop": [13, 720], "adj": [33, 118, 146, 169, 396, 397, 398, 837], "adj_extern": [572, 573], "adj_neg": 837, "adjac": [13, 30, 31, 32, 118, 119, 126, 131, 250, 287, 332, 335, 336, 342, 388, 396, 397, 398, 407, 420, 421, 455, 563, 572, 573, 647, 655, 656, 657, 662, 666, 694, 695, 727, 779, 816, 817, 818, 819, 821, 850, 852, 853], "adjust": [120, 730, 862, 863], "adopt": [426, 428, 691, 730, 834, 863], "advanc": [210, 293, 558, 560, 681, 691, 693, 695, 706, 710, 814, 843, 852, 856, 863], "advantag": [313, 695, 712, 713, 728, 817, 843, 853], "affect": 856, "affili": [695, 839], "affiliated_with": [695, 780], "affin": [389, 843, 863], "affinit": 843, "after": [4, 73, 91, 92, 93, 94, 95, 96, 100, 113, 167, 240, 291, 303, 308, 337, 338, 351, 352, 387, 399, 400, 402, 403, 405, 406, 407, 410, 413, 420, 422, 446, 455, 539, 551, 552, 556, 560, 572, 573, 639, 656, 657, 662, 665, 687, 689, 694, 695, 706, 718, 729, 815, 817, 827, 832, 833, 837, 842, 846, 847, 852, 856, 859, 863, 868], "afterward": [4, 424, 425, 426, 427, 428, 429, 445, 836, 842], "ag": [699, 743, 784, 839], "again": [21, 638, 639, 695, 712, 715, 846, 852, 853, 869], "against": [21, 327, 729, 730, 822], "agg": [724, 764, 808], "agg_fn": [724, 764, 808], "aggreg": [5, 9, 73, 91, 92, 93, 94, 100, 111, 113, 117, 263, 264, 265, 266, 383, 387, 389, 392, 393, 394, 395, 397, 398, 399, 402, 403, 405, 406, 407, 408, 410, 413, 415, 416, 417, 419, 420, 424, 425, 426, 428, 454, 477, 478, 479, 480, 482, 483, 484, 485, 499, 501, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526, 549, 550, 641, 649, 669, 705, 706, 708, 714, 716, 719, 722, 723, 724, 728, 730, 762, 763, 764, 768, 770, 794, 797, 806, 807, 808, 811, 813, 816, 818, 828, 834, 836, 838, 846, 850, 851, 852, 853], "aggregate_radiu": 852, "aggregate\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 770, "aggregate\ub418\uace0": 800, "aggregate\ub97c": 811, "aggregation\ub9cc": 802, "aggregation\uc744": [806, 808], "aggregator_typ": [394, 408, 410, 416, 419, 722, 730, 762, 770, 806, 813, 829, 868], "aggregator_type\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 770, "aggress": 822, "aggretate\ud558\ub294": 800, "agnn": 387, "agnost": [9, 21], "agre": 862, "agreement": 862, "ahead": [837, 856], "ai": [23, 816, 817, 818, 819, 821, 822, 826, 827, 829, 832, 833, 839, 859], "aifb": [132, 851], "aifbdataset": 851, "aim": [299, 850, 851, 852, 853, 856, 859, 862, 863], "aka": 706, "al": [72, 135, 136, 556, 816, 818, 828, 834, 836, 850, 856], "albert": [141, 142, 143], "algorithm": [0, 3, 4, 6, 10, 209, 240, 292, 339, 352, 422, 427, 429, 430, 432, 554, 556, 561, 567, 692, 693, 695, 710, 714, 728, 817, 846, 854, 859, 862, 863, 866, 869], "alia": [1, 4, 29, 33, 44, 49, 50, 69, 76, 83, 84, 85, 86, 97, 98, 99, 104, 106, 111, 156, 228, 574, 600, 821], "align": [5, 9, 302, 836, 837, 851, 852, 853, 856, 859, 863], "alist": [724, 764, 808], "aliv": 291, "all": [4, 5, 6, 9, 14, 20, 21, 22, 26, 30, 34, 35, 39, 41, 44, 45, 48, 51, 52, 53, 54, 56, 60, 61, 68, 70, 73, 77, 78, 79, 81, 82, 87, 88, 89, 95, 101, 102, 104, 105, 113, 117, 119, 121, 122, 126, 127, 128, 129, 130, 131, 133, 137, 143, 144, 146, 148, 156, 157, 158, 161, 164, 169, 179, 182, 184, 186, 189, 190, 191, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 226, 227, 232, 234, 239, 240, 241, 242, 243, 245, 247, 250, 289, 292, 297, 304, 305, 309, 313, 316, 317, 319, 330, 331, 332, 333, 339, 344, 351, 354, 355, 385, 389, 397, 402, 403, 407, 413, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 448, 454, 455, 473, 475, 477, 479, 482, 484, 500, 503, 505, 509, 511, 517, 519, 523, 525, 538, 539, 546, 547, 551, 553, 558, 559, 560, 561, 562, 563, 564, 567, 568, 633, 639, 641, 643, 644, 649, 656, 657, 662, 665, 671, 681, 687, 689, 691, 692, 693, 694, 695, 696, 698, 701, 702, 703, 706, 708, 710, 713, 714, 716, 717, 718, 723, 725, 726, 727, 728, 729, 730, 746, 787, 788, 797, 810, 813, 814, 817, 818, 819, 820, 821, 824, 826, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 842, 846, 850, 851, 852, 853, 856, 859, 862, 868, 869], "all_acc": 852, "all_edg": [556, 561, 562, 755, 797], "all_logit": [836, 837], "all_loss": 852, "all_nodes_set": [292, 304, 309, 714], "alloc": 235, "allow": [4, 20, 22, 30, 31, 32, 34, 35, 41, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 126, 131, 146, 169, 246, 247, 249, 250, 287, 291, 332, 333, 337, 338, 383, 385, 474, 476, 501, 538, 549, 551, 553, 561, 567, 570, 572, 573, 638, 687, 692, 695, 699, 700, 703, 713, 718, 720, 822, 836, 842, 846, 854, 863, 866, 868], "allow_dupl": 649, "allow_zero_in_degre": [387, 399, 402, 403, 405, 406, 407, 410, 413, 420], "almost": [232, 239, 563, 689, 712, 715, 717, 719, 726, 827, 869], "alon": [834, 835], "along": [9, 20, 21, 48, 73, 91, 92, 93, 94, 100, 113, 165, 210, 300, 302, 303, 308, 326, 349, 383, 439, 447, 501, 559, 560, 561, 592, 595, 596, 597, 599, 643, 644, 647, 697, 730, 816, 817, 821, 836, 852, 854, 863, 866, 868], "alongsid": [231, 712, 814], "alp": [422, 423], "alpha": [178, 179, 388, 407, 422, 423, 444, 455, 662, 666, 853], "alpha1": [424, 425], "alpha2": [424, 425], "alpha_": [399, 403, 405, 406, 436, 853], "alpha_1": [424, 425], "alpha_2": [424, 425], "alpha_i": 454, "alreadi": [64, 71, 89, 108, 109, 117, 156, 159, 161, 162, 163, 200, 297, 318, 349, 578, 581, 583, 585, 588, 589, 601, 632, 685, 686, 687, 689, 701, 717, 725, 772, 826, 827, 829, 832, 833, 836, 837, 839, 850, 863], "also": [0, 1, 2, 4, 5, 8, 14, 21, 22, 27, 28, 43, 44, 46, 70, 74, 101, 102, 103, 104, 114, 118, 119, 122, 130, 131, 144, 162, 174, 184, 214, 216, 220, 226, 227, 240, 241, 246, 247, 293, 297, 310, 318, 319, 326, 331, 332, 333, 337, 338, 355, 383, 415, 416, 418, 424, 425, 426, 428, 453, 474, 475, 538, 551, 552, 555, 557, 563, 572, 573, 579, 580, 633, 638, 640, 681, 683, 685, 688, 689, 691, 692, 693, 694, 695, 698, 699, 701, 702, 703, 706, 711, 712, 713, 715, 716, 717, 726, 728, 730, 786, 818, 821, 827, 828, 829, 830, 835, 836, 837, 838, 839, 842, 843, 846, 847, 851, 852, 853, 856, 859, 860, 862, 863, 866, 868, 869], "altern": [21, 22, 291, 822, 846, 856, 862], "although": [4, 424, 425, 426, 427, 428, 429, 558, 560, 815, 817, 835, 836, 837], "alwai": [21, 101, 102, 142, 143, 183, 189, 190, 200, 201, 240, 293, 298, 344, 351, 352, 431, 545, 556, 687, 694, 699, 828, 835], "always_preserv": 130, "am": 133, "amazon": [14, 21, 25, 135, 136, 137, 161, 162, 289, 789, 843], "amazon_co_buy_comput": 140, "amazonaw": [23, 689, 735, 775], "amazoncobui": [25, 135, 136], "amazoncobuycomputerdataset": [140, 197, 198], "amazoncobuydata": [689, 735, 775], "ambigu": [48, 57, 80], "among": [4, 14, 120, 161, 305, 337, 338, 385, 691, 716, 728, 832, 833, 837, 851, 852, 854, 859, 863, 864, 866], "amount": [245, 291, 473, 694, 862], "amp": [720, 804], "amp_dtyp": 720, "amp_en": 720, "amper": [9, 706, 791], "amplif": [395, 417], "amx": 720, "an": [0, 1, 4, 6, 7, 9, 14, 20, 21, 22, 31, 32, 34, 36, 39, 44, 46, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 64, 71, 73, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 104, 107, 109, 112, 113, 116, 118, 119, 126, 128, 131, 138, 140, 147, 151, 152, 156, 162, 165, 167, 168, 172, 173, 180, 181, 182, 186, 188, 207, 209, 210, 211, 212, 217, 220, 233, 234, 235, 240, 241, 243, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 297, 300, 302, 303, 308, 309, 310, 312, 314, 325, 332, 333, 336, 339, 340, 341, 342, 350, 353, 355, 389, 392, 393, 394, 397, 398, 403, 405, 406, 407, 408, 411, 413, 414, 415, 418, 419, 421, 422, 423, 424, 425, 426, 428, 430, 431, 433, 439, 446, 473, 497, 500, 538, 549, 550, 554, 556, 557, 558, 559, 560, 561, 563, 567, 572, 573, 579, 580, 628, 631, 632, 633, 638, 639, 641, 643, 644, 647, 649, 650, 652, 655, 656, 657, 659, 660, 662, 667, 671, 673, 679, 681, 683, 686, 687, 689, 691, 692, 693, 694, 695, 696, 698, 699, 700, 702, 703, 705, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 773, 797, 801, 808, 811, 815, 816, 818, 819, 825, 832, 833, 834, 835, 837, 838, 839, 842, 843, 846, 847, 850, 851, 853, 854, 856, 859, 863, 866, 868, 869], "analog": 853, "analogu": [183, 207, 563], "analysi": [134, 689, 856, 859], "analyz": 5, "andd": 120, "angl": [392, 403, 405, 406], "angstrom": 178, "ani": [4, 5, 20, 21, 22, 26, 70, 116, 121, 130, 131, 148, 207, 210, 214, 216, 219, 220, 231, 235, 240, 287, 293, 297, 300, 301, 313, 314, 332, 333, 336, 337, 338, 342, 350, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 387, 388, 393, 401, 407, 413, 424, 425, 426, 427, 428, 429, 432, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 538, 555, 561, 562, 563, 564, 565, 592, 595, 596, 597, 632, 633, 635, 636, 637, 638, 639, 641, 654, 665, 681, 687, 692, 701, 703, 711, 720, 726, 728, 786, 788, 797, 817, 825, 828, 831, 832, 833, 836, 837, 846, 850, 851, 852, 853, 859, 862, 863, 868], "ani2": 862, "anim": [714, 817, 828, 852, 859, 862], "annot": [184, 856, 863], "anonym": [4, 145], "anoth": [4, 21, 48, 130, 142, 162, 179, 220, 303, 308, 342, 422, 556, 638, 701, 712, 719, 726, 729, 730, 817, 822, 832, 833, 835, 837, 851, 852, 853, 859], "answer": 180, "anyth": 21, "anywher": [164, 686], "apach": [23, 814, 815], "apart": 699, "api": [0, 4, 7, 8, 21, 22, 41, 56, 68, 101, 102, 231, 235, 241, 242, 292, 351, 563, 641, 685, 688, 689, 691, 694, 699, 700, 701, 702, 703, 705, 711, 717, 720, 723, 724, 739, 756, 760, 777, 780, 798, 803, 808, 814, 816, 817, 818, 819, 821, 822, 835, 836, 850, 852, 853, 857, 864, 866, 868], "apidata": 834, "apifunct": 836, "apigraph": 835, "apinn": [721, 730, 759, 761, 770, 805, 813, 834], "apiudf": 836, "api\u4e5f\u652f\u6301python\u7684\u53ef\u8fed\u4ee3\u7c7b\u578b": 746, "api\u4e5f\u80fd\u5904\u7406\u7279\u5f81\u6570\u636e\u548c\u56fe\u7ea7\u522b\u7684\u6807\u7b7e\u6570\u636e": 743, "api\u4ee5\u6613\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u52a0\u8f7d\u7684\u683c\u5f0f\u6784\u9020\u5212\u5206\u7ed3\u679c": 739, "api\u4ee5\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u4fe1\u606f\u65f6": 747, "api\u548c": 763, "api\u5c06": 745, "api\u5c06\u5f02\u6784\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 747, "api\u5c06\u65b0id\u5206\u914d\u7ed9\u8f93\u5165\u56fe\u7684\u8282\u70b9\u548c\u8fb9": 739, "api\u7684\u8f93\u5165": 746, "api\uac00": 780, "api\uacfc": 780, "api\ub294": [777, 778, 780, 787], "api\ub4e4": [778, 784, 785, 787, 788, 790], "api\ub4e4\uacfc": 790, "api\ub4e4\uc740": [778, 784], "api\ub4e4\uc744": [774, 778, 784, 787], "api\ub4e4\uc758": 778, "api\ub4e4\uc774": 772, "api\ub4e4\uc774\ub2e4": 778, "api\ub85c": 791, "api\ub97c": [775, 777, 778, 779, 780, 784, 786, 788, 804], "api\uc5d0": 780, "api\uc5d0\uc11c\ub294": 787, "api\uc640": 807, "api\uc740": 780, "api\uc758": 778, "appear": [36, 51, 52, 131, 219, 332, 633, 712], "append": [293, 300, 301, 313, 383, 681, 714, 715, 719, 720, 724, 764, 804, 808, 817, 818, 826, 827, 829, 836, 839, 846, 847, 850, 851, 852, 853, 859, 862, 863, 869], "appendix": [183, 303], "appendix_c": 183, "appi": [387, 398, 399, 402, 403, 405, 407, 410, 413, 420], "appl": 22, "appli": [0, 1, 9, 20, 27, 28, 73, 91, 92, 93, 94, 100, 113, 116, 117, 121, 148, 220, 241, 297, 306, 349, 355, 383, 384, 386, 389, 392, 393, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 418, 419, 420, 421, 424, 425, 433, 434, 435, 440, 445, 446, 447, 448, 449, 450, 454, 455, 456, 498, 499, 598, 618, 620, 649, 651, 655, 656, 657, 662, 664, 687, 703, 705, 707, 722, 723, 726, 728, 811, 818, 821, 835, 842, 850, 851, 852, 853, 856, 863], "applic": [14, 138, 220, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 436, 818, 837, 838, 856, 859], "apply_edg": [5, 9, 20, 35, 456, 670, 671, 672, 673, 674, 706, 707, 720, 726, 729, 750, 751, 756, 758, 766, 769, 791, 793, 798, 801, 804, 810, 812, 853, 863], "apply_func": [408, 409, 851], "apply_nod": [34, 863], "apply_node_func": [73, 91, 92, 93, 94, 100, 113, 540, 541, 542, 543, 544, 709, 753, 795, 856], "apply_norm": 393, "appnp": [388, 666], "appoint": 6, "appreci": 856, "approach": [131, 287, 303, 332, 339, 430, 431, 432, 545, 567, 691, 695, 701, 703, 706, 707, 852, 860, 862, 866], "appropri": [120, 210, 213, 720, 863], "approv": 21, "approx": 407, "approxim": [14, 339, 388, 430, 432, 567, 666], "apt": [815, 846], "ar": [1, 4, 5, 6, 9, 10, 11, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 78, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 135, 136, 137, 140, 142, 143, 145, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 163, 165, 171, 173, 174, 178, 179, 180, 182, 186, 187, 188, 191, 192, 193, 195, 197, 210, 213, 214, 216, 217, 219, 220, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 309, 310, 313, 314, 315, 316, 317, 319, 330, 331, 332, 333, 336, 337, 338, 339, 343, 349, 350, 351, 355, 381, 383, 385, 386, 387, 389, 395, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431, 432, 442, 444, 445, 449, 453, 455, 456, 473, 474, 475, 476, 498, 501, 538, 539, 541, 545, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 570, 572, 573, 575, 601, 609, 611, 612, 614, 615, 620, 624, 632, 633, 635, 636, 637, 639, 641, 643, 644, 648, 649, 655, 665, 679, 681, 685, 687, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 747, 755, 772, 776, 787, 788, 794, 797, 798, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 846, 850, 851, 852, 853, 854, 856, 857, 859, 862, 863, 864, 866, 869], "arang": [9, 20, 95, 96, 117, 157, 158, 191, 209, 217, 219, 220, 246, 293, 298, 299, 301, 302, 315, 323, 333, 337, 338, 381, 385, 474, 538, 551, 552, 553, 554, 605, 606, 609, 615, 616, 617, 627, 649, 652, 653, 695, 711, 712, 756, 757, 798, 800, 832, 833, 837, 838, 847, 851, 862], "arbitrari": [4, 20, 48, 111, 125, 249, 302, 353, 414, 556, 641, 669, 683, 687, 695, 727, 729, 819, 835, 837, 859], "arbitrarili": 669, "arc": 698, "architectur": [9, 439, 683, 706, 818, 851, 852, 863], "archiv": 201, "archlinux": 846, "archwiki": 846, "area": 837, "arena": 843, "arg": [22, 121, 313, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 414, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 691, 715, 737, 755, 758, 777, 797, 801, 827, 842, 847, 868, 869], "argmax": [816, 817, 829, 834, 836, 838, 846, 851, 856], "argo_scal": 842, "argo_tutori": [824, 845], "argument": [4, 20, 22, 34, 36, 37, 51, 54, 73, 93, 94, 100, 108, 113, 117, 121, 122, 131, 140, 210, 211, 212, 213, 216, 220, 231, 240, 242, 246, 287, 291, 297, 313, 323, 332, 333, 337, 338, 344, 352, 353, 383, 412, 414, 424, 425, 426, 427, 428, 429, 454, 474, 501, 538, 554, 560, 561, 562, 564, 565, 572, 573, 633, 638, 641, 679, 695, 696, 701, 702, 706, 711, 713, 717, 727, 786, 798, 799, 816, 835, 837, 843, 846, 853], "argument\ub85c": 803, "ari": [819, 856], "arnold": 856, "around": [291, 827, 829, 869], "arr": [4, 315, 692, 738, 778], "arrai": [4, 7, 21, 101, 102, 125, 126, 148, 197, 198, 205, 207, 217, 220, 233, 240, 249, 250, 310, 315, 554, 558, 559, 560, 563, 572, 573, 579, 580, 687, 692, 695, 703, 780, 831, 832, 833, 839, 846, 852], "arrang": [554, 572, 573, 689], "array_lik": 207, "array\ub294": 780, "array\ub4e4\uc5d0": 778, "array\ub4e4\uc744": 778, "array\ub4e4\uc758": 778, "array\ub97c": 787, "arrow": [828, 852], "arrows": 856, "art": [694, 822, 863], "articl": [149, 182, 185, 192, 835, 843], "arxiv": [134, 137, 146, 147, 161, 162, 169, 171, 174, 180, 182, 188, 195, 289, 303, 428, 429, 444, 556, 717, 719, 767, 822, 829, 842, 863, 869], "as_edge_prediction_sampl": [214, 216], "as_tensor": 818, "as_tupl": [689, 735, 775, 780, 851, 852], "asarrai": [4, 692, 738, 778], "ascend": [197, 205, 287, 297, 439, 564], "asgraphpreddataset": 818, "aslinkpreddataset": 847, "aspect": [178, 179, 859], "aspirincod": 748, "assembl": [299, 859, 863], "assert": [89, 121, 219, 689, 735, 755, 775, 797], "assign": [4, 27, 28, 39, 52, 78, 114, 115, 125, 141, 142, 143, 147, 173, 221, 222, 223, 224, 225, 232, 236, 239, 240, 241, 249, 351, 352, 539, 554, 563, 639, 692, 693, 694, 695, 700, 701, 702, 726, 730, 745, 786, 810, 836, 839, 846, 851, 852, 863], "associ": [43, 46, 47, 74, 75, 103, 197, 205, 241, 242, 299, 305, 383, 414, 425, 427, 558, 560, 561, 562, 563, 564, 692, 698, 703, 727, 788, 851, 852, 853, 862, 863], "assum": [48, 130, 207, 210, 214, 215, 216, 217, 219, 221, 241, 245, 297, 310, 323, 342, 424, 473, 558, 560, 561, 562, 563, 638, 687, 689, 691, 692, 695, 725, 726, 728, 729, 780, 834, 836, 839, 846, 847, 859, 863, 868, 869], "assume_num_node_within_int32": 310, "assumpt": [20, 696, 843, 852], "assur": 679, "astyp": [399, 400, 403, 405, 406, 416, 839], "asv": 822, "asym_a": 821, "asymmetr": 698, "asynchron": 210, "aten": 818, "atom": [177, 178, 179, 195, 389, 441], "atom_encod": 818, "atomencod": 818, "att": [415, 863], "att_anim": 863, "att_map": 863, "att_weight_map": 863, "attach": [4, 141, 142, 143, 189, 190, 692, 851, 862], "attempt": 200, "attend": [859, 863], "attent": [9, 355, 387, 392, 399, 400, 403, 405, 406, 415, 422, 423, 434, 437, 438, 442, 444, 445, 447, 448, 449, 454, 631, 647, 667, 683, 720, 821, 854, 864, 866], "attention_weight": 403, "attenu": [395, 417], "attn": [442, 818], "attn_aft": 423, "attn_bef": 422, "attn_bia": [442, 445, 683], "attn_bias_typ": [442, 445], "attn_drop": [403, 405, 406, 442], "attn_dropout": [422, 423, 444, 445], "attn_fc": 853, "attn_head": 853, "attn_mask": [442, 445, 681, 683], "attr": [165, 179, 424, 428, 429, 444, 598, 618, 728, 767, 768, 780, 811, 838, 868], "attract": [73, 113], "attribut": [22, 122, 125, 140, 149, 159, 165, 179, 185, 186, 248, 249, 290, 297, 302, 303, 308, 325, 640, 643, 644, 679, 693, 695, 708, 726, 780, 834, 835, 838, 839, 863], "attrvisitor": 22, "auc": [826, 837, 847], "augment": [444, 646, 652, 653, 654, 695, 816, 852], "auroc": 826, "aut": 863, "authent": 846, "author": [145, 151, 152, 177, 178, 179, 181, 309, 316, 389, 647, 686, 695, 698, 717, 780, 850, 851, 852, 853, 856, 859, 862, 863], "author___affiliated_with___institut": 695, "author___writes___pap": 695, "authorship": [151, 152], "auto": [21, 22, 814, 821, 826, 829, 842, 863, 869], "auto_cast_to_optimal_dtyp": 309, "autocast": [720, 804], "autoencod": 851, "autograd": [9, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 575, 822], "autom": 21, "automat": [4, 21, 22, 156, 221, 290, 415, 418, 422, 557, 638, 686, 692, 693, 695, 706, 711, 716, 720, 804, 821, 846, 847, 850], "auxiliari": [694, 695], "av": 395, "avail": [4, 21, 118, 119, 148, 168, 183, 186, 207, 231, 240, 289, 339, 430, 432, 565, 567, 687, 691, 716, 728, 730, 817, 822, 827, 843, 860, 863, 866], "averag": [4, 10, 137, 149, 175, 177, 181, 183, 185, 195, 245, 395, 397, 413, 433, 473, 641, 656, 657, 662, 728, 811, 821, 827, 836, 837, 838, 853, 863, 868, 869], "avg": 25, "avg_deg": 183, "avg_degre": [656, 657, 662], "avg_loss": [818, 863], "avgpool": [424, 429], "avoid": [21, 34, 70, 73, 89, 93, 94, 100, 113, 116, 130, 220, 323, 336, 342, 387, 397, 399, 402, 403, 405, 406, 407, 410, 413, 420, 442, 444, 445, 555, 561, 562, 563, 564, 632, 639, 641, 681, 692, 695, 699, 707, 718, 724, 827, 869], "aw": [289, 843], "awai": [4, 857, 866], "awar": [711, 728, 853], "awesom": 21, "ax": [817, 859, 862], "ax1x": 863, "axi": [402, 850, 852, 853, 862], "b": [6, 22, 26, 45, 79, 82, 105, 118, 119, 121, 127, 128, 129, 131, 179, 310, 311, 318, 350, 386, 391, 400, 403, 405, 406, 411, 413, 418, 426, 428, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 447, 448, 449, 457, 497, 500, 549, 550, 556, 605, 609, 614, 615, 626, 627, 633, 638, 643, 644, 648, 693, 723, 728, 755, 756, 758, 760, 763, 768, 797, 798, 801, 803, 807, 811, 819, 821, 851, 852, 856, 859, 862], "b_": [852, 859, 862], "b_dst": 127, "b_h": 863, "b_iou": 856, "b_oend": 863, "b_size": 842, "b_src": 127, "ba": [118, 127, 131, 141, 142, 143, 350, 556], "bachman": 839, "back": [21, 22, 44, 104, 122, 556, 638, 641, 693, 715, 800, 835], "backend": [3, 4, 6, 8, 9, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 210, 214, 215, 216, 219, 246, 247, 248, 249, 250, 287, 332, 333, 337, 338, 339, 349, 355, 430, 431, 432, 433, 434, 435, 436, 440, 441, 456, 474, 475, 538, 545, 567, 569, 632, 634, 638, 639, 640, 648, 654, 660, 665, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 691, 692, 699, 701, 721, 725, 737, 738, 777, 778, 786, 818, 822, 827, 843, 846, 847, 853, 856, 868, 869], "backend_unittest": 21, "backprop": [720, 804], "backpropag": 717, "backpropagate\ub97c": 803, "backtrack": [69, 342, 660, 852], "backup": 691, "backward": [4, 9, 10, 118, 119, 381, 385, 424, 425, 426, 427, 428, 429, 453, 691, 692, 710, 711, 712, 715, 717, 719, 720, 726, 728, 729, 730, 737, 738, 755, 756, 758, 760, 766, 768, 769, 770, 777, 778, 797, 798, 801, 803, 804, 810, 811, 812, 813, 816, 817, 818, 819, 826, 827, 829, 834, 836, 837, 838, 846, 847, 850, 851, 852, 853, 856, 868, 869], "backwards\ub97c": 797, "bad": [21, 22, 442, 443, 445, 447, 448, 852], "bag": [135, 136, 155, 187, 193], "baidu": 21, "balanc": [189, 190, 240, 351, 352, 455, 694, 846], "balance_edg": [209, 240, 351, 352, 695, 739, 780, 846, 847], "balance_ntyp": [209, 240, 351, 352, 695, 739, 780, 846], "balkance_edg": 209, "ban": 188, "bandwidth": 291, "bar": [120, 816, 817, 821], "barab\u00e1si": [141, 142, 143], "barrier": [4, 842], "baryshnikov": 851, "base": [4, 6, 13, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 232, 239, 240, 243, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 539, 556, 558, 560, 598, 608, 618, 631, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 683, 685, 692, 693, 702, 711, 723, 728, 729, 817, 822, 825, 832, 833, 837, 838, 839, 851, 852, 853, 862, 863], "base_dir": [309, 832, 833], "baselin": 822, "basenam": [832, 833], "basetransform": [13, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669], "bash": [21, 815], "basi": [386, 393, 418, 449, 457, 717, 851], "basic": [7, 9, 156, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 685, 688, 694, 697, 814, 820, 834, 836, 837, 839, 846, 847, 852, 859, 863, 869], "basicfeaturestor": [304, 316], "batch": [4, 6, 7, 13, 20, 22, 27, 28, 36, 37, 38, 53, 54, 95, 96, 101, 102, 114, 115, 116, 117, 128, 129, 130, 165, 168, 172, 183, 186, 208, 210, 213, 220, 246, 247, 293, 297, 301, 306, 333, 336, 339, 341, 342, 350, 381, 385, 386, 391, 402, 411, 422, 426, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 448, 449, 474, 475, 538, 549, 550, 551, 552, 553, 555, 561, 567, 569, 570, 571, 606, 607, 614, 632, 641, 642, 643, 644, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 688, 689, 691, 692, 706, 709, 710, 713, 717, 718, 723, 734, 737, 738, 740, 768, 774, 777, 778, 781, 800, 814, 818, 821, 825, 827, 842, 853, 859, 863], "batch_depend": [214, 303], "batch_f": [433, 434, 435, 436, 437, 438, 439, 440, 441], "batch_first": [443, 681, 722, 762, 806], "batch_g": [433, 434, 435, 436, 437, 438, 439, 440, 441], "batch_input": [691, 737, 777, 846, 847], "batch_label": [691, 737, 777, 846], "batch_norm": [402, 411, 446], "batch_num_edg": [95, 96, 122, 679, 728, 811, 838], "batch_num_nod": [96, 122, 679, 728, 811, 838], "batch_pr": [691, 737, 777, 846, 847], "batch_siz": [4, 122, 183, 209, 210, 213, 214, 215, 216, 219, 220, 293, 300, 301, 303, 308, 317, 381, 385, 424, 428, 429, 442, 444, 445, 688, 689, 691, 692, 711, 712, 713, 714, 715, 717, 718, 719, 728, 734, 735, 737, 738, 755, 756, 757, 758, 760, 768, 774, 775, 777, 778, 797, 798, 799, 800, 801, 803, 811, 818, 826, 827, 829, 838, 842, 846, 847, 852, 856, 863, 868, 869], "batch_tre": 856, "batch_walk": 381, "batched_g": 818, "batched_graph": [165, 168, 172, 186, 213, 728, 768, 811, 838, 852, 856], "batched_label": [165, 168, 172, 186, 852], "batched_pmpd": 852, "batchedgraph": 863, "batcher": 856, "batcher_dev": 856, "batchnorm": 414, "batchnorm1": 818, "batchnorm1d": [414, 818, 852], "batchnorm2": 818, "bbg": 122, "bc": 118, "bcewithlogitsloss": [818, 853], "bdd": [386, 418], "beam": 863, "beat": 21, "becam": 167, "becasu": 318, "becaus": [4, 9, 21, 22, 34, 73, 93, 94, 100, 113, 122, 131, 287, 332, 383, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 563, 692, 693, 694, 699, 707, 713, 714, 729, 819, 827, 836, 846, 852, 853, 860, 866, 869], "becom": [122, 126, 131, 249, 250, 287, 332, 419, 551, 617, 712, 863], "been": [4, 22, 120, 131, 162, 173, 188, 230, 287, 291, 332, 386, 415, 418, 563, 689, 696, 713, 717, 818, 852, 856, 863], "befor": [4, 21, 89, 108, 117, 126, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 223, 224, 225, 235, 250, 291, 293, 297, 300, 301, 313, 318, 351, 422, 423, 434, 445, 453, 539, 550, 557, 560, 563, 665, 681, 683, 692, 693, 694, 695, 713, 715, 718, 720, 821, 827, 834, 839, 842, 846, 852, 853, 856, 860, 863, 866, 868, 869], "begin": [350, 444, 755, 797, 819, 820, 836, 837, 846, 851, 852, 853, 856, 859, 863, 868], "beginn": 814, "behavior": [229, 230, 309, 692, 699, 729, 839, 843, 859, 862, 863], "behaviour": 827, "behind": [692, 851, 868], "being": [21, 45, 79, 82, 105, 108, 122, 214, 216, 219, 246, 249, 291, 297, 303, 308, 333, 337, 338, 474, 538, 549, 550, 555, 561, 572, 573, 837, 852, 859, 862], "believ": 843, "belong": [4, 68, 116, 142, 143, 174, 181, 189, 190, 197, 205, 220, 229, 230, 232, 236, 239, 240, 305, 343, 351, 539, 632, 679, 694, 695, 726, 819, 839, 851, 852, 860, 866], "below": [4, 5, 22, 89, 131, 220, 240, 287, 293, 332, 336, 417, 418, 457, 567, 656, 657, 662, 687, 689, 691, 692, 693, 694, 695, 696, 700, 702, 703, 710, 711, 719, 723, 727, 816, 817, 818, 819, 821, 822, 832, 833, 842, 846, 847, 850, 852, 853, 859, 862, 863, 868], "benchmark": [22, 132, 135, 136, 146, 151, 152, 153, 159, 162, 169, 179, 192, 339, 340, 343, 411, 472, 659, 688, 695, 734, 774, 818, 827, 829], "benefici": [707, 846], "benefit": [689, 695, 825, 837, 846], "benign": 161, "bernoulli": [725, 726, 765, 766, 809, 810, 859], "bernoulli_": [755, 797], "bernoulli_action_log_prob": 859, "bert": [159, 863], "besid": [159, 344, 414, 565, 691, 707, 715, 722, 724, 859, 863], "best": [4, 14, 393, 548, 663, 685, 713, 718, 772, 821, 829, 834, 835, 837, 844, 853], "best_test_acc": [834, 836], "best_val_acc": [834, 836], "beta": [4, 10, 387, 390, 407, 863], "beta1": [4, 10, 424, 425], "beta2": [4, 10, 424, 425], "beta_": 449, "beta_1": [424, 425], "beta_2": [424, 425], "beta_l": 407, "better": [21, 631, 667, 689, 702, 714, 775, 819, 822, 835, 839, 842, 843, 852], "between": [4, 5, 26, 48, 56, 66, 72, 101, 102, 116, 118, 119, 142, 147, 149, 155, 166, 174, 178, 179, 182, 185, 187, 193, 195, 207, 226, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 297, 303, 308, 339, 389, 407, 410, 427, 429, 430, 432, 442, 447, 448, 449, 453, 455, 539, 557, 558, 561, 567, 568, 572, 573, 641, 683, 693, 695, 698, 703, 712, 718, 726, 728, 729, 818, 819, 821, 835, 837, 839, 850, 851, 852, 853, 859, 862, 863, 868], "bewteen": [399, 405, 406], "beyond": [120, 244, 245, 473, 695, 836, 837], "bf": 543, "bf16": 720, "bfs_nodes_gener": [0, 543], "bg": [36, 37, 38, 95, 96, 116, 122, 128, 129, 144, 424, 426, 428, 429, 549, 550, 569, 570, 571, 643, 644, 679, 702, 728, 746, 768, 787, 811, 868], "bg1": [116, 632], "bhg": [122, 679], "bi": [6, 341, 632, 863], "bi_part": 399, "bia": [384, 391, 392, 393, 394, 396, 397, 398, 400, 403, 404, 405, 406, 407, 410, 412, 413, 416, 418, 419, 420, 421, 442, 445, 447, 448, 449, 450, 563, 683, 719, 722, 762, 806, 850, 851, 853, 856], "bias": 449, "biasedmha": 683, "bidecod": [726, 766], "bidirect": [116, 162, 173, 220, 340, 431, 545, 556, 632, 659, 835], "big": [403, 728], "bigger": [838, 857, 866], "billion": [695, 710], "bilstm": 454, "bin": [204, 344, 565, 690, 694, 736, 776, 780, 839], "binar": 856, "binari": [5, 9, 161, 163, 171, 180, 186, 189, 190, 240, 455, 498, 499, 565, 681, 694, 695, 706, 780, 791, 819, 837, 853, 856], "binary_cross_entropy_with_logit": [715, 826, 837, 847], "binaryreducebackward": [387, 399, 405], "bind": [389, 815, 842], "bio": 843, "bipartit": [9, 26, 44, 45, 68, 79, 82, 104, 105, 116, 118, 119, 125, 126, 130, 350, 390, 392, 393, 394, 397, 398, 399, 400, 402, 403, 405, 406, 410, 413, 416, 419, 546, 556, 563, 633, 698, 703, 723, 724, 783, 788, 798, 807, 808, 828, 852, 862], "bipartite_from_networkx": 126, "bipartite_from_scipi": 125, "bisect": [351, 352, 693], "bisect_left": 693, "bit": [21, 22, 335, 702, 729, 859, 863], "bitcoin": 145, "bitcoinotc": [25, 145], "bitcoinotcdata": [689, 735, 775], "bitcoinotcdataset": [686, 733, 773], "bla": [14, 339, 430, 432, 567], "blitz": [814, 824, 841, 868], "blitz_1_introduct": 834, "blitz_2_dglgraph": 835, "blitz_3_message_pass": 836, "blitz_4_link_predict": 837, "blitz_5_graph_classif": 838, "blitz_6_load_data": 839, "bloat16": 720, "blob": [165, 210, 842], "block": [4, 10, 127, 131, 180, 183, 210, 214, 215, 216, 220, 292, 301, 305, 386, 418, 438, 453, 633, 691, 692, 693, 711, 712, 714, 715, 716, 717, 719, 721, 723, 724, 737, 738, 755, 756, 757, 758, 759, 760, 763, 777, 778, 779, 797, 798, 800, 801, 802, 803, 805, 807, 818, 826, 827, 829, 842, 846, 847, 851, 852, 853, 859, 869], "block3": [755, 797], "block_diag": 852, "block_id": [755, 797], "block_typ": 438, "blocksampl": [214, 216, 713, 755, 797, 799], "blog": [823, 843], "blue": 817, "bmatrix": 819, "bmm": 851, "bn": 852, "board": 843, "bodi": 22, "boil": 850, "boldsymbol": [729, 755, 769, 797, 812], "bond": [177, 179, 195], "book": [137, 232, 237, 239, 694, 695, 823], "bool": [4, 6, 10, 31, 48, 57, 58, 65, 66, 67, 95, 96, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 207, 210, 213, 214, 216, 217, 219, 226, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 246, 287, 291, 293, 297, 301, 303, 308, 309, 310, 322, 324, 333, 336, 337, 338, 339, 340, 342, 351, 352, 381, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 442, 444, 445, 446, 450, 455, 474, 538, 539, 541, 543, 544, 545, 551, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 567, 568, 569, 631, 632, 633, 639, 641, 643, 644, 645, 647, 648, 649, 659, 660, 665, 667, 685, 687, 689, 725, 726, 732, 755, 765, 766, 772, 775, 780, 797, 809, 810, 831, 839, 846, 847, 859], "boolean": [53, 54, 210, 213, 216, 232, 239, 246, 297, 303, 308, 327, 334, 474, 562, 680, 692, 726, 730, 778, 834, 846], "booltensor": 853, "boost": 718, "borrow": [22, 199, 200, 728], "both": [0, 9, 21, 22, 44, 56, 62, 63, 73, 89, 104, 116, 118, 119, 130, 134, 149, 155, 181, 185, 187, 193, 210, 216, 230, 297, 303, 308, 309, 318, 336, 342, 349, 350, 383, 397, 398, 399, 400, 403, 404, 405, 406, 413, 415, 416, 419, 443, 449, 474, 475, 555, 565, 592, 595, 596, 597, 599, 609, 614, 615, 632, 633, 638, 639, 641, 687, 691, 692, 695, 697, 702, 703, 705, 706, 714, 720, 726, 821, 822, 831, 834, 835, 837, 839, 846, 851, 852, 853, 854, 859, 863, 866], "bother": [686, 821], "bottom": [142, 143, 856], "bought": [135, 136, 137, 698, 713, 783], "bound": [235, 443, 448, 563, 720], "boundari": 817, "bpr": [729, 812], "branch": [21, 192, 694, 780], "brand": 22, "breadth": [123, 124, 558], "break": [51, 219, 863], "breviti": 689, "brew": 815, "brief": [697, 852], "briefli": 817, "bring": [20, 662, 718], "broadcast": [5, 9, 128, 129, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 319, 408, 419, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 606, 619, 620, 621, 622, 623, 706], "broadcast_edg": 129, "broadcast_nod": 128, "broken": [827, 853], "brook": 748, "brookhuang16211": 748, "bruteforc": [14, 339, 430, 432, 567], "bsddmm": 818, "bspmm": 818, "bucket": 13, "budget": 217, "buffer": [235, 339, 430, 432, 567, 718], "buffer_devic": 714, "bugfix": 21, "bui": [546, 698, 783], "build": [14, 22, 157, 158, 191, 214, 215, 216, 235, 303, 433, 434, 435, 436, 437, 438, 439, 440, 441, 561, 682, 689, 692, 699, 703, 704, 710, 713, 716, 725, 728, 730, 775, 814, 815, 818, 819, 820, 834, 837, 838, 853, 856, 859], "build_dgl": 815, "build_ext": [21, 815], "build_hidden_lay": 851, "build_input_lay": 851, "build_model": 851, "build_output_lay": 851, "built": [3, 9, 13, 22, 34, 73, 91, 92, 93, 94, 100, 113, 162, 179, 181, 289, 692, 705, 707, 720, 723, 727, 728, 730, 750, 791, 804, 807, 814, 821, 822, 825, 836, 850, 853, 856, 859], "builtin": [9, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 689, 690, 715, 716, 817, 826, 836, 837, 850, 851, 853], "builtindataset": [717, 719, 826, 827, 829, 869], "builtinfunct": [34, 73, 91, 92, 93, 94, 100, 113], "bulit": [34, 73, 93, 94, 100, 113], "bunch": [695, 723], "busi": 194, "button": 21, "buyer": 698, "bwtype": 556, "byte": [235, 298], "c": [6, 21, 22, 25, 118, 119, 120, 121, 151, 152, 179, 183, 192, 289, 292, 343, 392, 393, 394, 401, 411, 414, 455, 497, 702, 787, 815, 817, 842, 856, 862, 863], "c_": [178, 179, 397, 404, 413, 851, 853, 856, 862], "c_csc_graph": 297, "c_etyp": [320, 321, 425, 427, 708, 752, 794], "c_etype_func_dict": [425, 427], "c_etype_str": [320, 321], "c_i": 851, "c_j": 856, "c_k": [343, 389], "cach": [23, 138, 139, 140, 142, 143, 148, 156, 189, 190, 209, 210, 217, 291, 298, 420, 690, 715, 801, 816, 817, 819, 826, 834, 836, 837, 843, 850, 851, 852, 853], "cache_path": 209, "cache_s": 298, "caculatorgetbrand": 22, "cal": [178, 179], "calc": 22, "calcul": [4, 22, 314, 323, 392, 393, 394, 431, 476, 545, 570, 571, 572, 573, 598, 618, 639, 691, 695, 728, 811, 817, 821, 826, 827, 852, 853, 859, 862, 863, 869], "calculate_gain": [719, 722, 762, 806, 851, 853], "calculatorobject": 22, "call": [0, 4, 6, 9, 21, 22, 26, 45, 52, 66, 79, 82, 105, 108, 117, 118, 119, 131, 145, 156, 217, 240, 287, 293, 297, 301, 332, 355, 383, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 422, 424, 425, 426, 427, 428, 429, 472, 555, 561, 563, 614, 638, 639, 643, 644, 679, 689, 692, 693, 694, 695, 698, 701, 702, 703, 706, 707, 708, 709, 717, 722, 723, 724, 726, 728, 729, 745, 786, 791, 818, 827, 828, 832, 833, 834, 835, 836, 846, 852, 853, 856, 859, 863, 864, 866, 869], "callabl": [4, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 121, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 220, 293, 301, 353, 383, 392, 397, 398, 403, 405, 406, 407, 408, 409, 411, 413, 416, 418, 419, 420, 421, 444, 445, 453, 540, 541, 542, 543, 544, 556, 651, 722], "came": 22, "can": [4, 5, 6, 7, 9, 12, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 73, 74, 75, 77, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 117, 118, 119, 120, 122, 125, 128, 129, 130, 131, 147, 156, 161, 163, 168, 186, 197, 207, 210, 213, 214, 216, 217, 220, 221, 229, 230, 232, 234, 235, 240, 241, 242, 245, 246, 247, 249, 287, 291, 293, 297, 301, 303, 305, 308, 309, 310, 315, 316, 332, 333, 337, 338, 339, 341, 351, 352, 355, 382, 383, 384, 385, 387, 389, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 410, 412, 413, 416, 418, 419, 420, 422, 430, 431, 432, 434, 442, 446, 449, 450, 451, 452, 453, 454, 457, 473, 474, 476, 501, 538, 539, 545, 549, 550, 551, 552, 553, 554, 557, 560, 561, 562, 563, 564, 567, 570, 571, 572, 573, 617, 633, 638, 639, 641, 643, 644, 666, 680, 681, 683, 685, 686, 687, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 733, 773, 785, 814, 815, 817, 818, 819, 820, 821, 822, 825, 826, 827, 828, 829, 831, 834, 835, 836, 837, 838, 842, 843, 846, 847, 850, 851, 852, 853, 854, 856, 859, 860, 862, 863, 864, 866, 868], "candid": [339, 430, 432, 567], "cannot": [4, 20, 21, 210, 305, 333, 337, 338, 428, 474, 538, 692, 693, 695, 700, 701, 703, 706, 725, 745, 747, 786, 788], "canon": [4, 26, 36, 39, 46, 48, 51, 52, 57, 66, 80, 109, 131, 240, 320, 321, 332, 385, 425, 640, 648, 655, 703, 788, 825, 831, 832], "canonical_etyp": [4, 52, 66, 109, 383, 425, 426, 427, 648, 703, 708, 716, 724, 747, 752, 755, 756, 758, 759, 764, 788, 794, 797, 798, 801, 802, 808, 851], "cap": 842, "capabl": [210, 720, 863], "capac": [1, 9, 298, 567, 695, 706, 710, 853, 854, 866], "capav": [178, 179], "capsul": [355, 864, 866], "captur": [698, 708], "care": [162, 424, 425, 426, 427, 428, 429], "carlo": [427, 429], "carri": [694, 695, 728], "cartesian": 449, "case": [4, 5, 9, 14, 21, 22, 27, 32, 34, 41, 42, 44, 48, 51, 73, 93, 94, 100, 104, 108, 109, 113, 116, 125, 126, 131, 140, 181, 200, 210, 214, 232, 239, 249, 250, 287, 332, 341, 350, 355, 387, 390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 413, 416, 419, 420, 433, 434, 435, 436, 437, 438, 439, 440, 441, 455, 456, 560, 568, 572, 573, 614, 620, 638, 679, 681, 686, 687, 690, 692, 695, 702, 703, 707, 711, 713, 716, 717, 723, 726, 807, 819, 821, 837, 839, 843, 846, 851, 852, 853, 856, 863], "case1": [450, 454, 592, 595, 596, 597, 598, 599, 608, 610, 611, 612, 613, 618, 624, 648, 649, 654, 655, 660, 664, 665, 669], "case2": [450, 454, 592, 595, 596, 597, 598, 599, 608, 610, 611, 612, 613, 618, 624, 648, 649, 654, 655, 660, 664, 665, 669], "case3": [450, 454, 598, 608, 610, 613, 618, 624, 648, 649], "case4": 450, "case\ub4e4\uc5d0": 780, "casio": 22, "cast": [64, 71, 131, 287, 309, 332, 393, 635, 636, 637, 818], "cat": [157, 158, 191, 220, 300, 313, 433, 434, 435, 436, 437, 438, 439, 440, 441, 447, 450, 454, 567, 681, 707, 712, 716, 726, 751, 756, 759, 766, 793, 798, 802, 810, 817, 818, 826, 827, 836, 837, 839, 847, 852, 853, 859, 862, 869], "cat_feat": [707, 751, 793], "catbackward": 436, "categor": [160, 194, 726, 835, 843, 851, 859], "categori": [5, 132, 133, 135, 136, 144, 150, 154, 155, 161, 170, 176, 187, 193, 715, 730, 821, 834, 837, 838, 839, 851], "category_id": 851, "caus": [291, 293, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 723, 842], "caution": 4, "cc": [22, 167, 694, 780], "cd": [21, 137, 815], "cdgnn": 852, "cdot": [116, 120, 186, 387, 391, 394, 395, 399, 402, 403, 414, 415, 416, 419, 436, 450, 555, 666, 723, 755, 763, 797, 807, 817, 836, 856, 859, 862, 863], "cedric": 862, "cell": 171, "center": [385, 424, 425, 426, 428, 449, 835], "cento": 815, "central": 836, "centric": [697, 822], "centuri": 856, "certain": [27, 150, 154, 176, 561, 562, 572, 573, 699, 708, 722, 838, 862], "certif": 200, "certifi": [826, 827, 829, 832, 833], "cetyp": 851, "chain": [182, 313, 699, 718, 784, 837, 850, 856, 859, 863], "chainer": 21, "challeng": [151, 152, 856, 857, 859, 860, 866], "chameleon": 149, "chang": [1, 6, 26, 64, 70, 71, 131, 145, 177, 178, 179, 287, 303, 332, 420, 572, 573, 686, 687, 689, 717, 720, 826, 829, 842, 846, 859, 868], "channel": [414, 852, 853, 863], "chapter": [1, 3, 5, 11, 20, 633, 685, 693, 694, 695, 704, 709, 716, 723, 728, 730, 842, 843], "char": 22, "charact": 859, "character": [120, 245, 473, 728, 819], "characterist": [245, 473, 708], "charg": 691, "charset": [826, 827, 829, 832, 833], "chart": 685, "cheatsheet": 5, "chebconv": 396, "chebnet": 391, "chebyshev": [391, 396], "check": [21, 22, 56, 65, 66, 67, 101, 102, 131, 156, 199, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 563, 685, 686, 689, 690, 694, 695, 709, 711, 720, 772, 773, 776, 814, 815, 816, 817, 818, 819, 822, 837, 851, 853, 859, 868], "check_eq_shap": [723, 763, 807], "check_sha1": [686, 733, 773], "checkout": 21, "checkpoint": [699, 842], "chee": 862, "chemic": 859, "chemistri": [179, 389, 416], "chen": 748, "child": 856, "children": [427, 429], "china": 23, "choic": [23, 455, 498, 546, 547, 694, 837, 838], "choos": [126, 131, 226, 227, 246, 249, 250, 287, 297, 332, 474, 546, 547, 558, 560, 563, 639, 693, 730, 815, 821, 828, 843], "choose_dest": 859, "choose_dest_ag": 859, "choose_dest_and_upd": 859, "choose_dest_log_p": 859, "choosedestandupd": 859, "chosen": [146, 169, 195, 226, 227, 241, 242, 297, 302, 317, 339, 426, 428, 561, 562, 563, 564, 815], "chrsmrr": [168, 186], "chunk": [693, 856], "chunk_graph": 695, "chunkfilespec": 695, "ci": 21, "cifar10": [146, 169], "cikm": 162, "circ": [390, 442, 818], "circl": 859, "circular": 172, "citat": [150, 153, 154, 176, 289, 662, 819, 834, 837, 852], "citation2": [289, 847], "citation_graph": [852, 853], "citationdata": [689, 735, 775], "citationgraphdataset": [25, 150, 154, 176, 689, 735, 775], "citationgraphdataset\u6e90\u4ee3\u7801": 735, "cite": [309, 695, 780, 819, 837, 851, 852], "citegrh": [852, 853], "cites": [25, 150, 689, 735, 775, 822], "citeseergraphdataset": [689, 720, 725, 730, 735, 765, 770, 775, 809, 813], "citizen": 22, "cla": [817, 859, 862], "clamp": [443, 448, 455, 681, 729, 769, 801, 812, 863], "clang": 815, "class": [0, 1, 4, 6, 8, 10, 13, 22, 31, 120, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 244, 245, 250, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 343, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 556, 607, 614, 625, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 684, 686, 687, 689, 692, 693, 711, 712, 714, 715, 716, 717, 719, 720, 722, 724, 726, 728, 729, 730, 732, 735, 755, 756, 757, 758, 759, 760, 762, 764, 766, 768, 769, 770, 772, 775, 797, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 813, 816, 817, 818, 819, 820, 821, 826, 827, 829, 830, 831, 834, 836, 837, 838, 843, 846, 847, 850, 851, 852, 853, 856, 859, 862, 868, 869], "classic": [422, 711, 814, 817, 862, 863], "classif": [2, 120, 122, 132, 133, 135, 136, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 159, 160, 161, 163, 165, 167, 168, 169, 170, 172, 175, 176, 181, 186, 189, 190, 192, 194, 209, 210, 211, 213, 214, 215, 216, 219, 220, 245, 289, 303, 305, 308, 397, 413, 424, 425, 426, 427, 428, 429, 439, 455, 473, 652, 655, 692, 695, 710, 715, 719, 725, 729, 810, 812, 816, 822, 825, 826, 836, 837, 840, 847, 848, 850, 851, 852, 853, 859, 870], "classifi": [149, 155, 185, 187, 193, 427, 429, 728, 729, 730, 768, 811, 850, 851, 852], "claud": 856, "clean": [21, 684, 703, 706], "clear": [853, 863], "clearli": [21, 853], "clf": [381, 862], "cli": 21, "click": [21, 220, 725, 726, 729, 765, 766, 769, 809, 810, 812, 817], "click_dst": [725, 765, 809], "click_src": [725, 765, 809], "client": [4, 235], "cliqu": 172, "clock": [183, 207], "clone": [21, 56, 64, 71, 89, 108, 414, 635, 636, 637, 694, 780, 815, 852, 859, 863], "cloner": 21, "close": [178, 381, 385, 689, 817, 853, 862, 863], "cloud": [6, 14, 21, 339, 402, 430, 432, 567], "club": [167, 699, 743, 784, 817, 839], "cluster": [4, 6, 147, 209, 554, 691, 692, 694, 695, 696, 822, 846, 847, 852], "cluster_gcn": 209, "cm": 817, "cmake": 815, "cmap": [817, 852], "cn": 23, "cnn": [402, 410, 835, 863], "cnt": 641, "co": [4, 134, 135, 136, 137, 151, 152, 289, 387, 389, 450, 647, 819, 821], "coalesc": [240, 586, 641, 669, 719, 821], "coarsen": 6, "coauthor": [25, 151, 152, 698], "coauthordata": [689, 735, 775], "code": [4, 22, 130, 145, 164, 166, 175, 177, 178, 179, 183, 184, 196, 199, 200, 209, 220, 235, 383, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 686, 688, 689, 691, 692, 693, 699, 700, 702, 703, 705, 706, 711, 712, 716, 717, 718, 719, 720, 721, 723, 726, 727, 728, 730, 740, 775, 781, 816, 817, 818, 819, 821, 822, 826, 827, 829, 834, 835, 836, 837, 839, 842, 843, 846, 847, 850, 851, 852, 853, 854, 856, 857, 859, 860, 862, 863, 864, 866, 869], "coef": [427, 429, 656], "coeffici": [4, 10, 386, 418, 423, 455, 457, 476, 656, 851, 862], "coff_budget": [426, 428], "coff_connect": [426, 428], "col": [610, 624, 821, 852], "col_sort": 287, "colab": 820, "collab": [25, 165, 168, 186], "collaps": 164, "collat": [183, 213, 681], "collate_dgl": 818, "collate_fn": [4, 183, 213, 381, 385, 688, 691, 692, 734, 737, 738, 774, 777, 778, 818, 852, 856], "collect": [5, 7, 22, 122, 133, 164, 241, 242, 297, 299, 389, 426, 428, 453, 688, 691, 692, 825, 826, 827, 851, 852, 856, 859, 868, 869], "colon": 695, "color": [22, 817, 819, 828, 852, 853], "colorbar": 853, "column": [4, 31, 32, 118, 119, 131, 287, 310, 319, 323, 325, 332, 339, 396, 397, 398, 545, 576, 577, 579, 580, 592, 595, 596, 597, 598, 599, 610, 611, 612, 618, 620, 624, 654, 687, 703, 747, 788, 819, 821, 839, 846, 847, 852], "com": [21, 23, 135, 136, 151, 152, 153, 159, 162, 165, 210, 680, 689, 694, 735, 748, 775, 780, 789, 815, 827, 842, 843, 863], "combin": [20, 26, 231, 240, 386, 390, 417, 418, 423, 434, 450, 457, 565, 639, 695, 705, 706, 707, 714, 717, 726, 730, 817, 834, 838, 851, 853, 863], "combine_nam": 26, "come": [134, 149, 155, 185, 187, 193, 393, 418, 454, 639, 827, 837, 859, 863], "comma": 687, "command": [21, 692, 694, 696, 815, 816, 817, 818, 819, 821, 846, 852], "comment": [21, 181, 716], "commerc": 819, "commerci": 159, "commit": 21, "committ": 21, "committor": 21, "common": [14, 21, 26, 130, 160, 210, 213, 387, 397, 399, 402, 403, 405, 406, 407, 410, 413, 420, 699, 703, 706, 707, 709, 720, 723, 724, 726, 728, 808, 814, 825, 826, 835, 839, 846, 851, 853, 868], "commonli": [12, 128, 129, 385, 441, 549, 550, 556, 633, 657, 662, 666, 684, 692, 698, 706, 721, 722, 838, 850], "commun": [21, 142, 147, 167, 174, 181, 183, 235, 240, 352, 691, 692, 694, 695, 728, 854, 866, 868], "comp_cor": 842, "compact": [130, 297, 300, 303, 305, 308, 310, 319, 330, 331, 424, 425, 715, 719], "compact_graph": 713, "compacted_csc_format": [319, 331], "compacted_mat": 719, "compacted_node_list": 330, "compacted_pair": 715, "compacted_se": [301, 303, 305, 712, 715, 826, 829], "compani": 385, "companion": [852, 854, 866], "compar": [120, 156, 245, 297, 302, 473, 561, 567, 716, 723, 729, 730, 821, 846, 852, 853, 863], "comparison": [21, 822], "compat": [8, 21, 549, 550, 710, 720, 725, 728, 815, 821], "competit": [827, 862, 869], "compil": [9, 22, 694, 706], "complet": [13, 52, 339, 452, 683, 689, 694, 726, 730, 766, 810, 819, 821, 834, 837, 842, 851, 853, 856, 859, 862, 863, 868], "complex": [9, 339, 430, 432, 567, 687, 708, 818, 836, 837, 853, 859, 863], "complic": [336, 722, 726], "compon": [11, 122, 229, 230, 292, 305, 339, 567, 569, 683, 684, 691, 692, 697, 726, 728, 826, 827, 829, 838, 846, 863], "compos": [3, 13, 22, 159, 174, 246, 289, 333, 337, 338, 339, 385, 417, 457, 474, 538, 567, 818, 825, 851, 853], "composit": [22, 305, 318], "compress": [579, 580, 611, 612, 821], "comput": [0, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 60, 70, 87, 122, 126, 131, 135, 136, 151, 192, 210, 211, 212, 214, 215, 216, 220, 222, 223, 224, 225, 240, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 303, 310, 332, 339, 340, 342, 355, 381, 383, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 455, 457, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 548, 556, 561, 567, 568, 570, 571, 592, 595, 596, 597, 599, 614, 631, 641, 659, 663, 667, 675, 676, 677, 678, 681, 683, 689, 691, 692, 695, 697, 705, 706, 707, 708, 710, 712, 714, 715, 716, 717, 718, 720, 723, 726, 727, 729, 730, 780, 798, 800, 803, 810, 812, 813, 816, 817, 818, 819, 821, 822, 825, 826, 827, 828, 834, 835, 836, 837, 838, 843, 846, 847, 850, 851, 852, 853, 856, 859, 864, 866, 868, 869], "computation": 863, "compute_auc": 837, "compute_block": 305, "compute_cor": [842, 843], "compute_loss": [711, 712, 717, 729, 755, 756, 758, 760, 769, 797, 798, 801, 803, 812, 837], "compute_mod": [431, 545], "conan": 856, "conatin": 305, "concat": [394, 419, 723, 763, 807, 836, 853, 859, 863], "concat_message_funct": [707, 751, 793], "concat_typ": 559, "concat_vid": 559, "concat_vtyp": 559, "concaten": [26, 122, 297, 389, 414, 417, 433, 434, 435, 436, 437, 438, 439, 440, 441, 450, 454, 559, 639, 673, 703, 707, 712, 723, 726, 728, 747, 766, 788, 807, 810, 817, 829, 832, 833, 837, 838, 846, 852, 853, 856, 863], "concentr": [853, 862], "concept": [144, 214, 215, 216, 697, 712, 717, 814, 817, 836, 853], "concis": [9, 706], "conclus": 853, "concret": 89, "concurr": 692, "conda": [392, 393, 394, 826, 829, 832, 833, 842, 850, 853], "condit": [182, 245, 415, 418, 422, 423, 473, 703, 859], "conduct": [14, 161, 163, 303, 308, 497, 689, 694, 710, 728], "confid": 727, "config": [236, 237, 238, 554, 694, 695, 780, 815], "configur": [0, 4, 21, 217, 231, 240, 692, 694, 695, 696, 780, 815, 842, 843, 846, 847, 851, 859], "conflict": [167, 827], "confus": 859, "conjunct": 868, "connect": [1, 4, 96, 120, 130, 133, 137, 144, 151, 152, 161, 162, 163, 171, 173, 174, 178, 180, 181, 182, 188, 220, 229, 230, 235, 336, 339, 342, 350, 351, 389, 392, 395, 403, 405, 406, 410, 411, 414, 416, 417, 426, 428, 539, 552, 556, 567, 572, 573, 633, 647, 658, 679, 692, 698, 726, 727, 728, 729, 818, 819, 825, 834, 835, 838, 846, 847, 850, 851, 852, 853, 859, 862, 863], "consecut": [6, 32, 95, 96, 125, 131, 207, 249, 287, 303, 305, 332, 563, 572, 573, 693, 695, 703, 835], "consequ": [714, 835], "consid": [53, 54, 197, 205, 214, 216, 297, 302, 303, 308, 381, 385, 389, 556, 561, 568, 572, 573, 695, 707, 710, 714, 716, 727, 817, 819, 821, 826, 827, 829, 835, 836, 837, 843, 852, 856, 859, 862], "consider": 859, "consist": [164, 166, 173, 177, 178, 179, 192, 241, 242, 292, 305, 314, 341, 556, 563, 568, 633, 698, 712, 717, 721, 819, 826, 829, 834, 837, 839, 850, 852, 853, 863], "const": 22, "constant": [143, 168, 179, 189, 190, 245, 401, 410, 411, 473, 681, 729, 851, 853, 863], "constexpr": 22, "constitu": [184, 856], "constrain": [195, 426, 428, 863], "constraint": [72, 240, 300, 313, 351, 352, 703, 859], "constrant": [240, 351, 352], "construct": [0, 4, 125, 130, 131, 141, 142, 143, 189, 190, 196, 210, 240, 249, 287, 297, 305, 332, 339, 351, 352, 430, 431, 432, 545, 556, 567, 633, 687, 692, 695, 699, 701, 703, 707, 713, 721, 723, 729, 786, 816, 818, 819, 832, 833, 837, 846, 852, 863, 868], "construct_negative_graph": [729, 769, 812], "constructor": [4, 12, 456, 711], "consum": [291, 707, 720], "consumpt": [707, 713, 714, 720, 822], "contain": [0, 2, 4, 6, 11, 21, 27, 28, 53, 54, 57, 58, 73, 114, 115, 116, 121, 130, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 160, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 186, 191, 192, 194, 195, 207, 220, 236, 240, 241, 242, 247, 287, 292, 297, 300, 303, 304, 305, 308, 309, 313, 318, 326, 332, 339, 344, 349, 351, 382, 387, 390, 395, 398, 399, 400, 403, 405, 406, 408, 409, 410, 413, 419, 430, 431, 432, 449, 456, 475, 539, 545, 561, 562, 563, 564, 567, 572, 573, 586, 632, 633, 640, 681, 687, 688, 692, 694, 695, 696, 702, 708, 712, 717, 726, 729, 810, 812, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 846, 852, 856, 857, 859, 866], "containertyp": 22, "content": [26, 159, 199, 201, 354, 686, 687, 695, 716, 733, 773, 835, 843], "context": [4, 21, 31, 42, 62, 63, 70, 89, 108, 125, 126, 131, 210, 246, 247, 249, 250, 287, 293, 297, 303, 305, 308, 310, 332, 333, 337, 338, 355, 385, 474, 475, 538, 546, 547, 561, 562, 563, 564, 633, 691, 702, 708, 713, 817, 827, 835, 869], "context\ub97c": 799, "contigu": [4, 319, 330, 331, 351, 539, 567, 694, 714, 846], "continu": [297, 390, 639, 687, 710, 724, 764, 808, 822], "contrari": [116, 819], "contrast": [241, 646, 652, 653, 654, 698, 714, 729, 769, 812, 834, 851, 853, 862], "contrib": 863, "contribut": [297, 426, 428, 561, 721, 863], "control": [0, 4, 13, 93, 113, 309, 388, 427, 429, 546, 547, 558, 643, 644, 656, 657, 662, 687, 814, 843], "contruct": [730, 813], "conv": [13, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428, 458, 459, 460, 461, 462, 463, 464, 465, 719, 721, 723, 730, 761, 770, 805, 807, 813, 850, 851, 853], "conv1": [407, 428, 429, 712, 717, 728, 730, 756, 757, 758, 760, 768, 770, 798, 800, 801, 803, 811, 813, 816, 829, 834, 836, 837, 838, 868], "conv2": [407, 428, 429, 712, 717, 728, 730, 756, 757, 758, 760, 768, 770, 798, 800, 801, 803, 811, 813, 816, 829, 834, 836, 837, 838, 868], "conveni": [9, 685, 726, 837, 868], "convent": [0, 5, 125, 133, 144, 706], "converg": [214, 303, 561, 720, 817], "convers": [22, 555, 601, 639, 694, 699, 702, 720, 821], "convert": [9, 22, 109, 110, 118, 119, 125, 126, 127, 138, 139, 140, 146, 148, 169, 231, 240, 248, 249, 250, 320, 321, 323, 324, 583, 585, 588, 589, 601, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 668, 669, 687, 693, 694, 695, 699, 702, 715, 719, 720, 787, 821, 826, 835, 839, 846, 847, 851, 852], "convert_partit": 780, "convnet": 853, "convolut": [134, 149, 155, 185, 187, 193, 209, 383, 386, 389, 390, 391, 393, 396, 397, 398, 401, 407, 408, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 444, 457, 472, 556, 631, 652, 655, 656, 667, 710, 716, 724, 726, 728, 730, 766, 796, 802, 810, 811, 813, 817, 820, 823, 836, 838, 852, 853, 854, 859, 862, 863, 866], "convolutin": 852, "convolution\uc740": 808, "convolution\uc744": 813, "convolution\uc758": 813, "coo": [31, 32, 41, 56, 126, 131, 231, 240, 250, 287, 323, 332, 565, 587, 610, 821, 852], "coo_matrix": [126, 250, 837, 852], "coolwarm": 852, "cooper": 166, "coord": 449, "coord_feat": 401, "coord_feat_out": 401, "coordin": [12, 31, 126, 178, 179, 250, 310, 339, 401, 410, 431, 449, 545, 567, 577, 587, 610, 624, 821], "coordint": 410, "copi": [5, 7, 9, 34, 40, 56, 64, 71, 73, 89, 93, 94, 100, 108, 113, 116, 126, 130, 131, 235, 246, 247, 249, 250, 287, 291, 297, 305, 310, 312, 315, 316, 332, 333, 336, 337, 338, 342, 350, 414, 474, 475, 481, 482, 483, 484, 485, 486, 538, 554, 555, 561, 562, 563, 564, 572, 573, 602, 632, 635, 636, 637, 638, 640, 641, 648, 671, 672, 674, 694, 695, 701, 703, 706, 707, 713, 718, 745, 750, 786, 788, 791, 800, 818, 827, 829, 835, 836, 837, 839, 852, 856, 859, 863, 869], "copy_": [5, 20, 671, 856, 862, 863], "copy_edata": [99, 111, 116, 130, 555, 561, 562, 563, 564, 641, 648], "copy_fil": [740, 781], "copy_lh": [498, 499], "copy_ndata": [99, 111, 116, 130, 336, 555, 561, 562, 563, 564, 632, 641], "copy_rh": [498, 499], "copy_to": [290, 291, 711, 712, 714, 715, 717, 718, 719, 826, 827, 829, 869], "copy_to_shared_memori": [297, 312], "copy_u": [5, 73, 91, 92, 93, 94, 100, 113, 424, 425, 427, 456, 674, 675, 676, 677, 678, 708, 716, 720, 723, 727, 752, 759, 763, 767, 794, 802, 804, 807, 836, 850, 852, 856], "copy_u_sum": 9, "copy_v": 9, "copyreducebackward": 402, "cora": [25, 153, 154, 289, 689, 735, 775, 816, 817, 819, 822, 826, 837, 850], "cora_v2": [139, 689, 735, 775, 816, 817, 819], "corabinari": 852, "coraful": 25, "corafulldata": [689, 735, 775], "corafulldataset": 219, "coragraphdataset": [139, 381, 424, 428, 816, 817, 819, 826, 834, 836, 837, 850], "core": [8, 692, 697, 816, 821, 822, 843, 844, 850, 853, 856, 868], "cornel": 155, "corner": 723, "corpu": 863, "correct": [21, 22, 730, 770, 813, 850], "correctli": [220, 695, 815, 852], "correspond": [7, 20, 21, 22, 27, 43, 46, 53, 54, 74, 90, 101, 102, 103, 107, 109, 113, 117, 118, 119, 122, 134, 139, 147, 148, 156, 165, 178, 179, 182, 192, 205, 210, 213, 214, 216, 221, 232, 239, 240, 297, 302, 303, 305, 308, 310, 318, 319, 330, 331, 339, 342, 355, 383, 392, 393, 394, 403, 414, 423, 426, 430, 431, 432, 442, 445, 449, 450, 454, 545, 555, 557, 559, 568, 611, 612, 631, 639, 647, 649, 659, 660, 667, 687, 693, 695, 702, 703, 706, 715, 716, 717, 724, 727, 728, 730, 816, 817, 818, 819, 826, 829, 832, 833, 834, 836, 852, 853, 856, 863], "correspondenc": 386, "corrsepond": 4, "corrupt": [561, 562, 563, 564, 692, 778], "cosin": [339, 430, 432, 450, 567], "cost": [9, 14, 210, 639], "costli": [638, 714, 828], "could": [9, 21, 22, 32, 66, 216, 231, 240, 241, 242, 292, 293, 297, 301, 309, 318, 355, 387, 388, 433, 435, 439, 440, 498, 499, 556, 565, 572, 573, 638, 667, 687, 689, 693, 695, 707, 711, 715, 716, 728, 730, 821, 827, 832, 833, 837, 843, 846, 852, 856], "coulomb": 177, "count": [111, 303, 339, 430, 432, 567, 592, 595, 596, 597, 641, 669, 834, 843], "counter": 842, "counterpart": [211, 212, 293, 318, 692, 695, 846, 847], "coupl": 862, "cours": [155, 187, 193], "coustom": 783, "cout": 22, "covari": 410, "cover": [14, 21, 209, 691, 692, 693, 694, 695, 699, 710, 718, 814, 820, 828, 863], "cp": 385, "cp310": 826, "cpp": [818, 839, 852], "cpplint": 21, "cpu": [4, 9, 10, 14, 21, 31, 42, 62, 63, 89, 108, 112, 118, 119, 125, 126, 130, 131, 209, 210, 216, 217, 241, 242, 249, 250, 287, 292, 315, 332, 335, 339, 342, 350, 430, 431, 432, 545, 546, 547, 554, 558, 559, 561, 562, 563, 564, 567, 572, 573, 633, 640, 641, 695, 701, 712, 713, 714, 717, 718, 745, 757, 786, 799, 800, 814, 815, 817, 818, 821, 824, 826, 827, 829, 832, 833, 834, 845, 846, 847, 850, 853, 856, 863, 868], "cpu_best_practis": [824, 845], "cpu_count": [827, 869], "cpu\uc5d0\uc11c\ub9cc": 799, "cpu\uc758": 800, "crawlscript": 748, "creat": [1, 3, 4, 5, 9, 12, 13, 21, 22, 27, 28, 41, 42, 44, 48, 51, 55, 56, 57, 58, 60, 61, 64, 65, 70, 71, 77, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 104, 107, 109, 116, 118, 119, 125, 126, 128, 129, 131, 138, 139, 148, 156, 157, 158, 191, 197, 205, 220, 235, 246, 248, 249, 250, 287, 293, 297, 301, 302, 325, 332, 333, 337, 338, 349, 354, 355, 382, 383, 415, 418, 433, 434, 435, 436, 438, 439, 440, 441, 453, 538, 549, 550, 555, 556, 560, 565, 569, 570, 571, 608, 610, 611, 612, 613, 624, 628, 641, 643, 644, 651, 670, 673, 684, 686, 687, 689, 691, 692, 693, 695, 696, 697, 700, 701, 702, 709, 712, 717, 719, 720, 724, 726, 733, 773, 775, 777, 787, 788, 804, 815, 816, 817, 818, 827, 829, 832, 833, 834, 837, 838, 846, 847, 850, 852, 853, 856, 859, 862, 863, 869], "create_block": [127, 633], "create_dataload": [827, 829, 869], "create_dev_conda_env": 815, "create_featur": 851, "create_formats_": [56, 89, 713], "createcacul": 22, "createcalcul": 22, "creation": [4, 210, 691, 723, 829, 835, 839], "credit": [834, 835, 836, 837, 838, 839], "crisi": 166, "criteria": [711, 846], "criterion": [192, 424, 428, 429, 863, 868], "critic": [9, 21, 22, 137, 171, 180, 182, 188, 424, 425, 427, 429, 699, 853], "cross": [73, 101, 102, 694, 695, 708, 729, 794, 812, 837, 851, 852, 863], "cross_entropi": [425, 426, 427, 712, 719, 720, 726, 728, 730, 766, 768, 770, 804, 810, 811, 813, 817, 819, 827, 829, 834, 836, 838, 851, 852, 869], "cross_reduc": 73, "cross_sum": 73, "crossentropyloss": [424, 428, 429, 691, 720, 737, 777, 816, 846, 847, 868], "crowdsourc": 188, "crucial": [424, 425, 426, 428], "cs224w": 834, "csc": [32, 41, 56, 89, 131, 231, 240, 287, 297, 310, 319, 325, 331, 332, 563, 565, 572, 611, 821], "csc_format": [319, 331], "csc_indptr": [297, 323, 325, 719, 832, 833], "cscforamtbas": 311, "cscformatbas": [297, 300, 303, 308, 310, 311, 319, 331, 826, 829], "cscsamplinggraph": 311, "csr": [32, 41, 56, 118, 119, 126, 131, 240, 250, 287, 332, 563, 565, 572, 573, 612, 821], "csr_csc_g": 56, "csr_g": 56, "csr_matrix": [126, 250], "csrc": [839, 852], "csrmmbackward": 118, "csv": [148, 309, 684, 686, 695, 733, 773, 780, 831, 832, 833], "csvdataset": 687, "csvdatatset": 687, "csv\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u683c\u5f0f": 743, "csv\uac00": 784, "ctx": [31, 62, 63], "cu": 385, "cu118": [816, 817, 818, 819], "cu121": 827, "cuda": [4, 14, 89, 108, 110, 125, 126, 210, 248, 249, 250, 287, 290, 291, 298, 315, 326, 332, 339, 392, 393, 394, 430, 432, 567, 578, 601, 634, 701, 712, 717, 720, 745, 755, 756, 758, 760, 786, 797, 798, 799, 801, 803, 804, 815, 816, 817, 818, 819, 826, 827, 829, 834, 863, 868, 869], "cuda_g": [701, 745, 786], "cuda\ub294": 799, "cudf": 248, "cugraph": [13, 110, 248, 392, 393, 394, 634], "cugraph_g": [110, 248, 634], "cugraph_graph": 248, "cugraphbaseconv": [392, 393, 394], "cumsum": 693, "cup": [151, 152], "cur": [693, 779], "current": [1, 4, 14, 20, 21, 27, 28, 56, 130, 138, 139, 144, 200, 220, 232, 236, 239, 240, 244, 293, 351, 352, 404, 407, 453, 554, 560, 601, 692, 711, 814, 815, 847, 856], "current_devic": [210, 298], "curv": [837, 853], "cuspars": [118, 119], "custom": [4, 194, 213, 383, 413, 554, 633, 683, 684, 685, 693, 695, 698, 710, 712, 713, 715, 717, 718, 719, 721, 724, 730, 772, 801, 825, 829, 839], "customgraphconv": [716, 759, 802], "customheterographconv": [716, 759, 802], "customiz": [302, 730], "customized_parser_dataset": 687, "customized_sample_neg": 715, "customized_sample_neighbor": 711, "customizednegativesampl": 715, "customizedneighborsampl": 711, "cut": [240, 352, 683, 695, 780], "cuthil": 554, "cutoff": [178, 389], "cutom": 719, "cv": [178, 179], "cycl": [141, 172, 189, 246, 333, 474, 538, 859], "cycle_s": 189, "cython": [21, 815], "d": [4, 9, 14, 21, 120, 138, 139, 140, 146, 169, 170, 178, 179, 233, 243, 326, 352, 386, 388, 391, 395, 402, 407, 411, 415, 417, 418, 420, 421, 423, 424, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 446, 447, 451, 452, 455, 497, 500, 549, 550, 598, 608, 610, 611, 612, 613, 615, 616, 617, 618, 620, 624, 628, 643, 644, 666, 676, 677, 678, 687, 702, 728, 768, 811, 816, 817, 818, 821, 837, 850, 852, 862, 868], "d1": [386, 497, 500, 821], "d2": [386, 497, 500, 821], "d_": [243, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 450, 852], "d_1": [705, 749, 790], "d_2": [705, 749, 790], "d_e": 819, "d_e_inv": 819, "d_ff": [437, 438], "d_hat": [719, 816, 817, 821], "d_hat_invsqrt": [816, 817], "d_head": [437, 438], "d_i": 9, "d_k": 863, "d_model": [437, 438], "d_t": [243, 425, 426, 427], "d_v": 819, "d_v_invsqrt": 819, "dada": [832, 833], "dadta": [832, 833], "dai": [21, 164, 181, 686], "damm": 856, "data": [0, 1, 3, 4, 5, 6, 7, 13, 14, 22, 26, 27, 28, 34, 35, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 68, 70, 73, 74, 75, 77, 87, 88, 89, 91, 92, 93, 94, 100, 103, 104, 108, 112, 113, 114, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 232, 236, 238, 239, 240, 246, 247, 249, 250, 251, 287, 290, 291, 292, 293, 294, 300, 301, 303, 305, 308, 309, 310, 314, 332, 333, 337, 338, 339, 344, 349, 351, 353, 381, 383, 385, 386, 393, 400, 418, 424, 425, 426, 427, 428, 429, 430, 432, 449, 451, 453, 455, 457, 474, 475, 497, 538, 539, 546, 547, 554, 555, 565, 567, 572, 573, 583, 584, 585, 588, 589, 601, 611, 612, 613, 633, 635, 636, 637, 639, 640, 641, 668, 677, 682, 683, 685, 688, 691, 694, 696, 697, 699, 700, 701, 702, 703, 704, 706, 708, 710, 711, 714, 716, 719, 720, 722, 725, 726, 729, 730, 731, 732, 733, 734, 735, 736, 738, 740, 747, 750, 752, 755, 756, 759, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 786, 788, 789, 791, 794, 797, 798, 802, 804, 809, 810, 811, 812, 813, 815, 816, 817, 818, 821, 825, 831, 834, 835, 836, 837, 842, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863], "data0": 687, "data1": 687, "data_dict": [131, 332], "data_it": 863, "data_load": 293, "data_path": 148, "data_pip": 301, "data_root_dir": [240, 694, 695, 739, 780], "data_type_dict": [689, 735, 775], "databas": [164, 839], "dataflow": 852, "datafram": [148, 248, 687, 832, 833], "datail": 179, "dataload": [10, 11, 13, 183, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 293, 303, 313, 381, 385, 424, 428, 429, 453, 681, 683, 688, 689, 691, 692, 711, 712, 713, 714, 715, 717, 718, 719, 728, 734, 735, 737, 738, 755, 756, 757, 758, 760, 768, 774, 775, 777, 778, 797, 798, 799, 800, 801, 803, 811, 818, 826, 827, 829, 838, 842, 843, 846, 847, 852, 856, 868, 869], "dataloader\u4e2d\u8fd0\u884c": 738, "dataloader\u5728\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u91c7\u6837\u5de5\u4f5c\u8fdb\u7a0b": 738, "dataloader\u76f8\u540c\u7684\u63a5\u53e3": 738, "dataloader\ub294": 778, "dataloader\ub97c": [798, 803], "dataloader\uc5d0\uc11c": 778, "dataloader\uc640": 778, "datapars": 687, "datapip": [7, 290, 291, 293, 295, 300, 301, 303, 306, 307, 308, 313, 317, 711, 712, 714, 715, 717, 718, 719, 825, 826, 827, 829, 869], "datapoint": [196, 207], "dataset": [4, 13, 14, 21, 23, 25, 120, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 210, 213, 245, 289, 291, 304, 309, 381, 424, 426, 428, 429, 473, 681, 684, 685, 686, 690, 691, 692, 717, 719, 720, 725, 728, 730, 734, 735, 737, 738, 765, 768, 772, 774, 775, 777, 778, 809, 811, 816, 817, 818, 819, 822, 825, 827, 831, 832, 833, 836, 837, 838, 840, 850, 853, 868, 869], "dataset_nam": [292, 304, 309, 685, 687, 732, 772, 832, 833], "dataset\ub97c": 771, "datatyp": [720, 821], "dateset": 822, "dateutil": [826, 829, 832, 833], "datset": [25, 172], "dcmake_configuration_typ": 815, "dcmake_cxx_flag": 815, "dd": [25, 168, 186, 863], "ddgl_export": 815, "ddmlc_force_shared_crt": 815, "ddp": [293, 842, 868, 869], "ddp_seed": [210, 213], "de": 863, "deal": [122, 716, 728, 860, 866], "dealloc": 843, "debian": 815, "debug": [4, 23], "dec": 863, "dec_graph": [726, 766, 810], "decai": 407, "decid": [9, 22, 131, 332, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 422, 702, 859, 863], "declar": 692, "decod": [437, 863], "decompos": [386, 418, 856, 863], "decomposit": [386, 393, 418, 457, 717, 851], "decomposition\uc740": 803, "decor": [293, 301], "decreas": [424, 425], "dedic": 231, "dedupl": [303, 308], "deep": [4, 23, 209, 219, 407, 410, 426, 428, 439, 652, 723, 728, 730, 821, 822, 823, 835, 856, 859, 860, 866], "deepchem": [689, 735, 775], "deepcopi": 859, "deepset": 446, "deepset_encod": 446, "deepwalk": 834, "def": [4, 5, 10, 20, 22, 53, 54, 70, 73, 100, 218, 251, 252, 263, 264, 265, 266, 300, 301, 313, 383, 414, 416, 424, 425, 426, 427, 428, 429, 453, 456, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 685, 686, 687, 688, 689, 690, 692, 693, 706, 707, 711, 712, 714, 715, 716, 717, 719, 720, 722, 723, 724, 726, 728, 729, 730, 732, 733, 734, 735, 736, 738, 750, 751, 755, 756, 757, 758, 759, 760, 762, 763, 764, 766, 768, 769, 770, 772, 773, 774, 775, 776, 778, 791, 793, 797, 798, 800, 801, 802, 803, 804, 806, 807, 808, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 839, 842, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "defalt": 442, "default": [4, 6, 9, 10, 14, 23, 27, 28, 31, 32, 34, 35, 41, 48, 51, 53, 54, 61, 62, 63, 79, 81, 82, 88, 89, 116, 117, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 205, 207, 208, 209, 210, 213, 214, 216, 219, 226, 231, 232, 235, 236, 239, 240, 245, 246, 247, 249, 250, 287, 289, 290, 291, 293, 300, 309, 310, 313, 325, 332, 333, 336, 337, 338, 339, 340, 342, 344, 351, 352, 355, 381, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 442, 443, 444, 445, 446, 447, 448, 449, 453, 455, 473, 474, 475, 538, 540, 542, 545, 546, 547, 548, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 567, 568, 631, 632, 633, 638, 639, 640, 641, 649, 654, 659, 663, 665, 666, 667, 685, 687, 692, 693, 694, 695, 696, 702, 703, 706, 772, 787, 788, 815, 818, 821, 825, 826, 827, 829, 831, 832, 833, 843, 846, 847, 859, 863, 869], "defin": [4, 5, 7, 9, 13, 27, 28, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 120, 146, 156, 169, 210, 220, 243, 244, 245, 251, 252, 263, 264, 265, 266, 313, 314, 342, 343, 385, 389, 395, 407, 408, 413, 424, 425, 426, 427, 428, 429, 437, 451, 452, 472, 473, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 683, 684, 685, 687, 691, 692, 700, 703, 705, 706, 720, 726, 728, 729, 730, 750, 770, 777, 788, 791, 804, 810, 812, 813, 816, 817, 819, 821, 831, 850, 852, 853, 863, 868], "definit": [66, 72, 240, 389, 619, 621, 622, 623, 691, 697, 712, 715, 719, 730, 851, 852, 856], "deform": 862, "defus": [214, 297, 303, 561], "deg": [723, 763, 807], "deg_emb": 683, "deg_g": 852, "deg_lg": 852, "deg_proj": 852, "degg_batch": 183, "deglg_batch": 183, "degrad": 214, "degre": [4, 13, 60, 87, 120, 130, 165, 181, 183, 217, 245, 387, 392, 393, 394, 395, 397, 399, 402, 403, 405, 406, 407, 410, 413, 417, 420, 421, 427, 429, 443, 473, 476, 656, 657, 662, 666, 681, 694, 695, 715, 719, 723, 816, 817, 819, 821, 835, 836, 850, 852, 853, 856], "degree_as_nlabel": 165, "degree_embed": 443, "degree_encod": [443, 683], "degreeencod": 683, "degree\uac00": 807, "degree\ub4e4": 780, "degree\uc758": 801, "del": 859, "delet": [21, 180, 303, 308, 551, 552], "delimit": 695, "deliv": 859, "delta": [178, 179, 395, 417], "demand": 291, "demo": 818, "demonstr": [42, 451, 452, 641, 687, 719, 725, 726, 820, 832, 833, 839, 846, 854, 856, 863, 866], "denomin": [4, 10, 404], "denot": [120, 243, 389, 403, 410, 421, 455, 665, 816, 817, 850, 851, 852, 853, 856], "dens": [9, 13, 226, 297, 335, 396, 397, 398, 442, 445, 497, 498, 500, 557, 602, 606, 607, 614, 617, 625, 683, 692, 712, 721, 761, 778, 798, 805, 817, 818, 821], "densiti": [183, 197, 557, 699, 743, 784, 852, 859], "departur": 856, "depend": [9, 21, 31, 89, 126, 131, 182, 210, 211, 212, 214, 215, 216, 220, 245, 249, 250, 287, 303, 305, 332, 392, 393, 394, 453, 473, 549, 550, 561, 687, 695, 698, 708, 710, 712, 713, 714, 716, 717, 721, 796, 828, 843, 853, 856, 863], "dependency\ub4e4\uc744": 803, "dependency\uc5d0\uc11c": 798, "deploi": [854, 866], "deprec": [116, 144, 168, 177, 178, 179, 186, 231, 235, 632, 642, 852], "depth": [1, 229, 230, 558], "deriv": [395, 726, 817], "desc": 818, "descend": [643, 644], "descent": [14, 339, 430, 432, 567, 710, 796, 868], "describ": [5, 21, 43, 46, 47, 74, 75, 103, 167, 240, 303, 316, 402, 418, 457, 633, 638, 646, 647, 652, 653, 654, 655, 695, 706, 710, 723, 725, 726, 729, 817, 819, 828, 829, 831, 832, 833, 834, 837, 839, 850, 852, 853, 859, 862], "descript": [61, 88, 131, 137, 160, 178, 179, 180, 287, 316, 332, 851, 863], "deserv": 853, "design": [4, 150, 154, 176, 244, 289, 305, 389, 563, 683, 692, 693, 695, 708, 714, 718, 728, 821, 825, 830, 852, 863], "desir": [20, 22, 120, 226, 557, 656, 657, 662, 694], "desktop": 843, "despit": 695, "dest": 859, "dest_list": 859, "destin": [4, 5, 9, 26, 27, 30, 31, 32, 34, 39, 43, 44, 45, 47, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 73, 79, 80, 82, 87, 88, 90, 91, 92, 93, 94, 100, 104, 105, 107, 109, 113, 114, 117, 118, 119, 123, 125, 126, 127, 131, 200, 214, 216, 220, 226, 227, 231, 233, 243, 247, 248, 250, 287, 293, 297, 301, 312, 317, 318, 319, 331, 332, 350, 355, 383, 390, 392, 393, 394, 396, 397, 398, 399, 400, 403, 405, 406, 416, 419, 450, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 490, 492, 494, 496, 498, 499, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 546, 549, 551, 553, 554, 557, 563, 570, 572, 573, 633, 648, 649, 655, 664, 672, 687, 694, 695, 703, 706, 708, 715, 722, 723, 724, 788, 794, 797, 827, 828, 832, 835, 836, 837, 839, 852, 856, 863, 869], "destination_typ": [703, 747, 788], "destroi": [4, 692], "destroy_process_group": 868, "dests_prob": 859, "dests_scor": 859, "detach": [381, 818, 826, 827, 829, 836, 846, 852, 869], "detail": [4, 9, 21, 22, 91, 146, 169, 209, 214, 216, 217, 220, 222, 223, 224, 225, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 556, 562, 619, 621, 622, 623, 680, 681, 683, 687, 689, 691, 692, 693, 695, 699, 706, 709, 711, 712, 713, 715, 717, 718, 719, 723, 730, 814, 815, 822, 832, 833, 836, 839, 846, 847, 853, 859, 863, 868, 869], "detect": [145, 161, 163, 181, 183, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 854, 866], "determin": [4, 26, 231, 241, 242, 291, 297, 395, 417, 449, 557, 561, 562, 563, 564, 639, 693, 695, 703, 720, 722, 723, 862], "determinist": [131, 198, 303, 332, 383, 554], "dev": [183, 184, 207, 720, 815, 816, 817, 818, 819, 821, 856], "dev_data": 184, "devel": 815, "develop": [22, 27, 28, 30, 31, 41, 44, 45, 56, 82, 95, 96, 101, 102, 104, 105, 109, 114, 115, 355, 551, 552, 638, 639, 692, 710, 712, 717, 727, 815, 835, 843, 846], "deviat": [395, 417, 449], "devic": [4, 7, 13, 31, 34, 35, 43, 46, 48, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 87, 88, 89, 93, 94, 100, 103, 108, 125, 126, 130, 131, 208, 209, 210, 211, 212, 214, 216, 217, 246, 247, 248, 249, 250, 287, 290, 297, 298, 305, 310, 312, 315, 316, 323, 326, 332, 333, 337, 338, 339, 392, 393, 394, 430, 431, 432, 453, 474, 475, 538, 545, 546, 547, 554, 560, 561, 562, 563, 564, 567, 581, 601, 613, 681, 691, 701, 702, 711, 712, 713, 714, 715, 717, 718, 719, 720, 737, 745, 755, 756, 757, 758, 760, 777, 786, 797, 798, 799, 800, 801, 803, 804, 817, 818, 821, 826, 827, 829, 832, 833, 836, 842, 852, 856, 863, 868, 869], "device_count": [827, 868, 869], "device_id": 868, "device_typ": 720, "df": [229, 230, 248, 541, 687, 832, 833], "dfrac": [442, 818], "dfs_labeled_edg": 230, "dfs_labeled_edges_gener": 541, "dgl": [13, 14, 20, 23, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 705, 706, 707, 708, 710, 711, 712, 715, 716, 717, 720, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 750, 751, 752, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 785, 786, 787, 789, 791, 792, 793, 794, 797, 798, 800, 801, 802, 803, 804, 805, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 822, 825, 828, 836, 837, 842, 843, 846, 847, 854, 857, 859, 862, 864, 868, 869], "dgl_declare_object_type_info": 22, "dgl_download_dir": 23, "dgl_g": 817, "dgl_home": 21, "dgl_library_path": 21, "dgl_log_debug": 23, "dgl_mxnet_set_np_shap": 815, "dgl_partition_to_graphbolt": 846, "dgl_register_glob": 22, "dgl_repo": 23, "dgl_warn": [832, 833, 856, 859, 862], "dglarg": 22, "dglbackend": [21, 23, 815, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 868, 869], "dglblock": [127, 131, 305, 392, 393, 394, 633], "dglbuiltindataset": [134, 141, 142, 143, 145, 147, 159, 160, 162, 164, 165, 166, 168, 174, 175, 181, 184, 186, 189, 190, 192, 194, 195, 686, 689, 733, 735, 773, 775], "dgldataset": [138, 139, 140, 148, 167, 172, 173, 177, 178, 179, 183, 197, 198, 304, 684, 687, 689, 725, 731, 732, 735, 765, 771, 775, 809], "dgldataset\u7c7b": [731, 748], "dgldefaultdir": 23, "dglerror": [27, 28, 95, 96, 387, 399, 402, 403, 404, 405, 406, 407, 410, 413, 420, 633, 701, 703, 745, 747, 786, 788], "dglfunccal": 22, "dglgraph": [0, 4, 5, 6, 9, 13, 22, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 209, 210, 222, 223, 224, 225, 229, 230, 231, 234, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 293, 324, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 355, 381, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 455, 456, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 679, 681, 687, 688, 689, 690, 692, 693, 695, 697, 699, 700, 702, 703, 723, 728, 734, 735, 738, 741, 743, 744, 745, 746, 747, 755, 756, 758, 763, 768, 774, 775, 776, 778, 779, 780, 782, 784, 785, 787, 788, 797, 798, 801, 807, 811, 835, 836, 837, 838, 850, 851, 852, 853, 856, 859, 862, 863], "dglgraphproppreddataset": [138, 688, 734, 774, 818], "dglgraph\ub85c": 784, "dgllinkproppreddataset": [688, 734, 774, 847], "dglnn": [383, 712, 714, 715, 717, 728, 730, 756, 758, 760, 768, 770, 798, 801, 803, 811, 813, 818, 826, 846, 847, 869], "dglnodeproppreddataset": [688, 734, 774, 846], "dglretvalu": 22, "dglroutinglay": 862, "dglsp": [12, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 719, 816, 817, 818, 819, 821], "dglwarn": [832, 833, 856, 859, 862], "dgl\u4e0d\u63d0\u4f9b\u5bf9\u6765\u81ea\u591a\u4e2a\u8bad\u7ec3\u5668\u7684\u5e76\u53d1\u5199\u5165\u7684\u4fdd\u62a4": 738, "dgl\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 759, "dgl\u4e2d\u7684": 758, "dgl\u4e3a\u5206\u5e03\u5f0f\u5f20\u91cf\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u5355\u673a\u666e\u901a\u5f20\u91cf\u7684\u63a5\u53e3": 738, "dgl\u4e5f\u4f1a\u6839\u636e\u8fb9\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f": 746, "dgl\u4e5f\u652f\u6301\u4ece\u5176\u4ed6\u7684\u6570\u636e\u6e90\u6765\u521b\u5efa\u56fe\u5bf9\u8c61": 746, "dgl\u4e5f\u652f\u6301\u76f4\u63a5\u4eces3": 743, "dgl\u4ec5\u5141\u8bb8\u521b\u5efa\u5355\u4e2adistgraph\u5bf9\u8c61": 738, "dgl\u4ec5\u652f\u6301\u5bc6\u96c6\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 738, "dgl\u4ee5\u540e\u5c06\u4e3a\u7a00\u758f\u5d4c\u5165\u6dfb\u52a0\u66f4\u591a\u7684\u4f18\u5316\u5668": 738, "dgl\u4f18\u5316\u4e86\u6d88\u606f\u4f20\u9012\u7684\u5185\u5b58\u6d88\u8017\u548c\u8ba1\u7b97\u901f\u5ea6": 751, "dgl\u4f1a\u5212\u5206\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 738, "dgl\u4f1a\u5728\u5185\u90e8\u5c061\u6761\u65e0\u5411\u8fb9\u8f6c\u6362\u4e3a2\u6761\u6709\u5411\u8fb9": 743, "dgl\u4f1a\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 737, "dgl\u4f1a\u5c06\u5b83\u4eec\u5206\u7247\u5e76\u5b58\u50a8\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a\u4e0a": 738, "dgl\u4f1a\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u6bcf\u6761\u8fb9": 744, "dgl\u4f1a\u68c0\u67e5\u8f93\u5165\u56fe\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9": 763, "dgl\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6574\u578b\u5f20\u91cf": 746, "dgl\u4f7f\u7528\u4e00\u4e2a\u5305\u542b2\u4e2a\u8282\u70b9\u5f20\u91cf\u7684\u5143\u7ec4": 746, "dgl\u4f7f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u6765\u8868\u793a\u4e00\u4e2a\u8282\u70b9": 746, "dgl\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684meti": 739, "dgl\u4fdd\u8bc1\u8fb9\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u4e0e\u751f\u6210\u7684\u5757\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u76f8\u540c": 756, "dgl\u5047\u5b9a\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7684\u9700\u8981\u5408\u5e76\u7684\u7279\u5f81\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u6570\u636e\u7c7b\u578b": 747, "dgl\u5185\u7f6e\u4e86\u5e38\u89c1\u7684\u56fe\u8bfb\u51fa\u51fd\u6570": 768, "dgl\u5185\u7f6e\u7684nn\u6a21\u5757\u5982\u679c\u5728forward\u51fd\u6570\u4e2d\u652f\u6301\u4e00\u4e2a\u53ef\u9009\u7684": 767, "dgl\u5185\u7f6e\u7684\u6d88\u606f": 763, "dgl\u53ef\u4ee5\u5904\u7406\u6700\u591a": 746, "dgl\u53ef\u4ee5\u95f4\u63a5\u5730\u4ece\u8fd9\u4e9b\u6765\u6e90\u521b\u5efa\u56fe": 743, "dgl\u540c\u6837\u652f\u6301\u5b83\u5728mxnet\u548ctensorflow\u540e\u7aef\u91cc\u7684\u5b9e\u73b0": [759, 768], "dgl\u548c\u8fd9\u4e9b\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u5176\u72ec\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c": 761, "dgl\u5728": 731, "dgl\u5728\u5185\u90e8\u5c06scipy\u77e9\u9635\u548cnetworkx\u56fe\u8f6c\u6362\u4e3a\u5f20\u91cf\u6765\u521b\u5efa\u56fe": 743, "dgl\u5728\u547d\u540d\u7a7a\u95f4": 750, "dgl\u5728\u96c6\u7fa4\u6240\u6709\u673a\u5668\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u8bad\u7ec3\u811a\u672c": 737, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6574\u56fe\u5206\u7c7b\u7684\u6837\u4f8b": 768, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5206\u5e03\u5f0f\u7ec4\u4ef6\u4ee5\u652f\u6301\u5206\u5e03\u5f0f\u8bad\u7ec3": 737, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7ba1\u9053": 754, "dgl\u5b9e\u73b0\u4e86\u591a\u4e2a\u53ef\u7528\u4e8e\u751f\u6210\u8fb9\u754c\u7684\u51fd\u6570": 755, "dgl\u5bf9\u8fb9\u754c\u5b50\u56fe\u505a\u4e86\u4e00\u4e2a\u8f6c\u6362": 755, "dgl\u5c06\u56fe\u5212\u5206\u7ed3\u679c\u5b58\u50a8\u5728\u8f93\u51fa\u76ee\u5f55\u4e2d\u7684\u591a\u4e2a\u6587\u4ef6\u4e2d": 739, "dgl\u5c06\u9700\u8981\u8ba1\u7b97gnn\u8f93\u51fa\u7684\u8282\u70b9\u79f0\u4e3a": 755, "dgl\u5df2\u7ecf\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528\u7684": 761, "dgl\u5efa\u8bae": 750, "dgl\u5efa\u8bae\u4f7f\u7528\u8282\u70b9\u63a9\u7801\u6765\u6307\u5b9a\u6570\u636e\u96c6\u7684\u5212\u5206": 735, "dgl\u5efa\u8bae\u7528\u6237\u5b9e\u73b0\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e\u7684\u51fd\u6570": 736, "dgl\u5efa\u8bae\u7528\u6237\u5c3d\u91cf\u51cf\u5c11\u8fb9\u7684\u7279\u5f81\u7ef4\u6570": 751, "dgl\u5efa\u8bae\u8ba9": 735, "dgl\u5efa\u8bae\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ece\u70b9\u5230\u8fb9\u7684\u5185\u5b58\u62f7\u8d1d": 751, "dgl\u63a8\u8350\u4f7f\u7528tensor\u4f5c\u4e3adgl": 746, "dgl\u63a8\u8350\u7528\u6237\u5c06\u56fe\u6570\u636e\u5904\u7406\u4e3a": 731, "dgl\u63a8\u8350\u91cd\u65b0\u6392\u5217\u56fe\u7684\u8282\u70b9": 735, "dgl\u63d0\u4f9b": 738, "dgl\u63d0\u4f9b\u4e86": [738, 747, 755, 764], "dgl\u63d0\u4f9b\u4e864\u4e2a\u51fd\u6570\u8ba9\u4efb\u52a1\u53d8\u5f97\u7b80\u5355": 736, "dgl\u63d0\u4f9b\u4e86api\u4ee5\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u6216\u5411\u78c1\u76d8\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u56fe": 743, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2aapi\u4ee5\u6267\u884c\u8fd9\u4e24\u4e2a\u6b65\u9aa4": 739, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u529f\u80fd\u7684\u51fd\u6570": 767, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684rgcn\u7684\u7aef\u5230\u7aef\u7684\u4f8b\u5b50": 770, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a00\u758f\u7684adagrad\u4f18\u5316\u5668": 738, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u793a\u4f8b": 760, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u56fe\u5377\u79ef\u6a21\u5757": 770, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177": 737, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784": 738, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784\u548c\u591a\u79cdapi": 738, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7ea7\u522b\u7684api": 738, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u811a\u672c\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 740, "dgl\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b0\u7c7b\u578b\u7684\u8bed\u6cd5": 747, "dgl\u63d0\u4f9b\u4e86\u51e0\u4e2a\u90bb\u5c45\u91c7\u6837\u7c7b": 760, "dgl\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684api": 737, "dgl\u63d0\u4f9b\u4e86\u540d\u4e3a": 735, "dgl\u63d0\u4f9b\u4e86\u5728\u540c\u6784\u56fe\u4e0a\u505a\u94fe\u8def\u9884\u6d4b\u7684\u4e00\u4e2a\u793a\u4f8b": 758, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u91c7\u6837\u7684\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668": 738, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u542f\u52a8\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684tool": 740, "dgl\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684": 760, "dgl\u63d0\u4f9b\u4e86\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5": 746, "dgl\u63d0\u4f9b\u7684\u4e00\u4e9b\u91c7\u6837\u65b9\u6cd5\u4e5f\u652f\u6301\u5f02\u6784\u56fe": 760, "dgl\u652f\u6301": 750, "dgl\u652f\u6301\u4f7f\u7528": 746, "dgl\u652f\u6301\u5185\u7f6e\u7684\u805a\u5408\u51fd\u6570": 750, "dgl\u73b0\u5728\u652f\u6301": 750, "dgl\u7684gin\u6837\u4f8b": 768, "dgl\u7684graphsage\u6837\u4f8b": 770, "dgl\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4ea4\u4e92\u8fdb\u7a0b": 737, "dgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u5c0f\u6279\u6b21\u751f\u6210\u4e09\u9879": 758, "dgl\u786e\u4fdd\u5757\u7684\u8f93\u51fa\u8282\u70b9\u5c06\u59cb\u7ec8\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 755, "dgl\u793e\u533a\u7684\u4e00\u7fa4\u70ed\u5fc3\u8d21\u732e\u8005\u628adgl\u7528\u6237\u6307\u5357\u8bd1\u6210\u4e86\u4e2d\u6587": 748, "dgl\u79f0\u4e4b\u4e3a": 746, "dgl\u79f0\u5b83\u4eec\u4e3a\u7ea2\u8272\u8282\u70b98\u5728\u7b2c\u4e8c\u4e2agnn\u5c42\u7684": 755, "dgl\u79f0\u5b83\u4eec\u4e3a\u89c4\u8303\u8fb9\u7c7b\u578b": 747, "dgl\u79f0\u8fd9\u79cd\u4ec5\u5305\u542b\u5fc5\u8981\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u4e8c\u5206\u56fe\u4e3a\u4e00\u4e2a": 755, "dgl\u8981\u6c42\u9884\u5904\u7406\u56fe\u6570\u636e\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "dgl\u901a\u8fc7\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784": 741, "dgl\u91c7\u7528\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5": 737, "dgl\u91cc\u5bf9\u56fe\u8fdb\u884c\u53d8\u6362\u7684\u51fd\u6570\u4f1a\u53bb\u6389\u56fe\u4e0a\u7684\u6279\u6b21\u4fe1\u606f": 768, "dgl\u9ed8\u8ba4\u4f7f\u7528int64": 746, "dgl\ub294": [787, 803, 811], "dgl\uc5d0\uc11c": [779, 780, 783, 787, 788, 791, 798, 803, 807, 809], "dgl\uc5d0\uc11c\ub294": [775, 776, 787, 793, 797, 798, 801, 803], "dgl\uc740": [771, 772, 775, 776, 777, 778, 779, 780, 781, 782, 784, 787, 788, 791, 792, 793, 796, 797, 802, 804, 805, 810, 811, 813], "dgl\uc758": [775, 777, 778, 780, 788, 790, 791, 793, 801, 802, 803, 807], "dgl\uc774": [780, 797, 798, 803], "dgmg": [860, 866], "dgmg_cycl": 859, "dgmg_msg": 859, "dgmg_reduc": 859, "dgmgskeleton": 859, "dgn": 395, "dh": 818, "diag": [605, 609, 614, 615, 616, 627, 719, 816, 817, 819, 821], "diagmatrix": [588, 589], "diagon": [386, 397, 407, 418, 421, 608, 609, 613, 614, 615, 816, 817, 819, 852], "diagram": 695, "dichotomi": [120, 245, 473], "dict": [4, 20, 27, 28, 43, 46, 47, 56, 73, 74, 75, 103, 114, 115, 121, 130, 131, 148, 203, 204, 205, 206, 208, 210, 213, 214, 216, 219, 220, 222, 223, 224, 225, 234, 236, 237, 238, 240, 241, 242, 246, 288, 294, 295, 296, 297, 299, 300, 305, 309, 310, 311, 312, 313, 314, 315, 318, 319, 322, 325, 330, 331, 332, 333, 337, 338, 344, 351, 355, 382, 383, 384, 385, 424, 425, 426, 427, 428, 429, 474, 538, 539, 554, 561, 562, 564, 565, 633, 641, 647, 679, 690, 695, 760, 776, 797, 803, 837, 856, 859, 862, 863], "dict_kei": 383, "dictionari": [22, 43, 46, 47, 74, 75, 101, 102, 103, 121, 122, 131, 148, 210, 220, 236, 240, 242, 246, 295, 297, 299, 305, 310, 312, 318, 319, 330, 331, 332, 333, 337, 338, 344, 382, 425, 427, 474, 538, 561, 562, 564, 641, 679, 687, 695, 703, 708, 711, 712, 717, 724, 726, 730, 780, 794, 808, 834, 837, 839], "dictionary\uac00": 780, "dictionary\ub294": 780, "dictionary\ub4e4\uc744": 803, "dictionary\ub97c": [780, 801], "dictionary\uc5d0": 780, "dictionary\uc640": 801, "dict\u5bf9\u8c61": 736, "diff": 323, "differ": [4, 5, 11, 51, 61, 73, 88, 91, 92, 113, 116, 120, 126, 131, 135, 136, 138, 139, 140, 151, 152, 153, 158, 159, 172, 178, 179, 186, 192, 214, 216, 217, 219, 220, 229, 230, 235, 240, 243, 245, 249, 250, 287, 297, 299, 302, 303, 305, 319, 332, 337, 338, 351, 352, 382, 383, 385, 400, 417, 421, 426, 427, 428, 429, 432, 446, 456, 473, 561, 563, 567, 632, 638, 687, 689, 692, 695, 697, 698, 700, 703, 708, 710, 712, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 728, 729, 730, 785, 788, 818, 819, 821, 826, 827, 832, 833, 835, 838, 843, 846, 851, 852, 853, 854, 856, 857, 859, 862, 863, 866, 868, 869], "differenti": [118, 119, 712, 853], "diffus": [656, 657, 662, 666, 820], "diffuse_op": 666, "digit": [199, 200], "digraph": [125, 249, 640, 699, 743, 784], "dii": 21, "dill": 827, "dim": [73, 263, 264, 265, 266, 326, 339, 383, 410, 446, 447, 567, 592, 595, 596, 597, 598, 599, 618, 643, 644, 673, 681, 706, 707, 730, 750, 751, 770, 791, 793, 813, 816, 817, 818, 821, 826, 836, 850, 851, 853, 859, 862], "dim_ff": 863, "dim_model": 863, "dim_nfeat": 838, "dimens": [4, 5, 9, 10, 14, 20, 139, 150, 154, 176, 302, 315, 326, 339, 355, 383, 391, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 423, 424, 430, 432, 439, 443, 447, 453, 501, 545, 567, 592, 595, 596, 597, 598, 599, 606, 614, 618, 620, 643, 644, 683, 693, 700, 706, 707, 708, 722, 728, 816, 818, 821, 834, 836, 838, 850, 851, 853, 863, 868], "dimension": [9, 159, 302, 305, 339, 402, 404, 408, 410, 430, 432, 558, 559, 560, 567, 700, 707, 817, 835, 838], "dipol": [178, 179], "dir": [395, 695, 780], "dir1": 395, "direct": [6, 123, 124, 126, 134, 149, 155, 159, 178, 185, 187, 193, 229, 230, 248, 249, 289, 339, 341, 395, 443, 541, 543, 544, 546, 568, 632, 645, 668, 687, 698, 699, 702, 783, 828, 835, 836, 852, 859, 862], "direction": 698, "directli": [9, 21, 64, 71, 89, 108, 109, 112, 117, 131, 148, 210, 231, 246, 303, 305, 308, 333, 337, 338, 339, 344, 393, 430, 432, 474, 538, 565, 567, 648, 649, 687, 699, 819, 821, 836, 837, 839, 842, 846, 851], "directoractor": 134, "directori": [21, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 209, 289, 309, 685, 686, 690, 694, 696, 772, 773, 776, 815, 831, 832, 833, 842, 846, 863], "dirnam": 202, "disabl": [4, 9, 706, 815, 827, 843], "disable_shared_mem": 4, "disallow": 560, "disambigu": 703, "disappear": [4, 692], "disast": 852, "discard": [27, 28, 114, 115, 116, 117, 130, 246, 247, 333, 336, 342, 350, 474, 475, 538, 552, 555, 632, 641, 642, 728, 818], "discov": [863, 864, 866], "discoveri": 859, "discret": [657, 853], "disct": 633, "discuss": [21, 633, 725, 730, 852], "diseas": [561, 562, 703, 747, 788], "disease\u6cbb\u7597\u8fb9": 747, "disease\u8282\u70b9": 747, "disjoint": 122, "disk": [4, 138, 139, 140, 156, 203, 206, 292, 298, 309, 315, 316, 685, 686, 690, 695, 772, 826, 830, 832, 833, 837, 839], "dislik": [725, 726, 765, 766, 809, 810], "dislike_dst": [725, 765, 809], "dislike_src": [725, 765, 809], "dispatch": [9, 694], "dispatch_data": 695, "displai": [56, 817, 856], "dist": [339, 430, 431, 432, 447, 448, 545, 567, 568, 681, 683, 818, 824, 827, 842, 849, 868, 869], "dist_anim": 862, "dist_graph": [692, 738, 778], "dist_list": 862, "dist_matrix": 862, "distanc": [6, 178, 179, 243, 339, 389, 430, 431, 432, 447, 448, 545, 567, 568, 681, 683, 859], "distdataload": [4, 211, 212, 691, 692, 737, 738, 777, 778], "distedgedataload": [692, 738, 847], "distembed": [4, 691, 737, 738, 777], "distgraph": [4, 211, 212, 233, 234, 240, 241, 242, 691, 693, 695, 737, 738, 739, 777, 779, 780, 846, 847], "distgraphserv": 4, "distgraph\u5c06\u56fe\u6570\u636e\u52a0\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u4e2d": 738, "distgraph\uc758": 778, "distinct": [142, 687, 854, 866], "distinguish": [68, 156, 638, 681, 687, 703, 821], "distmult": 851, "distnodedataload": [692, 738, 778, 846, 847], "distplot": 862, "distribut": [13, 120, 142, 174, 197, 205, 210, 211, 212, 213, 226, 227, 245, 293, 297, 317, 353, 354, 382, 410, 426, 428, 453, 473, 563, 694, 704, 715, 726, 729, 737, 738, 739, 777, 779, 780, 801, 827, 842, 853, 859, 862, 863, 869], "distributeddataparallel": [210, 213, 691, 737, 777, 827, 842, 846, 847, 868, 869], "distributeditemsampl": [827, 869], "distributedli": [293, 692], "distributedsampl": [210, 213], "disttenor": 4, "disttensor": [4, 232, 239, 691, 692, 693, 737, 738, 777, 778, 779], "disttensor\u4e2d\u7684\u884c\u6570\u5fc5\u987b\u4e0e\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u6216\u8fb9\u6570\u76f8\u540c": 738, "div": [9, 255, 256, 269, 270, 279, 280, 489, 490, 498, 499, 508, 509, 510, 511, 512, 513, 530, 531, 706, 750, 791, 821], "dive": [723, 823], "divers": 863, "divid": [45, 68, 79, 82, 105, 142, 143, 189, 190, 232, 239, 397, 413, 646, 716, 719, 723, 807, 837, 850, 853], "divis": [4, 395, 404, 417, 418, 442, 444, 445, 609, 621], "dl": [134, 173, 814], "dlg": 780, "dlg\uc758": 791, "dm": 862, "dmlc": [21, 815, 842], "dncoder": 863, "dnn": [721, 805], "do": [4, 9, 21, 22, 70, 89, 101, 102, 114, 116, 130, 140, 180, 240, 297, 330, 339, 349, 351, 383, 423, 430, 432, 442, 443, 445, 447, 448, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 553, 557, 562, 567, 633, 686, 692, 702, 703, 710, 711, 716, 717, 726, 729, 730, 797, 829, 830, 832, 833, 834, 837, 852, 853, 856, 859], "do_someth": 0, "doc": [9, 14, 168, 186, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 712, 724, 821, 834, 836, 837, 838, 839, 852, 868, 869], "docstr": 21, "document": [8, 22, 214, 216, 240, 831, 846], "doc\uc5d0\uc11c": 808, "doe": [4, 8, 21, 26, 27, 28, 64, 71, 93, 113, 116, 130, 131, 134, 149, 155, 164, 185, 187, 193, 293, 301, 332, 351, 453, 499, 539, 575, 592, 595, 596, 597, 614, 633, 656, 657, 662, 686, 692, 694, 695, 699, 703, 707, 713, 717, 723, 726, 733, 773, 788, 807, 821, 834, 836, 837, 838, 839, 840, 850, 852, 853, 856, 859, 863, 868], "doesn": [4, 56, 168, 200, 720, 852], "doi": [134, 163, 173], "domain": [288, 296, 309, 316, 831, 832, 833, 837, 843], "don": [21, 89, 241, 242, 558, 560, 561, 633, 714, 821, 863], "done": [6, 21, 156, 330, 681, 685, 692, 816, 817, 819, 834, 836, 837, 842, 843, 846, 850, 851, 852, 853], "donghuixu": 748, "donot_use_mm_for_euclid_dist": [431, 545], "dot": [9, 257, 258, 271, 272, 281, 282, 399, 450, 491, 492, 498, 514, 515, 532, 533, 706, 720, 726, 729, 750, 769, 791, 801, 804, 810, 812, 818, 837, 847, 852, 853, 856, 863], "dotpredictor": [726, 766, 810, 837], "dotproductpredictor": [726, 729, 766, 769, 810, 812], "doubl": [9, 22, 173, 243, 635, 687, 700, 706, 785, 791, 859], "down": [291, 303, 818, 850, 853], "download": [2, 21, 23, 132, 133, 134, 135, 136, 137, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 202, 289, 684, 685, 688, 732, 733, 772, 773, 815, 816, 817, 819, 821, 826, 829, 853, 859, 863], "downstream": [695, 726, 729, 730, 825, 846, 851], "doxygen": 21, "dozen": 22, "dpi": 862, "dramat": 853, "draw": [385, 826, 856, 859], "draw_circular": 859, "draw_networkx": 852, "draw_networkx_edg": [817, 862], "draw_networkx_nod": [817, 862], "drawn": [714, 819], "drive": 21, "driven": [860, 866], "drop": [4, 210, 213, 248, 293, 301, 303, 647, 652, 653, 656, 657, 662, 827, 862, 869], "drop_last": [4, 209, 210, 213, 214, 215, 216, 219, 220, 293, 301, 691, 713, 728, 737, 755, 756, 757, 758, 760, 768, 777, 797, 798, 799, 800, 801, 803, 811, 827, 838, 842, 846, 847, 852, 869], "drop_uneven_input": [293, 827, 869], "dropbox": 21, "dropedg": 13, "dropnod": 13, "dropout": [388, 392, 393, 394, 395, 398, 403, 405, 406, 411, 414, 415, 417, 418, 419, 422, 423, 437, 438, 442, 444, 445, 683, 691, 714, 719, 720, 730, 737, 777, 813, 819, 827, 853, 856, 863, 869], "dropouta": [437, 438], "dropouth": [437, 438], "dropout\u6982\u7387": 770, "drug": [52, 122, 561, 562, 679, 703, 747, 788, 859], "drugai": 748, "drug\u76f8\u4e92\u4f5c\u7528\u8fb9": 747, "drug\u8282\u70b9": 747, "dst": [34, 62, 63, 68, 110, 220, 243, 355, 390, 399, 400, 403, 405, 406, 410, 413, 419, 450, 451, 452, 554, 557, 610, 633, 634, 638, 673, 689, 699, 706, 707, 712, 715, 720, 723, 724, 726, 729, 735, 743, 750, 751, 755, 756, 758, 763, 764, 766, 769, 775, 784, 791, 793, 797, 798, 801, 804, 807, 808, 810, 812, 827, 836, 837, 839, 853, 863, 869], "dst_dtype": [723, 763, 807], "dst_field": 863, "dst_id": [59, 126, 250, 287, 687, 694, 780], "dst_id_field": 687, "dst_input": [724, 764, 808], "dst_node": [319, 633, 797, 807], "dst_node_id": 694, "dst_timestamp": 319, "dst_type": [131, 332, 425, 427], "dst_x": 712, "dstdata": [4, 9, 44, 68, 208, 221, 222, 383, 572, 633, 691, 693, 707, 716, 719, 723, 724, 737, 751, 755, 759, 760, 763, 764, 777, 779, 793, 797, 802, 803, 807, 808], "dstnode": [43, 68, 208, 222, 633, 716, 755, 759, 797, 802], "dsttype": [26, 68, 105, 226, 227, 383, 708, 724, 752, 764, 794, 808], "dt": 687, "dtype": [4, 10, 21, 47, 64, 75, 95, 96, 117, 126, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 246, 247, 250, 297, 302, 309, 323, 333, 337, 338, 353, 354, 383, 448, 474, 475, 538, 551, 552, 553, 558, 560, 572, 573, 583, 588, 601, 613, 638, 652, 653, 660, 666, 679, 681, 687, 689, 692, 694, 695, 700, 703, 713, 714, 720, 724, 725, 726, 735, 738, 744, 747, 764, 765, 766, 775, 778, 780, 785, 788, 804, 808, 809, 810, 818, 821, 826, 827, 829, 832, 833, 835, 838, 839, 846, 847, 850, 852, 853, 863, 869], "due": [22, 118, 119, 192, 291, 293, 309, 554, 639, 702, 714, 850, 863], "dump": [780, 847], "duplic": [116, 135, 136, 151, 152, 153, 186, 192, 289, 333, 337, 338, 428, 474, 538, 586, 641, 649, 669, 694, 821, 856], "dur": [850, 853], "dure": [5, 21, 89, 242, 293, 339, 342, 420, 430, 432, 557, 561, 562, 567, 631, 667, 692, 694, 695, 701, 706, 711, 717, 827, 832, 833, 835, 843, 846, 853, 856, 859, 862, 863], "duse_cuda": 815, "duse_libxsmm": 815, "duse_openmp": 815, "dvd": 137, "dwivedi": 818, "dx": [163, 395, 852, 863], "dynam": [402, 860, 862, 863, 864, 866], "e": [0, 4, 5, 9, 21, 22, 26, 41, 42, 48, 54, 62, 63, 70, 108, 112, 118, 119, 120, 122, 125, 126, 130, 131, 166, 174, 178, 186, 210, 213, 220, 240, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 291, 292, 332, 339, 341, 355, 383, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 428, 430, 432, 447, 450, 451, 452, 456, 473, 498, 499, 546, 547, 554, 555, 559, 560, 565, 567, 570, 572, 573, 608, 610, 611, 612, 624, 639, 640, 656, 657, 662, 671, 672, 674, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 705, 706, 707, 711, 712, 720, 726, 727, 728, 734, 742, 749, 750, 767, 774, 775, 783, 790, 791, 792, 815, 816, 817, 818, 819, 821, 822, 828, 834, 835, 836, 837, 843, 852, 853, 859, 863, 868], "e1": [297, 319, 325, 331], "e2": [297, 319, 325, 331], "e2d": 863, "e2n": 668, "e_": [389, 399, 400, 404, 405, 406, 408, 409, 411, 412, 413, 416, 417, 418, 419, 828, 836, 852, 853], "e_add_u": 5, "e_add_v": 5, "e_attr": 125, "e_div_u": 5, "e_div_v": 5, "e_dot_u": 5, "e_dot_v": 5, "e_feat": [164, 166, 456], "e_ij": 390, "e_mul_u": 5, "e_mul_v": 5, "e_sub_u": 5, "e_sub_v": [5, 9], "e_t": [425, 426], "e_typ": [157, 158, 191], "e_weight": 6, "each": [0, 4, 5, 6, 7, 14, 20, 22, 34, 35, 36, 37, 39, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 78, 87, 88, 92, 93, 94, 100, 101, 102, 116, 117, 122, 123, 124, 126, 130, 131, 135, 136, 141, 142, 147, 150, 151, 152, 153, 154, 157, 158, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 191, 195, 197, 198, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 232, 235, 239, 240, 241, 242, 243, 246, 250, 287, 290, 293, 297, 299, 301, 302, 303, 305, 306, 308, 310, 317, 319, 325, 327, 330, 331, 332, 333, 337, 338, 339, 341, 351, 352, 355, 381, 382, 383, 385, 386, 387, 388, 389, 391, 395, 397, 399, 402, 403, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 419, 420, 422, 423, 430, 431, 432, 434, 436, 437, 438, 439, 443, 447, 448, 449, 453, 455, 457, 474, 500, 501, 538, 539, 545, 548, 549, 550, 553, 554, 556, 558, 559, 560, 561, 562, 563, 564, 567, 568, 570, 571, 572, 573, 633, 638, 639, 641, 645, 648, 649, 656, 664, 665, 670, 673, 675, 676, 677, 678, 679, 683, 684, 687, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 702, 703, 705, 708, 710, 711, 712, 715, 717, 718, 720, 723, 724, 725, 726, 727, 728, 729, 730, 775, 780, 785, 803, 810, 812, 817, 818, 819, 821, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 843, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 869], "earli": [166, 192, 726, 810], "earlier": [291, 692, 851, 859], "eas": [21, 22, 305], "easi": [21, 22, 336, 559, 685, 695, 729, 814, 821], "easier": [70, 693, 695, 837], "easili": [122, 229, 230, 710, 715, 718, 726, 825, 828, 834, 853], "ec2": [14, 843], "ecosystem": 821, "ed": [856, 863], "edata": [4, 5, 9, 20, 27, 30, 34, 47, 51, 53, 70, 95, 96, 108, 114, 117, 118, 119, 122, 125, 126, 128, 145, 147, 157, 158, 164, 166, 174, 177, 179, 191, 195, 208, 214, 216, 219, 221, 223, 246, 249, 250, 333, 337, 338, 355, 424, 447, 456, 474, 538, 549, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 565, 569, 570, 633, 638, 639, 640, 641, 643, 648, 649, 652, 653, 654, 655, 656, 657, 660, 662, 665, 666, 668, 669, 670, 671, 672, 673, 674, 679, 681, 687, 689, 692, 693, 694, 695, 700, 703, 707, 720, 726, 727, 729, 735, 738, 739, 744, 747, 751, 756, 758, 766, 767, 769, 775, 778, 779, 780, 785, 788, 792, 793, 798, 801, 804, 810, 812, 834, 835, 836, 837, 839, 850, 851, 862], "edata_develop": 355, "edata_dict": 355, "edata_follow": 355, "edata_pars": [148, 687], "edata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 246, 247, 333, 336, 337, 338, 342, 474, 475, 538, 547, 551, 552, 553, 569, 638, 652, 653, 660, 666, 679, 687, 694, 695, 699, 700, 702, 728, 743, 744, 746, 784, 785, 787, 811, 835, 838, 839], "edeg": [45, 79, 82, 105], "edg": [0, 4, 5, 6, 7, 9, 13, 21, 25, 26, 27, 30, 31, 32, 34, 36, 39, 41, 46, 47, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 295, 296, 297, 300, 303, 305, 308, 309, 310, 312, 313, 316, 317, 318, 319, 322, 325, 331, 332, 333, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 355, 383, 385, 387, 388, 389, 390, 393, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 447, 450, 451, 452, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 679, 681, 683, 687, 689, 691, 693, 694, 695, 697, 698, 705, 706, 707, 708, 710, 713, 715, 716, 718, 720, 722, 724, 725, 728, 729, 730, 735, 744, 746, 747, 748, 750, 751, 756, 758, 765, 766, 769, 775, 779, 780, 785, 787, 788, 790, 791, 792, 793, 797, 798, 801, 804, 809, 810, 811, 812, 814, 816, 817, 818, 819, 821, 825, 826, 827, 829, 831, 832, 833, 834, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 854, 856, 862, 866, 868], "edge_attent": 853, "edge_attr": [179, 249, 640], "edge_attr_dtyp": 780, "edge_attr_schem": [4, 75], "edge_attribut": [297, 325], "edge_classif": 309, "edge_color": 852, "edge_data": [309, 687, 695, 780], "edge_dir": [214, 216, 241, 242, 561, 562, 563, 564], "edge_drop": 388, "edge_feat": [177, 240, 390, 395, 400, 401, 403, 409, 411, 417, 694, 695, 739, 780], "edge_feat_0": 833, "edge_feat_0_path": 833, "edge_feat_1": 833, "edge_feat_1_path": 833, "edge_feat_nam": [29, 117, 649, 654, 665], "edge_feat_s": [138, 395, 401, 417, 444], "edge_featur": [295, 301, 305, 712, 826, 829, 839], "edge_feature_kei": 295, "edge_follow_feat_0": 832, "edge_follow_feat_0_path": 832, "edge_follow_feat_1": 832, "edge_follow_feat_1_path": 832, "edge_func": 416, "edge_gat": 403, "edge_id": [32, 233, 305], "edge_id_attr_nam": [125, 249], "edge_in_feat": 390, "edge_index": 695, "edge_label": [25, 316, 726, 756, 766, 798, 810], "edge_like_feat_0": 832, "edge_like_feat_0_path": 832, "edge_like_feat_1": 832, "edge_like_feat_1_path": 832, "edge_map": [240, 695, 739, 780], "edge_mask": [424, 425, 426, 755, 797], "edge_permute_algo": [98, 554], "edge_pred_graph": [726, 766, 810], "edge_predict": [756, 798], "edge_repr": 859, "edge_split": [679, 692, 738, 778, 847], "edge_subgraph": [157, 158, 191, 474, 713, 755, 756, 758, 797, 798, 801, 835], "edge_timestamp_attr_nam": 297, "edge_trainer_id": 232, "edge_typ": [131, 297, 305, 332, 693, 695, 703, 723, 747, 763, 780, 788, 807], "edge_type_id": 694, "edge_type_subgraph": [26, 475, 703, 747, 788], "edge_type_to_id": [297, 325, 832], "edge_udf": [20, 670, 671, 672, 673, 674], "edge_upd": 444, "edge_weight": [6, 145, 214, 388, 400, 404, 405, 407, 408, 413, 419, 420, 421, 426, 428, 727, 767], "edgebatch": [20, 53, 706, 750, 791], "edgedataload": [692, 738, 756, 758, 778, 798, 799, 801, 847], "edgedataview": 4, "edgelist": 862, "edgepredictor": 847, "edges1": 383, "edges2": 383, "edges3": 383, "edges_0": 687, "edges_1": 687, "edges_b": 862, "edges_data": 839, "edges_dst": 839, "edges_field": 863, "edges_gener": [91, 540], "edges_group": 839, "edges_of_id": 839, "edges_path": 833, "edges_perm": 554, "edges_src": 839, "edges_to_exclud": 310, "edges_with_feature_on": 53, "edgeweightnorm": [388, 407, 413, 420, 421, 727, 767], "edist": 389, "edu": [145, 175, 181, 184], "educ": 851, "ee": 863, "efeat": [390, 400, 403, 409, 416, 444, 694, 695], "effect": [10, 210, 213, 244, 287, 392, 393, 394, 418, 454, 568, 572, 573, 656, 657, 662, 690, 818, 863], "effici": [4, 5, 9, 22, 34, 73, 93, 94, 100, 113, 122, 126, 131, 209, 240, 249, 250, 287, 332, 339, 385, 427, 429, 430, 432, 563, 567, 639, 695, 702, 705, 716, 720, 723, 728, 825, 830, 836, 843, 850, 851, 852, 853, 856, 859, 862, 863], "effort": [851, 868], "eg": [703, 747, 788], "egat": 400, "egat_model": [400, 403], "egnn": 401, "egt": 444, "eid": [4, 20, 26, 51, 55, 61, 88, 89, 95, 96, 125, 130, 211, 223, 233, 234, 240, 241, 242, 246, 249, 333, 337, 338, 350, 355, 424, 474, 538, 551, 552, 554, 558, 560, 561, 562, 563, 564, 569, 633, 638, 641, 673, 693, 695, 703, 747, 755, 758, 779, 780, 788, 797, 801, 835, 837, 863], "eid2localeid": 4, "eid2partid": 4, "eid_attr": 640, "eid_het2hom": 693, "eid_hom2het": 693, "eid_offset": 693, "eid_rang": 780, "eids_dict": [758, 801], "eig": 395, "eig_vec": 395, "eigenvalu": [340, 341, 391, 396, 446, 659], "eigenvector": [340, 395, 446, 659], "eight": [171, 694], "eigval": [446, 659], "eigval_nam": [446, 659], "eigvec": [446, 659], "eisfischerh\u00fctt": 863, "either": [9, 21, 26, 32, 34, 62, 63, 73, 91, 92, 93, 94, 100, 113, 131, 182, 210, 214, 216, 220, 223, 241, 242, 305, 313, 315, 316, 332, 339, 383, 431, 545, 559, 561, 562, 563, 564, 567, 592, 595, 596, 597, 599, 633, 695, 698, 702, 716, 831, 834, 837, 846, 859], "el": [450, 706, 750, 791], "electron": [178, 179], "element": [0, 4, 5, 22, 31, 32, 34, 35, 36, 37, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 93, 94, 100, 119, 121, 122, 214, 216, 219, 220, 240, 241, 242, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 297, 303, 305, 308, 310, 325, 327, 332, 333, 337, 338, 340, 341, 351, 352, 386, 390, 432, 474, 500, 538, 539, 549, 550, 560, 561, 562, 564, 575, 576, 579, 580, 591, 592, 593, 598, 604, 611, 612, 618, 624, 628, 639, 643, 644, 692, 717, 718, 723, 818, 819, 837, 838], "elementwis": [450, 605, 606, 609, 615, 616, 617, 627], "elif": [716, 723, 759, 763, 802, 807], "elimin": 130, "ell": 647, "els": [73, 389, 422, 423, 424, 425, 426, 428, 681, 687, 712, 714, 716, 717, 720, 723, 724, 755, 757, 759, 763, 764, 797, 800, 802, 804, 807, 808, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 851, 853, 859, 863, 868, 869], "elsewher": 613, "elu": [444, 720, 804, 853], "emap": 846, "emb": [4, 10, 382, 426, 428, 453, 692, 738, 778, 851, 856, 859, 863], "emb_dim": [381, 385], "emb_stat": 4, "embed": [5, 13, 137, 149, 158, 180, 182, 184, 185, 191, 314, 381, 382, 385, 426, 428, 443, 444, 447, 448, 451, 452, 453, 683, 691, 692, 693, 695, 715, 729, 730, 813, 826, 846, 847, 850, 851, 852, 853, 856, 863], "embedding_dim": [4, 382, 443, 453, 683], "emit": [726, 859], "emphas": 837, "empir": [14, 120, 182], "emploi": [20, 303, 308, 427, 428, 429, 719, 818, 853, 863], "employ": 863, "empti": [32, 56, 131, 204, 236, 287, 303, 308, 332, 344, 349, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 714, 723, 832, 833, 850, 853, 863], "en": [843, 863], "enabl": [9, 23, 426, 428, 706, 713, 718, 720, 804, 815, 825, 827, 859, 863, 869], "enable_cpu_affin": [842, 843], "enc": 863, "encapsul": 724, "enclos": [243, 687], "encod": [13, 135, 136, 139, 159, 165, 171, 340, 438, 443, 446, 447, 448, 449, 455, 548, 631, 659, 663, 667, 698, 818, 835, 847, 851, 852, 854, 863, 864, 866], "encompass": [303, 305, 308], "encount": [850, 853], "encourag": [427, 429, 729], "end": [4, 20, 22, 27, 114, 164, 217, 240, 291, 340, 350, 385, 389, 439, 556, 568, 631, 659, 667, 673, 681, 695, 702, 717, 722, 726, 728, 730, 755, 787, 797, 803, 810, 811, 813, 819, 820, 826, 827, 828, 829, 832, 833, 835, 836, 837, 838, 839, 851, 852, 853, 856, 859, 863], "end_epoch_tim": 715, "end_tim": 164, "endl": 22, "endpoint": [4, 34, 48, 53, 100, 116, 474, 475, 632, 641, 852], "energi": [178, 179], "enforc": 846, "english": [149, 182, 185, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813], "enhanc": [21, 310, 817, 854, 864, 866], "enjoi": [9, 21, 818], "enough": [14, 695, 838], "enrich": 853, "ensur": [131, 305, 317, 407, 692, 694, 712, 846, 868], "entail": 859, "enter": 70, "enthalpi": [178, 179], "entir": [3, 9, 45, 79, 82, 105, 210, 288, 294, 296, 298, 315, 691, 695, 712, 713, 716, 728, 825, 837, 838, 846, 853], "entiti": [132, 133, 144, 158, 161, 170, 305, 451, 452, 697, 698, 729, 782, 851, 854, 866], "entri": [126, 164, 177, 250, 326, 442, 445, 563, 613, 699, 727, 784, 819, 821, 852], "entropi": [245, 424, 425, 426, 428, 473, 729, 812, 837, 851, 853, 862], "entropy_list": 862, "enumer": [300, 691, 693, 699, 714, 715, 719, 720, 737, 757, 777, 800, 804, 826, 827, 829, 846, 847, 856, 863, 869], "env": [826, 829, 832, 833, 850, 853], "environ": [14, 21, 293, 694, 815, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 843, 850, 851, 852, 853, 856, 859, 862, 868, 869], "enzym": [25, 168, 186], "ep": [4, 10, 245, 404, 473, 656, 657, 662, 842, 863], "epoch": [4, 210, 213, 381, 424, 425, 426, 427, 428, 689, 691, 692, 715, 719, 720, 726, 728, 729, 730, 735, 737, 740, 766, 768, 769, 770, 775, 777, 778, 781, 804, 810, 811, 812, 813, 816, 817, 818, 819, 822, 826, 827, 829, 834, 836, 837, 838, 842, 846, 847, 850, 851, 852, 853, 856, 863, 868, 869], "epoch_end": [827, 869], "epoch_start": [827, 869], "epsilon": [178, 179, 395, 408, 409], "epsilon_": [178, 179], "eq": [423, 856], "equal": [128, 129, 139, 173, 182, 205, 219, 245, 297, 303, 308, 323, 355, 387, 422, 456, 473, 500, 501, 563, 608, 700, 755, 797, 843, 853, 862], "equat": [388, 389, 406, 407, 420, 421, 450, 454, 705, 819, 850, 851, 852, 856], "equip": 9, "equival": [26, 73, 222, 223, 224, 225, 246, 251, 252, 263, 264, 265, 266, 290, 297, 323, 326, 333, 383, 388, 397, 402, 407, 413, 420, 421, 431, 538, 545, 590, 605, 607, 609, 614, 615, 616, 625, 626, 627, 643, 644, 671, 674, 706, 707, 712, 717, 727, 821, 835, 836, 852, 856], "equivari": [401, 852], "er": [706, 750, 791], "erdos_renyi_graph": 456, "error": [48, 89, 109, 116, 131, 287, 293, 332, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 631, 632, 633, 667, 679, 695, 701, 745, 755, 786, 797, 826, 827, 829, 832, 833, 859, 869], "errorbar": 862, "especi": [21, 125, 249, 713, 714, 828, 851], "essenc": 853, "essenti": [20, 22, 240, 457, 716, 815, 818, 828, 836, 846, 850, 859], "establish": 4, "estim": [427, 429, 713, 729, 769, 812, 834, 835, 836, 837, 838, 839, 868], "et": [72, 135, 136, 556, 816, 818, 828, 834, 836, 850, 856], "eta": [245, 473], "etc": [0, 1, 4, 11, 21, 125, 162, 249, 355, 685, 694, 695, 706, 711, 712, 716, 718, 722, 728, 821, 837, 846, 862], "ether": 4, "etyp": [4, 26, 27, 29, 30, 31, 32, 33, 34, 36, 39, 47, 48, 50, 51, 53, 55, 57, 60, 61, 62, 63, 80, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100, 107, 109, 113, 114, 117, 118, 125, 126, 128, 130, 208, 214, 216, 219, 220, 223, 226, 227, 232, 240, 241, 247, 297, 320, 321, 325, 345, 347, 383, 385, 393, 412, 415, 418, 425, 426, 427, 476, 546, 549, 551, 553, 555, 557, 561, 562, 564, 570, 629, 632, 633, 638, 639, 640, 641, 643, 647, 648, 649, 664, 669, 687, 689, 693, 694, 695, 703, 708, 712, 715, 716, 717, 724, 726, 728, 729, 730, 735, 747, 752, 755, 756, 758, 759, 760, 764, 766, 768, 769, 770, 775, 779, 780, 788, 794, 797, 798, 801, 802, 803, 808, 810, 811, 812, 813, 832, 851], "etype2id": 693, "etype2id_map": 693, "etype_attr": 640, "etype_count": 639, "etype_dict": 73, "etype_field": 638, "etype_id": 780, "etype_sort": 241, "etype_weight": [425, 427], "etypes_list": 240, "etypes\u662f\u4e00\u4e2a\u5217\u8868": 768, "eu": 48, "euclidean": [339, 430, 431, 432, 545, 567, 859], "ev": [48, 178, 179], "eval": [730, 770, 813, 817, 818, 819, 826, 827, 829, 850, 859, 863, 868, 869], "eval_dataload": 826, "evalu": [137, 171, 180, 182, 188, 197, 205, 695, 696, 710, 714, 730, 770, 813, 816, 817, 818, 822, 834, 837, 838, 850, 853, 859, 863, 868], "even": [4, 210, 303, 308, 350, 551, 692, 710, 825, 852, 856], "evenli": [232, 239, 846], "event": [164, 166], "everi": [0, 4, 10, 21, 117, 119, 121, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 214, 215, 216, 219, 241, 242, 303, 308, 332, 341, 355, 383, 406, 424, 425, 426, 427, 428, 429, 555, 560, 561, 562, 564, 692, 695, 699, 714, 726, 728, 822, 829, 835, 838, 846, 859, 860, 863, 866, 868], "everyth": [21, 291, 846], "evid": 853, "evolut": [859, 862], "evolv": 852, "eweight": [126, 250, 424, 425, 727, 765, 767, 792], "eweight_nam": [30, 126, 250, 548, 655, 656, 657, 662, 663, 666], "eweight\ub97c": 792, "exact": [710, 827, 869], "exactli": [8, 117, 297, 633, 692, 712, 720, 819, 837, 846, 847, 853, 859], "exampl": [0, 3, 4, 5, 6, 9, 10, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 235, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 325, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 472, 473, 474, 475, 476, 501, 538, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 632, 633, 634, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 685, 686, 687, 689, 690, 691, 692, 693, 694, 696, 698, 699, 700, 702, 703, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 723, 724, 725, 726, 727, 728, 729, 730, 772, 775, 801, 811, 813, 814, 816, 817, 818, 819, 820, 824, 825, 826, 828, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 845, 846, 847, 849, 850, 851, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 867, 868, 871], "examplelay": 456, "exceed": [447, 710], "except": [4, 171, 211, 212, 340, 402, 633, 638, 659, 692, 694, 712, 715, 716, 717, 730, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 853, 869], "exception": 825, "exchang": [305, 846], "exclud": [220, 226, 241, 242, 310, 318, 322, 557, 559, 561, 562, 712, 718, 756, 798], "exclude_edg": [241, 242, 310, 318, 561, 562, 711], "exclude_eid": 220, "exclude_seed_edg": [711, 712, 715, 718, 826], "exclude_self": [116, 339, 430, 432, 567], "exclude_self_loop": [226, 557], "excluded_edg": [561, 562], "exclus": [216, 220, 293, 560, 868], "execut": [89, 156, 293, 353, 692, 824, 827, 841, 845, 849, 855, 858, 861, 862, 865, 867, 869, 871], "exhaust": 729, "exhibit": 853, "exist": [0, 4, 21, 27, 28, 114, 115, 117, 142, 143, 186, 200, 226, 232, 239, 299, 318, 336, 349, 350, 551, 557, 581, 628, 632, 641, 646, 656, 657, 662, 681, 690, 692, 698, 712, 729, 736, 776, 814, 816, 817, 825, 834, 836, 837, 846, 851, 856, 859], "exist_ok": [832, 833], "exit": [70, 850], "exmapl": 6, "exp": [355, 389, 390, 410, 449, 570, 571, 821, 853, 859, 863], "expand": [337, 338, 427, 429, 723, 807, 859], "expand_as_pair": [722, 723, 762, 763, 806, 807], "expans": [337, 338], "expect": [109, 120, 199, 200, 313, 404, 420, 703, 788, 816, 850, 851, 863], "expens": 66, "experi": [14, 173, 548, 663, 720, 834, 839, 853], "experiment": [4, 6, 10, 392, 393, 394, 453], "explain": [141, 424, 425, 426, 427, 428, 429, 684, 705, 814, 850, 853], "explain_graph": [424, 425, 426, 427, 428, 429], "explain_nod": [424, 425, 426, 428], "explan": [1, 3, 11, 142, 143, 189, 190, 209, 217, 220, 222, 223, 224, 225, 424, 425, 426, 427, 428, 429, 694, 712, 717, 850, 851, 852, 853, 856, 859, 862, 863], "explanatori": [426, 428], "explic": 4, "explicit": [702, 821, 859], "explicitli": [287, 332, 692, 693, 702, 787, 821, 827, 832, 833, 859], "exploit": [22, 427, 429, 851], "explor": [427, 429, 683, 818, 857, 859, 866, 868], "explos": [214, 297, 303, 561], "expon": 616, "exponenti": [616, 863], "export": [21, 694, 780, 815, 843, 846], "expos": [20, 22, 825], "express": [5, 697, 726, 729, 836, 854, 862, 866], "extend": [5, 153, 210, 389, 427, 429, 715, 729, 827, 851, 854, 856, 866], "extens": [183, 815, 826, 827, 829, 832, 833, 863], "extent": [178, 179], "extern": [2, 31, 413, 689, 697, 702], "extra": [22, 174, 383, 423, 555, 641, 687, 718, 818, 842, 846, 851], "extra_cached_hop": [351, 539], "extract": [1, 13, 95, 96, 159, 162, 173, 201, 220, 234, 246, 247, 289, 305, 333, 337, 338, 474, 475, 538, 551, 552, 569, 686, 695, 713, 724, 730, 755, 773, 797, 813, 816, 817, 819, 826, 829, 835, 851, 852], "extract_arch": [686, 733, 773], "extrem": 852, "ey": 837, "e\u662f\u8fb9\u7684\u6570\u91cf": 767, "f": [4, 9, 10, 293, 395, 400, 410, 411, 424, 425, 427, 429, 453, 689, 691, 693, 712, 714, 715, 716, 717, 719, 720, 723, 726, 728, 730, 735, 737, 756, 757, 758, 759, 760, 763, 766, 768, 770, 775, 777, 798, 800, 801, 802, 803, 804, 807, 810, 811, 813, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 834, 836, 837, 838, 846, 847, 850, 851, 853, 856, 859, 862, 863, 868, 869], "f1": [383, 679, 842, 843, 853], "f1_": 853, "f1r8cq": 863, "f1sgod": 863, "f2": [383, 679, 842, 843], "f3": [842, 843], "f4": [842, 843], "f5": 842, "f9065fa7": 156, "f_": [389, 395, 400, 408, 409, 414, 416, 434, 856, 859], "f_r": [724, 764, 808], "f_size": 862, "face": 22, "facilit": 305, "fact": [700, 712, 850, 859], "factor": [395, 417, 449, 720, 851], "factori": [430, 431, 432], "factor\ub97c": 804, "faculti": [155, 187, 193], "fail": [21, 817, 818, 819], "failur": 200, "faithfulli": 186, "fake": 159, "fakenew": 159, "fall": [4, 44, 104, 297, 300, 310, 313, 351, 539, 693], "fallback": 298, "fallback_featur": 298, "fals": [4, 10, 25, 31, 48, 57, 58, 65, 66, 69, 70, 95, 96, 99, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 235, 236, 238, 240, 241, 242, 246, 287, 291, 293, 297, 301, 303, 308, 309, 316, 317, 322, 324, 327, 333, 336, 339, 340, 342, 351, 352, 386, 387, 392, 393, 395, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 413, 415, 416, 417, 418, 420, 422, 423, 426, 427, 428, 429, 430, 431, 432, 434, 442, 445, 446, 448, 450, 455, 474, 538, 539, 541, 543, 544, 545, 551, 552, 555, 557, 558, 560, 561, 562, 563, 564, 567, 568, 569, 586, 631, 632, 633, 639, 641, 643, 644, 645, 648, 649, 659, 660, 665, 667, 683, 685, 687, 688, 689, 691, 693, 694, 695, 703, 713, 719, 728, 732, 734, 735, 737, 747, 755, 756, 757, 758, 760, 768, 772, 774, 775, 777, 779, 788, 797, 798, 799, 800, 801, 803, 811, 816, 817, 818, 819, 821, 826, 827, 829, 831, 832, 833, 834, 838, 842, 846, 847, 851, 852, 853, 856, 859, 862, 863, 868, 869], "famili": [814, 859, 860, 866], "familiar": [716, 729, 846], "famou": 817, "fanout": [214, 216, 219, 241, 242, 297, 300, 303, 308, 313, 392, 393, 394, 561, 562, 563, 692, 693, 711, 719, 738, 755, 778, 779, 797, 826], "faq": 815, "far": [720, 851, 853, 859], "farthest_point_sampl": 6, "fashion": [691, 826], "fast": [22, 125, 138, 139, 140, 249, 339, 391, 396, 430, 432, 567, 699], "fast_neg": 381, "faster": [148, 168, 210, 226, 339, 386, 415, 418, 430, 432, 557, 567, 720, 818, 832, 833], "favor": 837, "fb15k": [157, 158], "fb15k237": 157, "fb15k237dataset": [689, 735, 775], "fc": [403, 405, 406, 410, 426, 428, 853], "fc_neigh": [719, 722, 723, 762, 763, 806, 807], "fc_pool": [722, 723, 762, 763, 806, 807], "fc_self": [719, 722, 723, 762, 763, 806, 807], "feat": [4, 10, 25, 43, 46, 51, 64, 71, 74, 103, 128, 129, 135, 136, 137, 138, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 217, 219, 236, 309, 316, 345, 346, 347, 348, 384, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 451, 452, 453, 456, 549, 550, 570, 571, 629, 630, 639, 643, 644, 649, 666, 681, 687, 689, 692, 693, 695, 707, 711, 712, 714, 715, 717, 718, 719, 720, 723, 728, 729, 730, 735, 738, 751, 763, 768, 769, 770, 775, 778, 779, 793, 804, 807, 811, 812, 813, 816, 817, 818, 819, 826, 827, 829, 832, 833, 834, 836, 837, 839, 846, 847, 850, 853, 868, 869], "feat0": 129, "feat1": [125, 128, 249, 649, 693, 779], "feat2": [125, 249], "feat3": 125, "feat_0": [407, 832, 833], "feat_1": [832, 833], "feat_a": 852, "feat_b": 852, "feat_data": 316, "feat_dict": [708, 752, 794], "feat_dim": [447, 683], "feat_drop": [392, 394, 398, 403, 405, 406, 419], "feat_dst": [707, 719, 723, 763, 807], "feat_dst\uc758": 793, "feat_list": 454, "feat_mask": [424, 425], "feat_nam": [288, 296, 395, 446, 659, 663, 667, 703, 747, 788], "feat_nn": 434, "feat_siz": [139, 424, 428, 429, 442, 444, 445, 683], "feat_src": [707, 719, 723, 763, 807], "feat_src\uc640": 793, "featmask": 13, "featur": [0, 4, 5, 9, 13, 19, 20, 26, 27, 28, 30, 34, 35, 43, 44, 46, 47, 51, 53, 54, 56, 64, 70, 71, 73, 74, 75, 77, 91, 92, 93, 94, 95, 96, 100, 103, 104, 108, 113, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 208, 210, 214, 216, 217, 219, 221, 222, 223, 224, 225, 234, 236, 238, 240, 241, 242, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 295, 296, 298, 304, 305, 309, 310, 314, 315, 316, 333, 336, 337, 338, 339, 342, 349, 350, 355, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 545, 549, 550, 551, 552, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 632, 633, 635, 636, 637, 638, 639, 640, 641, 643, 644, 648, 649, 654, 665, 666, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 681, 683, 685, 689, 691, 692, 693, 694, 695, 697, 698, 699, 701, 703, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 726, 727, 728, 729, 730, 735, 745, 756, 758, 760, 765, 766, 769, 770, 775, 780, 785, 786, 788, 794, 798, 800, 801, 802, 803, 804, 807, 809, 810, 811, 812, 813, 816, 817, 818, 821, 825, 826, 827, 828, 829, 830, 831, 834, 836, 838, 839, 843, 846, 850, 851, 852, 853, 856, 859, 862, 864, 866, 868, 869], "feature_data": [309, 832, 833], "feature_nam": [159, 222, 223, 224, 225, 288, 296, 305, 780], "feature_sotr": 316, "feature_stor": 295, "featurefetch": 291, "featureless": 695, "features_to_us": 389, "featurestor": [288, 292, 295], "febd69": 859, "fed": [108, 417, 426, 428], "fedora": 815, "feed": [437, 438, 681, 715, 717, 726, 818, 837, 851, 856, 863], "feed_forward": 863, "feedback": [729, 769, 812], "feedforward": [445, 683], "feel": [21, 821], "fell": 22, "fetch": [7, 21, 208, 222, 223, 224, 225, 291, 295, 715, 718, 719, 825, 829, 853], "fetch_featur": [295, 711, 712, 714, 715, 717, 718, 719, 826, 827, 829, 869], "fetcher": [7, 291, 295, 825], "few": [1, 4, 14, 22, 633, 691, 692, 710, 716, 730, 846, 847, 859, 863], "fewer": [171, 293, 297, 303, 561, 828, 862], "ffn": [437, 438, 863], "ffn1": 818, "ffn2": 818, "field": [21, 22, 25, 27, 28, 114, 115, 146, 151, 152, 168, 169, 184, 186, 192, 240, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 309, 310, 395, 549, 638, 643, 644, 687, 689, 694, 706, 831, 832, 833, 852, 856, 863], "field_of_studi": 780, "fig": [817, 859, 862], "fig2": 862, "figsiz": [852, 862], "figur": [691, 695, 703, 710, 818, 819, 852, 856, 862, 863], "file": [4, 21, 22, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 206, 209, 231, 235, 236, 237, 238, 240, 292, 309, 344, 565, 684, 686, 689, 692, 694, 695, 696, 703, 726, 730, 733, 773, 780, 815, 816, 817, 819, 824, 826, 829, 831, 834, 836, 837, 839, 841, 842, 845, 846, 847, 849, 850, 851, 852, 853, 855, 858, 861, 865, 867, 871], "file_nam": 687, "file_path": [686, 733, 773], "file_system": [827, 869], "filelock": [826, 827, 829, 832, 833], "filenam": [199, 204, 344, 565], "filesystem": 236, "fill": [27, 28, 93, 113, 114, 115, 117, 447, 568, 610, 611, 612, 624, 649, 859], "fill_data": [29, 117, 649], "film": 134, "filter": [53, 54, 163, 297, 300, 313, 387, 389, 390, 391, 396, 399, 402, 403, 405, 406, 407, 410, 413, 420], "filter_edg": 863, "filter_nod": 863, "final": [6, 22, 132, 133, 144, 170, 240, 389, 417, 446, 450, 689, 706, 707, 710, 724, 728, 730, 750, 791, 815, 832, 833, 851, 852, 853, 856, 863, 868], "final_ft": [706, 750, 791], "final_tmp": [426, 428], "find": [14, 21, 26, 55, 130, 131, 318, 332, 427, 429, 557, 696, 723, 729, 816, 817, 818, 819, 835, 836, 837, 839, 851, 852, 853, 859, 863], "find_edg": [4, 89, 758, 801], "fine": [89, 313, 714, 821, 843, 856], "fingerprint": 846, "finish": [21, 816, 817, 819, 826, 832, 833, 846, 868], "first": [4, 9, 21, 22, 27, 51, 56, 73, 118, 119, 121, 123, 124, 125, 126, 130, 131, 137, 139, 140, 141, 162, 171, 180, 181, 182, 184, 188, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 229, 230, 240, 245, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 297, 302, 326, 332, 337, 338, 339, 355, 383, 389, 402, 413, 420, 424, 430, 432, 439, 473, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 554, 558, 559, 560, 563, 567, 614, 624, 633, 638, 639, 649, 683, 688, 692, 693, 695, 703, 713, 714, 716, 722, 723, 728, 730, 815, 816, 817, 821, 827, 828, 832, 833, 835, 837, 838, 839, 842, 846, 847, 850, 851, 852, 853, 856, 859, 863, 864, 866, 868, 869], "first_label": 299, "first_se": 299, "firstli": 818, "fission": 167, "fit": [210, 309, 381, 408, 409, 416, 695, 710, 713, 725, 828, 830, 835, 836], "five": [137, 141, 142, 143, 155, 187, 193, 687, 831, 856], "fix": [197, 198, 205, 214, 216, 217, 351, 411, 539, 561, 711, 863], "flag": [31, 57, 58, 246, 334, 395, 417, 455, 474, 680, 815, 846], "flatten": [559, 720, 804], "flexibl": [20, 633, 687, 825, 863], "flickr": 160, "flickrdataset": 194, "flip": [631, 667], "flist": 73, "float": [4, 9, 10, 22, 95, 96, 117, 120, 138, 139, 140, 142, 143, 161, 162, 163, 178, 183, 189, 190, 198, 205, 241, 242, 244, 245, 297, 303, 308, 335, 341, 343, 355, 381, 387, 388, 389, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 408, 409, 411, 415, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 437, 438, 442, 444, 445, 455, 472, 473, 545, 551, 552, 553, 557, 558, 560, 561, 562, 563, 606, 617, 635, 636, 637, 646, 649, 652, 653, 654, 656, 657, 662, 666, 673, 678, 687, 689, 700, 706, 719, 725, 758, 765, 775, 785, 791, 801, 809, 816, 817, 818, 827, 834, 836, 838, 852, 856, 863, 869], "float16": [9, 637, 706, 720, 791, 804], "float16\uc744": 791, "float32": [4, 9, 10, 47, 75, 95, 96, 117, 146, 147, 165, 168, 169, 174, 219, 247, 289, 354, 389, 399, 400, 403, 405, 406, 416, 475, 551, 552, 553, 564, 585, 636, 660, 666, 679, 689, 692, 693, 700, 703, 714, 735, 738, 744, 747, 775, 778, 779, 785, 788, 821, 835, 838], "float64": [126, 250, 583, 635, 687, 832, 833, 839], "floattensor": [441, 559, 560, 561, 562, 564, 707, 751, 793, 852], "flow": [127, 131, 167, 208, 210, 211, 212, 685, 712, 715, 717, 797, 798, 801, 803, 828, 829, 863], "flush": 720, "fly": [392, 393, 394, 859], "fmt": 32, "fn": [5, 9, 20, 21, 34, 73, 91, 92, 93, 94, 100, 113, 121, 424, 425, 427, 456, 670, 671, 672, 673, 674, 675, 676, 677, 678, 706, 707, 708, 716, 720, 723, 726, 727, 729, 750, 751, 752, 759, 763, 766, 767, 769, 791, 792, 793, 794, 802, 804, 807, 810, 812, 836, 837, 850, 851, 852, 856, 862, 863], "fn_": 853, "focu": [842, 843, 856, 859], "focus": [689, 851, 852, 854, 863, 866], "folder": [22, 156, 694, 695, 703, 788, 846], "follow": [0, 3, 4, 5, 6, 9, 20, 21, 22, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 140, 141, 142, 143, 148, 156, 178, 179, 182, 189, 190, 204, 209, 214, 216, 219, 220, 229, 230, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 295, 299, 301, 309, 332, 333, 337, 338, 339, 342, 343, 344, 349, 355, 382, 383, 384, 389, 400, 402, 404, 407, 413, 414, 415, 424, 425, 430, 431, 432, 433, 434, 435, 436, 440, 441, 451, 452, 455, 456, 472, 474, 475, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 541, 543, 544, 545, 553, 555, 559, 560, 561, 562, 563, 567, 569, 570, 571, 572, 573, 575, 611, 612, 632, 633, 634, 638, 639, 640, 645, 648, 649, 654, 660, 664, 665, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 702, 703, 705, 707, 710, 711, 712, 713, 714, 715, 716, 717, 720, 722, 725, 726, 727, 728, 729, 730, 755, 756, 765, 797, 798, 809, 815, 818, 819, 821, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 839, 842, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "follow_dst": [725, 765, 809], "follow_edg": 832, "follow_edges_path": 832, "follow_src": [725, 765, 809], "followed_bi": 712, "follows\uc640": 788, "foo": 70, "footnot": [842, 843], "footprint": [695, 707], "foral": [394, 410, 415, 419, 498, 723, 763, 807, 836], "forc": [232, 239, 309, 842, 859, 863], "force_even": [232, 239, 691, 737, 777, 847], "force_preprocess": 309, "force_reload": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 685, 689, 732, 735, 772, 775], "forcibli": [395, 417], "forg": 842, "fork": [8, 21, 842], "form": [20, 21, 22, 26, 51, 61, 88, 130, 131, 173, 208, 210, 246, 287, 297, 332, 333, 337, 338, 350, 381, 385, 404, 426, 427, 428, 429, 457, 474, 538, 546, 547, 556, 561, 562, 631, 641, 647, 667, 693, 695, 702, 728, 746, 758, 787, 801, 829, 836, 837, 838, 851, 852, 853, 862, 864, 866], "formal": [20, 72, 245, 473, 647, 695, 817, 851], "format": [0, 4, 12, 13, 30, 31, 32, 34, 35, 41, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 118, 119, 126, 131, 231, 240, 241, 246, 247, 249, 250, 287, 288, 295, 296, 297, 305, 309, 310, 316, 319, 323, 331, 332, 333, 337, 338, 474, 476, 538, 549, 551, 553, 565, 570, 572, 573, 602, 611, 612, 624, 639, 686, 687, 689, 693, 702, 713, 720, 722, 723, 733, 735, 762, 763, 773, 775, 779, 780, 804, 806, 807, 821, 829, 831, 832, 833, 836, 837, 846, 847, 850, 851, 853, 856, 859, 863, 868], "former": [355, 424, 425, 426, 427, 428, 429, 557, 692, 712], "formul": [402, 413, 606, 617, 724, 726, 828, 834, 837, 851, 852, 864, 866], "formula": [355, 387, 408, 409, 412, 416, 706, 723], "formular": 665, "forth": [22, 639], "forum": 21, "forward": [4, 70, 230, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 707, 712, 714, 715, 716, 717, 719, 720, 721, 724, 726, 727, 728, 729, 730, 756, 757, 758, 759, 760, 763, 764, 766, 768, 769, 770, 798, 800, 801, 802, 803, 804, 805, 808, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "forward_infer": 859, "forward_train": 859, "found": [26, 48, 70, 318, 430, 432, 548, 560, 663, 680, 687, 689, 706, 724, 816, 821, 822, 826, 827, 829, 832, 833, 836, 850, 851, 863, 868, 869], "four": [500, 567, 666, 690, 693, 694, 702, 725, 831, 846, 852, 853], "fourth": 559, "fp16": [720, 804], "fp16\ub97c": 804, "fp16\uc744": 804, "fp_": 853, "frac": [120, 178, 179, 244, 245, 303, 343, 355, 389, 390, 395, 407, 410, 413, 415, 420, 433, 449, 450, 472, 473, 563, 570, 571, 665, 728, 768, 811, 816, 817, 818, 821, 850, 851, 852, 853, 859, 862, 863], "frac_list": [207, 868], "fraction": [207, 407], "fragment": 843, "frame": [9, 817, 859, 862], "framework": [4, 7, 9, 21, 23, 42, 59, 62, 63, 108, 125, 126, 131, 186, 235, 246, 247, 249, 250, 287, 332, 333, 337, 338, 339, 430, 432, 437, 438, 474, 475, 538, 546, 547, 561, 562, 563, 564, 567, 692, 699, 701, 703, 721, 786, 814, 822, 825, 832, 833, 836, 846, 856, 859, 863], "fraud": [145, 161, 162, 163], "frauddataset": [161, 163], "fraudul": [145, 161, 162], "free": [21, 178, 179, 814, 821, 828, 831, 853], "freebas": 158, "frequenc": 395, "frequent": [22, 135, 136, 137, 182, 291, 695], "friendship": [194, 698, 728], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 22, 26, 27, 32, 45, 48, 68, 73, 79, 82, 89, 93, 94, 95, 96, 105, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 229, 230, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 288, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 330, 331, 332, 333, 336, 337, 338, 339, 341, 343, 344, 349, 350, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 472, 473, 474, 475, 538, 545, 546, 547, 548, 552, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 572, 573, 608, 610, 611, 612, 624, 628, 632, 633, 638, 640, 641, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 672, 673, 674, 681, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 697, 701, 702, 706, 707, 708, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 728, 729, 730, 732, 733, 734, 735, 736, 762, 763, 768, 772, 773, 774, 775, 776, 780, 784, 786, 787, 798, 804, 806, 807, 810, 811, 812, 816, 817, 818, 819, 821, 824, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 841, 842, 845, 846, 847, 849, 850, 851, 853, 855, 856, 858, 859, 861, 862, 863, 865, 867, 868, 869, 871], "from_coo": [816, 821], "from_csc": [719, 821], "from_csr": 821, "from_cudf_edgelist": 248, "from_networkx": [250, 287, 699, 743, 784], "from_numpi": [315, 839, 852], "from_scipi": [249, 287, 699, 743, 784], "fromnumer": [850, 853], "fromt": [146, 169], "front": 723, "frontier": [4, 91, 92, 123, 124, 229, 230, 540, 541, 542, 543, 544, 556, 645, 692, 693, 738, 755, 778, 779, 797], "frontier2": [755, 797], "fsspec": [826, 827, 829, 832, 833], "fstab": 846, "ft": [706, 727, 750, 767, 791, 792], "full": [4, 26, 153, 191, 293, 301, 309, 710, 714, 716, 717, 719, 726, 730, 803, 816, 817, 818, 826, 827, 830, 834, 846, 847, 850, 853, 856, 862, 863, 869], "fulli": [4, 21, 291, 691, 723, 821, 822, 850], "func": [34, 35, 53, 54, 353, 679, 706, 708, 752, 794, 835, 836, 856, 863, 868], "funcanim": [817, 859, 862], "function": [0, 1, 4, 13, 21, 26, 27, 28, 34, 35, 53, 54, 64, 70, 71, 73, 89, 91, 92, 93, 94, 95, 96, 100, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 130, 146, 156, 168, 169, 183, 197, 213, 232, 235, 236, 239, 241, 243, 245, 246, 247, 250, 290, 293, 295, 297, 300, 301, 303, 305, 306, 307, 308, 310, 313, 317, 318, 333, 336, 339, 340, 341, 342, 350, 351, 353, 382, 383, 384, 387, 391, 392, 395, 396, 397, 398, 399, 402, 403, 405, 406, 407, 408, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 444, 445, 449, 450, 453, 456, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 551, 552, 553, 554, 555, 557, 560, 561, 562, 563, 565, 567, 572, 573, 575, 579, 580, 614, 631, 632, 634, 638, 639, 640, 641, 642, 643, 644, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 685, 686, 689, 690, 692, 694, 695, 699, 705, 707, 708, 711, 712, 715, 716, 717, 720, 721, 724, 726, 727, 728, 729, 730, 750, 751, 752, 758, 759, 760, 763, 766, 767, 768, 770, 790, 791, 792, 793, 794, 801, 802, 803, 804, 807, 808, 810, 811, 813, 816, 817, 818, 819, 822, 826, 828, 829, 834, 837, 838, 842, 846, 847, 850, 851, 852, 853, 854, 856, 859, 866, 869], "functional_datapip": [293, 300, 301, 313, 711, 715, 719], "functool": [712, 826, 851, 859, 863], "fundament": [851, 859], "further": [45, 66, 68, 73, 79, 82, 91, 92, 93, 94, 100, 105, 113, 210, 293, 301, 695, 707, 724, 726, 815, 821, 822, 853, 863], "furthermor": [125, 130, 694, 701, 851], "fuse": [9, 216, 499, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526], "fused_csc_sampling_graph": [231, 297, 300, 303, 308, 317], "fusedcscsamplinggraph": [231, 300, 303, 308, 309, 317, 324, 325, 328, 711, 719, 832, 833], "futur": [6, 21, 183, 231, 687, 720, 859, 863], "fwtype": 556, "g": [0, 4, 5, 6, 9, 10, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 233, 234, 240, 241, 242, 243, 246, 247, 248, 249, 250, 287, 324, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 349, 350, 351, 352, 355, 381, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 441, 446, 447, 450, 451, 452, 453, 455, 456, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 546, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 567, 568, 569, 572, 573, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 726, 728, 729, 734, 735, 737, 738, 739, 742, 744, 745, 746, 747, 751, 752, 753, 755, 756, 757, 758, 759, 760, 763, 764, 766, 768, 769, 774, 775, 777, 778, 779, 780, 783, 785, 786, 787, 788, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 807, 808, 810, 811, 812, 815, 816, 817, 818, 821, 822, 834, 835, 836, 837, 838, 839, 842, 843, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868], "g1": [36, 37, 38, 89, 101, 102, 108, 122, 128, 129, 344, 383, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 448, 456, 549, 550, 558, 560, 565, 569, 570, 571, 643, 644, 659, 679, 728, 768, 811, 852], "g1_node_feat": [433, 434, 435, 436, 437, 438, 439, 440, 441], "g2": [36, 37, 38, 95, 96, 101, 102, 122, 128, 129, 130, 344, 383, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 448, 456, 549, 550, 559, 560, 565, 569, 570, 571, 643, 644, 659, 679, 728, 768, 811], "g2_node_feat": [433, 434, 435, 436, 437, 438, 439, 440, 441], "g3": [456, 659, 679], "g32": [702, 746, 787], "g32_2": [702, 746, 787], "g64": [702, 746, 787], "g64_2": [702, 746, 787], "g_": [4, 10, 667], "g_2": 336, "g_atom": 179, "g_batch": 183, "g_edg": [561, 562], "g_int": 64, "g_l": 852, "g_layer": 852, "g_list": 565, "g_long": 71, "g_m": 859, "g_nodes_explain": 429, "g_r": [724, 764, 808], "g_sort": [563, 572, 573], "g_t": 859, "gai": [850, 852], "gain": [719, 722, 762, 806, 822, 850, 851, 852, 853, 856, 859, 862, 863], "galleri": [21, 824, 840, 844, 848, 866, 870], "game": [4, 27, 28, 30, 31, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 171, 214, 216, 219, 246, 247, 332, 333, 337, 338, 355, 383, 425, 426, 427, 474, 475, 538, 546, 551, 552, 553, 555, 638, 639, 640, 641, 648, 649, 654, 664, 665, 669, 679, 703, 747, 755, 788, 797], "gamma": [818, 852], "gamma_": [389, 449, 852], "gamma_k": 389, "gan": [850, 863], "gap": [178, 179, 434, 853], "gat": [355, 400, 720, 727, 792, 804, 821, 822, 854, 866], "gatconv": [392, 403, 707, 720, 751, 793, 804, 853], "gate": [411, 412, 434, 859], "gate_nn": 434, "gatedgcn": 411, "gatedgraphconv": 434, "gather": [9, 214, 215, 216, 303, 308, 497, 561, 717, 730, 755, 797, 829, 836, 852], "gathermm": 13, "gatlay": 853, "gatv2": 406, "gat\ub97c": 804, "gaussian": [14, 410, 449], "gb": [235, 293, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 315, 316, 317, 318, 319, 331, 695, 711, 712, 714, 715, 717, 718, 719, 822, 826, 827, 829, 832, 833, 869], "gcc": [694, 780, 815], "gclass": [424, 428, 429, 838], "gcmc": [756, 798], "gcmclayer": [726, 766, 810], "gcn": [134, 149, 155, 185, 187, 193, 209, 398, 399, 404, 413, 419, 441, 472, 666, 712, 714, 717, 719, 720, 722, 723, 756, 758, 762, 763, 792, 798, 801, 806, 807, 815, 822, 838, 852, 854, 856, 866], "gcn_model": 816, "gcn_msg": 850, "gcn_reduc": 850, "gcnii": 407, "gcnlayer": [816, 850], "gcnnorm": 13, "gcn\uc744": [800, 803], "gdata_pars": 148, "gdc": 13, "gdelt": [25, 164], "gdeltdataset": [690, 736, 776], "ge": 432, "gender": 835, "gene": [561, 562, 703, 747, 788, 853], "gener": [0, 1, 3, 4, 5, 7, 9, 10, 20, 34, 73, 91, 92, 93, 94, 100, 113, 117, 123, 124, 128, 129, 138, 139, 140, 141, 142, 143, 172, 174, 183, 189, 190, 207, 210, 211, 212, 213, 217, 220, 226, 227, 229, 292, 293, 297, 301, 302, 307, 317, 339, 383, 389, 392, 393, 394, 400, 403, 424, 425, 426, 428, 430, 432, 446, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 546, 547, 549, 550, 554, 556, 557, 558, 560, 561, 567, 631, 645, 649, 667, 683, 691, 692, 694, 695, 699, 702, 705, 706, 710, 712, 715, 716, 717, 718, 720, 722, 725, 726, 809, 818, 825, 828, 829, 835, 838, 839, 840, 843, 844, 846, 847, 848, 850, 851, 852, 856, 862, 863, 868, 869, 870], "generaliz": 853, "generic_join": 293, "gene\u76f8\u4e92\u4f5c\u7528\u8fb9": 747, "gene\u8282\u70b9": 747, "gentl": 850, "geom": [134, 149, 155, 185, 187, 193, 472], "geometr": [134, 149, 155, 185, 186, 187, 193, 410, 449, 472, 822], "geomgcndataset": [149, 155, 185, 187, 193], "get": [0, 1, 4, 22, 26, 30, 31, 42, 43, 44, 46, 48, 51, 56, 68, 70, 74, 77, 103, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 209, 210, 232, 239, 245, 247, 288, 291, 293, 294, 296, 297, 298, 305, 315, 334, 339, 382, 385, 420, 430, 432, 441, 473, 475, 557, 561, 563, 567, 569, 572, 573, 641, 679, 683, 685, 687, 688, 689, 691, 693, 695, 700, 703, 706, 712, 714, 715, 717, 724, 725, 728, 729, 764, 772, 774, 775, 785, 788, 797, 808, 815, 816, 817, 821, 826, 829, 843, 853, 859, 863, 868], "get_aggregate_fn": [724, 764, 808], "get_attent": [399, 400, 403, 405, 406, 434], "get_cmap": 852, "get_dataload": 868, "get_dataset": 863, "get_dist": [431, 545], "get_edge_partition_polici": 4, "get_edge_split": [688, 734, 774], "get_etype_id": [4, 639, 780], "get_group": 839, "get_idx_split": [688, 734, 774, 846], "get_log_prob": 859, "get_node_partition_polici": [4, 693, 779], "get_ntype_id": [4, 639, 780], "get_o": 863, "get_part_s": 4, "get_partition_book": [4, 691, 693, 737, 777, 779, 847], "get_seq_by_id": 863, "get_siz": 4, "ggnn": 434, "ghz": 179, "giant": 130, "gid": 569, "gif": 863, "gilmer": [828, 836], "gin": [728, 768, 811, 838, 868], "ginconv": [728, 768, 811, 868], "gindataset": [424, 428, 429, 689, 728, 735, 768, 775, 811, 838, 868], "girvan": 167, "git": [694, 780, 815], "github": [135, 136, 151, 152, 153, 159, 162, 165, 168, 186, 210, 680, 694, 748, 780, 814, 815, 842, 851, 852, 862, 863], "git\uc5d0\uc11c": 780, "give": [4, 11, 27, 114, 207, 245, 336, 473, 554, 568, 633, 678, 699, 700, 715, 785, 816, 826, 838], "given": [4, 5, 6, 9, 14, 22, 30, 31, 32, 35, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 79, 81, 82, 87, 88, 93, 109, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 148, 164, 183, 184, 197, 198, 200, 205, 208, 209, 213, 214, 216, 219, 220, 229, 230, 232, 233, 234, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 287, 290, 293, 297, 300, 303, 305, 308, 313, 318, 319, 323, 332, 333, 340, 342, 344, 350, 387, 390, 392, 393, 394, 396, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 413, 415, 416, 419, 426, 428, 431, 450, 456, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 547, 549, 550, 554, 556, 557, 560, 561, 562, 563, 564, 568, 572, 573, 592, 595, 596, 597, 599, 628, 633, 638, 641, 645, 647, 649, 656, 657, 659, 660, 662, 665, 679, 687, 692, 695, 701, 702, 717, 726, 728, 729, 730, 787, 821, 825, 834, 837, 838, 839, 851, 853, 856, 859, 862, 863], "gklib": [694, 780], "gklib\uc744": 780, "glabel": 565, "glist": 344, "gloabl": 4, "glob": [374, 375, 376, 377, 378, 379, 433, 434, 435, 436, 437, 438, 439, 440, 441, 466, 467, 468, 469, 470, 471], "global": [4, 13, 128, 129, 164, 236, 237, 240, 297, 385, 434, 444, 561, 631, 667, 815, 846], "global_test_eid": 847, "global_valid_eid": 847, "gloo": [691, 692, 737, 738, 777, 778, 842, 846, 847, 868], "glorot": [398, 405, 406, 410, 412, 413, 416, 419, 421], "glove": [184, 856], "glove_emb": 184, "glove_embed_fil": 184, "gluon": [199, 200, 721, 805], "gluoncv": 815, "gluonnlp": 815, "gluon\u7684nn\u5757": 761, "gm_": [4, 10], "gml": [703, 788], "gnn": [4, 7, 12, 21, 135, 136, 137, 146, 151, 152, 153, 159, 162, 165, 169, 171, 180, 182, 188, 210, 213, 214, 215, 216, 219, 220, 297, 303, 355, 414, 424, 425, 426, 427, 428, 429, 454, 456, 561, 704, 710, 714, 718, 725, 726, 727, 729, 730, 748, 759, 765, 770, 789, 792, 796, 797, 800, 804, 809, 810, 812, 813, 814, 822, 826, 827, 828, 829, 839, 840, 843, 850, 852, 853, 868, 869], "gnn_modul": 414, "gnnbenchmarkdataset": [135, 136, 151, 152, 153], "gnnexplain": [142, 143, 189, 190, 425], "gnnlayer": 414, "gnn\uc5d0": 803, "gnn\uc740": 796, "gnn\uc744": [797, 800, 810, 812], "gnu": [815, 843], "go": [14, 21, 22, 560, 814, 815, 835, 837, 846, 852, 856], "goal": 188, "goe": [4, 20, 21, 702, 712, 836, 837], "gone": 838, "good": [135, 136, 162, 837, 846, 853], "googl": [21, 820, 863], "gossipcop": 159, "goto": 156, "gp_": [4, 10], "gpb": [4, 240, 693, 779], "gpt": 863, "gpu": [6, 9, 10, 14, 21, 89, 108, 110, 112, 118, 119, 125, 126, 210, 249, 250, 287, 291, 298, 315, 332, 339, 342, 350, 431, 453, 545, 554, 556, 560, 561, 562, 567, 581, 633, 634, 697, 706, 710, 714, 717, 718, 720, 725, 786, 791, 796, 800, 804, 809, 814, 815, 817, 818, 822, 825, 828, 829, 846, 856, 863], "gpu_0": [10, 453], "gpu_cach": 210, "gpu_cache_threshold": 291, "gpu\u56fe\u53ea\u63a5\u53d7gpu\u4e0a\u7684\u7279\u5f81\u6570\u636e": 745, "gpu\ub85c": [786, 798, 803], "gpu\ub97c": 800, "gpu\uc5d0": [786, 796, 799, 803], "gpu\uc5d0\uc11c": [782, 799], "graclu": 6, "grad": [9, 118, 119], "grad_fn": [9, 118, 387, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 410, 412, 413, 416, 418, 419, 420, 421, 434, 436, 437, 438, 441], "gradient": [4, 9, 10, 381, 385, 395, 414, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 691, 710, 720, 796, 804, 838, 846, 868], "gradscal": [720, 804], "gradual": [859, 862, 863], "graident\ub4e4\uc740": 804, "grain": [313, 821, 843, 856], "granular": [164, 166], "grapbolt": 719, "graph": [3, 6, 9, 11, 13, 14, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 288, 289, 291, 292, 295, 296, 297, 299, 300, 303, 304, 305, 308, 309, 310, 312, 313, 314, 317, 318, 319, 325, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 456, 457, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 685, 688, 690, 691, 696, 700, 701, 704, 705, 706, 707, 713, 718, 719, 720, 722, 724, 727, 734, 735, 736, 739, 740, 743, 744, 745, 746, 747, 750, 755, 763, 765, 766, 767, 768, 769, 770, 772, 774, 775, 776, 779, 780, 781, 782, 783, 784, 785, 786, 787, 791, 792, 794, 796, 797, 798, 799, 801, 803, 804, 808, 809, 810, 811, 812, 813, 815, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 836, 840, 842, 856, 860, 862, 869, 870], "graph0": 687, "graph1": 687, "graph_data": [687, 703, 747, 788], "graph_degre": 183, "graph_edg": 839, "graph_emb": 859, "graph_embed_func": 859, "graph_feat": [128, 129, 428, 429], "graph_format": [231, 240], "graph_hidden_s": 859, "graph_id": [687, 839], "graph_id_field": 687, "graph_index": 21, "graph_label": 565, "graph_list": 344, "graph_nam": [4, 240, 691, 692, 693, 694, 695, 737, 738, 739, 777, 778, 779, 780, 846, 847], "graph_op": 859, "graph_path": [690, 736, 776], "graph_pool": 863, "graph_prop": 859, "graph_prop_func": 859, "graph_properti": 839, "graph_sampl": [210, 211, 212], "graph_train": 847, "graphbolt": [231, 235, 236, 240, 241, 242, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 711, 712, 713, 715, 717, 718, 719, 826, 827, 829, 830, 832, 833, 843, 869], "graphbolt_test": 309, "graphconv": [383, 388, 397, 404, 407, 414, 420, 421, 426, 428, 429, 712, 717, 720, 721, 723, 728, 730, 756, 757, 758, 760, 763, 768, 770, 798, 800, 801, 803, 805, 807, 811, 813, 834, 838, 850], "graphdataload": [424, 428, 429, 688, 689, 728, 734, 735, 768, 774, 775, 811, 818, 838, 868], "graphdataloader\uc758": 811, "graphemb": 859, "graphgp": 446, "graphic": 305, "graphmetadata": 297, "graphnet": 822, "graphorm": [445, 681], "graphormerlay": 683, "graphpartitionbook": [4, 232, 236, 237, 239, 241, 693], "graphpool": 863, "graphpr": 138, "graphprop": 859, "graphproppr": [138, 688, 734, 774, 818], "graphsag": [175, 181, 394, 398, 419, 691, 713, 714, 717, 719, 723, 730, 740, 757, 770, 781, 800, 801, 803, 807, 813, 826, 827, 829, 836, 846, 847, 853, 869], "graphsage\u4e2dgcn\u805a\u5408\u4e0d\u9700\u8981fc_self": 763, "graphsage\u7684\u5b9e\u73b0": 760, "graphsage\ub97c": 777, "graphsage\uc5d0\uc11c": 813, "graphsaint": [160, 194, 217], "graphtransform": 683, "graphviz_layout": 856, "graphwis": 438, "graph\uc5d0": 797, "graph\uc758": [798, 803, 813], "great": 852, "greater": [131, 197, 287, 315, 332, 561, 562, 563, 843, 856], "greatli": [854, 866], "greedi": 6, "green": 828, "grid": [171, 172, 190], "grid_siz": 190, "groud": 813, "ground": [150, 154, 167, 176, 730, 813, 827, 834, 847, 852, 859, 869], "group": [4, 20, 137, 166, 167, 182, 293, 353, 354, 414, 453, 681, 683, 691, 703, 715, 821, 832, 833, 836, 839, 852], "groupbi": 839, "grouplen": 173, "growth": 851, "grpah": 668, "gru": [412, 859], "grucel": 859, "gsddmm": 13, "gsddmmbackward": 9, "gspmm": 13, "gspmmbackward": [9, 406], "gt": [442, 443, 444, 445, 446, 447, 448, 449, 682, 818, 826, 827, 829, 832, 833], "gtlayer": 818, "gtmodel": 818, "guarante": [4, 101, 102, 226, 232, 239, 303, 557, 868], "guid": [1, 3, 11, 21, 209, 210, 214, 215, 216, 217, 220, 222, 223, 224, 225, 633, 689, 694, 713, 730, 739, 789, 814, 836, 839, 846, 856], "guide_cn": [748, 765], "guidelin": 814, "guo": [856, 863], "gz": [686, 733, 773], "gz_file_path": [686, 733, 773], "gz\u6216": 733, "gz\u6587\u4ef6": 733, "h": [4, 5, 22, 25, 27, 28, 30, 34, 35, 43, 44, 46, 51, 53, 54, 56, 70, 73, 74, 77, 91, 92, 93, 94, 100, 103, 104, 108, 113, 114, 115, 116, 121, 128, 129, 145, 177, 178, 179, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 349, 387, 388, 391, 392, 400, 401, 403, 405, 406, 407, 415, 420, 421, 424, 425, 426, 427, 428, 429, 447, 448, 449, 450, 451, 452, 456, 473, 475, 549, 550, 554, 555, 570, 571, 639, 640, 641, 643, 644, 652, 653, 654, 660, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 701, 706, 708, 710, 716, 720, 723, 726, 728, 729, 730, 745, 750, 752, 754, 755, 757, 759, 763, 766, 768, 769, 770, 786, 791, 794, 796, 797, 800, 802, 804, 807, 810, 811, 812, 813, 815, 818, 819, 821, 828, 829, 834, 836, 837, 838, 847, 850, 851, 853, 856, 859, 863], "h1": [5, 47, 75, 383, 640, 661, 818], "h2": [5, 47, 70, 75, 383, 640, 661, 818], "h2h": 851, "h2o": 851, "h_": [120, 389, 394, 400, 405, 406, 411, 412, 416, 419, 425, 427, 723, 724, 763, 764, 807, 808, 819, 836, 850, 853, 856], "h_atom": 179, "h_cat": 856, "h_dict": [730, 770, 813], "h_dim": 851, "h_dst": [450, 716, 757, 759, 800, 802], "h_e": [395, 401, 417], "h_feat": [829, 834, 836, 837, 838], "h_g": [728, 768, 811], "h_head": [451, 452], "h_i": [387, 390, 391, 395, 396, 397, 398, 399, 401, 402, 405, 406, 408, 409, 410, 412, 413, 416, 417, 418, 419, 450, 454, 821, 851, 853, 863], "h_item": [730, 770, 813], "h_j": [387, 390, 395, 397, 399, 401, 402, 405, 406, 407, 408, 409, 413, 416, 417, 418, 419, 450, 851, 856], "h_jl": 856, "h_max": 5, "h_n": [395, 401, 417, 836], "h_neg_dst": 847, "h_neg_src": 847, "h_neigh": [716, 723, 759, 763, 802, 807], "h_new": 5, "h_pos_dst": 847, "h_pos_src": 847, "h_self": [723, 763, 807], "h_size": 856, "h_src": [450, 716, 759, 802], "h_sub_g": [703, 747, 788], "h_sum": [5, 128, 129], "h_t": 863, "h_tail": [451, 452], "h_total": 836, "h_u": [726, 766, 810, 828, 836, 837, 859], "h_user": [730, 770, 813], "h_v": [722, 726, 728, 762, 766, 768, 806, 810, 811, 828, 836, 837, 850], "h_x": 401, "ha": [4, 5, 9, 14, 22, 27, 28, 30, 31, 32, 34, 36, 37, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 107, 113, 114, 115, 117, 118, 119, 120, 122, 131, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 160, 162, 166, 167, 168, 170, 173, 175, 176, 184, 191, 192, 194, 220, 221, 230, 240, 246, 287, 290, 291, 293, 310, 326, 332, 333, 337, 338, 339, 342, 349, 351, 383, 404, 413, 430, 431, 432, 449, 453, 474, 476, 538, 545, 549, 551, 553, 554, 557, 559, 560, 563, 567, 570, 571, 572, 573, 606, 633, 638, 643, 644, 685, 687, 689, 691, 692, 693, 694, 695, 696, 698, 699, 700, 703, 706, 712, 713, 714, 716, 720, 721, 723, 725, 726, 728, 775, 783, 815, 818, 819, 821, 822, 831, 832, 835, 836, 837, 838, 846, 847, 850, 851, 852, 853, 856, 859, 860, 863, 864, 866], "hadamard": 818, "half": [9, 141, 637, 706, 707, 791, 863], "halo": [236, 240, 351, 539, 694, 695, 780], "halo_hop": 240, "halt": [560, 863], "halt_and_accum": 863, "halt_dec": 863, "halt_enc": 863, "haltingunit": 863, "hamilton": 836, "hand": 695, "handcraft": [161, 163], "handl": [210, 292, 387, 399, 400, 402, 403, 405, 406, 407, 410, 413, 420, 499, 686, 687, 694, 695, 697, 699, 702, 706, 723, 724, 830, 835, 838, 853, 859, 863], "hang": [293, 869], "hao": 853, "happen": [210, 226, 557, 852], "happend": 164, "har": [854, 866], "hard": [21, 245, 473, 859], "hardwar": [718, 843], "harm": [303, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420], "harvard": 863, "has_cach": [156, 685, 690, 732, 736, 772, 776], "has_dupl": 821, "has_edges_between": [561, 562, 859], "has_nontree_edg": [230, 541], "has_reverse_edg": [230, 541], "has_top": 780, "hasattr": 139, "hash": [156, 199, 200, 243, 686, 733, 773], "hash_kei": 156, "hat": [407, 411, 424, 425, 837, 850, 852, 862], "have": [4, 6, 9, 10, 14, 21, 22, 26, 34, 35, 48, 53, 55, 56, 57, 58, 60, 61, 68, 87, 88, 93, 94, 100, 115, 116, 117, 118, 119, 122, 125, 126, 130, 131, 161, 165, 171, 174, 180, 186, 188, 197, 205, 210, 211, 212, 214, 216, 219, 220, 226, 227, 230, 234, 235, 241, 242, 246, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 296, 297, 298, 310, 315, 318, 326, 332, 333, 336, 337, 338, 341, 342, 350, 351, 355, 383, 385, 386, 402, 415, 418, 420, 426, 427, 428, 429, 433, 435, 439, 440, 454, 474, 538, 539, 555, 556, 558, 560, 561, 562, 563, 564, 572, 573, 592, 595, 596, 597, 614, 624, 628, 632, 633, 638, 639, 641, 687, 689, 691, 692, 693, 694, 695, 696, 698, 700, 703, 706, 708, 710, 712, 714, 716, 717, 719, 720, 724, 726, 728, 730, 785, 788, 797, 818, 821, 826, 827, 828, 829, 834, 835, 836, 837, 838, 839, 843, 846, 847, 851, 852, 853, 856, 857, 859, 863, 866, 868, 869], "hdf": [344, 565, 699], "hdfs\u4e2d\u52a0\u8f7d\u6216\u5411s3": 743, "hdfs\u4fdd\u5b58\u56fe": 743, "hdfs\uc5d0": 784, "he": [95, 96, 117, 551, 552, 553, 555, 641, 649, 703, 706, 747, 750, 788, 791, 856, 859], "head": [9, 392, 399, 400, 403, 405, 406, 415, 437, 438, 442, 444, 445, 446, 447, 448, 449, 451, 452, 683, 720, 804, 839, 854, 864, 866], "head_dim": 818, "head_out": 853, "head_siz": 415, "header": [687, 831, 832, 833], "head\uc758": 804, "heat": [178, 179, 657], "heatkernel": 13, "heavi": 195, "heavili": 706, "height": [189, 190], "height_in": 862, "height_in_i": 862, "height_out": 862, "height_out_i": 862, "held": 164, "help": [161, 293, 318, 639, 702, 703, 728, 830, 834, 852], "henc": [116, 126, 130, 135, 136, 151, 152, 153, 192, 250, 336, 342, 555, 632, 641, 699, 703, 788], "here": [5, 9, 21, 31, 145, 151, 152, 164, 166, 175, 177, 178, 179, 183, 184, 240, 313, 383, 680, 687, 688, 689, 693, 694, 707, 708, 712, 717, 720, 722, 725, 726, 729, 775, 780, 816, 817, 818, 819, 822, 826, 828, 835, 836, 837, 838, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863], "hereaft": 863, "hetergen": [246, 474], "hetero": [303, 308, 694], "hetero_block": [755, 797], "hetero_fronti": [755, 797], "hetero_graph": [725, 726, 729, 730, 765, 766, 769, 770, 809, 810, 812, 813], "heteroclassifi": [728, 768, 811], "heterodotproductpredictor": [726, 729, 766, 769, 810, 812], "heterogen": [1, 4, 7, 13, 26, 27, 28, 31, 34, 35, 36, 37, 38, 42, 47, 51, 53, 54, 65, 66, 72, 75, 77, 79, 82, 93, 94, 95, 96, 100, 101, 102, 108, 113, 114, 115, 116, 117, 140, 214, 216, 219, 220, 221, 222, 223, 224, 225, 240, 242, 246, 289, 293, 297, 301, 305, 310, 312, 318, 319, 330, 331, 332, 333, 337, 338, 382, 383, 384, 385, 387, 399, 402, 403, 405, 406, 407, 410, 413, 415, 420, 425, 426, 427, 474, 538, 551, 552, 553, 561, 572, 573, 632, 633, 638, 639, 640, 641, 647, 648, 649, 654, 655, 664, 665, 668, 669, 691, 694, 695, 697, 698, 705, 721, 723, 777, 782, 783, 794, 799, 805, 807, 830, 831, 856], "heterogenen": [113, 555], "heterogeneous_graph_nc_lp": 832, "heterograph": [1, 4, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 130, 220, 246, 247, 333, 337, 338, 350, 355, 383, 385, 399, 400, 402, 403, 405, 406, 410, 413, 416, 419, 425, 426, 427, 474, 475, 538, 551, 552, 553, 555, 556, 559, 560, 561, 562, 632, 633, 638, 639, 640, 641, 647, 648, 649, 654, 664, 665, 669, 679, 687, 708, 713, 724, 725, 729, 730, 747, 755, 765, 769, 770, 788, 797, 808, 809, 812, 813, 859, 862], "heterographconv": [426, 712, 715, 717, 728, 730, 756, 758, 760, 764, 768, 770, 798, 801, 803, 811, 813], "heterogrph": [91, 92], "heteroitemset": [292, 293, 301, 304, 309, 314, 711, 712, 717, 832], "heteromlppredictor": [726, 766, 810], "heterophili": [120, 137, 171, 180, 182, 188, 245, 473], "heterophilousgraphdataset": [137, 171, 180, 182, 188], "hexadecim": [199, 200], "hg": [51, 55, 60, 61, 77, 87, 88, 90, 101, 102, 107, 355, 425, 426, 427, 428, 638, 639, 703, 711, 728, 747, 768, 780, 788, 811], "hg1": [36, 37, 38, 122, 679], "hg2": [36, 37, 38, 122, 679], "hg_2": 638, "hhhiddleston": 748, "hid_feat": [426, 728, 730, 768, 770, 811, 813], "hid_siz": [719, 720], "hidden": [168, 390, 401, 422, 437, 438, 445, 683, 710, 722, 726, 730, 796, 806, 810, 851, 852, 853, 856, 863], "hidden_d": 422, "hidden_dim": [426, 429, 728, 768, 811, 819, 853], "hidden_feat": [390, 712, 717, 756, 758, 760, 798, 801, 803], "hidden_featur": [712, 717, 726, 729, 755, 756, 757, 758, 760, 766, 769, 797, 798, 800, 801, 803, 810, 812], "hidden_s": [168, 401, 445, 683, 714, 715, 816, 817, 818, 826, 827, 869], "hidden_x": [714, 715, 719, 826, 827, 869], "hierarch": 183, "high": [240, 245, 291, 427, 429, 451, 452, 473, 565, 692, 706, 707, 778, 815, 822, 825, 853, 862, 863], "high2low": [427, 429], "higher": [9, 214, 303, 424, 425, 426, 427, 428, 429, 729, 852, 853, 862, 864, 866], "highest": [178, 179, 853], "highli": [393, 394, 684, 814, 822, 825, 843, 846, 851], "highlight": [689, 719, 816, 817, 818, 819, 827, 852, 863, 869], "hing": 801, "hint": [708, 794], "histogram": [853, 862], "histor": 159, "hold": [6, 36, 37, 125, 182, 210, 217, 248, 249, 297, 302, 439, 648, 649, 669, 695, 703, 724, 836], "holist": 11, "home": [23, 139, 694, 780, 832, 833, 846, 856, 859, 862], "homebrew": 815, "homegen": [779, 811], "homo": [178, 179, 397, 398], "homogen": [1, 4, 6, 7, 9, 26, 27, 28, 34, 35, 36, 37, 38, 42, 47, 48, 53, 54, 55, 57, 60, 61, 65, 66, 75, 77, 79, 82, 87, 88, 90, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 122, 138, 139, 209, 210, 214, 215, 216, 219, 220, 222, 223, 224, 225, 240, 241, 246, 289, 295, 297, 305, 309, 310, 312, 318, 319, 330, 331, 333, 335, 337, 338, 339, 340, 341, 342, 350, 387, 399, 400, 402, 403, 405, 406, 407, 410, 413, 416, 419, 420, 424, 428, 429, 474, 538, 545, 548, 551, 552, 553, 554, 555, 556, 558, 560, 563, 568, 631, 633, 634, 638, 639, 640, 641, 648, 649, 654, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 687, 693, 694, 695, 698, 712, 715, 717, 723, 726, 728, 729, 730, 779, 780, 783, 788, 797, 798, 801, 803, 807, 810, 811, 812, 813, 830, 831, 832], "homogeneous_graph_nc_lp": 833, "homogeneous\uc5ec\uc57c": 802, "homograph": [41, 56, 687], "homophil": [162, 343, 472], "homophili": [13, 120, 244, 245, 343, 472, 473], "hood": [691, 694, 850, 868], "hook": [424, 425, 426, 427, 428, 429], "hop": [219, 240, 303, 308, 336, 337, 338, 351, 420, 421, 424, 425, 426, 428, 539, 658, 817, 828, 852, 853], "hop2j_list": 852, "host": [1, 2, 5], "hostil": 166, "hot": [165, 168, 171, 455, 835, 859], "hotel": 163, "hour": 166, "hous": [141, 142, 143], "how": [4, 9, 11, 21, 139, 162, 165, 220, 245, 291, 397, 400, 406, 408, 413, 434, 436, 441, 473, 556, 557, 572, 573, 641, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 698, 705, 707, 710, 714, 716, 717, 719, 720, 721, 722, 725, 726, 730, 755, 797, 803, 815, 816, 817, 818, 819, 825, 826, 827, 828, 830, 832, 833, 834, 836, 837, 838, 839, 840, 842, 843, 846, 850, 851, 852, 853, 854, 859, 862, 864, 866, 868, 869], "howev": [4, 9, 21, 22, 171, 236, 293, 303, 308, 693, 695, 698, 702, 714, 723, 815, 827, 828, 837, 838, 842, 846, 852, 853, 856, 859, 863], "html": [9, 21, 145, 184, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 843], "http": [9, 21, 23, 133, 134, 135, 136, 137, 144, 145, 146, 147, 151, 152, 153, 159, 161, 162, 163, 165, 167, 168, 169, 171, 173, 174, 175, 177, 180, 181, 182, 184, 186, 188, 195, 210, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 428, 429, 444, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 556, 680, 689, 694, 719, 735, 748, 767, 775, 780, 815, 816, 817, 818, 819, 821, 822, 826, 827, 829, 832, 833, 839, 842, 843, 846, 859, 863], "hu": [706, 750, 791, 859], "huaiwen": 748, "huang": [748, 850, 852], "huge": 720, "hugectr": 210, "human": 853, "hundr": [695, 814], "hurt": 853, "hv": [96, 116, 117, 552, 555, 641, 703, 706, 747, 750, 788, 791, 859], "hv_init": 859, "hv_old": 859, "hx": [720, 804], "hy": [720, 804], "hyper": [4, 422, 853, 856], "hypercub": 172, "hyperedg": 819, "hyperedge_degre": 819, "hypergraph": 820, "hyperlink": [155, 187, 192, 193, 299, 302, 305], "hyperparamet": [192, 407, 427, 429, 556, 729, 853], "hyperthread": 843, "h\u662f\u4ece5": [766, 769], "h\u73b0\u5728\u662f\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u5f20\u91cf\u5bf9": 759, "i": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 200, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 323, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 354, 355, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 472, 473, 474, 475, 477, 479, 482, 484, 497, 498, 499, 500, 503, 505, 509, 511, 517, 519, 523, 525, 538, 539, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 578, 581, 582, 592, 595, 596, 597, 598, 599, 606, 608, 610, 611, 612, 614, 617, 618, 620, 624, 631, 632, 633, 635, 636, 637, 639, 641, 643, 644, 645, 647, 648, 649, 656, 657, 659, 660, 662, 665, 666, 667, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 733, 734, 746, 747, 750, 755, 763, 764, 769, 773, 774, 775, 779, 780, 783, 786, 787, 788, 791, 792, 797, 800, 802, 807, 808, 811, 812, 814, 815, 816, 817, 818, 819, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 843, 846, 847, 850, 851, 853, 856, 857, 859, 860, 862, 863, 864, 866, 868, 869], "i2h": 851, "i64": [694, 780], "i_": 415, "i_1": [116, 555], "i_2": 555, "i_j": 856, "i_n": 116, "ic": 863, "icew": 166, "icews18": [25, 166], "icon": 817, "id": [0, 4, 6, 13, 20, 26, 27, 32, 34, 35, 39, 44, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 77, 78, 87, 88, 90, 92, 93, 94, 95, 96, 100, 104, 107, 114, 115, 122, 123, 124, 125, 126, 130, 131, 133, 138, 140, 144, 184, 197, 205, 209, 220, 221, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 249, 250, 287, 288, 293, 294, 296, 297, 298, 301, 305, 309, 310, 315, 318, 319, 323, 325, 330, 331, 332, 333, 337, 338, 339, 351, 352, 353, 355, 381, 382, 385, 424, 425, 426, 427, 428, 430, 431, 432, 449, 474, 538, 539, 545, 546, 547, 551, 552, 554, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 572, 573, 633, 638, 639, 640, 641, 645, 673, 678, 681, 687, 689, 691, 694, 702, 703, 709, 711, 712, 717, 719, 779, 787, 788, 797, 798, 801, 803, 819, 829, 832, 833, 835, 839, 851, 856, 863, 868], "id2etyp": 693, "id2ntyp": 693, "id_": 221, "id_tensor": 4, "idconvert": 693, "idea": [21, 22, 728, 729, 821, 837, 856, 863, 864, 866], "ideal": 853, "ident": [116, 220, 297, 395, 407, 417, 561, 633, 648, 655, 691, 712, 729, 816, 817, 819, 821, 826, 827, 869], "identifi": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 241, 247, 424, 425, 427, 429, 453, 476, 549, 551, 553, 570, 692, 693, 723, 726, 728], "idf": 161, "idna": [826, 827, 829, 832, 833], "idtyp": [4, 54, 64, 71, 125, 126, 131, 249, 250, 287, 332, 546, 547, 702, 713, 746, 787], "idx": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 685, 689, 690, 732, 735, 736, 772, 775, 776, 818], "idx_b": 497, "idx_list": 344, "id\uac00": 780, "id\uac12\ub4e4\uc744": 779, "id\uac12\ub4e4\uc774": 775, "id\uac12\uc744": 780, "id\ub294": [779, 780, 788, 797], "id\ub4e4\uacfc": 779, "id\ub4e4\ub85c": 779, "id\ub4e4\uc5d0": 787, "id\ub4e4\uc640": 797, "id\ub4e4\uc740": [780, 788], "id\ub4e4\uc744": [779, 780], "id\ub4e4\uc758": [798, 801, 803], "id\ub77c\uace0": 787, "id\ub85c": [779, 787], "id\ub97c": [779, 780, 787, 788, 795, 798], "id\ub9cc\uc744": 780, "id\uc5d0": 780, "id\uc640": [779, 780, 798], "id\uc758": [779, 780, 787], "id\uc774\ub2e4": 780, "ie": 164, "ignor": [116, 133, 144, 200, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 424, 425, 426, 427, 428, 429, 687], "ignore_bipartit": 116, "ii": [407, 421], "ij": [355, 387, 389, 397, 399, 400, 401, 405, 406, 407, 410, 411, 412, 416, 421, 750, 791, 819, 821, 853, 862, 863], "ik": 853, "illustr": [693, 695, 702, 713, 816, 817, 818, 819, 832, 846, 847, 852, 863], "imag": [146, 160, 169, 822, 835, 838, 863], "image0": [862, 863], "image1": [862, 863], "image10": 863, "image2": [853, 862, 863], "image3": [862, 863], "image4": [862, 863], "image5": [853, 862, 863], "image6": [853, 863], "image7": [853, 863], "image8": 863, "image9": 863, "imaginari": 818, "imbal": [162, 695], "imdb": 186, "imdbbinari": [165, 868], "imdbmulti": 165, "immedi": [22, 41, 558, 853], "immunolog": 853, "impact": [14, 557], "impl": [832, 833], "implement": [0, 4, 6, 7, 9, 10, 14, 21, 22, 23, 197, 290, 300, 303, 313, 389, 413, 430, 431, 442, 453, 477, 479, 482, 484, 503, 505, 509, 511, 517, 519, 523, 525, 554, 651, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 695, 705, 706, 707, 710, 712, 717, 718, 719, 723, 728, 730, 803, 814, 816, 817, 821, 825, 827, 834, 836, 839, 846, 853, 854, 856, 864, 866, 869], "impli": 851, "implicit": [89, 729, 769, 812, 821], "implicitli": [27, 114, 303, 308, 859], "import": [4, 5, 6, 9, 20, 21, 22, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 120, 122, 125, 126, 128, 129, 131, 137, 138, 141, 142, 143, 146, 147, 149, 155, 160, 169, 171, 173, 174, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 214, 217, 218, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 297, 298, 299, 300, 301, 302, 303, 308, 310, 315, 316, 317, 319, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 349, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 472, 473, 474, 475, 476, 501, 538, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 561, 565, 567, 568, 569, 570, 571, 572, 573, 608, 631, 632, 634, 638, 639, 640, 641, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 706, 707, 708, 711, 712, 716, 717, 720, 722, 723, 724, 725, 726, 727, 728, 730, 732, 733, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 750, 751, 752, 755, 759, 760, 762, 763, 764, 765, 766, 767, 768, 770, 772, 773, 774, 775, 776, 777, 778, 779, 784, 785, 786, 787, 788, 791, 792, 793, 794, 797, 802, 803, 804, 806, 807, 808, 809, 810, 811, 813, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868], "importance_sampl": [214, 561], "importerror": [816, 817, 818, 819, 821, 826, 827, 829, 832, 833], "imposs": [563, 826], "impress": 853, "improv": [4, 10, 21, 656, 689, 720, 843, 844, 846, 851, 856, 859, 860, 863, 866], "in_": [390, 399, 400, 403, 405, 406, 410, 413, 419], "in_degre": [4, 87, 89, 443, 681, 683, 701, 723, 745, 758, 763, 786, 801, 807, 835, 852], "in_dim": [425, 427, 429, 726, 728, 766, 768, 810, 811, 853], "in_dir": 695, "in_edg": [88, 701, 745, 786, 852], "in_edge_feat": 400, "in_feat": [384, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 412, 413, 416, 418, 419, 420, 421, 424, 426, 428, 441, 450, 454, 691, 712, 716, 717, 719, 720, 722, 728, 730, 737, 756, 758, 759, 760, 762, 768, 770, 777, 798, 801, 802, 803, 804, 806, 811, 813, 829, 834, 836, 837, 838, 846, 847, 850, 851, 852], "in_feat_nam": 666, "in_feats\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ef4\u5ea6": 770, "in_featur": [712, 717, 726, 729, 755, 756, 757, 758, 760, 766, 769, 797, 798, 800, 801, 803, 810, 812, 850, 856], "in_indx": 862, "in_memori": [309, 316, 831, 832, 833], "in_nod": 862, "in_node_feat": 400, "in_siz": [384, 386, 395, 401, 415, 417, 714, 715, 719, 720, 816, 817, 819, 821, 826, 827, 829, 869], "in_subgraph": [297, 300, 337, 538, 713, 755, 797], "in_test_mask": [197, 205], "in_train_mask": [197, 205], "in_valid_mask": [197, 205], "inbound": [214, 216, 219, 234, 241, 242, 297, 300, 333, 561, 562, 563, 564, 633, 797], "inc": 63, "incept": [666, 817], "incid": [13, 62, 63, 220, 245, 246, 247, 473, 695, 705, 712, 726, 790, 798, 819, 826, 837, 852], "includ": [4, 21, 22, 48, 62, 63, 132, 133, 138, 139, 144, 157, 158, 161, 162, 163, 170, 179, 191, 197, 205, 214, 216, 219, 230, 236, 240, 289, 309, 314, 319, 337, 338, 393, 402, 411, 418, 430, 432, 541, 556, 633, 687, 691, 694, 695, 698, 699, 706, 709, 718, 722, 723, 724, 726, 728, 729, 819, 828, 831, 832, 833, 837, 842, 843, 853, 856, 859, 863], "include_dst_in_src": 633, "include_original_edge_id": [309, 324], "include_reverse_edg": [322, 712, 826], "inclus": [21, 207], "incom": [20, 61, 100, 117, 214, 216, 297, 333, 351, 355, 403, 477, 478, 479, 480, 482, 483, 484, 485, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526, 649, 705, 797, 836, 851, 853, 856, 863], "incomplet": [4, 210, 213, 686, 733, 773, 827], "inconsist": [162, 389], "incorpor": [173, 730], "increas": [309, 407, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 557, 691, 822, 842], "increment": [560, 675, 859, 863], "incur": [246, 247, 333, 337, 338, 474, 475, 538, 718], "inde": [22, 633, 638], "indent": 780, "independ": [120, 570, 571, 643, 644, 703], "index": [4, 6, 21, 22, 95, 96, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 287, 288, 289, 294, 296, 298, 301, 302, 303, 305, 310, 315, 317, 326, 332, 389, 407, 579, 580, 643, 644, 685, 689, 692, 695, 701, 719, 723, 735, 745, 772, 775, 786, 821, 826, 827, 829, 831, 832, 833, 846, 851, 863], "indexes_follow": 301, "indexes_lik": 301, "indic": [4, 6, 9, 12, 30, 31, 32, 53, 54, 62, 63, 101, 102, 131, 135, 136, 139, 140, 142, 143, 145, 146, 149, 151, 152, 169, 171, 180, 183, 185, 189, 190, 196, 209, 210, 213, 218, 220, 232, 239, 240, 241, 246, 287, 288, 293, 294, 295, 296, 297, 298, 300, 301, 303, 305, 308, 310, 311, 312, 315, 317, 319, 325, 326, 330, 331, 332, 341, 344, 351, 352, 396, 442, 444, 445, 455, 474, 497, 539, 556, 557, 559, 560, 575, 576, 577, 578, 579, 580, 581, 583, 585, 586, 588, 589, 590, 592, 593, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 633, 641, 681, 689, 692, 694, 695, 698, 702, 703, 706, 717, 719, 724, 727, 730, 770, 813, 816, 817, 818, 819, 821, 826, 828, 829, 832, 833, 834, 839, 846, 850, 851, 852, 853, 856, 859], "indices1": [614, 626], "indices2": [614, 626], "indirectli": 699, "individu": [121, 122, 166, 297, 391, 436, 561, 695, 859], "indptr": [32, 297, 300, 303, 308, 310, 311, 317, 319, 323, 331, 579, 580, 611, 612, 821, 826, 829], "induc": [26, 134, 197, 209, 217, 219, 234, 246, 247, 297, 300, 303, 308, 333, 337, 338, 424, 425, 426, 428, 438, 474, 475, 538, 562, 563, 564, 633, 712, 835, 856, 863], "induced_dst": 633, "induced_src": 633, "induct": [160, 175, 194, 217, 394, 398, 419, 719, 853], "industri": 162, "ineffici": [14, 728], "inf": 444, "infeas": 714, "infer": [4, 131, 287, 290, 332, 455, 608, 610, 611, 612, 624, 638, 691, 695, 702, 710, 720, 757, 787, 800, 821, 843, 856, 859, 863], "inferenc": 843, "infin": [477, 479, 482, 484, 503, 505, 509, 511, 517, 519, 523, 525], "infinitesim": 395, "influenc": 134, "info": [203, 206], "info_path": [690, 736, 776], "inform": [4, 13, 22, 27, 28, 59, 95, 96, 101, 102, 114, 115, 116, 117, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 206, 220, 236, 237, 240, 245, 246, 247, 249, 250, 287, 292, 300, 303, 308, 314, 332, 333, 336, 342, 350, 389, 424, 425, 428, 453, 473, 474, 475, 538, 546, 547, 551, 552, 553, 555, 632, 639, 641, 642, 679, 680, 683, 685, 687, 689, 690, 692, 693, 694, 695, 702, 703, 711, 727, 728, 730, 772, 776, 815, 827, 831, 834, 836, 837, 838, 846, 851, 852, 853, 856, 859, 863, 869], "informat": 851, "infti": 422, "inher": [857, 866], "inherit": [310, 651, 685, 686, 692, 715, 721, 834, 839], "init": [4, 10, 382, 423, 426, 428, 453, 719, 722, 762, 806, 815, 818, 851, 853, 859, 862, 863], "init_att": 423, "init_beta": 387, "init_ep": [408, 409], "init_func": [4, 10, 453, 692, 738, 778], "init_graph": 862, "init_method": [827, 868, 869], "init_model": 868, "init_node_activ": 859, "init_process_group": [235, 691, 692, 737, 738, 777, 778, 827, 842, 846, 847, 868, 869], "init_tmp": [426, 428], "initi": [10, 13, 27, 28, 70, 118, 119, 128, 129, 168, 197, 205, 207, 293, 309, 315, 355, 389, 398, 403, 405, 406, 407, 408, 409, 410, 412, 413, 416, 419, 420, 421, 422, 426, 428, 429, 442, 451, 452, 453, 455, 549, 550, 565, 570, 571, 643, 644, 656, 657, 662, 691, 693, 722, 737, 738, 740, 777, 778, 781, 817, 825, 826, 827, 829, 842, 850, 851, 852, 856, 859, 862, 869], "initialize_hv": 859, "inner": [231, 714, 729, 800, 812, 852], "inner_edg": [240, 694, 695], "inner_nod": [240, 694, 695, 780], "innermost": 308, "innov": 852, "inp_dropout": 422, "inplac": [21, 27, 28, 70, 89, 112, 349, 815, 856], "input": [4, 5, 6, 9, 20, 21, 34, 53, 56, 57, 58, 60, 73, 87, 100, 109, 110, 116, 118, 119, 121, 122, 126, 130, 131, 132, 133, 135, 136, 138, 140, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 210, 214, 216, 220, 222, 223, 224, 225, 232, 234, 239, 240, 241, 243, 246, 247, 248, 249, 250, 287, 293, 297, 300, 301, 305, 313, 319, 326, 327, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 349, 350, 351, 352, 355, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 450, 451, 452, 455, 456, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 548, 549, 550, 551, 554, 555, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 592, 595, 596, 597, 598, 599, 606, 618, 632, 634, 638, 639, 640, 641, 642, 643, 644, 647, 648, 655, 656, 657, 660, 662, 666, 679, 683, 685, 692, 693, 695, 702, 706, 710, 711, 712, 715, 716, 717, 722, 723, 724, 726, 727, 728, 730, 764, 768, 770, 772, 779, 780, 800, 802, 807, 808, 811, 813, 817, 818, 821, 825, 826, 827, 828, 829, 836, 838, 842, 846, 847, 850, 851, 852, 853, 856, 859, 863, 868, 869], "input_": [723, 763, 807], "input_d": 422, "input_dict": 818, "input_dim": [425, 426, 427, 436], "input_dir": 780, "input_dst": [723, 763, 807], "input_feat": 411, "input_featur": [711, 717, 755, 756, 758, 760, 797, 798, 801, 803, 851], "input_id": [184, 382], "input_nod": [210, 214, 215, 216, 219, 220, 301, 305, 711, 714, 755, 756, 757, 758, 760, 797, 798, 800, 801, 803, 826, 829, 846, 847], "input_nodes_pre_time_window": 297, "input_nodes_timestamp": 297, "input_s": 868, "inputs\u662f\u8282\u70b9\u7684\u7279\u5f81": 768, "ins": 706, "insert": [300, 313, 692, 711, 719, 738, 778, 829], "insert_revers": [132, 133, 144, 170], "insid": [21, 201, 295, 297, 305, 310, 319, 330, 331, 402, 410, 422, 456, 695, 728], "insight": [850, 851, 852, 853, 856, 859, 862, 863], "inspect": [694, 695, 854, 856, 866], "inspir": [171, 422, 817, 836], "instal": [21, 392, 393, 394, 688, 734, 774, 780, 816, 817, 818, 819, 821, 843, 846], "instanc": [14, 20, 133, 144, 156, 162, 165, 168, 172, 186, 209, 291, 299, 310, 383, 424, 425, 426, 427, 428, 429, 695, 698, 706, 712, 716, 717, 726, 730, 819, 828, 835, 837, 838, 843, 852, 863, 868], "instanti": [31, 73, 91, 92, 247, 314, 475, 670, 671, 672, 673, 674, 675, 676, 677, 678], "instead": [4, 9, 21, 48, 57, 80, 116, 118, 168, 177, 178, 179, 186, 214, 216, 219, 221, 303, 341, 424, 425, 426, 427, 428, 429, 438, 561, 562, 563, 564, 643, 644, 648, 692, 699, 703, 712, 714, 716, 728, 802, 819, 827, 828, 838, 852, 853, 859, 862, 864, 866, 869], "institut": [695, 780, 851], "instruct": [21, 694, 815, 846], "instructon": 720, "instrument": 161, "insubgraph_sampl": 300, "int": [4, 6, 22, 27, 28, 34, 35, 38, 48, 53, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 82, 87, 88, 90, 93, 94, 95, 96, 100, 107, 114, 115, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 287, 291, 293, 297, 298, 301, 302, 303, 305, 307, 308, 312, 317, 323, 325, 329, 332, 333, 335, 336, 337, 338, 339, 340, 344, 351, 352, 353, 354, 381, 382, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 474, 538, 539, 546, 547, 548, 551, 552, 556, 557, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 591, 592, 594, 595, 596, 597, 598, 599, 608, 610, 611, 612, 613, 618, 624, 631, 639, 643, 644, 649, 656, 657, 658, 659, 662, 663, 666, 667, 670, 675, 687, 689, 700, 702, 719, 720, 730, 735, 746, 770, 775, 780, 785, 787, 804, 813, 831, 832, 833, 836, 837, 838, 839, 856, 859], "int16": [147, 174], "int32": [4, 59, 64, 71, 118, 119, 125, 126, 131, 249, 250, 287, 302, 310, 332, 393, 546, 547, 559, 564, 572, 573, 588, 601, 694, 695, 700, 702, 744, 746, 785, 787, 821, 826, 829, 832, 833], "int64": [4, 31, 59, 64, 71, 125, 126, 131, 138, 147, 165, 168, 174, 184, 186, 195, 219, 246, 249, 250, 287, 297, 332, 333, 337, 338, 474, 538, 546, 547, 559, 561, 638, 652, 653, 687, 694, 695, 702, 746, 780, 787, 835, 838, 839], "int8": [694, 695, 839], "integ": [22, 32, 39, 52, 78, 95, 96, 122, 125, 131, 138, 140, 142, 143, 189, 190, 200, 207, 210, 214, 216, 219, 240, 241, 249, 287, 297, 302, 305, 312, 325, 332, 386, 393, 401, 415, 418, 432, 497, 500, 554, 563, 572, 573, 638, 639, 687, 693, 694, 695, 700, 702, 703, 785, 815, 835, 868], "integr": [166, 694, 721, 727, 825, 864, 866], "intel": 720, "inter": [852, 860, 866], "interact": [52, 166, 175, 178, 390, 561, 562, 691, 698, 703, 747, 788, 839], "interaction_cutoff": 389, "interatom": 178, "interest": [687, 691, 859, 863], "interfac": [4, 6, 20, 165, 236, 498, 499, 692, 693, 697, 700, 703, 708, 717, 835, 863], "intermedi": [308, 426, 428, 668, 706, 710, 850], "intermediari": 853, "intern": [1, 4, 20, 22, 39, 52, 78, 126, 131, 178, 179, 249, 250, 287, 332, 382, 562, 563, 572, 573, 692, 693, 699, 702, 706, 724, 808, 818, 839, 852], "interpol": [297, 558], "intersect": [56, 197, 205], "interv": [817, 859, 862], "intimid": 852, "intra": [174, 852, 860, 866], "intra_src": 852, "introduc": [22, 77, 134, 158, 173, 191, 243, 340, 393, 395, 409, 414, 442, 443, 444, 445, 446, 447, 448, 449, 548, 631, 639, 656, 657, 659, 662, 663, 667, 681, 682, 684, 688, 697, 703, 705, 713, 714, 721, 725, 728, 817, 825, 826, 846, 852, 856, 863], "introduct": [697, 814, 836, 837, 838, 850], "introductori": 834, "inttensor": [563, 572, 573], "intuit": [22, 245, 473, 821, 868], "inv": 821, "inv_sigma": 410, "inv_vocab": 856, "invalid": [5, 173, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 442, 444, 445, 681, 693, 723, 850, 853], "invari": [437, 438], "invent": 836, "invers": [157, 819], "inverse_indic": [337, 338, 426, 428], "invert": [318, 856], "investig": 162, "invok": [4, 20, 22, 27, 34, 73, 93, 94, 100, 113, 114, 117, 126, 131, 156, 216, 235, 249, 250, 287, 332, 353, 383, 692, 693, 694, 695, 696, 703, 706, 720, 834, 846, 847, 868], "involv": [4, 21, 303, 305, 308, 318, 701, 711, 714, 715, 726, 728, 729, 730, 839, 850, 853, 868], "io": [162, 168, 186, 689, 735, 748, 775, 827], "iostream": 22, "iou": 856, "ip": [695, 696, 781, 846, 847], "ip_addr1": [846, 847], "ip_addr2": [846, 847], "ip_addr3": 846, "ip_addr4": 846, "ip_config": [235, 691, 692, 695, 696, 737, 738, 740, 777, 778, 781, 846, 847], "ipykernel_1041851": 839, "ipykernel_1042711": 852, "ipython": 817, "ip\u5730\u5740\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u7aef\u53e3": 740, "ip\u914d\u7f6e\u6587\u4ef6": 740, "irrespect": 863, "is_avail": [712, 717, 817, 827, 863, 868, 869], "is_bf16_support": 720, "is_block": [716, 723, 724, 759, 763, 764, 802, 807, 808], "is_cuda": 326, "is_gdata": 4, "is_homogen": 324, "is_input_lay": 851, "is_last_lay": [714, 715, 826, 827, 869], "is_libxsmm_en": 680, "is_pin": [89, 315, 316], "is_tempor": [145, 164, 166], "is_train": [827, 863, 869], "is_unibipartit": [44, 45, 79, 82, 104, 105], "is_valid": 859, "isab": 438, "isinst": [716, 719, 723, 724, 759, 763, 764, 802, 807, 808], "isn": 699, "isol": [130, 150, 246, 333, 337, 338, 538, 551, 702, 787, 797], "isomorph": [408, 409, 868], "isotrop": [178, 179], "issu": [21, 126, 131, 168, 249, 250, 287, 332, 686, 720, 733, 773, 828], "item": [4, 7, 22, 132, 133, 135, 136, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 175, 176, 177, 178, 179, 181, 183, 191, 192, 194, 196, 220, 222, 223, 224, 225, 293, 299, 301, 302, 305, 320, 321, 341, 383, 426, 559, 560, 687, 689, 697, 698, 711, 712, 713, 715, 718, 719, 720, 723, 724, 725, 726, 728, 729, 730, 735, 758, 763, 764, 765, 766, 768, 769, 770, 775, 782, 801, 804, 807, 808, 809, 810, 811, 812, 813, 818, 825, 826, 827, 829, 832, 833, 837, 838, 850, 851, 852, 853, 856, 859, 868, 869], "item_feat": [726, 729, 730, 766, 769, 770, 810, 812, 813], "item_id": 832, "item_sampl": [293, 300, 301, 303, 317], "item_set": [293, 299, 300, 301, 302, 303, 308, 317, 711, 827, 869], "itemsampl": [293, 300, 303, 308, 317, 711, 712, 714, 715, 717, 718, 719, 826, 827, 829, 869], "itemset": [292, 293, 299, 300, 301, 303, 304, 308, 309, 314, 317, 711, 712, 715, 717, 718, 827, 829, 832, 833, 869], "item\uc744": 810, "iter": [0, 3, 4, 6, 7, 34, 35, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 92, 93, 94, 100, 114, 131, 165, 168, 172, 177, 178, 179, 186, 209, 210, 211, 212, 213, 220, 246, 287, 291, 293, 301, 303, 308, 332, 333, 337, 338, 388, 422, 426, 428, 432, 436, 474, 538, 551, 552, 640, 683, 689, 702, 710, 712, 714, 715, 717, 718, 728, 760, 787, 797, 798, 800, 803, 817, 826, 829, 838, 859, 862], "iterabledatapip": 718, "iterate\ud558\uace0": [801, 803], "iterate\ud558\ub294": [800, 801, 803], "iterate\ud558\uba74\uc11c": [797, 811], "iterate\ud55c\ub2e4": [797, 811], "iterate\ud574\uc11c": 798, "iterating\ud558\ub294": 803, "iteration\ub9c8\ub2e4": 803, "iteration\uc744": 775, "iterator\ub294": 803, "iterator\ub97c": 803, "iterdatapip": [290, 301], "iterrow": 839, "itertool": 837, "ith": [196, 207], "its": [1, 4, 6, 10, 14, 22, 26, 45, 47, 68, 75, 79, 82, 105, 109, 138, 141, 146, 164, 165, 167, 168, 169, 172, 173, 182, 186, 209, 217, 245, 291, 297, 310, 316, 319, 339, 355, 383, 407, 410, 413, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 473, 561, 563, 567, 570, 571, 572, 573, 638, 639, 647, 668, 692, 693, 694, 695, 697, 702, 705, 711, 717, 720, 725, 726, 727, 728, 730, 817, 819, 821, 822, 828, 834, 838, 839, 846, 847, 850, 852, 853, 856, 859, 862, 863, 868], "itself": [21, 210, 430, 432, 548, 558, 560, 563, 568, 726, 819, 842, 850, 852, 863], "j": [4, 10, 21, 126, 250, 339, 355, 381, 385, 389, 390, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 421, 430, 432, 449, 560, 568, 572, 573, 632, 648, 706, 750, 791, 819, 821, 851, 852, 853, 856, 862, 863], "j4": 815, "j_1": [116, 555], "j_2": 555, "j_n": 116, "jake": [856, 862], "jean": 856, "ji": [404, 408, 413, 419, 706, 863], "jin": 853, "jinj": [862, 863], "jinja2": [826, 827, 829, 832, 833], "jinyang": 862, "jk": [404, 856], "jl": 856, "job": [21, 695, 696, 868], "join": [142, 156, 293, 425, 427, 686, 690, 691, 695, 733, 736, 773, 776, 814, 827, 832, 833, 846, 869], "joint": 859, "json": [4, 231, 240, 691, 692, 693, 694, 695, 696, 703, 737, 738, 739, 740, 777, 778, 779, 780, 781, 815, 846], "json\u4e2d\u7684\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 739, "json\u6587\u4ef6\u5305\u542b\u6240\u6709\u5212\u5206\u7684\u914d\u7f6e": 739, "json\u7684json\u6587\u4ef6": 739, "json\uacfc": 788, "judici": [854, 866], "jump": [454, 853], "jupyt": [692, 778, 820], "jure": 836, "just": [21, 22, 45, 79, 82, 105, 235, 683, 693, 695, 703, 715, 728, 730, 829, 832, 833, 838, 846, 847, 853], "k": [14, 21, 120, 121, 122, 178, 179, 183, 209, 219, 221, 222, 223, 224, 225, 226, 227, 335, 336, 337, 338, 339, 340, 343, 351, 352, 388, 389, 391, 395, 396, 404, 410, 415, 420, 421, 424, 425, 426, 428, 430, 432, 433, 434, 435, 437, 439, 440, 442, 446, 449, 455, 548, 554, 564, 567, 606, 607, 614, 631, 643, 644, 658, 659, 663, 666, 667, 715, 723, 724, 728, 729, 730, 758, 763, 764, 768, 769, 770, 801, 807, 808, 811, 812, 813, 818, 821, 836, 837, 852, 853, 856, 859, 862, 863], "k_i": 863, "k_iend": 863, "k_j": 863, "k_proj": 818, "kai": 856, "kappa": 303, "karat": [167, 699, 743, 784, 817, 839], "karate_club": 839, "karateclub": 25, "karateclubdata": [689, 735, 775], "karateclubdataset": [817, 839], "karlsruh": 132, "karypislab": [694, 780], "kd": [14, 339, 430, 432, 567], "kdd": [151, 152], "kde": 862, "keep": [6, 22, 139, 140, 186, 234, 303, 350, 395, 554, 647, 707, 718, 852, 856], "keep_orig_edg": 647, "keepdim": [720, 804, 859, 862, 863], "kei": [22, 26, 27, 28, 73, 108, 114, 115, 121, 122, 131, 148, 178, 179, 205, 210, 213, 221, 223, 240, 241, 242, 246, 288, 292, 295, 296, 297, 299, 305, 310, 319, 330, 331, 332, 333, 337, 338, 351, 382, 383, 384, 425, 426, 427, 474, 538, 539, 554, 565, 681, 687, 688, 689, 695, 708, 712, 717, 724, 734, 774, 818, 839, 846, 853, 856, 857, 859, 863, 864, 866], "kept": 130, "kera": [721, 805], "kernel": [5, 9, 34, 73, 93, 94, 100, 113, 168, 186, 389, 410, 437, 438, 449, 499, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526, 657, 720, 814, 822, 846, 850], "kevin": 748, "keyerror": [722, 723, 762, 763, 806, 807], "keyword": [121, 134, 151, 152, 240, 313], "kg": [430, 432], "kgdata": [689, 735, 775], "khop_in_subgraph": 338, "khop_out_subgraph": 337, "khopgraph": 13, "ki": [404, 863], "kick": [816, 817, 818], "kin": 853, "kind": [126, 210, 250, 314, 688, 853], "kipf": [816, 823, 834, 850], "kit": 843, "kl": 856, "knn": [339, 567], "knn_g": [339, 567], "knn_graph": [14, 567], "know": [21, 245, 473, 712, 729, 836, 839, 851, 869], "knowledg": [13, 21, 164, 166, 245, 452, 454, 473, 837, 851, 868], "knowledgegraphdataset": [157, 158, 191, 689, 735, 775], "known": [195, 455, 699, 856, 863], "known_host": 846, "konect": 167, "kv": 863, "kvstore": 4, "kwarg": [108, 121, 138, 139, 140, 210, 211, 212, 213, 215, 240, 313, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 424, 425, 426, 427, 428, 429, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 755, 797], "l": [243, 342, 386, 387, 388, 390, 391, 394, 395, 396, 397, 398, 399, 401, 402, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 424, 425, 426, 428, 429, 447, 455, 568, 606, 607, 614, 617, 625, 626, 660, 666, 710, 720, 723, 724, 729, 754, 755, 757, 763, 764, 769, 796, 797, 800, 804, 807, 808, 812, 816, 819, 821, 828, 836, 837, 846, 847, 850, 851, 852, 853, 856, 863], "l1": [431, 545], "l2": [339, 430, 431, 432, 545, 567, 722, 806, 851], "l2norm": 851, "l_": 852, "label": [4, 6, 13, 21, 25, 120, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 208, 213, 214, 216, 217, 219, 220, 230, 243, 244, 245, 293, 299, 301, 302, 303, 305, 309, 316, 317, 333, 343, 344, 381, 424, 426, 428, 429, 455, 472, 473, 538, 541, 552, 554, 565, 685, 688, 689, 690, 695, 699, 711, 712, 715, 717, 719, 720, 725, 726, 728, 730, 734, 735, 736, 756, 760, 765, 766, 768, 770, 772, 774, 775, 776, 798, 803, 804, 809, 810, 811, 813, 816, 817, 818, 819, 826, 827, 829, 831, 832, 833, 834, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 863, 868, 869], "label0_nod": 852, "label1": 852, "label_dict": [204, 344, 690, 736, 776, 839], "label_kei": [178, 179], "label_propag": 455, "labels_follow": [299, 301], "labels_item": 299, "labels_lik": [299, 301], "labels_us": 299, "labelsmooth": 863, "labl": 302, "labor": [214, 297, 303, 561], "laborsampl": 303, "lab\uc758": 789, "lacon": 817, "ladder": 172, "lake": 863, "lam": [422, 423], "lambda": [4, 34, 35, 407, 422, 423, 863], "lambda_": [391, 407], "lambda_max": [391, 396], "land": 548, "langl": [178, 179], "languag": [159, 164, 818, 835, 838, 856, 859, 863], "lapacian": 0, "laplacian": [340, 341, 391, 395, 422, 423, 446, 659, 818, 819], "laplacian_lambda_max": 391, "laplacian_p": 818, "laplacianp": [395, 446], "lapp": [13, 446], "larg": [3, 10, 11, 14, 22, 66, 123, 124, 125, 126, 131, 134, 168, 181, 209, 229, 230, 249, 250, 287, 309, 332, 339, 343, 394, 398, 414, 419, 430, 432, 453, 457, 472, 567, 633, 638, 645, 685, 690, 695, 704, 709, 713, 719, 723, 725, 728, 814, 815, 826, 828, 830, 831, 837, 838, 852, 863], "larger": [178, 240, 297, 305, 313, 426, 428, 457, 561, 707, 730, 828], "largest": [131, 287, 332, 341, 391, 396, 439, 564, 631, 643, 644, 667, 702, 787, 852], "last": [4, 5, 9, 208, 210, 213, 214, 216, 293, 297, 301, 407, 413, 606, 639, 644, 696, 705, 706, 712, 723, 818, 827, 842, 850, 853, 869], "latent": 856, "later": [149, 155, 185, 187, 193, 303, 387, 472, 692, 695, 815, 837], "latest": [695, 859], "latter": [355, 424, 425, 426, 427, 428, 429, 557, 692, 707, 712, 864, 866], "launch": [4, 453, 691, 692, 695, 719, 740, 778, 781, 827, 842, 868], "law": 695, "layer": [13, 208, 210, 214, 215, 216, 219, 220, 297, 303, 305, 308, 382, 384, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 446, 450, 454, 556, 561, 692, 707, 710, 711, 712, 714, 715, 717, 718, 719, 720, 721, 728, 729, 730, 757, 800, 803, 804, 805, 813, 821, 826, 827, 828, 829, 834, 836, 837, 838, 846, 847, 850, 853, 862, 864, 866, 869], "layer1": [850, 852, 853], "layer2": [850, 852, 853], "layer3": 852, "layer_depend": [214, 303], "layer_id": 305, "layer_idx": [714, 715, 719, 826, 827, 869], "layer_norm": 418, "layernorm": 863, "layer\uc640": 811, "layout": [31, 62, 63, 700], "lazi": [222, 223, 224, 225, 246, 247, 333, 337, 338, 474, 475, 538], "lazyfeatur": [222, 223, 224, 225], "lbrace": [186, 705, 749, 755, 790, 797], "ld_library_path": [694, 780], "ld_preload": 843, "ldot": [414, 454, 647], "lead": [387, 397, 399, 402, 403, 405, 406, 407, 410, 413, 420, 692, 700, 702, 723, 842], "leaf": [159, 184, 427, 429, 856], "leak": 4, "leakag": [220, 711], "leaky_relu": [821, 853], "leakyrelu": [392, 400, 403, 405, 406, 821, 853], "learn": [4, 10, 13, 14, 23, 160, 179, 194, 217, 343, 381, 384, 385, 387, 392, 394, 398, 402, 403, 405, 406, 410, 419, 420, 423, 424, 425, 426, 428, 439, 446, 452, 454, 455, 472, 558, 646, 652, 653, 654, 656, 689, 715, 719, 725, 726, 728, 730, 789, 801, 814, 815, 817, 818, 821, 823, 826, 827, 828, 829, 834, 835, 836, 837, 839, 850, 851, 852, 856, 857, 859, 862, 863, 866, 868, 869], "learn_beta": 387, "learn_ep": [408, 409], "learnabl": [4, 118, 119, 381, 385, 387, 389, 391, 392, 393, 394, 396, 397, 398, 400, 403, 405, 406, 407, 408, 409, 410, 412, 413, 416, 419, 420, 421, 422, 436, 443, 447, 448, 449, 450, 451, 452, 454, 548, 663, 683, 692, 722, 778, 806, 817, 853, 859], "least": [21, 119, 161, 182, 422, 442, 445, 633, 831, 852, 853], "leav": [706, 822, 835, 837, 856], "left": [118, 343, 388, 391, 394, 400, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 419, 434, 435, 449, 454, 498, 499, 500, 631, 666, 667, 705, 707, 723, 728, 729, 749, 755, 763, 769, 790, 797, 807, 812, 821, 828, 836, 837, 851, 853, 856, 863], "leftarrow": [836, 863], "legaci": 304, "legitim": 163, "len": [73, 138, 145, 146, 147, 164, 165, 166, 168, 169, 172, 174, 184, 186, 195, 207, 220, 300, 309, 323, 383, 454, 497, 501, 560, 567, 585, 607, 608, 611, 612, 626, 681, 687, 689, 714, 715, 719, 720, 724, 726, 729, 730, 735, 755, 758, 764, 766, 769, 770, 775, 797, 801, 804, 808, 810, 812, 813, 817, 818, 826, 827, 837, 838, 839, 842, 846, 847, 850, 851, 852, 856, 859, 862, 863, 868, 869], "length": [36, 37, 142, 164, 182, 205, 207, 217, 232, 239, 240, 288, 294, 296, 297, 298, 303, 308, 315, 326, 336, 355, 391, 447, 500, 501, 539, 558, 559, 560, 563, 568, 606, 607, 681, 683, 692, 698, 700, 785, 821, 835, 857, 862, 863, 866], "leq": [856, 863], "leskovec": 836, "less": [118, 119, 139, 161, 226, 339, 430, 432, 447, 557, 567, 695, 702, 713, 842, 853], "let": [43, 46, 74, 103, 126, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 497, 695, 705, 780, 817, 821, 826, 827, 829, 832, 833, 846, 847, 850, 852, 859, 868], "level": [0, 5, 23, 120, 128, 129, 148, 428, 549, 550, 565, 643, 644, 692, 693, 695, 699, 706, 724, 728, 778, 818, 836, 838, 839, 843, 850, 853, 856, 859, 862, 864, 866], "level\uc758": 778, "leverag": [385, 393, 394, 707, 720, 817, 822, 852, 856, 860, 866], "levi": 668, "lexicograph": [123, 575], "lexicon": 144, "lg": [342, 668, 852], "lg1": 852, "lg_batch": 183, "lg_layer": 852, "lg_x": 852, "lgnn": [854, 866], "lgnncore": 852, "lgnnlayer": 852, "lh": 498, "lhs_data": [498, 499], "lhs_field": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "lhs_target": 498, "li": [245, 400, 473, 657, 662, 666, 721, 748, 832, 833, 851, 853, 859, 862], "lib": [694, 780, 818, 826, 827, 829, 832, 833, 843, 846, 850, 853], "libgoogl": 843, "librari": [8, 12, 21, 22, 719, 815, 821, 822, 842, 843, 859], "libtcmalloc": 843, "libxsmm": 680, "licens": 814, "life": 4, "lifesci": [436, 441], "ligand": 389, "light": 22, "lightn": 827, "like": [9, 21, 22, 26, 116, 131, 162, 214, 216, 219, 226, 293, 299, 301, 303, 320, 321, 414, 426, 428, 556, 557, 681, 683, 686, 687, 692, 695, 703, 707, 712, 714, 716, 717, 722, 723, 725, 726, 728, 747, 766, 778, 788, 815, 829, 832, 833, 834, 836, 838, 839, 850, 863, 868], "like_edg": 832, "like_edges_path": 832, "like_orig_eids_0": 695, "liked_bi": 712, "likelihood": [557, 558, 729, 812, 852], "limit": [22, 244, 291, 309, 714, 822, 827, 852, 869], "limits_": [403, 851], "lin": [408, 416, 421], "line": [22, 183, 342, 660, 692, 694, 695, 696, 700, 815, 834, 846, 854, 862, 866, 868], "line_graph": [183, 852], "line_graph_degre": 183, "linear": [384, 386, 398, 402, 408, 409, 411, 413, 415, 416, 417, 419, 421, 424, 425, 426, 427, 428, 434, 442, 450, 457, 707, 712, 715, 716, 717, 719, 722, 726, 728, 751, 756, 759, 762, 766, 768, 793, 798, 802, 806, 810, 811, 816, 817, 818, 819, 826, 836, 837, 850, 851, 852, 853, 856, 859, 863, 868], "linear_deg": 852, "linear_dst": [707, 751, 793], "linear_fus": 852, "linear_model": 381, "linear_prev": 852, "linear_radiu": 852, "linear_src": [707, 751, 793], "linearity\uc640": 803, "linearli": [386, 418, 816], "linegraph": 13, "lingfan": [851, 859], "link": [2, 13, 139, 149, 157, 158, 185, 191, 211, 214, 216, 220, 243, 303, 305, 308, 450, 451, 452, 688, 692, 710, 711, 725, 728, 730, 734, 758, 774, 775, 801, 818, 825, 827, 829, 834, 840, 848, 852], "link_predict": [309, 826, 832, 833], "linkpr": 139, "linkproppr": [688, 734, 774, 847], "linspac": 862, "lint": 21, "linux": 843, "list": [4, 10, 21, 22, 27, 36, 37, 39, 45, 52, 54, 56, 73, 78, 92, 95, 96, 105, 117, 119, 121, 122, 123, 124, 125, 130, 131, 145, 148, 159, 178, 179, 183, 196, 197, 205, 207, 208, 209, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 236, 240, 247, 249, 287, 288, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 308, 309, 313, 316, 330, 332, 341, 344, 349, 350, 383, 385, 391, 395, 417, 418, 454, 456, 475, 541, 543, 554, 560, 561, 563, 565, 567, 572, 573, 577, 587, 610, 633, 638, 639, 645, 647, 649, 651, 654, 656, 665, 679, 683, 687, 688, 689, 690, 694, 695, 702, 706, 711, 712, 717, 719, 723, 724, 728, 729, 730, 774, 775, 787, 811, 831, 834, 835, 839, 843, 846, 852, 856, 859, 862, 863], "listen": 692, "liter": [133, 144], "literatur": 726, "littl": [21, 22, 70, 712, 728, 863], "live": [4, 851], "ll": 838, "load": [0, 2, 3, 138, 139, 140, 142, 143, 148, 156, 166, 179, 181, 184, 189, 190, 203, 204, 213, 236, 237, 238, 289, 305, 309, 315, 316, 328, 344, 424, 426, 428, 429, 684, 685, 689, 691, 692, 694, 710, 717, 719, 720, 732, 736, 743, 772, 774, 775, 776, 784, 804, 816, 817, 818, 825, 827, 831, 832, 833, 836, 839, 842, 846, 847, 850, 851, 852, 853, 859, 868], "load_cor": 842, "load_cora": [852, 853], "load_cora_data": [850, 853], "load_data": 819, "load_edg": 238, "load_feat": 236, "load_graph": [204, 565, 690, 699, 703, 736, 743, 747, 776, 784, 788, 835], "load_info": [690, 736, 776], "load_nod": 238, "load_partit": [4, 240, 694, 695], "load_partition_book": [4, 694, 695], "load_partition_feat": [694, 695], "load_state_dict": [842, 859], "load_subtensor": [691, 737, 777], "load_tensor": 695, "load_url": 859, "loadcsv": 839, "loader": [41, 209, 210, 211, 212, 213, 291, 852, 869], "loader_cor": [842, 843], "local": [4, 23, 70, 197, 214, 232, 236, 239, 240, 297, 303, 344, 391, 396, 453, 561, 565, 685, 686, 689, 690, 691, 692, 694, 695, 772, 775, 780, 818, 827, 834, 843, 846, 850, 853, 863], "local_edg": 780, "local_nod": 780, "local_node_idx": 780, "local_partit": 4, "local_scop": [424, 425, 426, 427, 428, 456, 716, 723, 726, 728, 729, 756, 758, 759, 763, 766, 768, 769, 798, 801, 802, 807, 810, 811, 812, 836, 837, 850], "local_to_global_nid": 385, "local_var": 70, "localhost": 21, "localscratch": 827, "locat": [4, 146, 169, 232, 239, 606, 617, 685, 689, 694, 821], "lock": [10, 67, 89, 112, 843], "log": [23, 132, 133, 144, 170, 200, 390, 395, 407, 417, 424, 425, 427, 429, 729, 769, 812, 837, 852, 853, 859, 862], "log_prob": 859, "log_softmax": [850, 853, 856, 859], "logic": [156, 863], "logical_and": 780, "login": 846, "logisticregress": 381, "logit": [355, 424, 425, 426, 427, 428, 429, 715, 720, 726, 728, 730, 766, 768, 770, 804, 810, 811, 813, 816, 817, 818, 821, 826, 834, 836, 850, 851, 853, 856, 859], "logit\uc73c\ub85c": 810, "logn": 430, "logp": [850, 853, 856], "logsigmoid": 859, "lollipop": 172, "long": [4, 14, 22, 59, 64, 68, 118, 131, 287, 332, 448, 455, 585, 681, 695, 702, 713, 715, 746, 787, 852, 856, 863], "longer": [857, 859, 866], "longest": [182, 568], "longtensor": [4, 226, 297, 300, 303, 308, 317, 319, 331, 382, 385, 412, 451, 452, 455, 556, 633, 692, 719, 738, 755, 778, 797, 818, 819, 835, 839, 852, 859], "look": [9, 21, 137, 171, 180, 182, 188, 221, 714, 716, 717, 726, 826, 827, 829, 832, 833, 835, 856, 859, 863], "lookup": [22, 851], "loop": [21, 62, 63, 116, 117, 181, 226, 339, 387, 393, 397, 399, 402, 403, 405, 406, 407, 410, 413, 418, 420, 430, 431, 432, 545, 553, 557, 567, 649, 664, 691, 692, 694, 695, 698, 714, 777, 783, 803, 817, 819, 842, 843, 852, 853, 859, 863], "loopi": 852, "loss": [4, 10, 381, 385, 424, 425, 426, 427, 428, 429, 453, 691, 692, 711, 712, 715, 717, 719, 720, 726, 728, 729, 730, 737, 738, 755, 756, 758, 760, 766, 768, 769, 770, 777, 778, 797, 798, 801, 803, 804, 810, 811, 812, 813, 816, 817, 818, 819, 826, 827, 828, 829, 834, 836, 837, 838, 842, 846, 847, 850, 851, 852, 853, 856, 859, 863, 868, 869], "loss_comput": 863, "loss_fcn": [691, 720, 737, 777, 816, 818, 846, 847], "loss_perm1": 852, "loss_perm2": 852, "loss\uac00": 804, "loss\ub97c": [803, 812, 813], "loss\uc5d0": 804, "lot": [22, 168, 186, 690, 713, 714, 728, 729], "low": [5, 240, 245, 291, 339, 395, 427, 429, 430, 432, 451, 452, 473, 565, 567, 692, 693, 707, 778, 815, 842, 853], "low2high": [427, 429], "lower": [22, 423, 689, 692, 735, 775, 836, 853, 862, 864, 866], "lowest": [178, 179], "lp": [451, 452, 832, 833], "lp_task": [832, 833], "lp_test_follow_index": 832, "lp_test_follow_indexes_path": 832, "lp_test_follow_label": 832, "lp_test_follow_labels_path": 832, "lp_test_follow_neg_dst": 832, "lp_test_follow_neg_index": 832, "lp_test_follow_neg_se": 832, "lp_test_follow_neg_src": 832, "lp_test_follow_se": 832, "lp_test_follow_seeds_path": 832, "lp_test_index": 833, "lp_test_indexes_path": 833, "lp_test_label": 833, "lp_test_labels_path": 833, "lp_test_like_index": 832, "lp_test_like_indexes_path": 832, "lp_test_like_label": 832, "lp_test_like_labels_path": 832, "lp_test_like_neg_dst": 832, "lp_test_like_neg_index": 832, "lp_test_like_neg_se": 832, "lp_test_like_neg_src": 832, "lp_test_like_se": 832, "lp_test_like_seeds_path": 832, "lp_test_neg_dst": 833, "lp_test_neg_index": 833, "lp_test_neg_se": 833, "lp_test_neg_src": 833, "lp_test_se": 833, "lp_test_seeds_path": 833, "lp_train_follow_se": 832, "lp_train_follow_seeds_path": 832, "lp_train_like_se": 832, "lp_train_like_seeds_path": 832, "lp_train_se": 833, "lp_train_seeds_path": 833, "lp_val_follow_index": 832, "lp_val_follow_indexes_path": 832, "lp_val_follow_label": 832, "lp_val_follow_labels_path": 832, "lp_val_follow_neg_dst": 832, "lp_val_follow_neg_index": 832, "lp_val_follow_neg_se": 832, "lp_val_follow_neg_src": 832, "lp_val_follow_se": 832, "lp_val_follow_seeds_path": 832, "lp_val_index": 833, "lp_val_indexes_path": 833, "lp_val_label": 833, "lp_val_labels_path": 833, "lp_val_like_index": 832, "lp_val_like_indexes_path": 832, "lp_val_like_label": 832, "lp_val_like_labels_path": 832, "lp_val_like_neg_dst": 832, "lp_val_like_neg_index": 832, "lp_val_like_neg_se": 832, "lp_val_like_neg_src": 832, "lp_val_like_se": 832, "lp_val_like_seeds_path": 832, "lp_val_neg_dst": 833, "lp_val_neg_index": 833, "lp_val_neg_se": 833, "lp_val_neg_src": 833, "lp_val_se": 833, "lp_val_seeds_path": 833, "lpe": 446, "lr": [4, 10, 381, 385, 424, 425, 426, 428, 429, 453, 691, 692, 715, 719, 720, 737, 738, 740, 777, 778, 781, 804, 816, 817, 818, 819, 826, 827, 834, 836, 837, 838, 846, 847, 850, 851, 852, 853, 856, 863, 868, 869], "lr1": [692, 738, 778], "lr2": [692, 738, 778], "lr_schedul": 818, "lsc": 289, "lsc_2part": 695, "lsc_chunk": 695, "lstm": [419, 436, 454, 722, 762, 806, 824, 857, 858, 860, 863, 866], "lt": [14, 818, 819, 826, 827, 829, 832, 833], "lumo": [178, 179], "lut": 863, "lvert": [449, 722, 762, 806], "m": [5, 9, 21, 62, 63, 73, 91, 92, 93, 94, 100, 113, 126, 128, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 349, 386, 395, 401, 415, 417, 424, 425, 427, 430, 432, 438, 456, 563, 606, 607, 614, 617, 625, 626, 675, 676, 677, 678, 706, 708, 716, 720, 723, 727, 729, 750, 752, 759, 763, 767, 769, 791, 792, 794, 802, 804, 807, 812, 815, 819, 821, 827, 828, 836, 850, 852, 859, 862], "m_": [401, 705, 749, 790, 828, 836], "m_i": 401, "m_r": 452, "m_v": [828, 836], "machin": [4, 177, 178, 179, 211, 212, 232, 239, 240, 453, 689, 691, 692, 693, 694, 695, 696, 720, 789, 814, 822, 834, 839, 846, 847, 852, 856, 859, 860, 863, 866, 870], "machine_id": 4, "made": [181, 424, 425, 426, 428, 851, 863], "mag": [289, 695, 717, 780], "mag240m": 289, "mag_lsc_partit": 695, "maggi": 748, "magnitud": 853, "mag\uc758": 780, "mai": [4, 6, 20, 21, 41, 116, 186, 214, 220, 226, 236, 291, 293, 318, 351, 386, 415, 418, 539, 557, 638, 639, 686, 687, 689, 691, 692, 695, 703, 711, 722, 723, 724, 726, 727, 728, 729, 730, 733, 773, 815, 817, 827, 834, 835, 837, 839, 846, 851, 869], "mailbox": [5, 20, 100, 263, 264, 265, 266, 675, 676, 678, 706, 720, 723, 750, 763, 791, 804, 807, 836, 853, 856, 859, 863], "main": [4, 21, 210, 291, 691, 692, 718, 728, 768, 811, 821, 822, 827, 842, 843, 852, 853, 869], "mainland": 23, "mainli": [4, 231, 692], "maintain": [4, 6, 10, 27, 28, 114, 115, 116, 117, 126, 130, 131, 145, 246, 247, 249, 250, 287, 291, 332, 333, 336, 342, 350, 474, 475, 538, 552, 555, 632, 641, 642, 728, 846, 856, 863], "major": [144, 232, 239, 700, 719, 721, 728, 785, 827, 832, 846, 869], "make": [8, 20, 21, 22, 70, 120, 122, 137, 140, 162, 171, 180, 182, 188, 198, 210, 214, 215, 216, 226, 229, 230, 241, 242, 245, 293, 297, 382, 408, 414, 419, 424, 425, 433, 435, 439, 440, 442, 445, 473, 557, 561, 563, 665, 671, 681, 685, 686, 689, 690, 691, 692, 694, 696, 702, 706, 716, 717, 726, 728, 773, 780, 810, 815, 818, 834, 835, 837, 840, 856, 862, 863], "make_model": 863, "make_shar": 22, "makedir": [690, 736, 776, 832, 833], "manag": [288, 293, 296, 316, 692, 703, 815, 822, 827, 869], "mandatori": [21, 231, 831], "manhattan": [431, 545], "mani": [4, 22, 122, 214, 226, 291, 557, 561, 684, 687, 692, 696, 699, 711, 721, 723, 818, 834, 835, 836, 837, 846, 856, 859, 863], "manifold": 410, "manipul": [0, 13, 22, 306, 853], "manner": [827, 862], "manual": [4, 101, 102, 155, 168, 186, 187, 193, 291, 387, 399, 402, 403, 405, 406, 407, 410, 413, 415, 418, 420, 694, 699, 814, 827, 836, 843, 846, 869], "manual_se": 868, "manylinux1_x86_64": 826, "map": [4, 5, 20, 26, 43, 46, 47, 74, 75, 101, 102, 103, 109, 121, 130, 131, 186, 220, 231, 234, 240, 297, 301, 305, 310, 318, 319, 322, 325, 330, 331, 332, 382, 384, 385, 407, 416, 425, 426, 430, 432, 434, 539, 633, 641, 647, 687, 693, 694, 712, 723, 724, 763, 779, 807, 835, 846, 852, 859, 863], "map_to_homo_eid": [4, 693, 779], "map_to_homo_nid": [4, 693, 779], "map_to_per_etyp": [4, 241, 693, 779], "map_to_per_ntyp": [4, 241, 693, 779], "mapper": 301, "mapperiterdatapip": 306, "margin": [729, 812], "mark": [144, 167, 222, 223, 224, 225, 243, 837], "marker": 862, "marketplac": 698, "markupsaf": [826, 827, 829, 832, 833], "mask": [22, 132, 133, 140, 144, 150, 154, 157, 158, 159, 160, 161, 162, 163, 170, 173, 176, 181, 184, 191, 192, 194, 197, 198, 205, 216, 231, 232, 239, 246, 424, 425, 426, 428, 442, 444, 445, 455, 474, 654, 681, 685, 689, 720, 725, 726, 730, 755, 770, 772, 775, 797, 809, 813, 839, 846, 850, 853, 856, 863], "massiv": [694, 695, 710], "master": [21, 165, 842], "master_addr": 842, "master_port": 842, "mat": [628, 686, 689, 733, 735, 773, 775, 852], "mat_path": [689, 735, 775], "match": [4, 5, 9, 118, 199, 200, 297, 310, 349, 350, 353, 428, 456, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 560, 686, 733, 773, 821], "materi": [9, 89, 713, 835, 859], "materialize_data": 108, "math": [245, 403, 473, 643, 644, 706, 723, 783, 797, 812, 850, 852, 853, 856, 863], "math_": 850, "mathbb": [705, 749, 790, 817, 818, 819, 859, 863], "mathbf": [403, 407, 412, 455], "mathcal": [244, 343, 355, 390, 393, 394, 395, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 415, 416, 418, 419, 472, 498, 499, 570, 571, 647, 705, 706, 723, 724, 728, 729, 749, 750, 755, 763, 764, 768, 769, 790, 791, 797, 807, 808, 811, 812, 821, 828, 836, 837, 853, 856], "mathemat": [120, 244, 343, 392, 393, 404, 407, 413, 451, 452, 472, 606, 617, 707, 816, 817, 836, 850, 852], "mathrm": [118, 245, 387, 394, 399, 400, 403, 405, 406, 408, 409, 410, 412, 416, 419, 434, 436, 473, 723, 763, 807, 863], "matmul": [821, 851], "matplotlib": [817, 852, 856, 859, 862], "matric": [41, 62, 63, 118, 119, 183, 386, 403, 418, 442, 606, 609, 614, 615, 617, 626, 647, 699, 817, 820, 821, 850], "matrix": [0, 9, 13, 14, 30, 31, 32, 62, 63, 118, 119, 126, 131, 146, 169, 177, 250, 287, 332, 335, 336, 339, 342, 388, 396, 397, 398, 400, 406, 407, 410, 413, 420, 421, 430, 431, 432, 447, 452, 455, 457, 497, 498, 499, 500, 545, 563, 567, 572, 573, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 647, 656, 657, 662, 666, 699, 707, 719, 726, 727, 766, 810, 814, 816, 817, 818, 819, 820, 835, 850, 851, 853, 854, 866], "matrix\uc774\ub2e4": 779, "matter": [21, 298, 436, 852, 853, 863], "mat\u6587\u4ef6\u4e0b\u8f7d\u5230\u76ee\u5f55": 733, "max": [5, 9, 73, 117, 343, 345, 346, 383, 391, 394, 395, 408, 410, 416, 417, 435, 454, 477, 482, 499, 501, 503, 509, 517, 523, 549, 550, 572, 573, 610, 611, 612, 624, 649, 681, 702, 706, 708, 722, 723, 729, 730, 750, 752, 762, 763, 769, 770, 787, 791, 794, 806, 807, 812, 813, 821, 850, 852, 859, 862, 864, 866, 868], "max_": [402, 435], "max_allow_nod": 168, "max_cache_size_in_byt": 298, "max_degre": [443, 683], "max_depth": 863, "max_dist": [448, 683], "max_in_degre": [392, 393, 394], "max_len": [447, 681, 683], "max_node_typ": 449, "max_num_nod": [168, 186, 681, 683], "max_num_v": 172, "max_queue_s": 235, "max_uva_thread": 291, "maxim": [6, 232, 235, 239, 381, 695, 836, 843, 859], "maximum": [6, 118, 119, 168, 172, 186, 392, 393, 394, 395, 402, 417, 442, 443, 444, 445, 447, 448, 449, 556, 592, 595, 666, 683, 728, 729, 812, 853, 857, 863, 866], "mayb": 21, "mb": [695, 824, 826, 841, 845, 849, 855, 858, 861, 865, 867, 871], "mcaulei": [135, 136], "mckee": 554, "mct": [427, 429], "md": [210, 815], "mean": [4, 5, 9, 10, 73, 117, 137, 147, 150, 154, 176, 177, 180, 210, 211, 212, 240, 291, 295, 297, 305, 308, 310, 319, 331, 347, 348, 355, 383, 394, 395, 407, 408, 410, 413, 416, 417, 419, 424, 425, 427, 430, 431, 432, 433, 434, 436, 437, 439, 440, 478, 483, 499, 501, 504, 510, 518, 524, 546, 547, 549, 550, 592, 596, 632, 633, 641, 649, 669, 692, 702, 706, 708, 714, 715, 716, 719, 720, 722, 723, 726, 729, 730, 750, 752, 759, 762, 763, 766, 769, 770, 778, 787, 791, 794, 801, 802, 804, 806, 807, 810, 812, 813, 816, 817, 818, 821, 826, 827, 829, 834, 836, 837, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 869], "mean_nod": [425, 426, 427, 428, 728, 768, 811, 838], "mean_udf": 836, "meaning": 727, "meaningless": 116, "meant": [22, 699], "measur": [13, 120, 161, 244, 245, 339, 343, 427, 429, 430, 432, 451, 452, 472, 473, 567, 683, 827, 853, 863, 869], "mechan": [5, 20, 22, 447, 448, 449, 718, 727, 818, 852, 853, 859, 863, 864, 866, 869], "medium": 14, "meet": [388, 817], "mem": [10, 824, 841, 845, 849, 855, 858, 861, 865, 867, 871], "member": [21, 426, 428, 706, 836, 837, 839, 852, 868], "memmap": 695, "memo": 5, "memori": [4, 9, 10, 14, 67, 89, 112, 126, 131, 184, 210, 235, 249, 250, 287, 292, 297, 298, 312, 315, 316, 328, 332, 339, 354, 430, 432, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 557, 567, 639, 691, 695, 702, 707, 710, 713, 714, 720, 804, 815, 822, 830, 831, 832, 833, 837, 846, 856, 863], "meng": 748, "mention": [692, 694, 695, 714, 863], "merg": [21, 229, 230, 679, 703, 706, 708, 724, 726, 788, 838, 852, 853], "merit": 22, "merlin": 210, "messag": [1, 13, 53, 73, 91, 92, 93, 94, 100, 113, 127, 130, 131, 178, 179, 208, 210, 211, 212, 214, 215, 216, 219, 220, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 387, 388, 389, 390, 393, 395, 397, 399, 402, 403, 405, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 428, 429, 477, 478, 479, 480, 482, 483, 484, 485, 499, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526, 540, 541, 542, 543, 544, 561, 633, 670, 671, 672, 673, 674, 675, 676, 677, 678, 694, 704, 712, 714, 715, 716, 717, 721, 722, 724, 725, 728, 730, 748, 789, 794, 797, 798, 801, 803, 804, 809, 813, 814, 829, 835, 837, 850, 851, 853, 854, 857, 859, 864, 866], "message_func": [73, 91, 92, 93, 94, 100, 113, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 540, 541, 542, 543, 544, 706, 708, 709, 750, 752, 753, 791, 794, 795, 836, 851, 853, 856, 859, 863], "meta": [4, 148, 292, 314, 385, 453, 687, 693, 695, 856], "meta_g": 72, "metadata": [4, 236, 240, 288, 294, 296, 297, 309, 314, 315, 687, 692, 693, 694, 695, 696, 719, 780, 826, 827, 829, 830, 831, 832, 833, 869], "metadata_path": [832, 833], "metagraph": [13, 26, 101, 102, 117, 119, 122, 127, 130, 131, 173, 220, 246, 332, 333, 337, 338, 425, 474, 538, 546, 555, 638, 641, 668, 679, 687, 703, 747, 788], "metapath": [350, 385, 556, 559, 560, 647], "meth": 856, "method": [1, 22, 89, 112, 160, 194, 208, 209, 210, 217, 218, 220, 221, 232, 239, 240, 290, 300, 303, 313, 339, 343, 382, 383, 386, 391, 403, 405, 406, 419, 430, 432, 472, 501, 540, 542, 556, 567, 639, 687, 699, 702, 710, 711, 714, 715, 725, 726, 827, 828, 834, 835, 837, 839, 843, 850, 851], "methodologi": [633, 714, 729], "meti": [4, 6, 209, 232, 239, 240, 351, 352, 554, 695, 739, 780, 846], "metirs\ub97c": 780, "metis_partition_assign": [209, 554], "metis\u4ec5\u5e73\u8861\u6bcf\u4e2a\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u6570": 739, "metis\u5212\u5206\u7684\u597d\u5904\u5728\u4e8e": 739, "metis\uc640": 780, "metis\uc740": 780, "metis\uc758": 780, "metric": [21, 339, 430, 431, 432, 545, 567, 714, 826, 829, 837, 846, 847], "metric\uc744": 800, "mf": [827, 869], "mfg": [127, 131, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 712, 715, 717, 798, 801, 803, 828, 829, 847], "mfg\uac00": 797, "mfg\ub4e4\ub85c": 797, "mfg\ub4e4\uc740": 797, "mfg\ub4e4\uc758": [797, 798, 803], "mfg\ub85c": 797, "mfg\ub97c": [797, 803], "mfg\uc5d0": 802, "mfg\uc5d0\uc11c": 802, "mfg\uc5d0\uc11c\uc758": 797, "mfg\uc758": [797, 798, 803], "mfg\uc778": 802, "mgf\uac00": 802, "mha": 818, "michal": 839, "michel": 167, "micro": 853, "microbenchmark": 822, "microsoft": [151, 152, 289, 695], "middl": [142, 143], "might": [350, 389, 698, 708, 728, 827, 843, 852], "migrat": 21, "mikhail": 851, "million": [453, 710, 720, 814, 827, 829], "min": [5, 9, 73, 117, 243, 383, 394, 395, 417, 479, 484, 499, 501, 505, 511, 519, 525, 549, 550, 608, 649, 681, 706, 708, 722, 729, 750, 752, 762, 769, 791, 794, 801, 806, 812, 821, 852], "min_num_v": 172, "mind": [691, 852], "mine": [132, 171], "minesweep": 171, "mini": [4, 7, 165, 168, 172, 186, 208, 210, 220, 306, 689, 691, 692, 709, 710, 713, 717, 723, 728, 777, 814, 825, 827, 838, 842], "mini_batch": [712, 717], "mini_cn": 737, "mini_feature_dataset": 687, "mini_featureless_dataset": 687, "mini_hetero_dataset": 687, "mini_multi_dataset": 687, "minibatch": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 290, 293, 301, 302, 303, 306, 308, 317, 322, 710, 714, 718, 798, 825, 826, 827, 828, 829, 831, 838, 870], "minibatcher_default": [293, 301], "minibatchtransform": [295, 307, 313, 712], "minigcdataset": [689, 735, 775], "minim": [8, 21, 22, 240, 352, 381, 687, 694, 695, 717, 718, 729, 852, 853], "minimum": [6, 9, 172, 186, 297, 395, 417, 592, 597, 665, 706, 728, 852], "minji": [850, 852, 853, 856], "minkowski": [431, 545], "minst": 169, "minut": [164, 834, 835, 836, 837, 838, 839, 868], "misc": 13, "miss": [687, 851, 853], "mix": [9, 14, 307, 417, 704, 706, 789, 791, 852, 854, 866], "mixtur": [183, 410], "mkdir": [815, 846], "ml": 173, "mle": 859, "mlp": [401, 417, 422, 446, 726, 728, 768, 811, 837], "mlppredictor": [726, 766, 810, 837], "mlp\ub97c": 810, "mlsoar": 748, "mm": 852, "mmap": [832, 833], "mmap_mod": 315, "mnist": [14, 169, 862], "mod": [383, 724, 764, 808], "mod_arg": [383, 724, 764, 808], "mod_kwarg": [383, 426, 724, 764, 808], "mode": [4, 147, 164, 166, 174, 175, 184, 195, 209, 217, 235, 351, 352, 454, 456, 690, 736, 776, 815, 817, 856, 863], "model": [4, 7, 9, 12, 14, 23, 70, 120, 158, 159, 167, 183, 191, 197, 205, 210, 213, 222, 223, 224, 225, 293, 381, 385, 386, 390, 392, 393, 404, 410, 412, 413, 414, 416, 418, 420, 421, 424, 425, 426, 427, 428, 429, 437, 438, 446, 451, 454, 457, 556, 558, 681, 682, 689, 691, 692, 696, 698, 703, 708, 711, 713, 714, 718, 719, 720, 721, 723, 727, 729, 737, 738, 755, 756, 758, 760, 766, 768, 769, 770, 777, 778, 797, 798, 801, 803, 804, 810, 811, 812, 813, 814, 815, 816, 817, 819, 821, 822, 824, 834, 835, 836, 842, 852, 853, 854, 855, 856, 857, 858, 861, 863, 865, 867], "model_opt": 863, "model_state_dict": 842, "model_typ": 446, "model_zoo": 859, "modelnet": 14, "modif": [442, 445, 691, 846, 847], "modifi": [8, 148, 149, 155, 185, 187, 193, 198, 291, 297, 315, 316, 442, 445, 635, 636, 637, 717, 727, 814, 815, 842, 846], "modul": [4, 6, 8, 13, 18, 21, 235, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 656, 657, 658, 659, 660, 662, 663, 666, 682, 683, 691, 704, 710, 712, 714, 715, 717, 719, 720, 725, 726, 728, 729, 730, 756, 757, 758, 759, 760, 762, 764, 766, 768, 769, 770, 798, 800, 801, 802, 803, 804, 805, 806, 808, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 828, 829, 834, 837, 838, 840, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "modular": 695, "moduledict": [425, 427, 716, 724, 759, 764, 802, 808], "modulelist": [683, 714, 715, 719, 720, 804, 817, 818, 826, 827, 846, 847, 851, 852, 853, 859, 869], "mol": [178, 179], "mol_encod": 818, "molass": 748, "molecul": [177, 178, 179, 441], "molecular": [178, 179, 195, 389, 436, 441, 449, 838], "moleculenet": 179, "molhiv": [138, 688, 734, 774, 818], "moment": [178, 179, 395, 417, 554], "moment3": [395, 417], "moment4": [395, 417], "moment5": [395, 417], "monitor": 862, "mont": [427, 429], "month": [163, 181], "monthli": [149, 185], "more": [3, 4, 9, 20, 21, 22, 27, 28, 66, 91, 95, 96, 120, 122, 156, 161, 168, 214, 216, 226, 230, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 305, 336, 389, 407, 424, 425, 426, 428, 453, 473, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 556, 557, 562, 563, 633, 639, 681, 687, 689, 690, 691, 692, 695, 699, 703, 707, 709, 710, 711, 712, 713, 717, 718, 719, 722, 724, 726, 728, 730, 747, 788, 814, 815, 817, 819, 821, 827, 832, 833, 838, 839, 842, 843, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868], "moreov": [118, 119], "most": [1, 14, 116, 126, 131, 147, 151, 152, 159, 182, 226, 249, 250, 287, 332, 427, 429, 556, 633, 689, 690, 692, 693, 702, 706, 711, 716, 720, 726, 727, 728, 730, 821, 834, 843, 863], "mostli": 22, "motif": [141, 142, 143, 189, 190, 853], "mount": 846, "move": [4, 89, 108, 578, 581, 686, 693, 717, 817, 827, 863, 869], "movement": [246, 247, 333, 337, 338, 474, 475, 538, 718], "movi": [43, 173, 852], "movielen": 173, "mp": [293, 827, 842, 868, 869], "mpicc": [694, 780], "mpirun": [694, 780], "mpmath": [826, 827, 829, 832, 833], "mpnn": [416, 436], "mq": 563, "msbuild": 815, "msg": [263, 264, 265, 266, 415, 850, 851, 852, 863], "mu": [178, 179, 410, 449], "mu_": 415, "mu_k": 410, "much": [4, 122, 139, 245, 297, 473, 557, 561, 707, 814, 822, 828, 832, 833, 846, 851, 853, 859, 863], "mufei": [851, 853, 859], "muhyun": 789, "mul": [9, 259, 260, 273, 274, 283, 284, 442, 445, 493, 494, 498, 499, 516, 517, 518, 519, 520, 521, 534, 535, 620, 706, 750, 791, 821], "mulbackward0": 9, "multi": [9, 41, 149, 158, 162, 185, 191, 194, 293, 302, 392, 399, 403, 404, 405, 406, 415, 442, 445, 447, 448, 449, 451, 453, 546, 547, 642, 683, 689, 695, 700, 713, 717, 729, 730, 814, 824, 825, 826, 829, 834, 835, 836, 844, 846, 851, 854, 864, 866, 870, 871], "multi30k": 863, "multi_update_al": [425, 427, 708, 724, 752, 764, 794, 808], "multiclass": [165, 426, 427, 428, 429, 455, 819, 827, 869], "multidigraph": [72, 638], "multigraph": [48, 66, 118, 119, 698, 783, 859], "multihead": 437, "multiheadattent": 863, "multiheadgatlay": 853, "multilabel": 455, "multilay": [214, 215, 216, 303, 561, 717, 726], "multilayerdropoutsampl": [755, 797], "multilayerfullneighborsampl": [755, 756, 757, 758, 760, 797, 798, 800, 801, 803], "multilayerneighborsampl": [210, 692, 738, 755, 778, 797, 846, 847], "multilevel": [351, 352], "multinomi": [715, 758, 801], "multipl": [0, 4, 7, 9, 14, 22, 26, 27, 28, 36, 37, 41, 43, 46, 47, 48, 51, 52, 54, 55, 56, 57, 60, 61, 65, 74, 75, 77, 87, 88, 90, 91, 92, 95, 96, 103, 107, 118, 126, 128, 129, 130, 131, 229, 230, 240, 249, 250, 287, 288, 291, 292, 296, 297, 303, 308, 309, 316, 332, 339, 341, 344, 382, 383, 385, 390, 417, 426, 428, 430, 431, 432, 441, 442, 445, 453, 454, 497, 498, 499, 500, 545, 549, 550, 553, 556, 560, 561, 565, 567, 570, 571, 581, 606, 614, 615, 617, 632, 633, 641, 647, 651, 681, 683, 691, 692, 693, 695, 698, 702, 708, 713, 716, 718, 724, 728, 729, 730, 794, 815, 817, 818, 822, 827, 832, 833, 834, 837, 843, 846, 850, 851, 853, 854, 859, 863, 866, 868, 869], "multipli": [5, 183, 216, 395, 417, 424, 425, 549, 550, 606, 607, 614, 617, 622, 625, 626, 706, 720, 727, 816, 821, 851, 863], "multiprocess": [4, 291, 718, 827, 868, 869], "multiprocessor": 291, "multpli": 727, "music": [137, 161], "must": [4, 6, 9, 27, 28, 34, 35, 36, 37, 43, 46, 48, 51, 53, 54, 55, 57, 58, 60, 61, 73, 74, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 113, 118, 119, 122, 125, 130, 131, 138, 139, 140, 147, 164, 174, 175, 197, 198, 205, 209, 210, 211, 212, 214, 216, 218, 219, 220, 241, 242, 246, 249, 250, 287, 288, 294, 296, 297, 298, 302, 303, 308, 315, 316, 332, 333, 335, 337, 338, 340, 341, 342, 353, 383, 387, 390, 395, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 413, 417, 418, 419, 425, 426, 427, 428, 429, 432, 455, 474, 500, 501, 538, 548, 549, 550, 551, 554, 558, 559, 560, 561, 562, 563, 564, 567, 568, 572, 573, 592, 595, 596, 597, 599, 608, 626, 631, 633, 641, 679, 685, 687, 689, 692, 693, 696, 700, 701, 703, 706, 713, 716, 747, 786, 788, 799, 821, 835, 851, 856], "mutag": [25, 165, 168, 170, 186, 424, 428, 429, 728, 768, 811], "mutat": [13, 70, 856, 859], "mutual": [149, 161, 185, 216, 220, 245, 473, 560, 698, 868], "mxnet": [4, 9, 13, 21, 23, 199, 200, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 689, 702, 716, 721, 728, 730, 761, 805, 811, 814, 822, 854, 866], "mxnet\uacfc": 813, "mxnet\uc5d0\uc11c\ub294": 775, "mxnet\uc758": 787, "mxnet\uc774\ub098": 802, "my": [695, 696], "my_agg_func": 383, "my_sample_subgraph": [300, 313], "my_train_script": 696, "myadd": 22, "mydata": 695, "mydatapars": 687, "mydataset": [685, 686, 732, 772, 773], "mygraph": [695, 696], "myrepo": 695, "mysubgraphsampl": [300, 313], "n": [6, 9, 14, 20, 21, 62, 63, 126, 129, 186, 190, 240, 243, 250, 297, 310, 318, 319, 330, 331, 339, 340, 343, 351, 352, 355, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 472, 497, 500, 548, 563, 567, 568, 572, 573, 606, 607, 608, 611, 612, 614, 617, 624, 625, 626, 631, 640, 643, 644, 659, 667, 676, 677, 678, 681, 693, 706, 710, 719, 723, 750, 754, 755, 763, 791, 796, 797, 801, 807, 816, 817, 818, 819, 821, 822, 828, 832, 833, 836, 850, 852, 853, 856, 859, 862, 863, 867], "n0": 297, "n1": [297, 319, 325, 331, 448], "n2": [297, 319, 325, 331, 448], "n2e": 668, "n3": 325, "n_": [387, 390, 397, 398, 399, 400, 403, 405, 406, 408, 409, 410, 411, 413, 415, 419], "n_0": 122, "n_1": 122, "n_base": 851, "n_class": [429, 691, 720, 726, 728, 737, 766, 768, 777, 804, 810, 811, 846, 847], "n_click": [725, 765, 809], "n_commun": 183, "n_dislik": [725, 765, 809], "n_edg": [729, 756, 769, 798, 804, 812, 819, 863], "n_epoch": [210, 213, 851], "n_etyp": 412, "n_feat": 456, "n_featur": [729, 730, 769, 770, 812, 813], "n_follow": [725, 765, 809], "n_graph": 183, "n_head": [438, 446], "n_hetero_featur": [725, 730, 765, 770, 809, 813], "n_hidden": [720, 804, 846, 847, 851], "n_hidden_lay": 851, "n_i": [122, 433, 434, 435, 440, 851], "n_item": [725, 765, 809], "n_iter": 436, "n_k": 122, "n_kernel": 410, "n_label": [730, 770, 813], "n_layer": [436, 437, 438, 755, 757, 797, 800, 846, 847], "n_max_click": [725, 765, 809], "n_node": [183, 839, 863], "n_search": 842, "n_step": 412, "n_t": [425, 426, 427], "n_token": 863, "n_train": 839, "n_user": [725, 765, 809], "n_user_class": [725, 730, 765, 770, 809, 813], "n_val": 839, "naive_propagate_attent": 863, "name": [0, 4, 5, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 45, 46, 47, 48, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 133, 138, 156, 159, 162, 165, 168, 173, 178, 179, 186, 197, 200, 205, 208, 214, 216, 219, 220, 221, 222, 223, 224, 225, 236, 237, 240, 241, 242, 246, 247, 249, 250, 288, 289, 290, 292, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 316, 317, 328, 333, 337, 338, 344, 383, 395, 417, 453, 474, 475, 476, 499, 538, 546, 548, 549, 550, 551, 552, 553, 554, 556, 558, 560, 561, 562, 563, 564, 565, 569, 570, 571, 572, 573, 638, 640, 641, 647, 649, 654, 655, 656, 657, 659, 662, 663, 665, 666, 667, 669, 671, 685, 686, 687, 688, 689, 692, 693, 694, 695, 700, 703, 706, 711, 712, 717, 726, 728, 732, 733, 734, 735, 738, 740, 747, 772, 773, 774, 775, 778, 780, 781, 785, 788, 815, 821, 826, 829, 831, 832, 833, 836, 837, 839, 846, 847, 859, 863, 868], "namedrockunit": 144, "namedtupl": 856, "namespac": [1, 22, 133, 144, 706, 814], "name\u76ee\u5f55\u4e2d": 733, "nan": [340, 442, 445, 659, 850, 853], "narrow_row": [723, 763, 807], "nation": 166, "nativ": [8, 292, 691, 711, 815, 818, 821], "nativelayernormbackward": 438, "natur": [554, 727, 818, 852, 856, 862, 863], "nblink": 712, "nbsphinx": [852, 853, 856, 863], "nc": [832, 833], "nc_task": [832, 833], "nc_test_id": 833, "nc_test_ids_path": 833, "nc_test_item_id": 832, "nc_test_item_ids_path": 832, "nc_test_item_label": 832, "nc_test_item_labels_path": 832, "nc_test_label": 833, "nc_test_labels_path": 833, "nc_test_user_id": 832, "nc_test_user_ids_path": 832, "nc_test_user_label": 832, "nc_test_user_labels_path": 832, "nc_train_id": 833, "nc_train_ids_path": 833, "nc_train_item_id": 832, "nc_train_item_ids_path": 832, "nc_train_item_label": 832, "nc_train_item_labels_path": 832, "nc_train_label": 833, "nc_train_labels_path": 833, "nc_train_user_id": 832, "nc_train_user_ids_path": 832, "nc_train_user_label": 832, "nc_train_user_labels_path": 832, "nc_val_id": 833, "nc_val_ids_path": 833, "nc_val_item_id": 832, "nc_val_item_ids_path": 832, "nc_val_item_label": 832, "nc_val_item_labels_path": 832, "nc_val_label": 833, "nc_val_labels_path": 833, "nc_val_user_id": 832, "nc_val_user_ids_path": 832, "nc_val_user_label": 832, "nc_val_user_labels_path": 832, "nccl": [827, 868, 869], "nci1": 165, "ndarrai": [22, 27, 54, 95, 96, 125, 131, 183, 205, 249, 287, 332, 699, 702, 743, 784, 815, 852], "ndarraypartit": 453, "ndarray\u7c7b\u578b\u4f5c\u4e3aapi\u7684\u8f93\u5165": 746, "ndarri": 787, "ndata": [4, 5, 9, 28, 34, 35, 43, 54, 56, 64, 71, 75, 77, 93, 94, 95, 96, 100, 103, 108, 113, 115, 117, 122, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 167, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 217, 219, 221, 224, 240, 246, 249, 333, 337, 338, 349, 381, 395, 424, 425, 426, 427, 428, 429, 442, 446, 456, 474, 538, 550, 551, 552, 554, 555, 563, 569, 571, 572, 573, 638, 639, 640, 641, 644, 653, 654, 659, 660, 661, 663, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 687, 689, 691, 692, 694, 695, 700, 701, 703, 706, 707, 716, 720, 726, 727, 728, 729, 730, 735, 737, 738, 739, 744, 745, 747, 750, 751, 755, 756, 758, 759, 760, 766, 767, 768, 769, 770, 775, 777, 778, 780, 785, 786, 788, 791, 793, 797, 798, 801, 802, 803, 804, 810, 811, 812, 813, 816, 817, 818, 819, 834, 835, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868], "ndata_pars": [148, 687], "ndata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 246, 247, 333, 336, 337, 338, 342, 474, 475, 538, 547, 551, 552, 569, 638, 652, 653, 660, 666, 679, 687, 694, 695, 699, 700, 702, 728, 743, 744, 746, 784, 785, 787, 811, 835, 838, 839], "nearbi": [381, 385], "nearest": [14, 339, 430, 432, 567, 729, 812], "nearli": 863, "necessari": [4, 21, 41, 210, 214, 216, 220, 231, 563, 633, 707, 712, 713, 730, 800, 813, 828, 838, 842, 846, 863], "necessarili": [131, 332, 638, 716, 828, 836, 859], "need": [4, 5, 6, 21, 48, 57, 65, 77, 89, 118, 138, 139, 140, 145, 214, 229, 230, 240, 246, 247, 291, 293, 295, 303, 308, 310, 333, 337, 338, 339, 351, 352, 386, 414, 424, 425, 426, 427, 428, 429, 430, 432, 454, 474, 475, 538, 539, 567, 572, 573, 639, 686, 687, 692, 693, 694, 695, 696, 702, 703, 707, 708, 711, 714, 715, 716, 717, 718, 722, 723, 724, 726, 727, 728, 729, 730, 779, 787, 788, 815, 821, 826, 827, 828, 831, 832, 833, 834, 837, 838, 839, 846, 847, 859, 863, 868, 869], "needham": 837, "neg": [6, 7, 13, 120, 139, 161, 163, 184, 214, 216, 219, 220, 226, 227, 241, 242, 293, 297, 301, 303, 307, 308, 317, 381, 385, 392, 403, 405, 406, 477, 482, 503, 509, 517, 523, 557, 558, 560, 561, 562, 563, 665, 687, 718, 729, 758, 821, 825, 826, 832, 833, 847, 851, 852, 856], "neg_dst": [729, 769, 812, 847], "neg_eid": 837, "neg_featur": 847, "neg_g": [729, 769, 812], "neg_graph": 847, "neg_pair_graph": 220, "neg_ratio": 139, "neg_sampl": [220, 226, 227, 303, 317], "neg_scor": [729, 758, 769, 801, 812, 837, 847], "neg_src": [729, 769, 812, 847], "neg_u": 837, "neg_v": [385, 837], "neg_weight": 381, "negat": [590, 821], "negative_edge_dst": [139, 847], "negative_edge_src": [139, 847], "negative_graph": [729, 758, 769, 801, 812], "negative_ratio": [297, 307, 317], "negative_s": [381, 385], "negative_sampl": [220, 226, 227, 228, 758, 801], "negative_slop": [392, 403, 405, 406], "negativesampl": [317, 715, 718, 758, 801], "neghborhood": 826, "neglig": 22, "neigh": [723, 763, 807], "neighbor": [4, 13, 14, 171, 210, 214, 215, 216, 219, 220, 234, 241, 242, 245, 297, 300, 303, 308, 313, 336, 339, 350, 389, 392, 393, 394, 402, 403, 410, 413, 418, 430, 431, 432, 473, 545, 556, 558, 560, 561, 562, 563, 564, 567, 572, 573, 658, 689, 710, 711, 714, 717, 718, 719, 729, 730, 755, 797, 812, 821, 825, 834, 836, 837, 838, 850, 851, 853, 859], "neighbor_match": 6, "neighbor_sampling_overview": 712, "neighborhood": [1, 214, 220, 291, 297, 303, 337, 338, 424, 425, 426, 428, 556, 561, 562, 633, 692, 714, 719, 730, 756, 760, 798, 803, 834, 851, 852, 853, 854, 866], "neighborsampl": [215, 220, 303, 691, 712, 714, 717, 737, 777], "neighborsamplerimpl": [303, 308], "neighbor\ub4e4\uc5d0": 775, "neighbour": [395, 417], "neighbourhood": [417, 852], "neither": [168, 572, 573], "nelement": 859, "neo4j": 837, "neq": 852, "net": [417, 442, 444, 445, 456, 850, 853], "net_typ": 235, "network": [4, 13, 72, 134, 141, 142, 143, 145, 149, 150, 154, 155, 164, 165, 166, 167, 175, 176, 183, 185, 187, 189, 190, 192, 193, 209, 210, 219, 235, 243, 244, 289, 314, 340, 355, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 401, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 434, 437, 438, 441, 454, 456, 457, 472, 548, 556, 558, 647, 652, 655, 659, 663, 666, 683, 691, 692, 694, 695, 696, 698, 699, 704, 708, 710, 716, 717, 722, 726, 727, 729, 743, 755, 784, 797, 814, 818, 820, 821, 822, 823, 835, 836, 838, 839, 840, 842, 856, 859, 864, 868, 869], "networkx": [72, 125, 230, 249, 456, 638, 640, 699, 743, 784, 817, 826, 827, 829, 832, 833, 852, 853, 856, 859, 862], "networkx\ub294": 784, "network\ub97c": 796, "neural": [4, 141, 142, 143, 165, 179, 183, 189, 190, 192, 210, 219, 243, 244, 314, 340, 387, 388, 390, 391, 396, 401, 408, 409, 411, 412, 414, 416, 422, 424, 425, 426, 427, 428, 429, 434, 437, 438, 456, 548, 556, 659, 663, 666, 683, 704, 708, 710, 716, 717, 722, 727, 729, 755, 797, 814, 818, 820, 821, 822, 834, 835, 836, 838, 840, 842, 850, 859, 864, 868, 869], "neurip": [214, 297, 303, 561], "neuron": 852, "neutral": [184, 856], "never": [235, 431, 545, 712], "nevertheless": 693, "new": [0, 1, 3, 4, 26, 27, 28, 34, 40, 70, 89, 114, 115, 116, 117, 118, 119, 122, 138, 140, 142, 143, 159, 210, 231, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 297, 326, 333, 336, 337, 338, 343, 349, 350, 383, 385, 393, 400, 402, 415, 418, 424, 425, 428, 472, 538, 551, 552, 553, 554, 555, 559, 561, 562, 563, 564, 572, 573, 590, 628, 632, 633, 647, 648, 649, 664, 669, 692, 693, 695, 702, 703, 710, 713, 716, 788, 797, 821, 822, 823, 827, 834, 835, 836, 837, 838, 846, 850, 851, 856, 859, 863, 864, 866], "new_cent": [424, 425], "new_d": [139, 140], "new_dataset": 138, "new_edge_feat": [400, 411], "new_edges_mask": [755, 797], "new_etyp": 649, "new_g": [26, 130, 350, 646, 647, 648, 649, 651, 652, 653, 656, 657, 658, 660, 662, 664], "new_g1": 26, "new_g2": [26, 130], "new_label": 455, "new_node_feat": [400, 403, 411], "new_node_id": [424, 425], "new_val": 821, "newer": [300, 313], "newg": 835, "newh": 70, "newli": [114, 115, 842], "newman": 167, "next": [301, 303, 308, 558, 560, 639, 683, 687, 693, 695, 717, 760, 803, 826, 829, 837, 852, 856, 863], "next_lg_x": 852, "next_x": 852, "nf": [696, 781], "nfeat": [390, 400, 403, 409, 426, 427, 428, 429, 444, 445, 452, 694, 695], "ngc": 827, "nh": 818, "nice": [22, 728, 823], "nid": [4, 10, 26, 95, 96, 130, 212, 219, 221, 222, 224, 225, 240, 246, 333, 337, 338, 424, 453, 474, 538, 551, 552, 554, 569, 633, 638, 678, 691, 692, 693, 695, 703, 709, 737, 738, 747, 753, 755, 777, 778, 779, 780, 788, 795, 797, 829, 835, 847, 863], "nid2localnid": 4, "nid2partid": 4, "nid_het2hom": 693, "nid_hom2het": 693, "nid_offset": 693, "nid_rang": 780, "nightli": 822, "nine": 165, "niter": 852, "nk": [339, 430, 432, 567], "nl": 133, "nlh": [710, 754, 796], "nll_loss": [850, 853, 856], "nlp": [184, 863], "nmap": 846, "nn": [10, 13, 14, 21, 121, 210, 213, 339, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 567, 681, 683, 691, 692, 707, 712, 714, 715, 716, 717, 719, 720, 721, 724, 726, 728, 729, 730, 737, 751, 756, 757, 758, 759, 760, 762, 763, 764, 766, 768, 769, 770, 777, 778, 793, 798, 800, 801, 802, 803, 804, 805, 808, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "nnz": [12, 30, 31, 62, 63, 575, 578, 581, 583, 585, 587, 588, 589, 590, 598, 601, 603, 605, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 620, 624, 626, 627, 628, 821], "nn\u6a21\u5757": [761, 762, 764], "nn\u6a21\u5757\u4e2d": 761, "nn\u6a21\u5757\u53ef\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u8f93\u5165\u4e2d\u91cd\u590d\u4f7f\u7528": 763, "nn\u6a21\u5757\u662f\u7528\u6237\u6784\u5efagnn\u6a21\u578b\u7684\u57fa\u672c\u6a21\u5757": 761, "nn\u6a21\u5757\u7684api\u53c2\u8003": 760, "nn\u6a21\u5757\u7684forward\u51fd\u6570": [748, 761], "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [748, 761], "nn\u6a21\u5757\u7684\u7236\u7c7b\u53d6\u51b3\u4e8e\u540e\u7aef\u6240\u4f7f\u7528\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 761, "nn\u6a21\u5757\u76f8\u6bd4": 763, "nn\u6a21\u5757\u989d\u5916\u589e\u52a0\u4e861\u4e2a\u53c2\u6570": 763, "no_grad": [730, 770, 813, 818, 827, 829, 837, 846, 847, 850, 868, 869], "no_subtree_check": 846, "noam": 863, "noamopt": 863, "node": [0, 5, 6, 7, 9, 13, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 39, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 263, 264, 265, 266, 287, 288, 289, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 313, 316, 317, 318, 319, 323, 325, 330, 331, 332, 333, 336, 337, 338, 339, 340, 342, 343, 349, 350, 351, 352, 355, 381, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 455, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 647, 648, 649, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 672, 673, 674, 675, 676, 677, 679, 681, 683, 687, 688, 691, 693, 694, 695, 697, 698, 701, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 734, 745, 746, 747, 750, 752, 755, 759, 763, 765, 766, 769, 770, 774, 775, 779, 780, 785, 786, 787, 788, 790, 791, 794, 797, 798, 800, 802, 804, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 821, 825, 828, 831, 836, 837, 838, 840, 843, 848, 850, 851, 852, 853, 854, 856, 862, 863, 866, 868, 870], "node1": 852, "node2": 852, "node2vec": [558, 834], "node_activ": 859, "node_activation_hidden_s": 859, "node_attr": [25, 249, 640], "node_attr_dtyp": 780, "node_attr_schem": [4, 47], "node_attribut": [297, 325], "node_classif": [309, 829, 832, 833], "node_color": [817, 852, 856, 859, 862], "node_count_check": 131, "node_data": [309, 687, 695, 780], "node_degre": [715, 819], "node_emb": [381, 385, 695, 780, 846], "node_embed": [729, 769, 812], "node_feat": [240, 316, 390, 395, 400, 401, 403, 409, 411, 417, 681, 683, 694, 695, 739, 780], "node_feat_0": 833, "node_feat_0_path": 833, "node_feat_1": 833, "node_feat_1_path": 833, "node_feat_dim": [707, 751, 793], "node_feat_nam": [654, 665], "node_feat_out": 401, "node_feat_s": 138, "node_featur": [295, 301, 305, 711, 715, 717, 719, 726, 729, 730, 766, 769, 770, 810, 812, 813, 826, 827, 829, 839, 847, 869], "node_feature_kei": [295, 711, 712, 714, 715, 717, 718, 719, 826, 827, 829, 869], "node_g": 859, "node_gener": 542, "node_hidden_s": 859, "node_id": [302, 305, 323, 424, 425, 687, 694, 780, 851], "node_id_field": 687, "node_ids_item": 299, "node_ids_us": 299, "node_in_feat": 390, "node_input": 847, "node_item_feat_0": 832, "node_item_feat_0_path": 832, "node_item_feat_1": 832, "node_item_feat_1_path": 832, "node_label": [25, 168, 186, 695, 730, 770, 813, 839], "node_map": [240, 695, 739, 780], "node_min": [427, 429], "node_pair": 297, "node_part": 539, "node_permute_algo": [98, 554], "node_repr": 847, "node_s": [817, 852, 856, 862], "node_split": [679, 691, 692, 737, 738, 777, 778, 846, 847], "node_subgraph": [106, 246, 713], "node_timestamp_attr_nam": 297, "node_to_graph": 859, "node_trainer_id": 239, "node_typ": [240, 305, 449, 693, 695, 703, 747, 780, 788, 859], "node_type_emb": 859, "node_type_id": [693, 694, 779], "node_type_offset": [297, 325, 832], "node_type_offset_": 297, "node_type_subgraph": 247, "node_type_to_id": [297, 325, 832], "node_udf": [20, 675, 676, 677, 678], "node_update_func": 859, "node_user_feat_0": 832, "node_user_feat_0_path": 832, "node_user_feat_1": 832, "node_user_feat_1_path": 832, "node_weight_list": 694, "node_year": 695, "nodebatch": [20, 54, 706, 750, 791], "nodedataload": [692, 738, 755, 756, 757, 760, 778, 797, 798, 799, 800, 803, 846], "nodedataview": [4, 640], "nodeembed": 10, "nodelist": 862, "nodepr": 140, "nodeproppr": [688, 734, 774, 846], "nodes_": 863, "nodes_0": 687, "nodes_1": 687, "nodes_d": 863, "nodes_data": 839, "nodes_gener": [92, 542], "nodes_perm": 554, "nodes_with_feature_on": 54, "nodeshuffl": 13, "nodeview": 72, "nodewis": 438, "nois": [729, 769, 812], "noisi": 162, "non": [6, 9, 21, 27, 30, 114, 116, 162, 182, 184, 197, 200, 205, 210, 214, 216, 219, 241, 242, 297, 310, 313, 325, 340, 343, 355, 395, 404, 446, 472, 554, 558, 560, 561, 562, 563, 575, 576, 579, 580, 591, 592, 593, 595, 596, 597, 598, 599, 604, 606, 611, 612, 614, 618, 620, 624, 626, 628, 659, 665, 681, 687, 695, 701, 717, 727, 729, 786, 799, 803, 816, 825, 827, 837, 839, 850, 852, 856, 864, 866, 869], "none": [4, 6, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 113, 114, 115, 116, 117, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 231, 232, 235, 238, 239, 240, 241, 242, 246, 247, 249, 250, 287, 288, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 315, 318, 319, 322, 323, 325, 332, 333, 337, 338, 344, 345, 346, 347, 348, 351, 352, 383, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 434, 438, 442, 444, 445, 447, 448, 449, 450, 453, 454, 455, 474, 475, 476, 498, 499, 538, 539, 541, 543, 544, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 568, 570, 571, 579, 580, 592, 595, 596, 597, 599, 601, 608, 610, 611, 612, 613, 624, 629, 630, 632, 633, 638, 639, 640, 643, 644, 649, 654, 656, 657, 659, 662, 663, 665, 666, 679, 681, 685, 689, 714, 715, 719, 722, 723, 724, 732, 735, 755, 762, 763, 764, 772, 775, 797, 806, 807, 808, 826, 827, 829, 833, 851, 856, 859, 863, 869], "nonlinear": [730, 817, 852], "nonneg": 183, "nontre": [230, 541], "nonzero": [126, 214, 250, 556, 572, 573, 590, 606, 617, 689, 699, 735, 775, 780, 784, 821, 851, 852], "norm": [339, 397, 398, 404, 413, 414, 415, 418, 419, 420, 422, 430, 431, 432, 451, 452, 545, 567, 712, 717, 722, 723, 756, 758, 760, 762, 763, 798, 801, 803, 806, 807, 818, 821, 851, 852, 863], "norm_": 411, "norm_bi": 355, "norm_by_dst": 851, "norm_edge_weight": 404, "norm_first": [445, 683], "norm_typ": 455, "norm_x": 863, "normal": [4, 128, 129, 142, 150, 154, 176, 245, 341, 355, 391, 393, 395, 397, 398, 401, 402, 403, 404, 410, 411, 413, 417, 418, 419, 420, 422, 423, 445, 446, 455, 473, 476, 560, 570, 571, 655, 665, 666, 683, 685, 695, 716, 722, 723, 727, 728, 807, 811, 816, 819, 821, 826, 827, 829, 832, 833, 834, 838, 839, 851, 852, 853, 862, 863], "normalis": 665, "normalization\uacfc": 772, "normalization\uc73c\ub85c": 806, "normalization\uc744": [806, 807], "normalization\uc774": 802, "normliz": 806, "north": 23, "nose": 21, "notabl": [691, 712], "notat": [817, 859], "note": [4, 6, 9, 10, 14, 21, 22, 26, 27, 28, 34, 39, 43, 46, 48, 52, 66, 68, 70, 73, 74, 78, 93, 94, 95, 96, 100, 101, 102, 103, 108, 110, 113, 114, 115, 116, 117, 118, 119, 126, 130, 131, 134, 135, 136, 149, 150, 151, 152, 153, 154, 155, 159, 168, 173, 176, 184, 185, 186, 187, 192, 193, 210, 214, 215, 216, 220, 226, 235, 246, 247, 249, 250, 287, 293, 297, 301, 305, 308, 315, 317, 318, 319, 332, 333, 336, 337, 338, 342, 349, 350, 355, 383, 385, 393, 395, 397, 398, 399, 417, 418, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 453, 454, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 551, 552, 553, 554, 555, 558, 559, 561, 562, 563, 564, 572, 573, 632, 633, 634, 638, 639, 640, 641, 642, 643, 644, 685, 688, 689, 690, 691, 693, 699, 703, 708, 714, 716, 720, 723, 724, 725, 728, 730, 737, 738, 739, 740, 777, 778, 779, 780, 781, 794, 800, 816, 817, 818, 819, 828, 832, 833, 834, 835, 836, 837, 839, 842, 843, 846, 850, 851, 852, 853, 856, 859, 863, 868, 869], "notebook": [692, 712, 820, 827, 863], "notebook\u4e2d\u5f00\u53d1\u548c\u8fd0\u884c\u4ee3\u7801": 738, "notebook\u4e2d\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 738, "notebook\uc5d0\uc11c": 778, "noth": [553, 859], "notic": [633, 639, 827, 828, 837, 838], "notimplementederror": 859, "notion": [22, 852], "noun": [149, 185], "now": [183, 234, 349, 638, 692, 694, 712, 716, 717, 730, 802, 819, 827, 832, 833, 842, 846, 853, 859, 869], "np": [4, 125, 126, 205, 249, 250, 315, 316, 387, 388, 389, 390, 391, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 416, 418, 419, 420, 421, 426, 428, 563, 687, 692, 693, 694, 725, 726, 738, 765, 766, 778, 780, 809, 810, 829, 832, 833, 835, 837, 846, 847, 850, 852, 853, 862, 863], "npoint": 6, "nproc": [827, 868, 869], "npy": [240, 309, 315, 316, 695, 739, 780, 832, 833], "nty": [383, 724, 764, 808], "ntype": [4, 26, 28, 35, 37, 54, 58, 75, 76, 79, 81, 82, 83, 85, 86, 96, 115, 118, 129, 157, 158, 191, 198, 210, 214, 216, 221, 239, 240, 297, 325, 346, 348, 383, 415, 425, 426, 427, 475, 550, 552, 556, 571, 630, 638, 639, 640, 644, 687, 689, 693, 694, 695, 703, 708, 711, 715, 716, 728, 729, 735, 747, 752, 759, 768, 769, 775, 779, 780, 788, 794, 802, 811, 812, 851], "ntype2id": 693, "ntype2id_map": 693, "ntype_attr": 640, "ntype_count": 639, "ntype_field": 638, "ntype_id": 780, "ntype_output": 383, "ntypes_list": 240, "null": [120, 816, 817, 818, 819, 821, 831], "num": [28, 115, 302, 309, 740, 780, 781, 831, 832, 833], "num_atom_typ": 195, "num_bas": [386, 393, 418, 457, 851], "num_base_edges_per_nod": [142, 143], "num_base_nod": [142, 143], "num_bond_typ": 195, "num_child": [427, 429], "num_class": [132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 309, 424, 425, 426, 427, 428, 690, 695, 712, 719, 720, 736, 756, 758, 776, 798, 801, 804, 816, 817, 819, 827, 829, 831, 832, 833, 834, 836, 838, 851, 856, 868, 869], "num_correct": 838, "num_dst": 557, "num_dst_nod": [82, 83, 131, 546, 797, 826, 829], "num_edgnum_edges_per_chunk": [693, 695], "num_embed": [4, 382, 453], "num_epoch": [381, 424, 425, 691, 737, 777, 818, 842], "num_etyp": 415, "num_exampl": 838, "num_featur": [426, 428], "num_gpu": 868, "num_gpu_cached_edg": 291, "num_graph": [138, 139, 140, 159, 172, 681, 683], "num_head": [392, 399, 400, 403, 405, 406, 415, 437, 442, 444, 445, 447, 448, 449, 683, 818, 853], "num_hidden": [691, 737, 777, 846, 847], "num_hidden_lay": 851, "num_hop": [4, 240, 424, 425, 426, 427, 428, 429], "num_input_nod": 755, "num_inter_edg": 142, "num_it": 217, "num_item": 302, "num_kernel": 449, "num_label": [168, 175, 177, 178, 179, 186, 846, 847], "num_lay": [215, 305, 446, 454, 691, 737, 755, 777, 797, 818, 846, 847], "num_mlp_aft": 422, "num_mlp_befor": 422, "num_motif": [142, 143, 189, 190], "num_neighbor": 556, "num_nod": [4, 5, 10, 26, 27, 28, 85, 95, 96, 101, 102, 114, 115, 117, 122, 127, 138, 146, 147, 157, 158, 165, 168, 169, 172, 173, 174, 184, 186, 191, 192, 195, 205, 219, 240, 246, 247, 287, 297, 312, 332, 333, 336, 337, 338, 342, 381, 383, 385, 400, 403, 409, 411, 414, 425, 426, 427, 444, 445, 448, 450, 451, 452, 453, 454, 456, 474, 475, 538, 546, 547, 551, 552, 553, 554, 555, 569, 638, 639, 641, 652, 653, 654, 660, 665, 666, 668, 679, 681, 687, 692, 693, 694, 695, 699, 700, 702, 703, 716, 719, 728, 729, 738, 743, 744, 746, 747, 755, 757, 759, 769, 778, 779, 780, 784, 785, 787, 788, 797, 800, 802, 811, 812, 816, 817, 818, 832, 833, 835, 837, 838, 839, 846, 847, 851, 856, 859], "num_node_typ": 297, "num_node_weight": 780, "num_nodes_dict": [118, 119, 332, 729, 755, 769, 797, 812, 839], "num_nodes_per_chunk": [693, 695], "num_ntyp": 415, "num_of_class": 176, "num_output": 457, "num_output_nod": 755, "num_part": [209, 240, 695, 780, 846, 847], "num_partit": [4, 695], "num_positive_edg": 139, "num_post_lay": 446, "num_prop_round": 859, "num_random_walk": 556, "num_rel": [157, 158, 191, 393, 418, 451, 452, 851], "num_replica": 293, "num_rollout": [427, 429], "num_sampl": [557, 696, 740, 781, 846], "num_se": [558, 560], "num_serv": [696, 740, 781, 846], "num_split": 192, "num_src": 557, "num_src_nod": [79, 86, 131, 546, 797, 826, 829], "num_task": [138, 177, 178, 179, 689, 735, 775, 818], "num_test": [832, 833, 838], "num_test_item": [827, 869], "num_tow": [395, 417], "num_train": [696, 740, 781, 832, 833, 838, 846], "num_train_item": [827, 869], "num_trainers_per_machin": 240, "num_travers": 556, "num_trial": 859, "num_typ": 386, "num_val": [832, 833], "num_val_item": [827, 869], "num_valid": 859, "num_virtual_nod": 444, "num_vocab": 856, "num_work": [209, 210, 213, 214, 215, 216, 217, 219, 220, 291, 713, 740, 755, 756, 758, 760, 781, 797, 798, 799, 801, 803, 826, 842, 843, 856], "num_worker_thread": 235, "numa": 843, "number": [3, 4, 6, 9, 10, 14, 21, 22, 28, 36, 37, 38, 62, 63, 70, 79, 80, 81, 82, 101, 102, 113, 115, 118, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 232, 235, 236, 239, 240, 241, 242, 243, 250, 287, 291, 293, 297, 302, 303, 305, 308, 312, 326, 332, 337, 338, 339, 340, 343, 351, 352, 355, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 539, 546, 547, 548, 551, 554, 556, 557, 561, 562, 563, 564, 567, 568, 572, 573, 591, 609, 611, 612, 615, 616, 631, 639, 641, 646, 656, 657, 658, 659, 662, 663, 666, 667, 670, 671, 672, 674, 675, 676, 677, 678, 679, 683, 685, 687, 689, 692, 693, 694, 695, 696, 700, 702, 703, 707, 708, 711, 713, 716, 720, 727, 730, 772, 775, 787, 788, 792, 799, 817, 819, 821, 827, 828, 829, 831, 832, 834, 835, 837, 838, 839, 842, 843, 846, 850, 851, 853, 859, 862, 863, 868, 869], "number_of_dst_nod": [633, 716, 723, 724, 755, 757, 759, 763, 764, 797, 800, 802, 807, 808], "number_of_edg": 4, "number_of_nod": 4, "number_of_src_nod": [716, 755, 759, 797, 802], "numclass": [816, 817, 819, 834, 836, 837, 850, 852, 853], "numedg": [816, 817, 819, 834, 836, 837, 850, 852, 853], "numer": [4, 10, 22, 245, 395, 411, 473, 687, 700, 835, 839, 859, 863], "numfeat": [816, 817, 819, 834, 836, 837, 850, 852, 853], "numnod": [816, 817, 819, 834, 836, 837, 850, 852, 853], "numpi": [5, 9, 21, 27, 31, 54, 95, 96, 125, 126, 128, 129, 131, 168, 183, 198, 205, 240, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 309, 315, 316, 332, 381, 387, 388, 389, 390, 391, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 416, 418, 419, 420, 421, 426, 428, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 687, 691, 693, 695, 699, 702, 703, 725, 737, 743, 765, 777, 780, 784, 787, 788, 809, 815, 818, 826, 827, 829, 831, 832, 833, 835, 837, 839, 846, 847, 850, 852, 853, 862, 863], "numtestsampl": [816, 817, 819, 834, 836, 837, 850, 852, 853], "numtrainingsampl": [816, 817, 819, 834, 836, 837, 850, 852, 853], "numvalidationsampl": [816, 817, 819, 834, 836, 837, 850, 852, 853], "nutshel": 820, "nvidia": [210, 392, 393, 394, 720, 804, 827], "nx": [125, 249, 456, 699, 743, 784, 817, 852, 853, 856, 859, 862], "nx_agraph": 856, "nx_g": [125, 249, 640, 699, 743, 784, 817, 859], "nx_g1": 852, "nx_graph": [125, 249], "nxg": [699, 743, 784], "nxn": [430, 431], "o": [4, 9, 22, 156, 339, 430, 432, 567, 686, 690, 710, 733, 736, 754, 773, 776, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "o1": 821, "o2": 821, "o3": 821, "o4": 821, "o5": 821, "o6": 821, "o7": 821, "o8": 821, "o_j": 856, "ob": 457, "obg": 774, "obj_": 22, "object": [4, 22, 26, 42, 53, 54, 59, 108, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 210, 218, 220, 221, 229, 230, 240, 246, 247, 248, 249, 250, 287, 292, 294, 296, 297, 299, 302, 305, 310, 312, 314, 315, 316, 325, 328, 332, 333, 337, 338, 352, 353, 355, 383, 424, 425, 453, 474, 475, 538, 541, 543, 544, 546, 547, 549, 550, 561, 562, 563, 564, 565, 570, 571, 640, 643, 644, 645, 650, 651, 681, 687, 688, 689, 690, 691, 692, 693, 695, 699, 701, 711, 723, 758, 786, 801, 815, 816, 829, 831, 832, 833, 834, 835, 838, 851, 852], "objectbas": 22, "objectref": 22, "objtyp": [240, 352], "observ": [842, 852, 862], "obtain": [14, 245, 337, 338, 400, 403, 442, 445, 446, 454, 473, 559, 633, 647, 689, 712, 716, 726, 728, 729, 730, 775, 817, 827, 834, 835, 853, 856, 869], "occasion": [173, 839], "occup": 835, "occupi": [178, 179], "occur": [26, 240], "occurr": 134, "odot": [411, 450, 856], "ofev": 164, "off": [427, 429, 683, 815, 816, 817, 818, 843, 852, 853, 862, 863], "offer": [814, 825, 834, 842, 856, 862], "offic": 145, "offici": [21, 167, 184, 688, 850, 851, 852, 853, 856, 859, 862, 863], "offlin": [710, 800], "offset": [297, 323, 325, 404, 559, 563, 572, 573], "often": [21, 120, 687, 689, 828, 835, 839, 842], "ogb": [4, 138, 289, 684, 713, 734, 740, 771, 781, 799, 818, 827, 829, 846, 847], "ogb_exampl": 842, "ogb_example_argo": 842, "ogbg": [138, 688, 734, 774, 818], "ogbl": [289, 688, 734, 774, 847], "ogbn": [289, 688, 717, 719, 734, 774, 780, 827, 829, 846, 869], "ok": [5, 701, 786], "old": [27, 28, 114, 424, 641, 850], "old_step_count": 859, "omega": 817, "omit": [4, 27, 28, 30, 31, 32, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 117, 128, 129, 309, 476, 549, 550, 551, 552, 553, 557, 558, 560, 570, 571, 639, 643, 644, 681, 683, 730, 813, 835], "omp": 235, "omp_num_thread": [827, 869], "onc": [21, 131, 235, 287, 291, 297, 303, 308, 309, 332, 694, 695, 728, 817, 859, 863, 868], "ondisk": 309, "ondisk_dataset": [832, 833], "ondisk_dataset_heterograph": 832, "ondisk_dataset_homograph": 833, "ondiskdataset": [289, 825, 831], "ondiskfeaturedata": 316, "ondiskfeaturedatadomain": [832, 833], "ondisktask": [832, 833], "one": [0, 4, 5, 6, 9, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 77, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 107, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 147, 150, 154, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 180, 182, 183, 184, 188, 191, 192, 194, 195, 198, 205, 214, 216, 219, 220, 230, 234, 240, 241, 242, 246, 247, 249, 250, 287, 297, 303, 305, 308, 332, 333, 337, 338, 339, 350, 385, 386, 387, 402, 410, 412, 413, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 455, 474, 476, 498, 499, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526, 538, 549, 550, 551, 552, 553, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 587, 592, 631, 633, 638, 641, 643, 644, 669, 670, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 698, 699, 700, 702, 703, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 734, 747, 772, 774, 775, 787, 788, 810, 815, 817, 819, 821, 822, 826, 828, 829, 834, 835, 836, 838, 843, 846, 847, 851, 852, 853, 856, 859, 862, 863, 864, 866, 868], "onehot_label": [689, 735, 775], "ones": [0, 1, 4, 9, 27, 28, 34, 35, 43, 44, 45, 46, 51, 56, 64, 70, 71, 74, 77, 79, 82, 93, 94, 100, 103, 104, 105, 108, 113, 114, 115, 116, 122, 125, 232, 239, 249, 310, 349, 355, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 448, 454, 501, 555, 560, 565, 585, 608, 613, 614, 626, 628, 633, 639, 640, 641, 648, 654, 670, 674, 675, 676, 677, 678, 679, 681, 691, 693, 695, 699, 700, 703, 744, 747, 785, 788, 822, 836, 837, 847, 856, 859, 862, 863], "ones_lik": 847, "onli": [3, 4, 10, 14, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 41, 47, 48, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 125, 128, 129, 130, 132, 133, 134, 138, 139, 140, 144, 146, 147, 150, 154, 157, 158, 159, 160, 167, 169, 170, 176, 178, 191, 192, 194, 210, 213, 214, 216, 219, 220, 234, 235, 236, 240, 241, 242, 246, 247, 249, 287, 288, 290, 294, 296, 297, 298, 300, 303, 305, 308, 309, 313, 315, 333, 336, 337, 338, 339, 340, 383, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 406, 412, 414, 420, 430, 432, 434, 444, 446, 450, 454, 474, 475, 538, 549, 550, 551, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 632, 633, 634, 638, 640, 641, 643, 644, 649, 655, 656, 657, 658, 659, 660, 662, 663, 664, 666, 668, 679, 683, 687, 688, 689, 691, 692, 693, 694, 695, 699, 700, 701, 703, 706, 709, 712, 714, 715, 716, 717, 720, 726, 727, 728, 730, 734, 774, 775, 800, 811, 815, 818, 821, 829, 834, 835, 836, 838, 839, 843, 850, 851, 852, 853, 856, 859, 862, 863, 868], "onlin": [160, 381], "onto": [26, 293, 713, 717, 827, 834, 859, 869], "ood": [197, 205], "oom": [720, 804, 822], "op": [1, 13, 345, 346, 347, 348, 392, 393, 394, 450, 549, 550, 620, 629, 630, 713, 720, 755, 797, 804, 821], "open": [21, 292, 688, 695, 734, 774, 780, 827, 829, 832, 833, 847], "openmp": 8, "opennmt": 863, "oper": [0, 5, 6, 9, 11, 21, 22, 70, 116, 128, 129, 130, 210, 214, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 303, 308, 315, 316, 326, 336, 339, 342, 355, 389, 402, 430, 432, 436, 442, 445, 450, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 549, 550, 555, 561, 562, 563, 564, 567, 572, 573, 614, 620, 632, 639, 641, 664, 666, 679, 685, 692, 693, 701, 703, 706, 707, 711, 713, 719, 720, 721, 723, 727, 728, 729, 815, 816, 817, 818, 820, 829, 836, 842, 843, 853, 854, 859, 863, 864, 866], "operand": [9, 118, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537], "oplu": 417, "oplus_": [386, 417, 418], "opportun": [825, 834], "opposit": 836, "opt": [711, 712, 717, 726, 728, 729, 730, 755, 756, 758, 760, 766, 768, 769, 770, 797, 798, 801, 803, 810, 811, 812, 813, 826, 829, 832, 833, 850, 853], "optim": [13, 14, 214, 222, 223, 224, 225, 313, 314, 381, 385, 393, 394, 424, 425, 426, 427, 428, 429, 453, 561, 691, 692, 695, 706, 707, 712, 715, 717, 718, 719, 720, 723, 726, 728, 729, 730, 737, 738, 755, 756, 758, 760, 766, 768, 769, 770, 777, 778, 797, 798, 801, 803, 804, 810, 811, 812, 813, 814, 816, 817, 818, 819, 822, 825, 826, 827, 829, 834, 836, 837, 838, 842, 843, 846, 847, 850, 851, 852, 853, 856, 862, 863, 868, 869], "optimizer_exp": [426, 428], "optimizer_state_dict": 842, "optimizer\ub4e4\uc744": 778, "optimizer\ub97c": 804, "optimizer\uc5d0": 778, "option": [4, 6, 10, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 116, 117, 118, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 213, 214, 216, 217, 219, 220, 221, 226, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 287, 288, 289, 291, 293, 294, 296, 297, 298, 301, 302, 303, 308, 309, 315, 318, 319, 323, 325, 332, 333, 336, 337, 338, 339, 340, 342, 344, 353, 354, 355, 381, 383, 384, 385, 386, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 473, 474, 475, 476, 497, 501, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 592, 595, 596, 597, 599, 601, 608, 610, 611, 612, 613, 624, 631, 632, 633, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 665, 666, 667, 669, 679, 684, 687, 695, 696, 699, 722, 723, 726, 727, 771, 780, 815, 831, 832, 833, 846, 847], "optiona": 415, "oracl": 859, "orbit": [178, 179], "order": [0, 4, 9, 20, 51, 56, 91, 92, 95, 96, 123, 125, 130, 131, 141, 142, 143, 189, 190, 197, 205, 229, 230, 241, 249, 287, 297, 308, 332, 339, 350, 383, 385, 414, 431, 436, 439, 450, 454, 456, 474, 544, 545, 554, 561, 562, 563, 564, 567, 575, 579, 580, 633, 638, 651, 662, 692, 694, 695, 702, 703, 712, 717, 718, 728, 788, 821, 832, 833, 835, 846, 851, 852, 856, 859, 868], "ordereddict": 184, "ordinari": 724, "org": [9, 133, 134, 137, 146, 147, 161, 162, 163, 169, 171, 173, 174, 177, 178, 180, 182, 188, 195, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 428, 429, 444, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 556, 719, 767, 815, 821, 822, 827, 842, 846, 863], "organ": [21, 230, 240, 694, 695, 724, 814, 830], "organiz": 132, "orient": [568, 862], "orig": 695, "orig_dst_id": [694, 780], "orig_eid": 695, "orig_eids_0": 695, "orig_id": [351, 539, 694, 695, 739, 780], "orig_nid": 695, "orig_nids_0": 695, "orig_node_emb": [695, 780, 846], "orig_src_id": [694, 780], "orig_type_edge_id": 780, "orig_type_node_id": 780, "origianl": 695, "origin": [3, 21, 26, 56, 64, 70, 71, 100, 108, 116, 122, 125, 130, 135, 136, 142, 143, 146, 151, 152, 153, 169, 183, 186, 189, 190, 192, 208, 209, 220, 221, 231, 234, 240, 241, 242, 246, 249, 289, 293, 305, 309, 310, 318, 319, 322, 326, 333, 336, 337, 338, 342, 350, 351, 389, 402, 413, 424, 425, 427, 429, 442, 474, 538, 539, 554, 555, 559, 560, 561, 562, 563, 564, 570, 571, 578, 581, 583, 585, 588, 589, 590, 601, 632, 633, 635, 636, 637, 638, 640, 641, 647, 648, 658, 668, 669, 676, 677, 678, 686, 694, 695, 701, 703, 706, 716, 723, 726, 727, 728, 773, 786, 788, 797, 798, 817, 819, 821, 835, 837, 838, 839, 842, 846, 851, 852, 854, 863, 866], "original_column_node_id": [300, 303, 308, 310, 311, 826, 829], "original_edge_id": [303, 308, 310, 311, 826, 829], "original_row_node_id": [300, 303, 308, 310, 311, 319, 826, 829], "origini": 559, "ot": 289, "otc": 145, "other": [0, 1, 9, 21, 68, 120, 121, 180, 182, 186, 207, 210, 236, 240, 243, 245, 293, 301, 305, 309, 326, 353, 355, 381, 393, 422, 426, 428, 473, 556, 638, 656, 657, 662, 681, 683, 689, 690, 691, 692, 694, 695, 696, 698, 699, 702, 703, 707, 711, 712, 713, 725, 729, 730, 776, 815, 817, 819, 821, 822, 826, 828, 829, 831, 834, 835, 836, 837, 846, 850, 852, 853, 856, 859, 863, 868], "other_typ": 556, "otherwis": [4, 6, 31, 36, 37, 44, 51, 54, 56, 62, 63, 64, 71, 104, 108, 118, 165, 183, 184, 207, 210, 214, 216, 229, 230, 232, 239, 241, 242, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 297, 303, 308, 310, 315, 327, 333, 337, 338, 340, 350, 413, 427, 429, 443, 445, 449, 474, 538, 539, 549, 550, 558, 560, 561, 562, 563, 568, 592, 595, 596, 597, 599, 601, 608, 610, 611, 612, 613, 624, 633, 639, 647, 659, 679, 680, 686, 692, 712, 733, 773, 817, 819, 852, 868, 869], "ouptut": 863, "our": [3, 9, 21, 434, 556, 713, 714, 720, 729, 730, 814, 819, 822, 829, 846, 850, 851, 852, 853], "ourselv": 859, "out": [1, 4, 13, 14, 22, 62, 63, 70, 87, 130, 132, 133, 135, 136, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 197, 205, 214, 216, 217, 241, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 338, 387, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 438, 441, 442, 443, 444, 445, 447, 448, 449, 538, 561, 562, 563, 564, 573, 606, 617, 685, 694, 695, 707, 720, 724, 751, 772, 793, 804, 814, 815, 816, 817, 818, 821, 822, 835, 850, 851, 852, 853, 862], "out1": 9, "out2": 9, "out3": 9, "out4": 9, "out_1": 9, "out_2": 9, "out_3": 9, "out_class": [726, 766, 810], "out_degre": [4, 60, 443, 681, 683, 835], "out_dim": [707, 751, 793, 851, 853], "out_dir": 695, "out_dst": [707, 751, 793], "out_edg": 61, "out_edge_feat": 400, "out_feat": [384, 390, 391, 392, 393, 394, 396, 397, 398, 399, 402, 403, 405, 406, 407, 409, 410, 412, 413, 416, 418, 419, 420, 421, 424, 426, 428, 450, 666, 712, 716, 717, 719, 722, 728, 730, 756, 758, 759, 760, 762, 768, 770, 798, 801, 802, 803, 806, 811, 813, 836, 850, 851, 852], "out_feat_1": 666, "out_feat_2": 666, "out_feat_nam": 666, "out_feats\u662f\u8f93\u51fa\u7279\u5f81\u7684\u7ef4\u5ea6": 770, "out_featur": [712, 717, 726, 729, 755, 756, 757, 758, 760, 766, 769, 797, 798, 800, 801, 803, 810, 812, 850, 856], "out_field": 863, "out_indx": 862, "out_nod": 862, "out_node_feat": 400, "out_path": [4, 240, 846, 847], "out_proj": 818, "out_siz": [384, 386, 395, 401, 417, 714, 719, 720, 816, 817, 818, 819, 821, 827, 869], "out_src": [707, 751, 793], "out_subgraph": [333, 338, 713], "out_test_mask": [197, 205], "out_valid_mask": [197, 205], "outbound": [241, 242, 538, 558, 560, 561, 562, 563, 564, 633], "outcom": 538, "outdat": [686, 733, 773], "outer": [714, 800], "outermost": [305, 308], "outfil": 780, "outgo": [88, 355, 851], "outmultiedgedataview": [72, 640, 703, 747, 788], "output": [4, 5, 9, 21, 53, 54, 73, 133, 144, 174, 208, 209, 210, 214, 216, 217, 240, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 305, 323, 333, 337, 338, 339, 353, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 454, 456, 457, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 561, 562, 563, 564, 567, 598, 614, 618, 683, 693, 695, 706, 707, 710, 712, 714, 716, 717, 722, 724, 728, 764, 780, 800, 802, 808, 821, 826, 828, 829, 836, 846, 850, 851, 852, 853, 862, 863], "output_d": 422, "output_devic": [49, 50, 76, 106, 208, 209, 214, 216, 217, 219, 246, 247, 333, 337, 338, 474, 475, 538, 561, 562, 563, 564, 868], "output_feat": 411, "output_featur": 851, "output_label": [711, 717, 755, 760, 797, 803], "output_nod": [210, 214, 215, 216, 219, 755, 757, 760, 800, 803, 847], "output_predict": [711, 717, 755, 760, 797, 803], "output_s": 323, "outsid": [685, 692, 695, 706, 791, 821], "over": [3, 7, 79, 82, 164, 166, 177, 178, 179, 209, 210, 211, 212, 213, 245, 291, 293, 301, 355, 395, 417, 433, 435, 440, 473, 549, 550, 570, 571, 572, 573, 643, 644, 669, 687, 712, 713, 714, 715, 717, 718, 728, 797, 800, 815, 817, 826, 829, 836, 838, 842, 843, 846, 850, 853, 856, 859, 862, 863], "overal": [430, 695, 728, 827, 837, 842, 853, 859, 863, 869], "overfit": 851, "overhead": [22, 70, 339, 393, 430, 432, 567, 718, 842, 843], "overlap": [291, 303, 718], "overlap_feature_fetch": 291, "overlap_graph_fetch": 291, "overrid": [210, 213, 218, 715], "overridden": [313, 424, 425, 426, 427, 428, 429], "overview": [699, 852, 869], "overwit": 156, "overwrit": [200, 201], "overwritten": 815, "own": [21, 156, 339, 413, 430, 432, 565, 567, 683, 692, 693, 694, 695, 707, 711, 712, 713, 715, 717, 730, 821, 822, 825, 829, 834, 837, 840, 843, 846, 847, 851, 853, 859, 863], "owner": 695, "ownership": 695, "p": [120, 147, 161, 174, 214, 216, 219, 387, 422, 423, 431, 432, 451, 452, 545, 558, 560, 563, 652, 653, 654, 694, 695, 755, 780, 797, 846, 856, 859, 863], "p1d": 681, "p3": 14, "p3d": 681, "p_": [387, 389], "p_n": [729, 769, 812], "p_p": 174, "pack": 559, "packag": [0, 2, 3, 6, 11, 21, 148, 392, 393, 394, 453, 684, 703, 720, 804, 814, 815, 816, 817, 818, 819, 821, 822, 836, 842, 843, 846, 850, 853, 856], "package\ub97c": 804, "packed_func": 22, "packed_func_ext": 22, "packedfunc": 22, "pad": [340, 443, 444, 446, 447, 448, 558, 559, 560, 568, 631, 643, 644, 659, 667, 681, 818, 827, 857, 863, 866, 869], "pad_id": 863, "pad_num_nod": 681, "pad_sequ": [443, 681], "pad_word": [184, 856], "padding_idx": 863, "page": [10, 21, 67, 89, 112, 134, 149, 155, 185, 187, 193, 711, 815, 816, 817, 818, 819, 826, 827, 829], "pagerank": [388, 662, 666, 817], "pai": 720, "pair": [6, 32, 48, 66, 178, 183, 220, 226, 227, 240, 241, 242, 293, 297, 301, 303, 308, 310, 317, 318, 319, 331, 339, 342, 381, 383, 385, 387, 390, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 413, 416, 419, 430, 432, 447, 448, 449, 450, 546, 547, 557, 567, 568, 660, 681, 683, 693, 695, 698, 699, 702, 712, 715, 716, 728, 729, 784, 802, 818, 826, 837, 839, 847, 851, 852, 853, 863], "pair_graph": 220, "pairwis": [430, 431], "panda": [148, 168, 687, 699, 703, 784, 826, 829, 832, 833, 839], "pandas\uc640": 788, "papaer": 863, "paper": [137, 151, 152, 153, 154, 162, 165, 167, 171, 180, 182, 188, 214, 289, 297, 303, 309, 316, 339, 389, 397, 413, 422, 423, 430, 432, 442, 472, 548, 558, 561, 567, 647, 663, 693, 695, 698, 717, 722, 779, 780, 814, 817, 819, 822, 834, 837, 838, 850, 851, 852, 853, 854, 856, 857, 859, 860, 862, 863, 864], "paper___cites___pap": 695, "papers100m": 289, "paradigm": [3, 691, 836, 856], "paral": 856, "parallel": [4, 48, 66, 122, 210, 213, 241, 242, 293, 383, 441, 632, 641, 669, 691, 693, 695, 710, 737, 777, 818, 827, 842, 843, 846, 847, 853, 856, 857, 859, 860, 866, 868, 869], "param": [4, 6, 10, 32, 387, 388, 389, 390, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 417, 419, 420, 421, 422, 423, 450, 451, 454], "paramet": [4, 6, 10, 14, 20, 26, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 592, 595, 596, 597, 598, 599, 601, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 632, 633, 634, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 665, 666, 667, 669, 679, 680, 685, 689, 691, 692, 706, 707, 708, 712, 715, 717, 719, 720, 721, 722, 723, 724, 726, 728, 729, 730, 732, 735, 737, 738, 751, 755, 756, 758, 760, 766, 768, 769, 770, 772, 775, 777, 778, 793, 797, 798, 801, 803, 804, 806, 810, 811, 812, 813, 815, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 842, 846, 847, 850, 851, 852, 853, 856, 859, 863, 868, 869], "parameter": [141, 426, 428, 726, 810, 851, 852, 859], "parametr": [859, 864, 866], "parent": [210, 213, 234, 246, 474, 862], "parit": [351, 352], "paritt": 453, "parmeti": [693, 695], "parmetis\uac00": 780, "parmetis\ub290": 780, "parmetis\ub294": 780, "parmetis\uc5d0": 780, "parmetis\uc758": 780, "parquet": 695, "pars": [148, 687, 695, 699, 703, 839, 856, 857, 866], "parser": 148, "part": [4, 21, 22, 135, 151, 152, 197, 205, 240, 297, 437, 438, 447, 561, 683, 689, 692, 695, 699, 705, 708, 712, 723, 780, 818, 832, 833, 836, 863], "part0": [240, 694, 695, 739, 780], "part1": [240, 694, 695, 739, 780], "part1_end": 240, "part1_start": 240, "part2": 695, "part2_end": 240, "part2_start": 240, "part_config": [4, 231, 236, 237, 238, 691, 692, 693, 696, 737, 738, 740, 777, 778, 779, 781, 846], "part_data": [694, 695], "part_graph": 240, "part_id": [4, 236, 237, 238, 351, 694, 695, 780], "part_method": [4, 240], "part_polici": [4, 693, 779], "part_ratio": [197, 205], "partial": [4, 712, 826, 851, 853, 859, 863], "particip": [210, 213], "particular": [4, 21, 90, 107, 149, 185, 197, 221, 240, 247, 414, 425, 569, 606, 617, 693, 703, 714, 821, 837, 838], "particularli": [245, 473, 699, 703, 819], "partid": 4, "partid2eid": 4, "partid2nid": 4, "partit": [13, 209, 231, 232, 236, 237, 238, 239, 240, 351, 352, 414, 453, 539, 554, 679, 685, 691, 692, 696, 780, 852, 868], "partiti": 863, "partitioend": [351, 539], "partition_algo": 695, "partition_book": [4, 232, 239, 694, 695], "partition_graph": [4, 692, 694, 695, 739, 778, 780, 846, 847], "partitionpolici": [4, 693, 779], "partmetis\ub97c": 780, "partx": [694, 695], "pascal": [9, 706, 791], "pass": [0, 1, 4, 5, 13, 22, 73, 91, 92, 121, 122, 130, 131, 178, 179, 208, 209, 210, 213, 214, 215, 220, 240, 246, 297, 313, 333, 337, 338, 351, 352, 387, 388, 389, 390, 393, 399, 400, 402, 403, 405, 406, 407, 410, 413, 414, 416, 417, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 450, 456, 474, 538, 561, 565, 633, 670, 671, 672, 673, 674, 675, 676, 677, 678, 685, 687, 689, 692, 694, 695, 701, 704, 711, 714, 716, 717, 721, 724, 725, 728, 730, 732, 735, 748, 772, 775, 789, 794, 804, 809, 813, 814, 829, 831, 832, 833, 837, 843, 846, 847, 850, 853, 854, 857, 859, 864, 866], "passwordless": [696, 781, 846], "pass\ub97c": 804, "path": [4, 21, 156, 184, 199, 200, 201, 202, 203, 206, 209, 235, 236, 237, 238, 240, 309, 316, 336, 344, 350, 385, 447, 448, 559, 560, 565, 568, 647, 681, 686, 687, 690, 694, 695, 696, 733, 736, 773, 776, 780, 831, 832, 833, 842, 846, 859], "path_data": [447, 681, 683], "path_encod": [447, 683], "path_graph": [699, 743, 784], "path_len": 681, "pathencod": 683, "pathlik": 4, "patit": 693, "pattern": [22, 120, 174, 835, 853], "pb": [691, 737, 777], "pc": 385, "pcgnn_www2021": 162, "pci": 291, "pcie": 718, "pd": [183, 687, 832, 833, 839, 852], "pdf": [147, 161, 162, 174, 195, 428, 444, 719, 767, 863], "pe": [395, 659, 663, 818], "peek": 826, "peocess": 308, "peopl": [145, 698, 728], "pep8": 21, "per": [4, 101, 102, 138, 166, 175, 186, 214, 215, 216, 219, 220, 226, 227, 240, 241, 246, 297, 303, 312, 319, 330, 331, 333, 337, 338, 339, 393, 430, 432, 474, 476, 538, 561, 567, 649, 676, 677, 678, 688, 693, 695, 703, 708, 779, 794, 817, 826, 843, 853, 868], "percent": [852, 853], "percentag": [145, 859], "perfetch": 718, "perform": [0, 1, 4, 5, 9, 21, 22, 91, 92, 118, 119, 122, 130, 131, 141, 142, 143, 162, 168, 188, 189, 190, 207, 210, 217, 219, 221, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 300, 302, 303, 308, 309, 317, 351, 352, 355, 383, 387, 389, 390, 393, 399, 402, 403, 405, 406, 407, 410, 413, 420, 424, 425, 426, 427, 428, 429, 441, 442, 443, 445, 447, 448, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 549, 557, 561, 562, 563, 564, 570, 571, 601, 643, 644, 666, 692, 693, 695, 697, 699, 701, 707, 710, 713, 714, 718, 720, 722, 723, 724, 726, 728, 729, 730, 817, 818, 821, 827, 828, 829, 836, 837, 842, 843, 846, 847, 850, 851, 852, 853, 856, 859, 860, 866, 868, 869], "perftools4": 843, "perhap": 853, "period": [297, 300, 313], "perman": 21, "permiss": [21, 827], "permut": [197, 205, 437, 438, 554, 837, 852], "permute_config": [98, 554], "persist": [4, 692], "persistent_work": 291, "person": [388, 647, 662, 666, 817, 851], "personen": 132, "persourceuniform": 228, "perspect": [850, 862, 863], "perturb": [142, 143, 189, 190], "perturb_ratio": [142, 143, 189, 190], "pgexplain": 426, "phase": [723, 856, 863], "phi": [402, 415, 498, 705, 729, 749, 755, 769, 790, 797, 812], "phi_e": 401, "phi_h": 401, "phi_x": 401, "photo": [25, 135, 136], "php": 846, "physic": [25, 151, 152, 695], "pi": [389, 449, 852], "pick": [6, 14, 214, 216, 219, 430, 431, 558, 560, 561, 563, 715, 837, 853], "pickl": 847, "pictur": 863, "piec": 836, "pin": [10, 67, 89, 112, 210, 291, 297, 315, 316, 326, 560, 713, 827, 869], "pin_memori": [315, 714, 758, 801], "pin_memory_": [297, 315, 316, 713, 827, 869], "pin_prefetch": 210, "pinsag": 556, "pip": [688, 734, 774, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 842], "pipe": [718, 829], "pipelin": [3, 7, 291, 685, 693, 704, 710, 713, 715, 725, 728, 730, 825, 828, 829, 839, 847], "pixel": [146, 169], "pkl": [209, 690, 736, 776, 847], "place": [1, 21, 70, 116, 130, 210, 291, 297, 298, 315, 316, 336, 342, 555, 561, 562, 563, 564, 632, 641, 701, 827, 842, 868, 869], "placehold": 221, "plai": [4, 27, 28, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 114, 115, 116, 117, 122, 130, 214, 216, 219, 246, 247, 332, 333, 337, 338, 383, 424, 425, 426, 427, 428, 429, 474, 475, 538, 551, 552, 553, 555, 640, 641, 648, 649, 654, 664, 665, 669, 679, 703, 747, 755, 788, 797, 817, 820], "plain": 830, "plan": 725, "platform": [145, 188], "player": [46, 74, 103, 654, 665], "pleas": [4, 9, 21, 22, 27, 28, 114, 115, 116, 117, 130, 148, 210, 214, 215, 216, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 333, 336, 342, 350, 408, 419, 474, 475, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 552, 554, 555, 556, 563, 632, 633, 641, 642, 681, 683, 689, 694, 711, 712, 715, 717, 718, 719, 720, 728, 730, 819, 826, 827, 829, 832, 833, 836, 842, 843, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 869], "plenti": 835, "plot": [853, 856], "plot_tre": 856, "plt": [817, 852, 856, 859, 862], "plu": [131, 159, 287, 332, 707, 819, 822], "pm": [183, 852, 853], "pm_dglpart": [694, 780], "pm_pd": [183, 852], "pm_pd_batch": 183, "pm_pd_y": 852, "pma": 437, "pmpd": 852, "pmpd1": 852, "pn": 769, "pna": 417, "pnaconv": 395, "png": [834, 835, 836, 837, 838, 839, 842, 863], "po": [6, 179, 817, 832, 833, 852, 856, 862, 863], "point": [9, 14, 178, 179, 297, 303, 308, 339, 402, 430, 431, 432, 545, 567, 635, 636, 637, 706, 797, 819, 827, 852, 863], "point_idx": 6, "pointer": [22, 131, 287, 297, 325, 332, 611, 612, 699], "poisson": 303, "polariz": [178, 179], "polici": [4, 693], "policy_str": 4, "polit": 166, "politifact": 159, "ponder": 863, "ponderli": 162, "pool": [6, 13, 389, 419, 424, 429, 433, 434, 435, 436, 437, 439, 440, 446, 454, 721, 722, 723, 761, 762, 763, 805, 806, 807, 856, 862, 863, 864, 866, 868], "pooler": 818, "poorli": 843, "pop": [426, 428, 429, 850, 851, 853, 856, 868], "popul": [21, 208, 323, 426, 428], "popular": [167, 197, 692, 703, 730, 815, 822, 834], "port": [696, 846, 847], "port1": [846, 847], "port2": [846, 847], "portion": [4, 10, 692, 828, 834], "pos_dst": 847, "pos_enc": [818, 863], "pos_enc_s": 818, "pos_encod": 446, "pos_featur": 847, "pos_graph": 847, "pos_linear": 818, "pos_pair_graph": 220, "pos_scor": [729, 758, 769, 801, 812, 837, 847], "pos_src": 847, "pos_u": 385, "pos_v": 385, "pose": 862, "posit": [6, 13, 120, 145, 150, 157, 158, 161, 163, 184, 191, 214, 220, 241, 242, 291, 297, 303, 307, 308, 317, 340, 381, 383, 385, 401, 404, 442, 444, 445, 446, 548, 558, 560, 561, 631, 659, 663, 667, 681, 687, 715, 801, 818, 821, 826, 847, 853, 856, 863], "positionwis": [437, 438], "positive_edge_dst": [139, 847], "positive_edge_src": [139, 847], "positive_graph": [758, 801], "possibl": [21, 137, 220, 226, 293, 309, 389, 546, 547, 557, 699, 706, 707, 713, 837, 838, 846, 851, 852, 859, 863], "possible_dest": 859, "possible_dests_emb": 859, "possibli": [300, 313, 728, 827], "post": [21, 24, 163, 181, 863], "post0": [826, 827, 829, 832, 833], "post_func": 863, "post_pair": 863, "postiv": 801, "potenti": [309, 712, 838, 842, 851], "power": [10, 22, 165, 408, 426, 428, 431, 446, 545, 656, 695, 715, 755, 797, 817, 821, 834, 838, 857, 866], "ppa": [688, 734, 774], "ppi": [25, 822], "ppidata": [689, 735, 775], "ppidataset": 25, "ppr": [13, 666], "pq": 183, "pr": 21, "practic": [302, 387, 397, 399, 402, 403, 405, 406, 407, 410, 413, 420, 472, 685, 709, 728, 818, 826, 837, 839, 844, 852, 853, 868], "practice\ub4e4\uc744": 772, "practis": [387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 707, 843], "pramet": 422, "pre": [4, 23, 125, 173, 249, 303, 308, 386, 409, 413, 415, 418, 422, 423, 817, 818, 826, 827, 829, 832, 833, 859, 863], "pre_func": 863, "pre_kv": 863, "pre_pair": 863, "pre_q": 863, "precis": [9, 635, 636, 637, 704, 706, 789, 791, 837, 853], "precomput": 395, "precond": [422, 423], "pred": [4, 428, 712, 726, 729, 756, 758, 766, 769, 798, 801, 810, 812, 816, 817, 834, 836, 837, 838, 852, 856, 868], "predction": 198, "predecessor": [93, 107, 337, 339, 343, 430, 432, 472, 567, 797], "predefin": [150, 154, 176, 730], "predic": [53, 54, 852, 863], "predict": [13, 132, 133, 137, 138, 139, 140, 144, 150, 154, 157, 158, 162, 170, 171, 173, 176, 177, 178, 179, 180, 188, 191, 197, 211, 214, 216, 220, 243, 245, 303, 305, 308, 388, 389, 424, 425, 426, 428, 429, 436, 441, 450, 473, 688, 692, 710, 711, 712, 717, 725, 728, 730, 734, 758, 774, 775, 801, 816, 817, 818, 825, 827, 829, 834, 836, 838, 840, 846, 848, 852, 853, 856, 859, 862], "predict_categori": [132, 133, 144, 170, 851], "prediction_": 851, "prediction\u6570\u636e\u96c6": 734, "prediction\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 734, "predictor": [441, 450, 712, 715, 726, 756, 758, 798, 801, 818, 826, 847], "prefer": [168, 186, 702, 836], "prefetch": [13, 208, 209, 214, 216, 217, 220, 221, 222, 223, 224, 225, 718], "prefetch_edata": [209, 217], "prefetch_edge_feat": [208, 214, 216, 219], "prefetch_label": [208, 214, 216, 220], "prefetch_ndata": [209, 217], "prefetch_node_feat": [208, 214, 216, 219], "prefix": [633, 694, 780], "preform": [297, 303, 308, 719], "prepar": [293, 682, 683, 695, 725, 728, 826, 829, 839, 846, 863], "prepare_for_train": 859, "prepare_train": 859, "prepend": 68, "preprocess": [132, 133, 144, 170, 179, 184, 691, 694, 816, 817, 819, 825, 826, 827, 829, 832, 833, 837, 869], "prerequisit": 694, "presenc": [149, 185], "present": [297, 310, 425, 427, 818, 851, 853, 862], "preserv": [95, 96, 127, 232, 234, 239, 241, 242, 551, 553, 561, 562, 563, 564, 656, 657, 662, 821, 850, 856], "presort": [415, 418], "pretrain": [159, 184, 815], "pretrained_emb": [184, 856], "prev_proj": 852, "prevent": [122, 145, 414, 442, 445, 649, 711, 720, 815, 851], "previou": [186, 290, 303, 387, 715, 718, 726, 728, 729, 812, 827, 828, 837, 839, 846, 852, 863, 869], "previous": [717, 719, 726], "price": 22, "primari": [292, 683], "prime": [400, 403], "primit": [3, 393, 394, 859], "princip": [417, 789], "principl": [699, 716], "print": [4, 6, 20, 21, 22, 42, 53, 54, 70, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 219, 246, 293, 297, 300, 310, 311, 317, 318, 320, 321, 325, 331, 336, 382, 383, 384, 386, 388, 404, 407, 409, 413, 430, 432, 443, 447, 448, 449, 475, 476, 554, 568, 569, 638, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 669, 685, 687, 688, 692, 694, 695, 702, 717, 720, 726, 729, 730, 734, 738, 746, 755, 760, 766, 769, 770, 772, 774, 778, 787, 797, 803, 804, 810, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 846, 850, 851, 852, 853, 856, 859, 863, 868, 869], "print_everi": [132, 133, 144, 170], "printcalcul": 22, "prior": [857, 866], "prioriti": [240, 565, 815], "prob": [214, 216, 219, 241, 242, 426, 428, 558, 560, 561, 562, 859, 863], "prob_nam": [303, 308], "probabl": [147, 174, 214, 216, 217, 219, 241, 242, 297, 303, 308, 388, 426, 428, 442, 444, 445, 548, 556, 558, 560, 561, 562, 563, 652, 653, 654, 662, 666, 715, 730, 797, 801, 826, 837, 852, 853, 859, 860, 862, 863, 866], "problem": [293, 720, 834, 837, 851, 852, 857, 863, 866, 869], "probs_nam": 297, "proc_id": 293, "proce": [703, 728, 850, 852, 863], "procedur": [6, 426, 428, 689, 863], "process": [0, 2, 4, 6, 8, 22, 41, 134, 137, 138, 139, 140, 142, 143, 149, 155, 156, 171, 173, 180, 182, 185, 187, 188, 189, 190, 193, 210, 213, 232, 235, 239, 291, 293, 301, 303, 305, 308, 353, 354, 385, 388, 407, 420, 421, 424, 425, 426, 428, 441, 453, 455, 575, 683, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 710, 713, 718, 728, 732, 735, 772, 775, 776, 817, 818, 825, 838, 839, 843, 846, 847, 851, 852, 853, 856, 859, 863], "prod_": 9, "produc": [230, 592, 595, 596, 597, 599, 695, 723, 837, 850, 853], "product": [4, 118, 135, 136, 137, 161, 163, 289, 385, 399, 413, 450, 592, 617, 698, 713, 719, 726, 729, 740, 781, 799, 812, 818, 819, 827, 837, 846, 847, 853, 862, 863], "product\ub85c": 801, "product\ub97c": [810, 812], "profil": [159, 188], "prog": 856, "program": [9, 21, 22, 293, 691, 697, 817, 839, 869], "progress": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 427, 429, 685, 772, 860, 866], "prohibit": 159, "proj": 863, "project": [22, 155, 187, 188, 193, 389, 442, 452, 712, 836, 850, 851, 852, 859], "project_initial_featur": 407, "prompt": 815, "prop": [423, 859], "prop_edg": 92, "prop_edges_yyi": 0, "prop_nod": [91, 856], "prop_nodes_topo": 856, "prop_nodes_xxx": 0, "prop_step": [422, 423], "propag": [13, 91, 92, 159, 388, 422, 423, 455, 541, 543, 544, 714, 730, 813, 817, 828, 852, 856], "propagagtion\uc744": 800, "propagate_attent": 863, "propagation\uc744": 813, "propagation\uc758": 800, "proper": [210, 843], "properli": [138, 139, 140], "properti": [4, 38, 39, 42, 43, 44, 45, 46, 51, 52, 59, 65, 66, 68, 74, 77, 78, 103, 104, 105, 120, 138, 160, 162, 177, 178, 179, 195, 197, 205, 292, 297, 299, 302, 304, 305, 309, 310, 312, 314, 436, 441, 574, 575, 576, 582, 584, 591, 593, 594, 604, 671, 672, 674, 676, 677, 688, 689, 700, 728, 734, 735, 774, 775, 818, 832, 833, 835, 838, 839, 851, 859, 862], "property_nam": 197, "property_valu": 205, "proport": [214, 216, 217, 219, 303, 307, 317, 694, 715], "propos": [162, 197, 205, 245, 386, 473, 631, 667, 834, 836, 851, 853, 856, 863], "protect": [692, 839], "protein": [25, 52, 165, 175, 389, 688, 734, 774, 838], "proteom": 859, "protest": 164, "prototyp": [22, 702], "proven": 818, "provid": [0, 3, 4, 5, 7, 8, 9, 21, 34, 35, 73, 80, 89, 93, 113, 131, 138, 139, 140, 165, 168, 178, 179, 205, 208, 209, 213, 214, 216, 219, 220, 287, 292, 293, 297, 300, 303, 308, 310, 313, 332, 339, 344, 383, 408, 413, 419, 426, 428, 430, 432, 453, 554, 565, 567, 572, 573, 601, 638, 666, 679, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 702, 703, 709, 710, 712, 715, 716, 717, 720, 725, 726, 727, 728, 730, 821, 825, 826, 827, 829, 830, 834, 835, 836, 837, 838, 839, 842, 843, 846, 850, 851, 853, 856, 862, 863, 868, 869], "provis": [691, 696], "proxi": 133, "prune": [427, 429], "pseudo": [207, 383, 410], "pseudocod": 862, "psi": [449, 499, 705, 749, 790], "psi_": 499, "psutil": [826, 827, 829, 832, 833], "pt": [231, 316, 695, 832, 833, 842], "ptc": 165, "pth": 859, "pub": 162, "public": [22, 150, 176, 852], "publish": 822, "pubm": [25, 176, 689, 735, 775, 822], "pull": [0, 21, 92, 852, 856], "purchas": [135, 136, 137, 289, 756, 798, 819], "pure": [178, 179, 706, 722], "purl": 133, "purpos": [4, 240, 293, 301, 305, 563, 685, 687, 689, 703, 714, 726, 853], "push": [4, 21, 822], "put": [22, 240, 351, 352, 423, 444, 554, 683, 713, 717, 718, 832, 833, 834, 862, 868], "py": [21, 22, 199, 200, 695, 696, 728, 740, 768, 780, 781, 811, 815, 818, 824, 832, 833, 839, 840, 841, 842, 844, 845, 846, 848, 849, 850, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 870, 871], "pyarrow": [695, 780], "pydant": 148, "pyg": [305, 822], "pygcn": 850, "pygraphviz": 856, "pylibcugraphop": [392, 393, 394], "pylint": 21, "pylintrc": 21, "pypa": 827, "pypi": 827, "pyplot": [817, 852, 856, 859, 862], "python": [0, 8, 21, 22, 34, 53, 92, 100, 203, 205, 206, 210, 392, 393, 394, 690, 691, 692, 695, 699, 702, 736, 776, 778, 784, 814, 815, 826, 827, 829, 832, 833, 842, 843, 851, 856, 859, 862, 863], "python3": [21, 696, 740, 781, 815, 818, 826, 827, 829, 832, 833, 846, 850, 853], "pythonpath": 21, "python\uc758": 776, "pytorch": [3, 4, 5, 6, 8, 9, 10, 13, 14, 21, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 186, 196, 210, 213, 214, 215, 216, 219, 235, 246, 247, 248, 249, 250, 263, 264, 265, 266, 287, 290, 293, 315, 316, 332, 333, 337, 338, 339, 349, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 474, 475, 538, 545, 556, 567, 569, 632, 634, 638, 639, 640, 648, 654, 660, 665, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 683, 689, 691, 692, 702, 716, 718, 720, 721, 722, 723, 725, 728, 730, 759, 761, 764, 768, 770, 777, 778, 798, 802, 803, 804, 805, 806, 811, 813, 814, 816, 817, 818, 819, 821, 822, 823, 825, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 843, 846, 847, 850, 851, 852, 853, 854, 856, 857, 859, 860, 862, 863, 864, 866, 868, 869], "pytorchcaffe2": 843, "pytorch\u7684nn\u6a21\u5757": 761, "pytorch\u7684tensor\u7c7b": 746, "pytorch\ub294": 804, "pytorch\ub85c": 802, "pytorch\ub97c": 809, "pytorch\uc640": [775, 778], "pytorch\uc758": [787, 804, 807], "pytz": [826, 829, 832, 833], "pyyaml": 148, "py\u548claunch": 740, "py\u5e94\u8be5\u4f7f\u7528\u76f8\u540c\u7684ip\u914d\u7f6e\u6587\u4ef6": 740, "q": [147, 174, 180, 415, 436, 442, 558, 563, 818, 863], "q_": [386, 418], "q_i": 863, "q_j": 863, "q_p": 174, "q_proj": 818, "q_t": 436, "qi": [850, 852], "qingbiao": 748, "qingbiaoli": 748, "qipeng": [856, 863], "qk": [442, 818], "qkv": 863, "qm7b": [25, 177, 689, 735, 775], "qm7bdata": [689, 735, 775], "qm7bdataset": [686, 689, 733, 735, 773, 775], "qm7bdataset\u6e90\u4ee3\u7801": 735, "qm9": 178, "qm9dataset": 179, "qm9edg": 179, "qm9edgedataset": 178, "qquad": 852, "qualiti": [214, 863], "quan": [850, 863], "quantiti": [245, 473], "quantum": [177, 178, 179, 390, 416], "queri": [4, 13, 36, 37, 38, 45, 47, 48, 51, 54, 55, 56, 57, 58, 60, 61, 75, 77, 79, 80, 81, 82, 87, 88, 89, 90, 105, 107, 299, 305, 702, 818, 863], "question": [180, 852], "queue": [4, 235], "queue_siz": 4, "quick": [22, 702, 821], "quickli": 836, "quickstart": 820, "quit": [22, 690, 719, 853], "quot": [687, 835], "r": [14, 60, 87, 118, 119, 163, 178, 179, 315, 318, 386, 400, 403, 405, 406, 418, 431, 433, 434, 435, 440, 451, 452, 497, 500, 545, 648, 695, 705, 708, 719, 724, 749, 764, 790, 808, 817, 818, 819, 821, 859, 862, 863], "r0": [297, 693, 779], "r1": [297, 693, 779], "r2": [178, 179, 297, 693, 779], "r3": [297, 693, 779], "r_": [389, 647, 724, 764, 808, 821], "r_1": 647, "r_2": 647, "r_g": 545, "r_i": [393, 449], "r_j": [449, 647], "r_k": 389, "r_t": [214, 297, 436, 561], "radial": 389, "radiu": [243, 431, 545], "radius_proj": 852, "rais": [21, 48, 89, 109, 116, 131, 145, 177, 178, 179, 183, 287, 332, 340, 387, 399, 402, 403, 404, 405, 406, 407, 410, 413, 420, 631, 632, 633, 659, 667, 686, 693, 722, 723, 733, 762, 763, 773, 806, 807], "ram": [14, 309, 695], "rand": [6, 9, 128, 129, 214, 216, 219, 399, 400, 402, 403, 405, 406, 410, 411, 413, 416, 419, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 449, 456, 643, 644, 699, 720, 743, 784, 804, 832, 833], "rand_bipartit": 547, "rand_graph": [9, 385, 400, 403, 411, 414, 433, 434, 435, 436, 437, 438, 439, 440, 441, 450, 451, 452, 455, 546, 646, 652, 653, 654, 665, 666, 720, 804], "randint": [386, 451, 452, 712, 725, 726, 729, 765, 766, 769, 809, 810, 812, 832, 833], "randn": [5, 47, 75, 118, 119, 121, 383, 384, 386, 409, 414, 425, 426, 427, 450, 451, 452, 607, 608, 614, 617, 625, 649, 665, 666, 668, 700, 701, 725, 726, 744, 745, 755, 765, 766, 785, 786, 797, 809, 810, 821, 835, 862], "random": [0, 6, 13, 142, 143, 161, 162, 163, 172, 173, 174, 183, 189, 190, 197, 198, 205, 207, 214, 217, 240, 245, 293, 297, 301, 303, 329, 381, 385, 399, 400, 403, 405, 406, 413, 416, 433, 434, 435, 436, 437, 438, 439, 440, 441, 473, 546, 547, 548, 556, 558, 559, 560, 561, 566, 663, 666, 695, 714, 719, 725, 726, 765, 766, 809, 810, 818, 832, 833, 837, 853, 868], "random_flip": [631, 667], "random_partit": 695, "random_se": [161, 162, 163, 197, 205, 297, 561], "random_st": [142, 143, 173, 189, 190, 207, 868], "random_walk": [559, 713], "random_walk_with_restart": 560, "randomli": [6, 142, 143, 147, 171, 174, 189, 190, 207, 209, 210, 213, 226, 227, 232, 239, 241, 242, 297, 451, 452, 561, 562, 563, 631, 646, 652, 653, 654, 661, 667, 695, 725, 797, 809, 825, 837], "randomst": [183, 207], "randomwalkp": 13, "rang": [4, 128, 129, 145, 164, 165, 168, 172, 186, 210, 213, 240, 298, 310, 315, 319, 330, 331, 351, 381, 424, 425, 426, 427, 428, 443, 448, 455, 539, 557, 563, 572, 573, 639, 681, 683, 689, 691, 693, 695, 719, 720, 726, 728, 729, 730, 735, 737, 766, 768, 769, 770, 775, 777, 804, 810, 811, 812, 813, 816, 817, 818, 826, 827, 829, 834, 836, 837, 838, 842, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "range_tensor": 302, "rangepartitionbook": 4, "rangl": [178, 179], "rank": [4, 232, 239, 353, 439, 662, 827, 836, 842, 868, 869], "rapid": 851, "rare": [226, 557], "rate": [4, 10, 14, 137, 161, 163, 173, 388, 392, 393, 394, 398, 403, 405, 406, 411, 415, 418, 419, 422, 423, 424, 425, 437, 438, 683, 726, 851], "rather": [142, 143, 189, 190, 819, 852, 859], "ratio": [138, 139, 140, 161, 163, 173, 197, 198, 205, 244, 297, 395, 417, 646], "raw": [0, 95, 96, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 246, 333, 337, 338, 446, 474, 538, 551, 552, 569, 666, 684, 685, 687, 689, 695, 727, 771, 772, 822, 825, 832, 833, 839], "raw_dir": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 685, 686, 689, 732, 733, 735, 772, 773, 775], "raw_dir\u4e0b\u7684self": 733, "raw_dir\u6307\u5b9a\u7684\u503c": 732, "raw_path": [156, 686, 689, 733, 735, 773, 775], "rb": [418, 847, 851], "rbf": 389, "rbf_kernel_mean": 389, "rbf_kernel_sc": 389, "rbrace": [186, 705, 749, 755, 790, 797], "rcmk": 554, "rcount": [850, 853], "rdf": [132, 133, 144, 170, 851], "rdfdata": [689, 735, 775], "rdfgraphdataset": [132, 133, 144, 170], "re": [6, 95, 96, 134, 137, 138, 139, 140, 148, 149, 155, 171, 173, 180, 182, 185, 187, 188, 193, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 418, 419, 420, 421, 422, 423, 552, 554, 689, 822, 827, 832, 833, 869], "reach": [710, 856, 863], "reachabl": 350, "read": [1, 3, 4, 5, 13, 21, 168, 183, 207, 288, 294, 295, 296, 298, 309, 315, 383, 687, 692, 694, 695, 714, 814, 821, 822, 837, 839, 846, 847, 856, 863, 869], "read_csv": 839, "reader": [850, 853], "readi": [711, 832, 833, 846, 859], "readm": [21, 210], "readonli": [116, 632], "readout": [438, 441, 549, 550, 838], "readout_edg": [345, 347, 550, 629], "readout_nod": [346, 348, 549, 630, 728, 768, 811], "real": [159, 162, 293, 681, 695, 780, 817, 818, 828, 835, 859, 863], "realiz": 20, "realli": [137, 171, 180, 182, 188, 318, 442, 443, 445, 447, 448], "reason": [21, 164, 166, 293, 692, 714], "reassign": 694, "recal": [14, 818, 828, 851, 853, 863], "receiv": [20, 53, 100, 221, 293, 388, 397, 413, 675, 676, 677, 678, 706, 836, 859], "recent": [162, 818, 863], "recip": [424, 425, 426, 427, 428, 429], "recogn": [723, 763, 807], "recognit": 174, "recommand": 27, "recommend": [5, 21, 22, 34, 73, 93, 94, 100, 113, 120, 125, 163, 173, 210, 249, 293, 396, 397, 398, 556, 639, 684, 685, 689, 690, 692, 694, 695, 698, 706, 707, 713, 726, 729, 815, 827, 831, 832, 833, 836, 837, 842, 843, 846, 850, 851, 852, 853, 856, 859, 862, 863, 868], "reconstruct": 851, "record": [56, 132, 145, 641, 817, 856, 859], "recov": [695, 838, 851], "recreat": 821, "recurr": [164, 166, 412, 436, 863, 864, 866], "recurs": [21, 351, 352, 815], "reddit": [25, 181, 720, 804, 822], "redditbinari": 165, "redditdata": [689, 735, 775], "redditdataset": [25, 720, 804], "redditmulti5k": 165, "redistribut": [814, 815], "reduc": [13, 20, 73, 91, 92, 93, 94, 100, 113, 245, 263, 264, 265, 266, 291, 309, 473, 499, 501, 540, 541, 542, 543, 544, 595, 596, 597, 599, 695, 705, 706, 708, 714, 720, 790, 791, 794, 804, 807, 827, 828, 836, 843, 850, 851, 853, 856, 863, 869], "reduce_func": [73, 91, 92, 93, 94, 100, 113, 263, 264, 265, 266, 540, 541, 542, 543, 544, 706, 708, 709, 750, 752, 753, 791, 794, 795, 836, 853, 856, 859, 863], "reduce_op": 499, "reduceop": [827, 869], "reducer\ub294": 794, "reduct": [9, 73, 91, 92, 93, 94, 100, 113, 214, 303, 501, 592, 595, 596, 597, 708, 724, 794, 808, 836, 856], "redund": [293, 557], "ref": [144, 739], "refer": [4, 9, 21, 22, 24, 44, 72, 104, 135, 136, 146, 147, 148, 151, 152, 153, 159, 162, 164, 166, 169, 174, 175, 177, 178, 179, 181, 183, 195, 210, 214, 215, 216, 240, 241, 293, 297, 317, 386, 418, 433, 434, 435, 436, 437, 439, 440, 444, 498, 499, 556, 562, 633, 681, 683, 689, 692, 699, 703, 711, 712, 713, 717, 718, 719, 729, 730, 756, 760, 798, 803, 814, 816, 817, 819, 826, 827, 829, 832, 833, 835, 836, 838, 843, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "refere": 863, "reflect": [22, 26, 70, 149, 185, 305, 310, 817], "refresh": [819, 829], "regard": [408, 413, 419, 477, 478, 479, 480, 620, 727, 821], "regardless": [4, 80, 117, 130, 234, 297, 310, 344, 350, 694, 695, 859], "regim": 714, "region": [23, 817], "regist": [22, 424, 425, 426, 427, 428, 429, 722], "register_object": 22, "registr": 721, "registri": 22, "regress": [2, 138, 177, 178, 179, 195, 211, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 689, 712, 723, 725, 729, 775, 809, 838], "regression\ub3c4": 813, "regular": [171, 386, 393, 400, 418, 426, 428, 457, 692, 851], "regularli": 868, "reiniti": [381, 385, 392, 393, 394, 396, 397, 398, 400, 403, 405, 406, 407, 410, 412, 413, 416, 419, 420, 421, 436, 450, 451, 452, 454, 722, 806, 853], "reject": [557, 647], "rel": [95, 96, 309, 426, 427, 429, 451, 452, 689, 695, 696, 712, 715, 717, 728, 730, 735, 756, 758, 760, 768, 770, 775, 798, 801, 803, 811, 813, 831, 832, 833], "rel_data_path": [740, 781], "rel_emb": [451, 452], "rel_graph": [724, 764, 808], "rel_nam": [426, 712, 715, 717, 726, 728, 729, 730, 756, 758, 760, 766, 768, 769, 770, 798, 801, 803, 810, 811, 812, 813], "rel_project": 452, "rel_typ": [25, 164, 166], "relabel": [4, 6, 122, 125, 240, 246, 249, 319, 333, 337, 338, 474, 538, 703, 719], "relabel_idx": 6, "relabel_nod": [49, 106, 157, 158, 191, 246, 333, 337, 338, 474, 538, 755, 797], "relat": [1, 13, 18, 21, 26, 52, 59, 113, 117, 122, 125, 126, 131, 132, 133, 144, 157, 158, 161, 162, 163, 170, 191, 203, 206, 220, 246, 249, 250, 287, 290, 297, 300, 310, 311, 313, 332, 333, 337, 338, 355, 383, 386, 393, 395, 417, 418, 449, 451, 452, 457, 474, 538, 546, 547, 647, 683, 687, 689, 695, 697, 698, 703, 708, 712, 723, 724, 788, 794, 821, 825, 853, 854, 863, 866], "relation_submodul": 383, "relationship": [150, 154, 176, 560, 712, 819, 837, 851, 852, 854, 866], "releas": [6, 815, 827], "relev": [681, 729], "relgraphconv": [393, 639, 851], "relgraphconvlay": [730, 770, 813], "reli": [720, 825, 846], "reliabl": 22, "reload": [132, 133, 135, 136, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 309, 685, 772], "relu": [121, 391, 396, 402, 408, 409, 411, 429, 445, 683, 691, 712, 714, 715, 716, 717, 719, 720, 722, 723, 728, 730, 737, 756, 757, 758, 759, 760, 762, 763, 768, 770, 777, 798, 800, 801, 802, 803, 806, 807, 811, 813, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 846, 847, 850, 851, 852, 853, 868, 869], "relubackward0": 408, "remain": [100, 180, 181, 303, 308, 309, 552, 710, 719, 843, 853], "remaind": 863, "remap": 695, "remot": [21, 145, 177, 178, 179, 685, 686], "remov": [95, 96, 118, 119, 130, 135, 136, 151, 152, 153, 157, 168, 186, 192, 246, 289, 333, 337, 338, 538, 551, 552, 553, 559, 641, 649, 664, 716, 717, 837, 863], "remove_edg": [27, 28, 96, 114, 115, 552, 837], "remove_nod": [27, 28, 95, 114, 115, 551], "remove_self_loop": 117, "removeselfloop": 13, "renam": [127, 642], "render": 21, "reorder": [150, 154, 160, 176, 194, 415, 554, 563, 689, 775], "reorder_graph": [150, 154, 160, 176, 194, 415, 418, 689, 735, 775], "reparameter": 423, "repeat": [6, 128, 129, 142, 318, 319, 337, 338, 446, 730, 832, 833, 859, 862, 868], "repeat_interleav": [128, 129, 323, 715, 729, 758, 769, 801, 812], "repeatedli": [385, 729, 863], "replac": [21, 100, 131, 216, 219, 221, 226, 241, 242, 287, 297, 303, 308, 319, 330, 331, 332, 444, 477, 479, 482, 484, 503, 505, 509, 511, 517, 519, 523, 525, 546, 547, 557, 561, 562, 563, 631, 641, 667, 683, 692, 693, 695, 715, 716, 717, 738, 758, 778, 779, 801, 818, 821, 836, 837, 850, 862, 863, 864, 866], "replic": 236, "replica": [293, 827, 869], "repo": [21, 23, 686, 695, 733, 773, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 863], "report": [14, 853], "repositori": [21, 815, 822, 851], "repres": [3, 5, 21, 22, 26, 31, 32, 51, 61, 88, 118, 119, 126, 131, 134, 135, 136, 149, 151, 152, 153, 155, 159, 162, 173, 184, 185, 187, 188, 192, 193, 220, 250, 287, 289, 297, 300, 305, 310, 313, 319, 323, 327, 331, 332, 383, 389, 390, 396, 397, 398, 410, 413, 417, 419, 426, 427, 428, 429, 557, 563, 592, 639, 647, 687, 694, 698, 702, 706, 708, 712, 717, 719, 723, 724, 729, 819, 821, 828, 832, 833, 834, 836, 837, 838, 840, 851, 853, 856, 862], "represensit": 14, "represent": [0, 32, 62, 63, 131, 155, 187, 193, 214, 215, 216, 220, 287, 303, 305, 325, 332, 381, 383, 385, 389, 390, 394, 398, 414, 419, 438, 441, 442, 443, 445, 447, 448, 450, 454, 548, 549, 550, 561, 577, 579, 580, 587, 643, 644, 663, 708, 710, 712, 714, 719, 723, 726, 728, 729, 730, 800, 801, 810, 811, 812, 818, 821, 828, 834, 836, 837, 838, 847, 850, 851, 852, 854, 856, 857, 859, 862, 863, 864, 866], "representation\ub4e4\uacfc": 810, "representation\ub4e4\ub85c": 810, "representation\ub4e4\ub85c\ubd80\ud130": 798, "representation\ub4e4\uc744": [797, 798, 800, 801, 811], "representation\ub4e4\uc758": [801, 810, 813], "representation\ub4e4\uc774": [797, 803], "representation\uc740": [807, 812], "representation\uc744": [796, 798, 800, 803, 810, 811], "representation\uc774\uace0": 811, "representation\uc774\ub2e4": 812, "reproduc": [293, 301], "repurpos": [138, 139, 140, 726], "reput": 145, "request": [21, 692, 826, 827, 829, 832, 833, 839], "requir": [4, 5, 9, 10, 21, 51, 55, 60, 61, 66, 87, 88, 90, 107, 122, 130, 148, 210, 216, 217, 220, 291, 292, 309, 392, 393, 394, 395, 408, 409, 416, 419, 424, 425, 450, 454, 498, 499, 545, 554, 687, 691, 692, 693, 694, 695, 701, 702, 706, 710, 711, 717, 718, 720, 723, 807, 816, 817, 818, 819, 821, 826, 827, 828, 829, 831, 832, 833, 834, 837, 838, 846, 852, 856, 863, 869], "requires_grad": [9, 856], "requires_grad_": [9, 118, 119, 852], "research": [818, 851, 852, 853, 854, 856, 859, 863, 866], "reserv": 638, "reset": [386, 455, 722], "reset_paramet": [381, 382, 385, 386, 392, 393, 394, 396, 397, 398, 400, 403, 405, 406, 407, 410, 412, 413, 416, 419, 420, 421, 436, 442, 450, 451, 452, 454, 719, 722, 762, 806, 853], "reshap": [95, 96, 117, 298, 299, 301, 302, 315, 551, 552, 553, 649, 712, 818, 821, 832, 833, 862], "reshuffl": [4, 240, 351, 539, 780], "resid": 309, "residu": [392, 395, 403, 405, 406, 407, 410, 411, 414, 416, 417, 818, 863], "resolv": 21, "resourc": [2, 309, 691, 710, 718, 827, 869], "respect": [5, 95, 96, 140, 147, 184, 214, 215, 216, 219, 240, 243, 303, 310, 314, 381, 385, 401, 417, 425, 427, 498, 499, 551, 552, 554, 557, 569, 598, 618, 694, 695, 703, 706, 707, 716, 818, 831, 832, 833, 837, 842, 843, 852, 859, 863], "respons": [300, 303, 306, 308, 691, 692, 846], "rest": [6, 95, 96, 141, 240, 291, 333, 337, 338, 538, 633, 685, 691, 723, 728, 820, 826, 837, 839], "restart": [560, 662, 666, 846], "restart_prob": [559, 560], "restaur": 163, "restrict": [44, 104, 118, 119, 126, 131, 249, 250, 287, 332, 843, 859], "resuffl": [351, 539], "result": [6, 9, 20, 21, 51, 56, 61, 70, 73, 88, 95, 96, 116, 118, 119, 122, 125, 126, 130, 197, 198, 209, 214, 226, 227, 240, 241, 242, 246, 247, 249, 250, 291, 297, 303, 310, 333, 336, 337, 338, 339, 342, 350, 353, 383, 389, 400, 420, 421, 450, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546, 547, 549, 550, 551, 552, 554, 555, 558, 560, 561, 562, 563, 564, 568, 569, 570, 571, 592, 595, 596, 597, 606, 607, 614, 617, 625, 632, 633, 638, 639, 640, 641, 655, 656, 657, 662, 666, 675, 679, 692, 694, 695, 697, 698, 699, 701, 706, 708, 718, 719, 724, 728, 730, 791, 794, 817, 821, 822, 827, 836, 837, 839, 843, 846, 847, 852, 853, 863], "result_dict": [758, 801], "ret": [395, 417, 850, 853, 863], "retain": [56, 703, 788, 821], "retri": 200, "retriev": [22, 125, 126, 192, 234, 249, 250, 293, 382, 548, 569, 638, 655, 656, 657, 662, 663, 666, 671, 672, 673, 674, 728, 835, 837, 839, 852], "return": [0, 4, 5, 6, 10, 20, 22, 26, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 100, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 207, 209, 214, 217, 218, 219, 220, 221, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 288, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 658, 660, 664, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 687, 688, 689, 690, 692, 693, 695, 706, 707, 708, 711, 712, 714, 715, 716, 717, 719, 720, 723, 726, 728, 729, 730, 734, 735, 736, 738, 750, 751, 752, 755, 756, 757, 758, 759, 760, 763, 766, 768, 769, 770, 774, 775, 776, 778, 779, 791, 793, 794, 797, 798, 800, 801, 802, 803, 804, 807, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "return_count": [111, 639, 641, 669], "return_eid": [558, 560], "return_eigv": 340, "return_label": 230, "return_map": [240, 695, 780, 846], "return_path": [447, 448, 568, 681], "return_uv": 48, "retweet": 159, "reuiqr": 450, "reus": [693, 712, 729, 829], "reusabl": 723, "rev": 780, "rev_plai": [425, 648], "rev_r": 648, "rev_rev_plai": 425, "reveal": [245, 473], "revers": [116, 123, 124, 130, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 170, 176, 191, 192, 220, 229, 230, 289, 300, 310, 313, 318, 322, 341, 414, 541, 543, 544, 554, 645, 648, 679, 687, 689, 695, 711, 712, 735, 775, 798, 835, 852], "reverse_edg": [150, 154, 176], "reverse_eid": [220, 756, 798], "reverse_etyp": [220, 756, 798], "reverse_etypes_map": [318, 322, 712], "reverse_id": [220, 756, 798], "reverse_typ": [220, 756, 798], "revert": 679, "review": [21, 135, 136, 137, 161, 162, 163, 194], "revis": 863, "revisit": 558, "reweight": 422, "rewond": 748, "rewrit": 716, "rfeat": 452, "rg": [431, 554, 555], "rgcn": [712, 714, 717, 726, 728, 729, 730, 756, 757, 758, 766, 768, 769, 770, 798, 800, 801, 803, 810, 811, 812, 813, 851], "rgcnlayer": 851, "rgcn\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u4e0e\u5b83\u975e\u5e38\u76f8\u4f3c": 760, "rgcn\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6": 770, "rgcn\u7684\u5b9e\u73b0": 760, "rh": 498, "rhel": 815, "rho": [423, 499, 705, 749, 755, 790, 797, 852], "rhs_data": [498, 499], "rhs_field": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "rhs_target": 498, "rich": 162, "richer": 862, "rid": 714, "right": [4, 5, 118, 150, 343, 388, 391, 394, 397, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 419, 434, 435, 449, 454, 498, 499, 500, 631, 666, 667, 686, 692, 693, 705, 707, 711, 712, 717, 723, 728, 729, 749, 755, 756, 758, 760, 763, 769, 790, 797, 798, 801, 803, 807, 812, 821, 828, 836, 837, 851, 853, 856, 863], "rightarrow": [355, 852, 859], "riski": 145, "rng": 183, "rnn": [443, 681, 863, 864, 866], "robust": [197, 205], "roc_auc_scor": [826, 837, 847], "rocauc": 818, "rock": 856, "role": [182, 243, 424, 425, 426, 427, 428, 429], "roll": [297, 561], "rollout": [427, 429], "roman": 182, "room": 706, "root": [159, 217, 289, 404, 413, 447, 448, 568, 681, 815, 816, 817, 819, 827, 856], "rossmann": 400, "rotat": 179, "roughli": [191, 240, 389, 694, 846, 852], "round": [91, 92, 730, 859], "rout": [862, 864, 866], "routin": [22, 835], "routing_num": 862, "row": [4, 27, 31, 32, 118, 119, 131, 150, 154, 176, 287, 288, 294, 296, 297, 298, 305, 310, 315, 319, 325, 332, 339, 382, 396, 397, 398, 442, 445, 455, 545, 549, 550, 567, 577, 579, 580, 585, 592, 595, 596, 597, 598, 599, 607, 610, 611, 612, 618, 620, 624, 643, 644, 665, 666, 692, 694, 700, 716, 780, 785, 802, 819, 821, 839, 846, 847, 852], "row1": 626, "row2": 626, "row_id": 719, "row_sort": 287, "rowfeatnorm": 13, "rpc": 4, "rr": [318, 748], "rst": [383, 719, 723, 724, 763, 764, 807, 808], "rtype": [387, 388, 389, 390, 395, 398, 402, 404, 407, 408, 410, 412, 413, 417, 419, 420, 421, 422, 423, 450, 451, 454, 592], "rule": [21, 220, 728, 852, 853, 859, 863], "run": [4, 10, 14, 21, 214, 235, 240, 291, 297, 326, 422, 424, 425, 426, 427, 428, 429, 561, 563, 686, 691, 692, 695, 710, 718, 720, 724, 815, 818, 827, 842, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "run_epoch": 863, "runnabl": 21, "runtim": [0, 4, 14, 22, 156, 680, 692, 693, 695, 826, 829, 842, 843], "runtimeerror": 183, "runtimewarn": [850, 853], "russia": [164, 851], "rv": 22, "rvert": 449, "rvert_2": [722, 762, 806], "rw": [666, 846], "r\uc5d0": 794, "s1": 863, "s2": 436, "s3": [21, 23, 289, 344, 565, 689, 699, 735, 775, 784], "s_": 821, "s_c": 852, "s_i": 863, "s_j": [862, 863], "s_norm": 862, "sab": 438, "safe": [159, 703], "sage": [398, 691, 714, 715, 719, 726, 729, 730, 737, 766, 769, 770, 777, 810, 812, 813, 826, 827, 842, 846, 847, 869], "sageconv": [383, 398, 714, 715, 716, 719, 721, 722, 723, 730, 759, 761, 762, 763, 770, 802, 805, 806, 807, 813, 826, 827, 828, 829, 836, 837, 846, 847, 869], "sageconv\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b": 763, "sageconv\uc5d0\uc11c": 807, "sageconv\uc758": [806, 807], "sai": [21, 685, 710, 829], "said": [211, 212, 213], "same": [0, 3, 4, 5, 8, 9, 20, 28, 34, 35, 42, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 68, 70, 74, 87, 88, 91, 92, 93, 94, 100, 103, 108, 113, 116, 118, 119, 120, 121, 122, 130, 131, 134, 156, 161, 163, 181, 188, 197, 200, 205, 208, 209, 210, 211, 212, 214, 216, 219, 230, 232, 234, 239, 240, 241, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 296, 297, 298, 299, 302, 303, 308, 315, 316, 326, 327, 332, 333, 337, 338, 339, 342, 350, 351, 354, 383, 385, 387, 388, 395, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 413, 414, 416, 417, 419, 430, 431, 433, 435, 439, 440, 442, 449, 453, 454, 456, 474, 475, 538, 539, 545, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 570, 571, 572, 573, 575, 579, 580, 598, 618, 628, 632, 633, 638, 639, 641, 649, 664, 681, 686, 687, 689, 691, 692, 693, 694, 695, 698, 699, 700, 701, 702, 703, 708, 712, 713, 715, 717, 719, 720, 721, 723, 724, 726, 728, 729, 730, 745, 773, 786, 788, 794, 797, 800, 815, 818, 821, 827, 828, 832, 835, 836, 837, 839, 842, 846, 847, 850, 851, 852, 853, 856, 859, 863, 868, 869], "sampl": [3, 6, 7, 9, 13, 14, 122, 130, 139, 146, 147, 160, 165, 168, 169, 172, 173, 174, 175, 181, 184, 186, 194, 195, 198, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 231, 234, 235, 241, 242, 245, 292, 293, 297, 300, 301, 303, 307, 308, 310, 311, 312, 313, 317, 318, 322, 381, 385, 386, 426, 427, 428, 429, 436, 473, 498, 572, 573, 606, 617, 633, 685, 687, 691, 693, 714, 718, 719, 723, 728, 729, 738, 755, 778, 797, 798, 799, 818, 821, 825, 826, 827, 829, 831, 837, 838, 843, 851, 852, 856, 859, 860, 863, 866, 869], "sample_bia": [426, 428], "sample_block": [691, 692, 737, 738, 755, 777, 778, 797], "sample_fronti": [755, 797], "sample_in_subgraph": 300, "sample_layer_neighbor": [297, 303], "sample_log_prob": 859, "sample_neg": 307, "sample_negative_edges_uniform": 297, "sample_neighbor": [4, 214, 216, 241, 297, 300, 308, 313, 691, 692, 693, 711, 712, 713, 714, 715, 717, 718, 737, 738, 755, 777, 778, 779, 797, 799, 826, 827, 829, 869], "sample_neighbors_bias": [572, 573], "sample_point": 6, "sample_sparse_neighbor": 719, "sample_subgraph": [300, 313, 711, 719], "sample_uniform_neg": [308, 317, 715, 718, 826], "sampled_csc": [297, 300, 303, 308, 310, 311, 826, 829], "sampled_matric": 719, "sampled_matrix": 719, "sampled_subgraph": [300, 301, 303, 305, 308, 711, 719, 826, 829], "sampledsubgraph": [300, 305, 311, 313, 711], "sampledsubgraphimpl": [297, 303, 308, 310, 826, 829], "sampler": [7, 13, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 293, 300, 301, 303, 307, 308, 313, 392, 393, 394, 556, 557, 561, 691, 692, 696, 710, 713, 715, 719, 737, 738, 755, 756, 757, 758, 760, 777, 778, 797, 798, 799, 800, 801, 803, 825, 838, 842], "sampler1": 713, "sampler2": 713, "sampling_stag": 313, "samplinggraph": [292, 297, 304, 309, 712], "saniti": [131, 851], "satisfi": [53, 54, 415, 418, 575, 716, 826, 827, 829, 832, 833, 852, 863], "satisif": 120, "save": [0, 2, 4, 9, 23, 156, 206, 231, 240, 315, 316, 344, 565, 640, 655, 684, 685, 687, 694, 695, 699, 703, 706, 707, 708, 710, 720, 724, 726, 727, 730, 732, 736, 743, 772, 776, 780, 784, 794, 813, 816, 817, 819, 829, 832, 833, 834, 836, 837, 839, 842, 846, 859, 863], "save_dir": [156, 685, 732, 772], "save_graph": [172, 204, 344, 690, 699, 703, 736, 743, 747, 776, 784, 788, 835], "save_info": [690, 736, 776], "save_path": [138, 139, 140, 156, 685, 690, 732, 736, 772, 776], "save_tensor": 780, "sbm": [147, 174], "sbmdata": [689, 735, 775], "scalabl": [385, 446, 558, 666, 817, 822, 825, 844], "scalar": [6, 118, 119, 125, 214, 216, 219, 249, 302, 387, 399, 400, 403, 404, 405, 406, 413, 416, 419, 426, 428, 434, 592, 595, 596, 597, 599, 606, 609, 610, 611, 612, 615, 616, 624, 625, 698, 700, 727, 785, 801, 821, 837, 850, 852, 853, 862, 864, 866], "scalar_v": 821, "scale": [125, 134, 149, 185, 249, 343, 395, 413, 417, 449, 453, 472, 556, 695, 720, 804, 814, 818, 828, 837, 842, 843, 853, 863], "scale_const": 863, "scaled_exp": 863, "scaler": [395, 417, 608, 613, 720, 804], "scenario": [14, 22, 303, 308, 563, 693, 710, 728, 827], "scene": [403, 692], "schedul": [818, 825], "schema": [72, 234, 695, 703, 780], "scheme": [4, 47, 75, 95, 96, 117, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 246, 247, 333, 337, 338, 474, 475, 538, 551, 552, 553, 638, 652, 653, 660, 666, 679, 687, 694, 695, 700, 703, 744, 747, 785, 788, 835, 838, 839], "schnet": 390, "schwarzenegg": 856, "scienc": [151, 192, 289], "scientif": [150, 176, 852], "scientist\uac00": 789, "scikit": 842, "scipi": [9, 31, 118, 119, 126, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 554, 556, 699, 743, 784, 817, 821, 826, 827, 829, 832, 833, 837, 852], "scipy_fmt": [31, 572, 573], "scope": [70, 837, 850, 852], "score": [13, 381, 399, 400, 405, 406, 415, 434, 450, 451, 452, 454, 712, 726, 727, 729, 756, 758, 766, 769, 798, 801, 810, 812, 818, 821, 826, 829, 837, 847, 851, 853, 863], "score_neg": 847, "score_po": 847, "scorepredictor": [712, 756, 758, 798, 801], "scorer": [451, 452], "scrape": 191, "scratch": [142, 143, 189, 190, 381, 835, 850, 851, 853], "script": [4, 21, 691, 692, 695, 696, 815, 816, 817, 818, 863], "script_fold": [740, 781], "scriptobject": 297, "sddmm": [481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 507, 508, 513, 514, 515, 516, 521, 522, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 606, 818, 821], "sdg\uc5d0\uc11c": 778, "seaborn": 862, "seal": 837, "seamlessli": [721, 825], "search": [123, 124, 229, 230, 339, 427, 429, 430, 432, 567, 729, 812, 814, 842, 853, 863], "search\uc640": 812, "second": [20, 130, 131, 210, 214, 215, 216, 219, 287, 297, 332, 340, 383, 456, 559, 560, 561, 567, 569, 614, 624, 633, 639, 695, 723, 728, 822, 828, 836, 838, 846, 847, 852, 853, 856, 859, 864, 866], "second_label": 299, "second_se": 299, "section": [14, 21, 210, 214, 215, 216, 679, 681, 683, 684, 688, 689, 691, 692, 694, 695, 699, 705, 710, 714, 716, 723, 725, 726, 729, 730, 810, 812, 834, 837, 842, 846, 847, 852, 853, 869], "sector": 166, "see": [1, 4, 9, 20, 21, 44, 61, 66, 88, 89, 91, 104, 130, 131, 146, 169, 209, 210, 211, 212, 214, 216, 217, 220, 222, 223, 224, 225, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 332, 339, 392, 393, 400, 415, 418, 424, 425, 434, 436, 441, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 572, 573, 577, 579, 580, 587, 610, 611, 612, 619, 621, 622, 623, 633, 639, 685, 687, 689, 692, 698, 699, 700, 702, 703, 706, 712, 714, 715, 716, 717, 725, 728, 730, 815, 817, 818, 826, 828, 835, 836, 837, 838, 839, 846, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "seed": [4, 142, 143, 161, 162, 163, 172, 173, 183, 189, 190, 197, 198, 205, 207, 208, 210, 213, 214, 216, 219, 242, 293, 297, 299, 300, 301, 302, 303, 305, 308, 309, 313, 317, 322, 437, 546, 547, 556, 560, 561, 562, 692, 693, 711, 712, 714, 715, 718, 719, 738, 778, 779, 818, 826, 829, 831, 832, 833, 846, 852, 868], "seed2_contribut": [297, 561], "seed_nod": [216, 299, 711, 755, 797], "seeds_follow": [299, 301], "seeds_label": 712, "seeds_lik": [299, 301], "seeds_pre_time_window": [300, 313], "seeds_timestamp": [300, 313], "seem": [389, 852, 853], "seen": [717, 730, 822, 850, 851, 852, 853, 863], "seg": [432, 501, 567], "segal": 856, "seglen": 501, "seglen_a": 500, "segment": [13, 122, 135, 136, 500, 501, 572, 573, 679], "segmentmm": 13, "segmentreducebackward": [434, 441], "select": [6, 21, 56, 142, 143, 147, 171, 174, 182, 189, 190, 209, 210, 217, 240, 241, 242, 297, 303, 308, 339, 395, 417, 426, 428, 430, 432, 439, 442, 443, 445, 556, 561, 562, 563, 564, 565, 567, 581, 641, 669, 710, 714, 720, 797, 815, 817, 821, 825, 828, 829, 859], "self": [26, 62, 63, 116, 117, 156, 162, 164, 165, 181, 218, 220, 226, 300, 310, 313, 339, 387, 393, 397, 399, 402, 403, 405, 406, 407, 410, 413, 414, 418, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 441, 444, 456, 545, 553, 557, 567, 631, 649, 664, 667, 683, 685, 686, 687, 689, 690, 693, 694, 695, 698, 708, 711, 712, 714, 715, 716, 717, 719, 720, 722, 723, 724, 726, 728, 729, 730, 732, 733, 735, 736, 752, 755, 756, 757, 758, 759, 760, 762, 763, 764, 766, 768, 769, 770, 772, 773, 775, 776, 783, 794, 797, 798, 800, 801, 802, 803, 804, 806, 807, 808, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "self_attn": 863, "self_loop": [165, 181, 387, 393, 399, 402, 403, 405, 406, 407, 410, 413, 418, 420, 424, 428, 429, 431, 545, 838, 868], "sell": [383, 698, 783], "seller": 698, "semant": [5, 9, 132, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 727, 856, 863], "semi": [140, 147, 387, 397, 413, 655, 695, 714, 780, 800, 834, 850, 852, 859], "send": [53, 73, 91, 94, 100, 113, 413, 415, 728, 853, 859, 863], "send_and_recv": [0, 91, 863], "send_sourc": 100, "sent": [413, 835, 836, 862, 863], "sentenc": [182, 184, 856, 857, 859, 863, 864, 866], "sentiment": [184, 856, 859], "separ": [4, 142, 143, 171, 180, 339, 390, 687, 694, 695, 718, 724, 728, 730, 815, 829, 832, 838, 843, 850], "septemb": 181, "sequenc": [54, 121, 131, 207, 287, 332, 349, 381, 385, 412, 434, 436, 651, 857, 859, 863, 866], "sequenti": [91, 92, 303, 647, 715, 818, 826, 859], "seri": [703, 828, 829, 852], "serial": 447, "serv": [297, 683, 691, 716, 851], "server": [4, 21, 145, 177, 178, 179, 235, 685, 686, 691, 692, 693, 696, 847], "servic": [21, 159, 292, 691, 692], "set": [0, 1, 4, 6, 7, 10, 21, 23, 43, 44, 45, 46, 51, 68, 70, 72, 74, 77, 79, 82, 92, 101, 102, 103, 104, 105, 122, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 147, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 176, 181, 189, 190, 191, 194, 198, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 232, 239, 240, 243, 244, 246, 247, 291, 292, 293, 297, 303, 305, 309, 313, 314, 329, 332, 333, 337, 338, 339, 343, 350, 352, 355, 387, 391, 392, 393, 394, 395, 397, 399, 402, 403, 404, 405, 406, 407, 410, 413, 417, 418, 420, 422, 423, 426, 428, 430, 431, 432, 436, 437, 438, 442, 445, 449, 455, 472, 474, 475, 538, 545, 546, 547, 557, 560, 563, 566, 567, 633, 639, 641, 643, 644, 671, 672, 674, 676, 677, 678, 680, 682, 689, 691, 692, 694, 695, 698, 702, 703, 711, 712, 713, 714, 716, 717, 718, 720, 722, 723, 724, 726, 728, 729, 730, 775, 787, 788, 815, 816, 817, 820, 821, 825, 826, 827, 829, 831, 832, 833, 834, 836, 838, 839, 842, 851, 853, 856, 859, 862, 863, 868, 869], "set_batch_num_edg": [27, 28, 102, 114, 115, 116, 117, 130, 246, 247, 333, 336, 342, 350, 474, 475, 538, 552, 555, 632, 641, 642, 728, 768, 811], "set_batch_num_nod": [27, 28, 101, 114, 115, 116, 117, 130, 246, 247, 333, 336, 342, 350, 474, 475, 538, 552, 555, 632, 641, 642, 728, 768, 811], "set_bodi": 22, "set_default_backend": 815, "set_devic": [827, 868, 869], "set_e_initi": 859, "set_edge_featur": 305, "set_edgecolor": 817, "set_epoch": [213, 868], "set_grad_en": 863, "set_n_initi": [27, 28, 93, 113, 859], "set_node_featur": 305, "set_num_thread": 843, "set_postfix": [819, 829], "set_sharing_strategi": [827, 869], "set_start_method": 842, "set_titl": 862, "set_trans_dec": 437, "set_trans_enc": 438, "set_xlabel": 862, "settran": 438, "settransformerdecod": 438, "settransformerencod": 437, "setup": [4, 713, 842, 843, 862], "setuptool": 827, "seven": 852, "sever": [245, 292, 473, 685, 689, 700, 712, 717, 718, 723, 851, 863, 864, 866], "sg": [246, 333, 337, 338, 424, 425, 474, 538, 561, 562, 563, 564, 641, 669, 709, 711, 753, 755, 795, 797], "sg1": 835, "sg2": 835, "sgc": 420, "sgd": 692, "sh": [21, 815], "sha": [686, 733, 773], "sha1": [199, 200], "sha1_hash": [199, 200], "shall": [20, 679], "shallow": [64, 71, 219, 572, 573, 635, 636, 637], "shamelessli": 22, "shape": [4, 5, 6, 9, 12, 30, 47, 75, 95, 96, 117, 120, 126, 128, 129, 138, 143, 146, 147, 165, 168, 169, 174, 184, 186, 192, 195, 219, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 297, 299, 302, 323, 325, 327, 333, 337, 338, 339, 340, 343, 353, 354, 355, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 472, 473, 474, 475, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 548, 549, 550, 551, 552, 553, 558, 560, 567, 568, 570, 571, 572, 573, 575, 578, 581, 583, 585, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 638, 639, 643, 644, 649, 652, 653, 656, 657, 660, 662, 666, 668, 671, 672, 674, 676, 677, 678, 679, 681, 683, 687, 689, 692, 694, 695, 700, 703, 719, 720, 727, 728, 729, 730, 735, 738, 744, 747, 769, 770, 775, 778, 780, 785, 788, 792, 801, 804, 812, 813, 815, 816, 817, 818, 819, 821, 831, 832, 833, 834, 835, 836, 837, 838, 839, 846, 847, 850, 852, 856, 863], "shape\uc740": 811, "shaplei": [427, 429], "shapley_step": [427, 429], "shard": [4, 692, 778], "share": [4, 22, 26, 69, 116, 122, 130, 131, 247, 287, 292, 297, 312, 328, 332, 336, 339, 342, 353, 354, 383, 407, 430, 432, 453, 555, 563, 567, 572, 573, 632, 638, 641, 691, 694, 695, 696, 780, 815, 843, 846, 851, 852, 853, 863], "share_edata": [99, 555], "share_ndata": [99, 555], "share_weight": 406, "shared_memori": 4, "shared_memory_nam": [297, 312, 328], "sharemem": [14, 339, 430, 432, 567], "sharp": 853, "sharper": 853, "shchur": [135, 136, 151, 152, 153], "shelf": 853, "shell": 842, "shift": [197, 205, 390], "short": [386, 703, 708, 822, 836, 856], "shortcut": 182, "shortest": [243, 447, 448, 568, 681, 683], "shortest_dist": [447, 448, 681], "shortest_path": 681, "shot": [726, 810], "should": [4, 21, 42, 53, 54, 89, 91, 116, 125, 126, 128, 129, 130, 131, 146, 169, 173, 178, 179, 184, 195, 196, 210, 214, 216, 219, 220, 222, 223, 224, 225, 231, 241, 242, 249, 250, 287, 293, 295, 297, 300, 302, 303, 305, 308, 310, 313, 315, 318, 319, 323, 330, 331, 332, 336, 341, 342, 387, 388, 392, 393, 394, 395, 396, 397, 398, 408, 409, 416, 417, 420, 424, 425, 426, 427, 428, 429, 432, 443, 444, 447, 449, 453, 456, 546, 547, 554, 555, 556, 560, 561, 562, 563, 564, 565, 609, 610, 611, 612, 614, 615, 624, 632, 638, 639, 641, 651, 656, 657, 662, 666, 687, 692, 694, 695, 696, 702, 711, 713, 714, 720, 723, 821, 827, 832, 833, 834, 835, 836, 837, 839, 843, 846, 851, 852, 859, 862, 868, 869], "show": [4, 9, 14, 118, 119, 220, 240, 245, 473, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 710, 712, 714, 715, 720, 728, 729, 730, 816, 819, 826, 827, 828, 829, 830, 832, 833, 834, 837, 838, 846, 850, 851, 852, 853, 854, 856, 859, 863, 864, 866], "shown": [120, 689, 692, 702, 719, 723, 846, 847, 862, 863], "shuffl": [4, 168, 186, 207, 209, 210, 213, 214, 215, 216, 219, 220, 232, 239, 240, 293, 301, 381, 385, 424, 428, 429, 661, 688, 689, 691, 692, 695, 711, 712, 713, 714, 715, 717, 718, 728, 734, 735, 737, 738, 755, 756, 757, 758, 760, 768, 774, 775, 777, 778, 797, 798, 799, 800, 801, 803, 811, 818, 826, 827, 829, 832, 833, 842, 846, 847, 856, 868, 869], "shut": 291, "side": [22, 633, 828], "sigma": [411, 413, 415, 418, 419, 449, 723, 729, 763, 769, 807, 812, 816, 817, 819, 850, 851, 853, 863], "sigma_": 411, "sigma_k": 410, "sigmaleft": [853, 856], "sigmoid": [411, 821, 856, 859], "sign": [145, 631, 666, 667, 817], "sign_diffus": 817, "signal": [21, 174, 355, 817, 859], "signatur": [21, 53, 54, 853], "signdiffus": 13, "signifi": [297, 303, 308], "signific": [685, 713, 718, 825, 843, 853, 856], "significantli": [310, 720, 828], "silent": [387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 424, 425, 426, 427, 428, 429, 723], "sim": [729, 769, 812, 837], "similar": [4, 9, 26, 34, 53, 54, 100, 128, 129, 130, 161, 214, 221, 303, 339, 381, 399, 430, 432, 450, 451, 452, 567, 633, 679, 688, 689, 691, 692, 693, 703, 712, 715, 716, 717, 719, 720, 729, 730, 747, 788, 815, 821, 822, 826, 827, 831, 834, 838, 846, 847, 851, 852, 853, 859, 862, 863, 868, 869], "similarli": [130, 221, 236, 240, 692, 694, 726, 819, 859, 864, 866], "simpl": [21, 22, 48, 118, 119, 343, 407, 472, 632, 641, 642, 669, 684, 690, 693, 720, 817, 827, 834, 838, 850, 852, 853, 854, 859, 862, 866], "simple_reduc": 100, "simplelosscomput": 863, "simplest": [717, 821], "simpli": [21, 22, 712, 715, 717, 718, 726, 728, 730, 834, 836, 837, 838, 850, 852, 853, 857, 859, 866], "simplic": [683, 695, 717, 832, 839, 853], "simplifi": [420, 716, 726, 817, 821, 850, 859, 863, 868], "simplifiedgat": 821, "simul": 852, "simultan": [291, 592, 595, 596, 597, 599, 691, 817, 856], "sin": 821, "sinc": [21, 27, 28, 56, 114, 115, 122, 145, 173, 182, 339, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 424, 425, 426, 427, 428, 429, 430, 432, 447, 448, 567, 572, 573, 633, 681, 685, 689, 703, 706, 713, 726, 728, 729, 816, 821, 826, 828, 837, 838, 839, 846, 850, 852, 853, 856, 859], "singl": [0, 4, 6, 22, 27, 28, 34, 35, 41, 43, 44, 46, 48, 51, 53, 55, 56, 57, 58, 60, 61, 73, 74, 77, 87, 88, 93, 94, 95, 96, 100, 101, 102, 103, 104, 128, 129, 131, 148, 164, 210, 211, 212, 214, 215, 216, 219, 220, 242, 297, 299, 302, 305, 309, 337, 338, 339, 341, 349, 353, 387, 410, 433, 434, 435, 436, 437, 438, 439, 440, 441, 453, 454, 476, 556, 560, 561, 562, 564, 636, 643, 644, 689, 691, 692, 695, 703, 706, 714, 716, 724, 725, 726, 728, 788, 800, 802, 822, 828, 829, 834, 838, 839, 846, 847, 852, 853, 856, 863, 870], "singular": [631, 667], "site": [184, 826, 829, 832, 833, 850, 853], "six": [826, 829, 832, 833], "size": [4, 5, 9, 20, 21, 22, 31, 62, 63, 120, 122, 128, 129, 135, 136, 138, 139, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 174, 177, 181, 184, 192, 194, 196, 205, 210, 235, 288, 293, 294, 296, 298, 301, 315, 323, 326, 381, 382, 384, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 549, 550, 607, 614, 625, 643, 644, 649, 668, 681, 693, 695, 703, 707, 710, 711, 718, 719, 728, 740, 751, 781, 788, 793, 811, 815, 821, 826, 827, 829, 832, 833, 836, 842, 843, 850, 851, 852, 853, 856, 857, 859, 863, 866, 868, 869], "skeleton": 859, "skip": [412, 689, 724, 775, 832, 833, 852, 853, 856], "sklearn": [381, 826, 829, 837, 846, 847], "skm": 847, "sleeplessai": 748, "slice": [4, 26, 210, 700, 716, 850, 853], "slightli": 214, "sln": 815, "slope": [392, 403, 405, 406], "slow": [22, 303, 714, 837, 852], "slower": [339, 430, 432, 567, 863], "sm_53": [9, 706, 791], "small": [4, 10, 14, 70, 123, 124, 126, 167, 226, 229, 230, 245, 250, 287, 339, 404, 411, 424, 425, 430, 432, 473, 557, 567, 645, 679, 691, 692, 695, 720, 725, 728, 828, 834, 837, 838, 839, 846, 852], "smaller": [4, 130, 297, 386, 389, 610, 611, 612, 624, 656, 657, 662, 815, 846, 851, 852], "smallest": [309, 340, 395, 430, 446, 564, 643, 644, 659], "smax": [592, 821], "smean": [592, 821], "smin": [592, 821], "smooth": [407, 423, 863], "sn": 862, "snap": [145, 175, 181], "snippet": [699, 702, 703, 727, 852], "so": [4, 5, 8, 9, 21, 22, 125, 130, 140, 186, 197, 226, 229, 230, 232, 239, 245, 249, 288, 291, 294, 296, 297, 298, 315, 351, 393, 399, 473, 539, 554, 557, 561, 563, 572, 573, 635, 636, 637, 639, 687, 689, 690, 692, 693, 695, 711, 713, 717, 726, 730, 819, 829, 834, 835, 837, 838, 843, 846, 850, 851, 852, 853, 856, 859, 862, 868], "soc": 145, "social": [134, 167, 381, 698, 837], "socio": 166, "socket": 235, "soduku": 434, "softmax": [355, 387, 403, 415, 434, 436, 442, 445, 570, 571, 818, 836, 851, 853, 859, 862, 863], "softmax_edg": 571, "softmax_i": [399, 403, 405, 406], "softmax_nod": 570, "softwar": [814, 843], "solubl": 195, "solut": [22, 684, 713, 789, 846, 852], "solv": [293, 434, 814, 851, 852, 857, 866, 869], "some": [0, 4, 5, 9, 14, 21, 27, 28, 41, 43, 46, 48, 74, 93, 103, 113, 114, 115, 128, 129, 131, 134, 150, 168, 186, 236, 240, 247, 293, 332, 351, 352, 383, 387, 393, 399, 402, 403, 405, 406, 407, 410, 413, 420, 426, 428, 551, 554, 639, 683, 686, 687, 689, 693, 694, 695, 697, 699, 702, 703, 706, 707, 710, 711, 722, 729, 775, 815, 822, 828, 835, 837, 846, 853, 859, 862, 868], "some_complex_data": 687, "someth": 725, "sometim": [22, 707, 712, 725, 726, 728, 828, 836], "somewhat": 712, "song": 748, "soon": 695, "sophist": 728, "sort": [39, 51, 52, 78, 123, 168, 186, 197, 205, 241, 297, 386, 415, 418, 439, 554, 563, 572, 573, 575, 643, 644, 856, 863], "sort_csc_by_tag": 563, "sort_csr_by_tag": 563, "sortbi": [643, 644], "sorted_by_typ": 386, "sorted_feat": [643, 644], "sorted_idx": [643, 644], "sortpool": [643, 644], "sourc": [1, 4, 5, 6, 9, 10, 12, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 472, 473, 474, 475, 476, 481, 482, 483, 484, 485, 486, 487, 489, 491, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 531, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 674, 675, 678, 679, 680, 687, 689, 694, 695, 697, 702, 703, 706, 715, 718, 722, 723, 775, 788, 797, 827, 828, 832, 835, 836, 837, 839, 851, 852, 853, 856, 863, 869], "source_typ": [703, 747, 788], "sourcetensor": 852, "sp": [699, 743, 784, 837, 852], "sp_": 821, "sp_add_v": 821, "sp_broadcast_v": [619, 621, 622, 623], "sp_mat": [126, 250], "space": [9, 330, 331, 449, 703, 851, 859, 863], "spaci": 159, "spam": 163, "span": 4, "spars": [4, 9, 10, 13, 31, 32, 41, 56, 62, 63, 89, 126, 131, 249, 250, 287, 332, 381, 385, 392, 424, 425, 453, 499, 556, 683, 692, 699, 710, 713, 743, 778, 784, 814, 817, 819, 837, 850, 854, 863, 866], "sparse2th": 852, "sparse_coo": [31, 62, 63], "sparse_coo_tensor": 852, "sparse_emb": 453, "sparse_matrix": 614, "sparse_optim": [692, 738, 778], "sparseadagrad": [4, 10, 453, 692, 738, 778], "sparseadam": [4, 10, 381, 385, 453], "sparseattn": 818, "sparsefloat": 852, "sparsematrix": [12, 30, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 719, 816, 821], "sparsemha": 818, "sparseneighborsampl": 719, "sparser": 863, "sparsetensor": [31, 62, 63, 852], "sparsif": [656, 657, 662], "sparsiti": [656, 657, 662, 818, 821], "spatial": [178, 179, 448, 449], "spatial_encod": [448, 449, 683], "spatialencod": 683, "spawn": [210, 293, 713, 868], "spd": 681, "speak": 852, "special": [184, 395, 698, 703, 712, 717, 720, 821, 825, 852, 856], "specif": [14, 21, 42, 59, 108, 125, 126, 131, 165, 235, 242, 246, 247, 249, 250, 287, 297, 305, 332, 333, 336, 337, 338, 382, 385, 425, 452, 474, 475, 538, 546, 547, 557, 561, 562, 563, 564, 633, 656, 657, 662, 666, 683, 689, 691, 700, 703, 714, 715, 718, 788, 798, 814, 830, 832, 833, 843, 852, 868], "specifi": [4, 5, 6, 27, 28, 31, 34, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 68, 72, 75, 77, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 113, 117, 122, 125, 131, 140, 146, 148, 156, 159, 161, 162, 163, 169, 173, 196, 200, 214, 216, 217, 219, 229, 230, 231, 240, 246, 249, 287, 288, 294, 296, 297, 298, 303, 305, 309, 310, 312, 315, 316, 332, 337, 338, 339, 383, 386, 395, 399, 400, 403, 404, 405, 406, 416, 417, 419, 431, 449, 474, 539, 545, 551, 552, 554, 560, 565, 567, 572, 573, 608, 610, 611, 612, 624, 633, 638, 639, 641, 685, 687, 689, 692, 693, 695, 696, 702, 703, 706, 708, 712, 717, 723, 726, 729, 747, 772, 788, 794, 807, 815, 819, 821, 826, 827, 831, 832, 833, 835, 846, 856, 869], "specifici": 842, "spectral": [391, 396], "speed": [10, 21, 22, 303, 310, 639, 702, 707, 713, 728, 814, 822, 837, 846, 856, 859, 862], "speedup": [695, 842, 853], "sphinx": [21, 840, 844, 848, 866, 870], "sphinx_gallery_thumbnail_path": [834, 835, 836, 837, 838, 839], "sphinx_rtd_them": 21, "sphx_glr_tutorials_blitz_1_introduct": [824, 840, 841], "sphx_glr_tutorials_blitz_2_dglgraph": [824, 840, 841], "sphx_glr_tutorials_blitz_3_message_pass": [824, 840, 841], "sphx_glr_tutorials_blitz_4_link_predict": [824, 840, 841], "sphx_glr_tutorials_blitz_5_graph_classif": [824, 840, 841], "sphx_glr_tutorials_blitz_6_load_data": [824, 840, 841], "sphx_glr_tutorials_cpu_argo_tutori": [824, 844, 845], "sphx_glr_tutorials_cpu_cpu_best_practis": [824, 844, 845], "sphx_glr_tutorials_dist_1_node_classif": [824, 848, 849], "sphx_glr_tutorials_dist_2_link_predict": [824, 848, 849], "sphx_glr_tutorials_models_1_gnn_1_gcn": [824, 854, 855, 866], "sphx_glr_tutorials_models_1_gnn_4_rgcn": [824, 854, 855, 866], "sphx_glr_tutorials_models_1_gnn_6_line_graph": [824, 854, 855, 866], "sphx_glr_tutorials_models_1_gnn_9_gat": [824, 854, 855, 866], "sphx_glr_tutorials_models_2_small_graph_3_tre": [824, 857, 858, 866], "sphx_glr_tutorials_models_3_generative_model_5_dgmg": [824, 860, 861, 866], "sphx_glr_tutorials_models_4_old_wines_2_capsul": [824, 864, 865, 866], "sphx_glr_tutorials_models_4_old_wines_7_transform": [824, 864, 865, 866], "sphx_glr_tutorials_multi_1_graph_classif": [824, 870, 871], "sphx_glr_tutorials_multi_2_node_classif": [824, 870, 871], "spilt": 192, "spinlock": 843, "splash": 856, "split": [13, 132, 133, 134, 137, 138, 139, 140, 144, 146, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 173, 176, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 205, 207, 209, 210, 213, 232, 239, 240, 293, 417, 539, 559, 638, 679, 685, 688, 689, 691, 693, 707, 708, 722, 723, 726, 730, 735, 772, 774, 775, 810, 829, 837, 846, 852, 868], "split_dataset": 868, "split_edg": [688, 734, 774], "split_idx": [688, 734, 774], "split_mask": 205, "split_ratio": [138, 139, 140], "splitted_idx": 846, "split\ub97c": 778, "spmat": [699, 743, 784], "spmatrix": [12, 31, 126, 250, 575, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 605, 606, 607, 609, 610, 614, 615, 616, 617, 618, 620, 625, 626, 627, 628, 816, 817, 818, 819, 821], "spmm": [477, 478, 479, 480, 482, 483, 484, 485, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526, 614], "spmv": 853, "spp": 390, "spring_layout": [817, 852], "sprod": 592, "spspmm": 614, "sq": 862, "sqrt": [4, 10, 339, 404, 413, 415, 430, 432, 442, 449, 567, 818, 853, 862, 863], "squar": [4, 10, 250, 404, 413, 819], "squash": 862, "squeez": [53, 54, 687, 689, 715, 735, 775, 826, 837, 851, 852], "squirrel": 185, "squre": 422, "src": [5, 22, 34, 62, 63, 68, 98, 100, 110, 220, 243, 252, 355, 390, 399, 400, 403, 405, 406, 410, 413, 419, 450, 451, 452, 554, 557, 610, 633, 634, 638, 673, 689, 699, 706, 707, 712, 715, 719, 720, 723, 724, 726, 729, 735, 743, 750, 751, 755, 756, 758, 763, 764, 766, 769, 775, 784, 791, 793, 797, 798, 801, 804, 807, 808, 810, 812, 818, 836, 837, 839, 851, 852, 853, 856, 859, 863], "src_dot_dst": 863, "src_emb": [859, 863], "src_embed_expand": 859, "src_field": 863, "src_id": [59, 126, 250, 287, 687, 694, 780], "src_id_field": 687, "src_input": [724, 764, 808], "src_label": 852, "src_list": 859, "src_mul_egd": 863, "src_node": [633, 797], "src_node_id": 694, "src_po": 863, "src_seq": 863, "src_timestamp": 319, "src_type": [131, 332, 425, 427, 723, 763, 807], "src_x": 712, "srcdata": [4, 9, 68, 104, 208, 221, 225, 573, 633, 691, 692, 693, 707, 716, 719, 723, 737, 738, 751, 755, 756, 758, 759, 760, 763, 777, 778, 779, 793, 797, 798, 801, 802, 803, 807, 829, 847], "srcdst": 51, "srcnode": [68, 103, 208, 225, 633, 716, 755, 759, 797, 802], "srctype": [26, 45, 68, 226, 227, 708, 711, 715, 752, 794], "srl": 851, "ssh": [696, 781], "ssl": 200, "ssp": 390, "sst": 856, "sstbatch": 856, "sstdata": [689, 735, 775], "sstdataset": 856, "stabil": [4, 10, 245, 411, 473, 853, 859, 863], "stabl": 395, "stack": [20, 73, 339, 383, 407, 443, 456, 587, 673, 681, 683, 688, 708, 718, 730, 734, 752, 774, 794, 816, 817, 818, 819, 834, 836, 851, 852, 853], "staff": [155, 187, 193], "stage": [7, 305, 313, 707, 715, 718, 817, 825, 829, 832, 833, 847, 863], "stai": [579, 580, 720], "stand": [403, 559, 681, 821, 868], "standalon": [4, 822], "standard": [5, 7, 21, 138, 140, 395, 417, 449, 681, 683, 684, 685, 687, 689, 851, 856], "stanford": [145, 175, 181, 184, 834, 856], "star": [161, 163, 172, 835], "start": [6, 32, 114, 115, 125, 131, 164, 229, 230, 240, 249, 287, 305, 310, 325, 332, 337, 338, 385, 548, 556, 558, 560, 572, 573, 687, 692, 693, 694, 697, 702, 703, 710, 714, 720, 728, 815, 816, 817, 818, 819, 823, 826, 827, 829, 832, 833, 835, 846, 847, 851, 852, 856, 859, 862, 868], "start_epoch": [210, 213], "start_epoch_tim": 715, "start_idx": 6, "start_tim": 164, "state": [4, 10, 21, 142, 143, 166, 189, 190, 694, 710, 796, 822, 856, 859, 860, 862, 863, 866], "state_dict": [4, 842, 859], "statement": [716, 726, 821], "static": [22, 853, 862], "static_cast": 22, "staticmethod": [22, 862], "statist": [132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 694, 851, 852, 853], "statu": 56, "std": [22, 395, 417, 862], "steadili": [860, 866], "step": [4, 9, 10, 21, 92, 141, 142, 143, 156, 189, 190, 214, 240, 303, 308, 381, 385, 412, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 453, 455, 499, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526, 548, 554, 560, 561, 663, 691, 692, 693, 694, 705, 706, 710, 711, 712, 714, 715, 717, 719, 720, 722, 726, 728, 729, 730, 737, 738, 755, 756, 758, 760, 766, 768, 769, 770, 777, 778, 797, 798, 801, 803, 804, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 834, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 859, 863, 868, 869], "step_count": 859, "step_forward": 863, "step_siz": 818, "steplr": 818, "steven": 856, "still": [22, 70, 93, 108, 113, 232, 239, 687, 689, 712, 714, 715, 717, 720, 726, 728, 838, 863], "stochast": [3, 11, 183, 293, 301, 633, 704, 709, 712, 717, 723, 725, 728, 789, 795, 797, 798, 803, 807, 809, 811, 814, 828, 847, 859, 869], "stochastic_train": 712, "stochastical\ud558\uac8c": 796, "stochastictwolayergcn": [712, 717, 756, 757, 758, 760, 798, 800, 801, 803], "stochastictwolayerrgcn": [712, 717, 755, 756, 758, 760, 797, 798, 801, 803], "stop": [192, 558, 560, 726, 859], "stopping_mask": 192, "stopping\uc774\ub098": 810, "storag": [1, 4, 21, 116, 131, 211, 212, 287, 292, 295, 309, 332, 342, 554, 555, 687, 696, 702, 703, 822, 846], "store": [0, 1, 4, 7, 10, 31, 34, 53, 54, 59, 92, 95, 96, 100, 101, 102, 125, 126, 131, 134, 137, 138, 140, 141, 142, 143, 146, 149, 155, 156, 159, 161, 162, 163, 165, 168, 169, 171, 173, 180, 182, 184, 185, 186, 187, 188, 189, 190, 193, 200, 203, 204, 205, 206, 209, 220, 231, 232, 234, 239, 240, 241, 242, 246, 249, 250, 287, 288, 289, 292, 296, 310, 315, 316, 332, 333, 337, 338, 339, 344, 351, 355, 383, 386, 391, 430, 432, 453, 474, 501, 538, 539, 546, 547, 551, 552, 554, 556, 558, 560, 561, 562, 563, 564, 565, 567, 569, 572, 573, 610, 611, 612, 633, 638, 639, 640, 641, 655, 656, 657, 659, 662, 663, 666, 667, 685, 686, 687, 689, 691, 692, 693, 694, 695, 699, 700, 702, 703, 706, 710, 727, 730, 772, 773, 779, 780, 791, 821, 826, 829, 830, 832, 833, 834, 835, 839, 846, 847, 850, 856, 859, 863], "store_eid": 231, "store_id": [49, 95, 96, 98, 106, 246, 333, 337, 338, 474, 538, 551, 552, 554, 569], "store_inner_edg": 231, "store_inner_nod": 231, "store_typ": 639, "stori": 822, "str": [4, 20, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 318, 319, 322, 325, 328, 330, 331, 332, 333, 337, 338, 339, 344, 350, 351, 352, 355, 383, 385, 386, 393, 394, 395, 397, 404, 408, 410, 413, 416, 417, 418, 419, 422, 425, 426, 427, 430, 431, 432, 438, 442, 443, 445, 446, 450, 453, 454, 455, 474, 475, 476, 498, 499, 501, 538, 545, 546, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 570, 571, 572, 573, 592, 620, 633, 638, 639, 640, 641, 643, 644, 647, 649, 654, 655, 656, 657, 659, 662, 663, 665, 666, 667, 669, 679, 685, 724, 732, 764, 772, 808, 827, 869], "straight": 707, "straightforward": [851, 852], "strategi": [197, 232, 239, 409, 427, 429, 558, 710, 825, 839, 846, 852], "stream": [210, 291, 323], "streamlin": 825, "strength": [407, 698, 727], "strict": 695, "string": [4, 22, 23, 26, 39, 52, 109, 121, 122, 131, 183, 223, 297, 305, 309, 320, 321, 332, 382, 383, 384, 385, 686, 687, 695, 703, 706, 708, 728, 811, 831, 832, 835], "strong": [343, 472], "strongli": 21, "structur": [0, 4, 7, 13, 19, 21, 22, 56, 59, 67, 89, 101, 102, 108, 112, 125, 126, 131, 132, 141, 142, 143, 147, 150, 154, 159, 161, 162, 163, 167, 170, 173, 174, 175, 176, 181, 184, 197, 205, 210, 234, 236, 240, 248, 249, 250, 287, 305, 310, 314, 332, 424, 425, 426, 428, 442, 546, 547, 548, 555, 565, 633, 657, 663, 683, 691, 694, 695, 697, 698, 699, 701, 702, 711, 728, 780, 818, 821, 825, 831, 846, 851, 853, 854, 856, 857, 859, 860, 864, 866], "strucutr": 830, "strutur": [89, 112, 695], "stub": 21, "student": [155, 187, 193], "studi": [151, 152, 162, 814], "studio": 815, "style": [9, 852, 853], "stype": [383, 724, 764, 808], "sub": [9, 144, 261, 262, 275, 276, 285, 286, 383, 456, 495, 496, 498, 499, 522, 523, 524, 525, 526, 527, 536, 537, 620, 706, 717, 750, 791, 821, 827, 869], "sub_g": [246, 247, 333, 474, 475, 538, 703, 747, 788], "subbackward0": 390, "subclass": [3, 218, 300, 313, 424, 425, 426, 427, 428, 429, 684, 685, 689, 711, 713], "subg": [209, 217, 711, 780], "subgraph": [1, 3, 7, 13, 26, 134, 208, 209, 210, 214, 216, 217, 218, 219, 220, 221, 234, 241, 242, 243, 246, 247, 292, 297, 300, 303, 308, 310, 311, 313, 318, 322, 333, 337, 338, 351, 424, 425, 426, 427, 428, 429, 474, 475, 538, 539, 561, 562, 563, 564, 691, 693, 709, 711, 712, 713, 714, 715, 718, 723, 724, 753, 755, 795, 797, 807, 825, 826, 835, 837, 853, 859, 863], "subgraph_sampl": 303, "subgraphs_nod": [300, 313], "subgraphsampl": [218, 300, 711, 719], "subgraphx": 427, "subject": [6, 851], "sublay": [437, 438, 863], "sublist": 56, "submatrix": [339, 719], "submodul": [4, 383, 722, 815, 836], "subnet": 846, "suboptim": [695, 780], "subpackag": [5, 853], "subplot": [817, 859, 862], "subprocess": [291, 293], "subreddit": 181, "subsect": 717, "subsequ": [303, 308, 694, 695], "subset": [4, 14, 45, 79, 82, 105, 130, 146, 155, 157, 158, 169, 178, 179, 187, 193, 195, 197, 205, 207, 217, 232, 239, 247, 289, 293, 305, 382, 424, 425, 475, 692, 695, 700, 825, 828, 838, 859, 868], "subsetrandomsampl": 838, "subspac": 818, "substanc": 817, "substitut": [825, 853], "substract": [623, 821], "subtract": [627, 665], "subtract_min": 665, "subtre": 856, "succe": [4, 692], "success": 818, "successfulli": 826, "successor": [90, 94, 338, 350, 859], "sudo": [815, 846], "suffer": 842, "suffici": 846, "suffix": [127, 686, 773], "sugar": [345, 346, 347, 348, 629, 630, 856], "suggest": [21, 23, 426, 428, 706, 707, 835, 843, 853], "suitabl": [339, 430, 432, 567, 690, 694, 695, 710], "sum": [4, 5, 9, 10, 20, 22, 73, 79, 82, 91, 92, 93, 94, 100, 113, 117, 118, 119, 122, 138, 139, 140, 173, 197, 198, 205, 241, 242, 383, 394, 395, 403, 408, 410, 416, 417, 421, 424, 425, 426, 427, 432, 440, 441, 444, 453, 456, 480, 485, 499, 501, 506, 512, 520, 526, 549, 550, 558, 560, 561, 567, 592, 629, 630, 641, 649, 665, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 692, 693, 706, 708, 716, 719, 720, 722, 723, 724, 727, 728, 730, 750, 752, 759, 762, 763, 764, 767, 768, 770, 778, 791, 792, 794, 802, 804, 806, 807, 808, 811, 813, 816, 817, 819, 821, 827, 828, 834, 836, 838, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "sum_": [120, 122, 339, 343, 355, 386, 389, 390, 391, 395, 399, 401, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 418, 421, 430, 432, 433, 434, 436, 440, 454, 457, 472, 567, 570, 571, 706, 728, 729, 750, 768, 769, 791, 811, 812, 819, 821, 828, 836, 837, 851, 853, 856, 859, 863], "sum_edg": 128, "sum_i": [665, 862], "sum_nod": 129, "sum_p": 863, "sumlimits_": 863, "summar": [21, 728, 825, 853, 859], "summari": 825, "summat": [119, 128, 129, 383, 500, 501, 549, 575, 641, 728, 811, 828, 836, 852], "sumpool": [818, 868], "super": [146, 169, 218, 300, 313, 414, 424, 425, 426, 427, 428, 429, 456, 685, 689, 711, 712, 714, 715, 716, 717, 719, 720, 722, 724, 726, 728, 729, 730, 732, 735, 755, 756, 757, 758, 759, 760, 762, 764, 766, 768, 769, 770, 772, 775, 797, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 834, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "superpixel": [146, 169], "superpixeldataset": [146, 169], "superscript": 850, "superset": 633, "supervis": [140, 147, 183, 387, 397, 413, 655, 695, 714, 780, 800, 834, 850, 859], "supplementari": 400, "support": [4, 5, 10, 13, 22, 110, 117, 122, 126, 138, 139, 146, 169, 210, 234, 240, 250, 291, 293, 295, 301, 305, 342, 344, 351, 352, 355, 386, 398, 404, 453, 455, 456, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 554, 556, 558, 560, 561, 562, 563, 565, 568, 575, 614, 634, 640, 649, 668, 679, 687, 691, 692, 693, 694, 695, 699, 702, 706, 717, 720, 722, 727, 728, 762, 806, 814, 815, 816, 817, 818, 819, 821, 827, 829, 832, 833, 834, 836, 839, 843, 863, 869], "suppos": [21, 231, 297, 317, 500, 727, 792, 828, 850, 863], "suppress": [387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 839], "sure": [6, 21, 22, 229, 230, 293, 408, 419, 433, 435, 439, 440, 442, 445, 563, 686, 694, 773, 818, 859], "surpass": 21, "svd": [631, 667], "svd_pe": 667, "svdpe": 13, "swap": 318, "switch": [815, 817], "sym": 455, "sym_new_etyp": 648, "symbol": [5, 687, 863], "symmetr": [183, 341, 413, 455, 655, 666, 698, 726, 810, 816, 821, 852], "sympi": [826, 827, 829, 832, 833], "sync": 846, "synchron": [4, 323, 692, 778, 827, 843, 859, 868, 869], "synset": 191, "syntact": [182, 856, 857, 866], "syntax": [345, 346, 347, 348, 629, 630, 703, 726, 788, 856], "synthet": [14, 141, 142, 143, 172, 189, 190, 687, 725, 726, 810, 838, 839], "syntheticdataset": 839, "system": [4, 22, 166, 173, 453, 556, 698, 819, 827, 837, 842, 843, 846], "systemat": [426, 428], "systemctl": 846, "t": [4, 10, 21, 56, 60, 87, 89, 118, 119, 131, 163, 164, 168, 200, 214, 241, 242, 243, 292, 297, 332, 350, 386, 389, 399, 403, 405, 406, 410, 412, 415, 418, 422, 423, 425, 426, 427, 436, 442, 450, 451, 452, 454, 455, 556, 558, 560, 561, 633, 639, 651, 657, 666, 694, 695, 699, 705, 712, 714, 715, 719, 720, 749, 790, 818, 819, 821, 826, 832, 833, 846, 852, 853, 859, 863], "t0": [693, 779, 850, 853], "t1": [693, 779], "t_i": 863, "t_j": 863, "tabl": [178, 179, 381, 382, 385, 695, 822, 839, 853], "tabular": [695, 699], "tackl": [426, 427, 428, 429, 852], "tag": [21, 563, 572, 573], "tag_offset": [572, 573], "tag_offset_nam": [563, 572, 573], "tag_pos_nam": [572, 573], "tag_typ": [572, 573], "tail": [451, 452], "take": [20, 51, 118, 119, 120, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 210, 214, 215, 216, 219, 220, 241, 242, 287, 293, 301, 313, 341, 399, 400, 403, 405, 406, 414, 416, 417, 419, 424, 425, 426, 427, 428, 429, 557, 561, 562, 563, 564, 592, 598, 618, 620, 669, 683, 687, 689, 692, 695, 702, 703, 706, 708, 710, 711, 712, 713, 715, 717, 721, 723, 724, 725, 726, 727, 728, 730, 815, 817, 819, 827, 828, 836, 837, 839, 842, 843, 851, 852, 853, 856, 859, 863, 868], "taken": [161, 163, 852], "talk": 838, "tanh": [821, 856], "tape": 137, "tar": [686, 733, 773], "target": [108, 132, 133, 144, 170, 177, 178, 179, 201, 243, 318, 406, 415, 427, 429, 601, 695, 717, 718, 826, 829, 863], "target_class": [427, 429], "target_dir": 201, "target_idx": 851, "target_ntyp": 140, "task": [2, 7, 21, 122, 132, 133, 135, 136, 137, 138, 139, 140, 144, 146, 147, 150, 151, 152, 153, 154, 159, 160, 161, 163, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 188, 194, 195, 197, 198, 289, 292, 303, 304, 305, 308, 309, 688, 689, 692, 695, 711, 717, 719, 725, 726, 728, 729, 730, 775, 814, 818, 819, 822, 825, 826, 827, 829, 830, 834, 838, 846, 847, 853, 859, 868, 869], "task_lint": 21, "task_nam": [826, 829], "task_unit_test": 21, "tau": [415, 422, 423], "tb": 386, "tcmalloc": 843, "tcp": [827, 868, 869], "tcpstore": 453, "teach": 837, "teacher": 859, "team": [21, 863, 868], "techniqu": [385, 726, 856, 863], "technologi": 843, "teleport": 388, "tell": [5, 21, 130, 210, 213, 240, 687, 717, 835, 836, 838], "temperatur": [426, 428], "templat": [21, 156, 685, 772], "tempor": [25, 145, 164, 166, 214, 297, 300, 303, 313], "temporal_sample_neighbor": 297, "temporari": 25, "ten": 159, "tend": [120, 708], "tensor": [0, 1, 5, 6, 7, 9, 12, 13, 20, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 138, 139, 140, 146, 159, 165, 168, 169, 172, 173, 175, 177, 178, 179, 184, 186, 195, 210, 213, 220, 221, 226, 227, 229, 230, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 288, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 323, 325, 326, 327, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 545, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 593, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 687, 689, 693, 695, 699, 700, 701, 702, 703, 706, 711, 713, 716, 719, 720, 721, 723, 724, 727, 728, 730, 735, 738, 744, 745, 746, 747, 768, 775, 785, 786, 787, 788, 792, 802, 804, 811, 815, 817, 818, 819, 821, 822, 826, 827, 829, 832, 833, 834, 835, 836, 838, 839, 846, 851, 853, 854, 856, 859, 863, 866, 868, 869], "tensor_new": 852, "tensor_numpi": 839, "tensorcor": 720, "tensorcore\ub4e4\uc744": 804, "tensorflow": [9, 13, 21, 23, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 689, 702, 716, 721, 728, 730, 802, 805, 811, 814, 822], "tensorflow\u7684keras\u5c42": 761, "tensorflow\u7684tensor\u7c7b\u6216mxnet\u7684ndarray\u7c7b": 746, "tensorflow\uc5d0\uc11c\ub294": 775, "tensorflow\uc5d0\uc11c\ub3c4": 813, "tensorflow\uc758": 787, "term": [4, 10, 14, 144, 149, 185, 317, 381, 384, 392, 400, 403, 404, 405, 413, 423, 683, 814, 842, 852, 856, 859, 862], "termin": [556, 560], "termination_prob": 556, "tesla": 14, "test": [4, 9, 25, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 240, 292, 309, 314, 327, 688, 692, 695, 719, 726, 730, 734, 738, 739, 774, 778, 780, 810, 815, 816, 817, 818, 819, 821, 825, 826, 827, 829, 831, 832, 833, 834, 836, 838, 839, 846, 847, 850, 853, 863, 868, 869], "test_acc": [816, 817, 819, 827, 834, 836, 868, 869], "test_data": [164, 166, 184], "test_dataload": [818, 838], "test_edg": [139, 847], "test_edge_mask": [157, 158, 191], "test_el": 327, "test_idx": [138, 140, 818, 851], "test_label": [688, 734, 774, 847], "test_load": [688, 734, 774, 868], "test_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 381, 687, 689, 730, 735, 770, 775, 813, 816, 817, 819, 834, 836, 839, 846, 850, 851], "test_metr": 818, "test_neg_dst": 847, "test_neg_g": 837, "test_neg_src": 847, "test_neg_u": 837, "test_neg_v": 837, "test_nid": 846, "test_pos_dst": 847, "test_pos_g": 837, "test_pos_src": 847, "test_pos_u": 837, "test_pos_v": 837, "test_pr": 847, "test_rat": 173, "test_ratio": 173, "test_sampl": 838, "test_set": [309, 314, 826, 827, 829, 831, 832, 833, 868, 869], "test_siz": [818, 837], "texa": 187, "text": [161, 182, 390, 407, 413, 415, 422, 442, 695, 705, 725, 749, 790, 818, 836, 851, 853, 859, 862], "textbf": [859, 862], "textrm": [178, 179, 856, 863], "textur": 862, "tf": [4, 161, 822], "tf_force_gpu_allow_growth": 815, "tf_geometr": 822, "tgt": 863, "tgt_emb": 863, "tgt_po": 863, "tgt_seq": 863, "tgt_y": 863, "tgz": [686, 689, 735, 773, 775], "tgz\u6587\u4ef6": 733, "th": [4, 5, 9, 10, 27, 34, 36, 37, 48, 53, 55, 60, 87, 100, 114, 116, 122, 128, 129, 138, 146, 147, 157, 158, 165, 168, 169, 172, 174, 175, 186, 191, 214, 216, 219, 220, 246, 339, 341, 355, 383, 387, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 474, 501, 545, 549, 550, 555, 559, 560, 565, 570, 571, 632, 639, 641, 643, 644, 668, 678, 679, 681, 683, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 710, 728, 737, 738, 743, 744, 745, 746, 747, 777, 778, 779, 780, 784, 785, 786, 787, 788, 811, 818, 819, 821, 828, 839, 842, 846, 847, 850, 851, 852, 856, 862, 863], "than": [4, 21, 27, 28, 66, 95, 96, 118, 119, 120, 121, 131, 139, 142, 143, 161, 168, 178, 189, 190, 226, 287, 293, 297, 300, 305, 313, 315, 332, 339, 386, 389, 426, 428, 430, 432, 447, 457, 557, 561, 562, 563, 567, 610, 611, 612, 624, 656, 657, 662, 702, 703, 707, 713, 724, 726, 729, 747, 788, 815, 819, 822, 832, 833, 842, 843, 846, 851, 852, 853, 856, 859], "thei": [1, 4, 9, 11, 20, 21, 26, 56, 117, 119, 122, 130, 131, 138, 140, 151, 152, 188, 234, 241, 242, 245, 310, 319, 332, 349, 350, 389, 456, 473, 555, 558, 560, 561, 684, 685, 691, 692, 693, 695, 700, 701, 703, 706, 712, 716, 720, 723, 724, 725, 727, 818, 822, 831, 834, 836, 838, 846, 852, 853, 856, 859, 862], "them": [1, 4, 5, 9, 41, 48, 56, 68, 73, 93, 100, 113, 120, 130, 133, 142, 144, 148, 149, 155, 178, 185, 187, 193, 205, 221, 245, 246, 249, 318, 333, 337, 338, 339, 389, 424, 425, 426, 427, 428, 429, 434, 443, 450, 473, 474, 538, 553, 563, 565, 609, 615, 633, 641, 647, 687, 691, 692, 693, 695, 698, 699, 703, 705, 713, 718, 726, 728, 814, 821, 828, 830, 832, 833, 834, 835, 837, 846, 852, 856, 857, 859, 863, 866, 868], "themselv": [21, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 712, 828, 837], "theori": 852, "ther": 423, "therefor": [4, 26, 220, 293, 639, 692, 693, 712, 713, 819, 837, 847, 851, 852, 853, 856], "theta": [402, 403, 408, 409, 416, 420, 421, 817, 852], "theta_": [817, 852], "theta_0": 817, "theta_i": 852, "theta_k": 656, "theta_r": 817, "theta_x": 852, "thew": 26, "thi": [4, 5, 6, 7, 8, 10, 14, 21, 22, 24, 26, 27, 28, 34, 40, 41, 44, 45, 48, 51, 52, 59, 70, 73, 79, 82, 89, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 137, 140, 141, 142, 143, 145, 148, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 197, 209, 210, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 231, 232, 235, 239, 240, 241, 242, 243, 245, 246, 247, 287, 291, 293, 297, 299, 300, 301, 303, 305, 308, 309, 310, 313, 318, 323, 332, 333, 336, 337, 338, 339, 340, 342, 350, 351, 352, 355, 383, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 417, 420, 421, 424, 425, 426, 427, 428, 429, 430, 432, 434, 436, 443, 446, 447, 448, 449, 453, 454, 456, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 548, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 567, 572, 573, 579, 580, 603, 610, 611, 612, 614, 620, 624, 631, 632, 633, 635, 636, 637, 638, 639, 641, 642, 655, 656, 657, 658, 659, 660, 662, 663, 664, 666, 667, 668, 676, 677, 678, 679, 681, 682, 683, 684, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 699, 702, 703, 705, 706, 707, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 775, 780, 800, 813, 815, 816, 817, 818, 819, 821, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 843, 846, 847, 850, 851, 852, 853, 854, 856, 857, 859, 860, 862, 863, 864, 866, 868, 869], "thing": [210, 226, 557, 690, 712, 856], "third": [131, 210, 214, 215, 216, 219, 220, 287, 332, 559], "thoma": 823, "thorough": 633, "thoroughli": [852, 853], "those": [27, 28, 114, 116, 209, 220, 243, 293, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 430, 432, 706, 707, 710, 722, 828, 835, 853, 856, 859, 863], "though": [21, 22, 241, 242, 303, 308, 561, 699, 852], "thought": [859, 863], "thousand": 829, "thre": 863, "thread": [21, 210, 235, 291, 827, 846, 869], "three": [14, 48, 62, 63, 80, 126, 131, 161, 163, 198, 217, 230, 240, 250, 287, 332, 383, 455, 567, 639, 687, 689, 691, 692, 694, 695, 706, 714, 719, 723, 827, 831, 836, 837, 839, 842, 851, 852, 856, 859, 863, 869], "threshold": [297, 423, 427, 429, 656, 657, 662], "through": [22, 236, 692, 728, 814, 838, 846, 847, 851], "throughout": [305, 702, 859], "throughput": 691, "throw": 679, "thrown": [857, 866], "thu": [4, 9, 14, 22, 70, 122, 182, 198, 245, 246, 303, 333, 337, 338, 393, 420, 457, 473, 474, 538, 549, 550, 687, 692, 693, 695, 699, 701, 720, 817, 850, 851, 852, 853, 856, 859, 862, 863, 868], "thumb": 21, "thumbnail": [834, 835, 836, 837, 838, 839], "ti": 51, "tid": 693, "tild": [388, 391, 407, 415, 420, 421, 455, 817, 850, 852], "tile": 862, "time": [6, 113, 118, 164, 166, 200, 214, 231, 291, 297, 300, 303, 308, 313, 337, 338, 386, 413, 414, 430, 446, 557, 560, 561, 657, 666, 685, 690, 692, 695, 707, 714, 715, 720, 728, 751, 793, 817, 818, 819, 821, 822, 827, 834, 835, 836, 837, 838, 839, 842, 846, 850, 852, 853, 856, 859, 863, 868, 869], "time_enc": 863, "timestamp": [297, 300, 313, 319], "tini": [130, 184, 856], "tiny_data": 184, "tiny_sst": 856, "tip": [210, 710], "tissu": 853, "titl": [699, 743, 784], "tmp": [315, 316, 426, 428, 695, 739, 780, 839, 852], "to_add_edg": 859, "to_bfloat16": 720, "to_bidirect": [6, 116, 702, 746, 787], "to_block": [4, 131, 692, 693, 711, 713, 738, 755, 778, 779, 797, 799], "to_csv": [832, 833], "to_dens": [817, 819, 821], "to_direct": [248, 249], "to_heterogen": 639, "to_homogen": [415, 418, 638, 703, 747, 788, 851], "to_homogenen": 26, "to_jshtml": 817, "to_loc": 4, "to_networkx": [817, 852, 856, 862], "to_numpi": [687, 839], "to_partid": 4, "to_pyg_data": 305, "to_simpl": [118, 119, 186, 642], "to_undirect": 817, "tocoo": [126, 250], "todens": 837, "togeth": [11, 26, 91, 92, 101, 102, 130, 135, 136, 137, 214, 216, 240, 330, 340, 349, 421, 422, 423, 433, 435, 439, 440, 554, 695, 703, 718, 728, 819, 832, 833, 852, 868], "toi": [175, 863], "token": [856, 863, 864, 866], "tolevi": 13, "tolist": [559, 817, 856], "tolok": 188, "toloka": 188, "tone": 164, "too": [4, 22, 60, 87, 240, 291, 309, 695, 701, 713, 786, 821, 828, 863], "tool": [691, 692, 695, 740, 780, 781, 815, 821, 822, 829, 834, 846], "toolbox": 400, "top": [142, 143, 161, 415, 439, 643, 644, 692, 695, 814, 818, 819, 821, 825, 837, 842, 846, 851], "topic": [332, 640, 694, 710, 852], "topk": [339, 430, 432, 567, 643, 644], "topolog": [544, 645, 856], "topologi": [13, 292, 309, 389, 421, 727, 856, 857, 859, 866], "topological_nodes_gener": [544, 856], "torch": [4, 5, 6, 8, 9, 10, 12, 20, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 131, 138, 146, 147, 165, 168, 169, 172, 174, 183, 184, 186, 195, 209, 210, 213, 214, 216, 217, 219, 220, 226, 227, 244, 245, 246, 247, 249, 250, 263, 264, 265, 266, 287, 288, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 323, 325, 326, 327, 330, 331, 332, 333, 337, 338, 339, 343, 349, 353, 354, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 472, 473, 474, 475, 501, 538, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 567, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 632, 633, 634, 638, 639, 640, 641, 643, 644, 648, 649, 652, 653, 654, 655, 656, 657, 660, 661, 662, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 687, 688, 689, 691, 692, 694, 695, 699, 700, 701, 702, 703, 706, 707, 711, 712, 713, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726, 728, 729, 730, 734, 735, 737, 738, 743, 744, 745, 746, 747, 750, 751, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 768, 769, 770, 774, 775, 777, 778, 784, 785, 786, 787, 788, 791, 793, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 816, 817, 818, 819, 821, 826, 827, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 846, 847, 850, 851, 852, 853, 856, 859, 862, 863, 868, 869], "torch_feat": [298, 315], "torch_featur": 315, "torchaudio": 821, "torchbasedfeatur": [298, 832, 833], "torchbasedfeaturestor": [309, 832, 833], "torchdata": [293, 301, 718, 826, 827, 829, 832, 833], "torchmetr": [819, 827, 869], "torchvis": 821, "tosimpl": [13, 651], "total": [4, 10, 80, 81, 181, 297, 303, 308, 312, 381, 386, 414, 432, 441, 689, 693, 694, 718, 824, 841, 845, 849, 852, 855, 858, 861, 865, 867, 868, 871], "total_correct": 868, "total_loss": [715, 719, 818, 826, 827, 868, 869], "total_node_weight": 694, "total_num_edg": [297, 325], "total_num_nod": [297, 325, 714, 832, 833], "touch": 21, "toward": 652, "tower": [395, 417], "tp_": 853, "tq": [819, 829], "tqdm": [714, 715, 818, 819, 826, 827, 829, 832, 833, 863, 869], "tr": 856, "trace": [558, 559, 560], "track": 856, "trade": [145, 427, 429, 863], "traffic": [149, 185], "train": [3, 4, 7, 9, 10, 11, 23, 25, 89, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 209, 210, 213, 214, 215, 216, 219, 220, 232, 235, 239, 240, 292, 293, 303, 309, 314, 385, 395, 409, 414, 417, 420, 424, 425, 426, 427, 428, 429, 453, 631, 633, 667, 682, 683, 688, 689, 692, 693, 694, 695, 704, 706, 709, 711, 713, 714, 718, 723, 734, 737, 765, 768, 770, 774, 775, 777, 780, 791, 797, 798, 803, 804, 809, 810, 811, 813, 814, 815, 822, 826, 828, 831, 832, 833, 839, 840, 842, 843, 850, 853, 856, 857, 859, 860, 862, 866, 868], "train_acc": [834, 836, 851], "train_data": [164, 166, 184], "train_dataload": [818, 826, 829, 838, 846, 847], "train_dataset": [146, 169], "train_dataset_subset": [146, 169], "train_dist": [740, 781, 846], "train_edg": [157, 158, 191], "train_edge_mask": [157, 158, 191], "train_eid": [214, 216, 220, 756, 798, 847], "train_eid_dict": [756, 758, 798, 801], "train_g": [157, 158, 191, 837], "train_graph": 139, "train_idx": [138, 140, 689, 735, 775, 818, 851], "train_it": 863, "train_label": [688, 734, 774], "train_load": [688, 734, 774, 856, 868], "train_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 240, 381, 424, 687, 689, 691, 692, 695, 720, 725, 726, 730, 735, 737, 738, 739, 765, 766, 770, 775, 777, 778, 780, 804, 809, 810, 813, 816, 817, 819, 834, 836, 839, 846, 850, 851, 853], "train_neg_g": 837, "train_neg_u": 837, "train_neg_v": 837, "train_nid": [210, 214, 215, 216, 219, 691, 692, 713, 737, 738, 755, 760, 777, 778, 797, 799, 803, 842, 846, 847], "train_nid_dict": [760, 803], "train_on": [209, 210, 213, 214, 215, 216, 217, 220], "train_pos_g": 837, "train_pos_u": 837, "train_pos_v": 837, "train_rat": 173, "train_sampl": 838, "train_se": [758, 801], "train_set": [157, 158, 191, 309, 314, 711, 712, 717, 826, 827, 829, 831, 832, 833, 852, 868, 869], "train_siz": [161, 162, 163, 164, 166, 818, 837], "train_step": [426, 428], "train_step_nod": [426, 428], "trainabl": [4, 816, 821, 851], "trainer": [4, 232, 239, 240, 691, 692, 693, 695, 696, 846, 847], "trainer_id": 240, "trainer\uc5d0\uac8c": 777, "training_load": 852, "training_set": 195, "training\uc744": 791, "trainset": [147, 174, 856], "trang": [715, 819], "transact": 145, "transduct": [140, 197, 198, 420, 692, 738, 778], "transfer": [210, 290], "transform": [9, 13, 26, 27, 28, 114, 115, 116, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 246, 247, 306, 333, 336, 339, 342, 350, 355, 384, 386, 389, 395, 399, 403, 415, 425, 426, 427, 430, 431, 432, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 457, 474, 475, 538, 545, 552, 555, 563, 632, 641, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 683, 687, 695, 699, 711, 712, 713, 715, 718, 720, 728, 816, 820, 826, 850, 851, 852, 853, 856, 859, 864, 866], "transform1": 659, "transform2": 659, "transform3": 659, "transformer_encod": 446, "transit": 560, "translat": [158, 191, 451, 863], "translationdataset": 863, "transmiss": 210, "transpar": [693, 718], "transpos": [31, 555, 572, 574, 600, 818, 821, 852], "travel": [817, 859], "travers": [13, 91, 92, 123, 124, 229, 230, 541, 543, 544, 556, 558, 560, 645], "traversal_ord": 856, "treat": [310, 319, 385, 561, 562, 641, 666, 703, 723, 747, 788, 835, 837, 838, 839, 852, 856, 857, 863, 866], "tree": [14, 21, 159, 182, 184, 189, 190, 230, 339, 427, 429, 430, 432, 567, 857, 860, 863, 866], "tree_height": [189, 190], "treebank": [184, 856], "treelstm": 856, "treelstmcel": 856, "tri": [4, 148, 240, 351, 352], "trick": [22, 850], "trigger": [0, 91, 92, 404, 708, 720, 794, 818, 822, 836, 839, 852, 853, 856], "tripl": [451, 452, 851], "triplet": [4, 30, 31, 32, 34, 39, 47, 48, 52, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 131, 223, 247, 332, 476, 549, 551, 553, 570, 638, 687, 703], "trivial": [9, 340, 395, 446, 659, 856], "troubl": 21, "true": [4, 6, 9, 10, 25, 31, 48, 49, 57, 58, 65, 66, 67, 69, 95, 96, 98, 99, 106, 111, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 246, 248, 287, 291, 293, 297, 303, 308, 309, 310, 315, 316, 326, 327, 333, 334, 336, 337, 338, 339, 340, 342, 381, 384, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 442, 443, 444, 445, 446, 447, 455, 474, 538, 539, 541, 543, 544, 545, 551, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 567, 568, 569, 572, 586, 631, 632, 633, 639, 640, 641, 643, 644, 645, 647, 648, 649, 659, 660, 665, 667, 680, 681, 687, 688, 689, 691, 692, 694, 695, 711, 712, 713, 714, 715, 717, 718, 719, 720, 722, 728, 734, 735, 737, 738, 755, 756, 757, 758, 760, 762, 768, 774, 775, 777, 778, 780, 797, 798, 799, 800, 801, 803, 804, 806, 811, 815, 816, 817, 818, 819, 821, 826, 827, 829, 831, 832, 833, 834, 838, 839, 842, 846, 847, 850, 851, 852, 856, 859, 862, 863, 868, 869], "truediv": 620, "trueli": [694, 695], "truli": [240, 714], "truncat": 447, "trust": 145, "truth": [150, 154, 167, 176, 730, 813, 827, 834, 847, 852, 859, 869], "trv_a_tre": 856, "trv_graph": 856, "try": [116, 130, 207, 226, 240, 336, 342, 555, 556, 557, 632, 641, 694, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833, 838, 843], "tudata": [689, 735, 775], "tudataset": 25, "tune": [192, 291, 407, 720, 814, 842, 843, 853], "tupl": [4, 10, 22, 26, 27, 32, 36, 48, 51, 54, 61, 73, 88, 95, 123, 125, 131, 132, 133, 139, 144, 156, 170, 183, 196, 217, 240, 249, 287, 288, 296, 299, 302, 305, 319, 320, 321, 330, 331, 332, 350, 353, 354, 355, 382, 383, 384, 425, 457, 557, 560, 561, 577, 579, 580, 594, 608, 610, 611, 612, 613, 624, 688, 689, 693, 702, 716, 723, 724, 759, 763, 774, 802, 807], "tuple\uacfc": 779, "tuple\uc744": [775, 779], "tuple\uc758": 807, "ture": [9, 706, 791], "turn": [21, 210, 213, 303, 334, 351, 539, 720, 818, 828, 843, 846, 852, 859], "tutori": [9, 21, 210, 214, 215, 216, 293, 683, 699, 706, 712, 713, 716, 717, 719, 784, 797, 798, 803, 816, 817, 818, 819, 821, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871], "tvm": 22, "tvt": 314, "tweak": 21, "tweet": 159, "twirl": 422, "twitter": [159, 698], "two": [3, 4, 5, 9, 26, 34, 45, 48, 51, 52, 53, 58, 68, 77, 79, 81, 82, 100, 105, 116, 118, 119, 125, 126, 128, 129, 130, 135, 136, 141, 142, 159, 162, 163, 178, 180, 182, 188, 232, 239, 240, 245, 249, 297, 337, 338, 339, 350, 351, 352, 385, 386, 387, 389, 390, 395, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 413, 419, 453, 454, 456, 473, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 548, 549, 550, 554, 556, 557, 563, 570, 571, 572, 573, 606, 614, 617, 620, 626, 632, 633, 638, 639, 641, 643, 644, 647, 663, 679, 683, 687, 692, 693, 694, 695, 697, 698, 699, 700, 701, 703, 706, 707, 708, 712, 714, 716, 717, 720, 724, 726, 728, 729, 730, 798, 813, 819, 821, 828, 829, 831, 834, 837, 838, 839, 846, 850, 851, 852, 853, 854, 856, 859, 862, 863, 864, 866], "twolayergcn": [717, 760, 803], "tx": 666, "txt": [691, 692, 694, 695, 696, 737, 738, 740, 777, 778, 780, 781, 846, 847], "ty_a": 638, "ty_b": 638, "type": [4, 5, 6, 10, 13, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 288, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 309, 310, 312, 315, 316, 318, 319, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 569, 570, 571, 572, 573, 575, 576, 578, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 655, 664, 670, 673, 675, 678, 679, 687, 689, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 706, 708, 712, 715, 716, 717, 719, 720, 722, 724, 725, 728, 729, 730, 745, 747, 762, 763, 775, 779, 786, 788, 794, 797, 806, 810, 811, 812, 815, 821, 826, 827, 829, 831, 832, 833, 835, 838, 839, 850, 851, 853, 856, 859, 868], "type_": [222, 223, 224, 225], "type_edge_id": 780, "type_nam": [288, 296], "type_per_edg": [297, 325, 832], "type_wise_edge_id": 694, "type_wise_id": [693, 779], "type_wise_node_id": 694, "typestr": [62, 63], "typic": [1, 4, 11, 241, 386, 689, 696, 706, 720, 722, 723, 817, 843, 852, 859, 863], "typl": [128, 643], "tzdata": [826, 829, 832, 833], "u": [4, 5, 21, 27, 48, 51, 57, 61, 87, 88, 90, 94, 107, 114, 130, 131, 161, 163, 178, 179, 226, 227, 230, 244, 252, 253, 255, 257, 259, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 284, 286, 287, 297, 317, 332, 336, 342, 343, 350, 399, 400, 402, 403, 405, 406, 410, 413, 414, 416, 417, 419, 472, 498, 499, 555, 571, 632, 633, 641, 660, 673, 686, 689, 698, 701, 702, 703, 705, 706, 707, 718, 729, 735, 742, 745, 746, 747, 749, 750, 751, 755, 769, 775, 783, 786, 787, 788, 790, 791, 793, 797, 812, 814, 817, 828, 835, 836, 837, 843, 850, 852, 856, 859, 862, 863], "u0": [178, 179], "u0_atom": 179, "u_": [410, 856], "u_0": [178, 179], "u_add_": 5, "u_add_e_max": 9, "u_add_v": [5, 34, 456, 706, 707, 750, 751, 791, 793], "u_atom": 179, "u_attr": 125, "u_div_": 5, "u_div_v": [5, 9], "u_dot_": 5, "u_dot_v": [5, 9, 720, 726, 729, 758, 766, 769, 801, 804, 810, 812, 837], "u_f": 856, "u_fea": [402, 410, 413, 419], "u_feat": [399, 400, 403, 405, 406, 416], "u_hat": 862, "u_iou": 856, "u_j": 856, "u_l": 856, "u_mul_": [5, 9, 424, 425, 706, 720, 727, 750, 767, 791, 792, 804, 836, 863], "u_mul_e_sum": 9, "u_mul_e_udf": 836, "u_mul_v": 5, "u_sub_": 5, "u_sub_v": 5, "ubuntu": [14, 139, 815, 832, 833, 843, 856, 859, 862], "uc": 385, "ucidata": 167, "udf": [20, 692, 706, 720, 738, 791, 804, 853, 856], "udf_max": 5, "udf_u_mul_": 5, "udf\ub294": 791, "udf\uc640": 791, "udf\uc758": 791, "uint32": 815, "uint8": [692, 738, 778, 832, 863], "uk": 144, "un": [839, 853], "unari": [5, 706, 791], "unbatch": [101, 102, 122, 838, 856], "unblock": [387, 399, 402, 403, 405, 406, 407, 410, 413, 420], "uncertainti": [197, 205], "unchang": 109, "uncom": [816, 817, 818, 819, 821], "uncompress": 201, "uncov": 851, "undefin": [229, 230, 241, 242, 333, 337, 338, 474, 538, 558, 560, 561, 562, 563, 692, 839], "under": [1, 5, 14, 22, 95, 96, 137, 161, 163, 171, 180, 182, 188, 197, 205, 240, 246, 333, 337, 338, 474, 538, 551, 552, 554, 563, 569, 641, 686, 687, 691, 694, 695, 696, 710, 773, 814, 815, 836, 837, 846, 850, 851, 853, 859, 868], "underflow": [720, 804], "underli": [426, 428, 692], "underset": [724, 764, 808, 852], "understand": [21, 441, 449, 694, 710, 817, 822, 828, 836, 838, 846, 852, 854, 866], "undirect": [6, 173, 220, 248, 249, 289, 698, 699, 702, 783, 798, 835, 859], "uneven": [827, 869], "unexist": [442, 445], "unfamiliar": 21, "uni": [44, 45, 68, 79, 82, 104, 105, 126, 402, 546], "unidirect": [116, 125, 350, 397, 398, 399, 400, 402, 403, 405, 406, 410, 413, 416, 419, 716, 802], "unifi": [21, 210, 305, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 713, 825], "uniform": [174, 205, 214, 216, 219, 220, 226, 227, 297, 317, 398, 405, 406, 410, 412, 413, 416, 419, 421, 560, 561, 563, 715, 729, 758, 799, 801, 853], "uniform_": [4, 692, 738, 778], "uniformli": [214, 216, 217, 226, 227, 245, 297, 317, 382, 414, 473, 546, 547, 558, 560, 561, 715, 826], "uniformnegativesampl": [303, 715, 826], "uniform\uc0d8\ud50c\ub9c1\uc740": 799, "uniniti": 354, "union": [4, 209, 220, 293, 297, 300, 301, 302, 310, 312, 313, 318, 319, 331, 430, 432, 856], "uniqu": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 162, 182, 216, 226, 241, 247, 297, 299, 300, 303, 308, 313, 319, 330, 331, 453, 476, 549, 551, 553, 557, 561, 570, 575, 692, 693, 695, 700, 702, 703, 721, 728, 846, 847], "unique_dst": 331, "unique_dst_nod": 331, "unique_nod": [330, 331], "unit": [7, 178, 179, 695, 851, 856, 868], "univers": [132, 167, 864, 866], "unknown": [147, 171], "unlabel": [161, 455, 695, 714], "unleash": 842, "unless": 210, "unlik": [118, 119, 303, 852, 853, 860, 866], "unmark": 6, "unnam": 687, "unnecessari": [707, 724, 843], "unnorm": [241, 242, 297, 303, 308, 400, 404, 558, 560, 561, 562, 563], "unobserv": 853, "unoccupi": [178, 179], "unorm": 422, "unpack": [694, 695, 715], "unpin": 112, "unpin_memory_": 89, "unplug": 173, "unreach": [243, 447, 448, 568, 681], "unscal": [720, 804], "unsqueez": [128, 129, 447, 678, 723, 763, 769, 807, 851, 852, 856, 859], "unsupervis": [715, 801, 852], "until": [4, 6, 21, 214, 561, 710, 856, 863], "untyp": [851, 859], "unus": 21, "unvisit": [427, 429], "unweight": [289, 568, 655, 666, 698, 727, 783], "up": [4, 9, 22, 221, 241, 242, 291, 432, 558, 560, 561, 567, 639, 689, 695, 702, 706, 707, 728, 827, 834, 837, 842, 850, 851, 853, 856, 862, 869], "updat": [4, 10, 20, 21, 27, 28, 34, 35, 73, 91, 92, 93, 94, 100, 113, 222, 223, 224, 225, 288, 294, 295, 296, 298, 315, 349, 383, 385, 389, 390, 392, 397, 398, 400, 403, 405, 406, 407, 408, 409, 411, 413, 419, 420, 421, 444, 453, 455, 540, 541, 542, 543, 544, 683, 691, 692, 705, 706, 707, 708, 709, 716, 720, 728, 751, 791, 793, 794, 804, 815, 821, 822, 827, 828, 836, 846, 852, 853, 856, 862, 863, 868], "update_al": [5, 9, 20, 424, 456, 670, 671, 672, 673, 674, 675, 676, 677, 678, 706, 707, 708, 709, 716, 720, 723, 727, 750, 751, 752, 753, 759, 763, 767, 791, 792, 793, 794, 795, 802, 804, 807, 836, 837, 850, 851, 852, 853, 859, 862], "update_all_exampl": [706, 750, 791], "update_graph": 863, "upgrad": [817, 827], "upload": [21, 846], "upon": [22, 162, 821], "upper": [235, 423, 443, 448], "upstream": [21, 856], "upward": 856, "urandom": [183, 207], "url": [23, 156, 200, 685, 686, 689, 732, 733, 735, 772, 773, 775, 821], "urllib": 839, "urllib3": [826, 827, 829, 832, 833], "urlretriev": 839, "us": [4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 142, 143, 144, 145, 148, 150, 154, 159, 160, 162, 165, 167, 168, 173, 176, 177, 178, 179, 181, 183, 184, 186, 189, 190, 194, 195, 197, 205, 207, 209, 210, 213, 214, 217, 220, 222, 223, 224, 225, 229, 232, 235, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 291, 292, 293, 295, 297, 303, 305, 306, 307, 308, 310, 313, 314, 318, 323, 326, 330, 332, 333, 336, 337, 338, 339, 340, 342, 349, 350, 351, 352, 355, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 405, 406, 407, 408, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 448, 450, 451, 452, 453, 456, 457, 473, 474, 475, 538, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 560, 561, 562, 563, 564, 567, 569, 583, 585, 588, 589, 601, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 654, 659, 660, 663, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 683, 684, 686, 687, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 702, 703, 705, 706, 708, 710, 711, 712, 714, 715, 717, 719, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 773, 780, 787, 788, 804, 813, 815, 817, 819, 820, 821, 826, 827, 828, 829, 831, 832, 833, 834, 836, 838, 839, 840, 842, 843, 846, 847, 850, 851, 852, 853, 854, 856, 857, 859, 860, 862, 863, 866, 868, 869], "usag": [0, 1, 8, 9, 21, 25, 56, 126, 131, 210, 249, 250, 287, 332, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 688, 689, 699, 706, 709, 814, 820, 822, 843, 846], "use_alternate_stream": 210, "use_cpu_affin": 843, "use_ddp": [210, 213, 842, 868], "use_eta": [422, 423], "use_featur": [146, 169], "use_fp16": 804, "use_graphbolt": [235, 236, 240, 241, 242, 846], "use_int64_tensor_s": 815, "use_libxsmm": 334, "use_libxsmm_flag": 334, "use_mm_for_euclid_dist": [431, 545], "use_mm_for_euclid_dist_if_necessari": [431, 545], "use_norm": 415, "use_panda": 168, "use_prefetch_thread": 210, "use_uva": [10, 210, 713], "user": [1, 3, 4, 5, 9, 11, 13, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 140, 145, 156, 159, 161, 163, 173, 180, 181, 210, 214, 215, 216, 219, 220, 235, 240, 241, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 301, 309, 314, 320, 321, 332, 333, 336, 337, 338, 342, 351, 352, 355, 382, 383, 384, 385, 387, 397, 399, 402, 403, 405, 406, 407, 410, 413, 420, 425, 426, 427, 474, 475, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 546, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 572, 573, 632, 633, 638, 639, 640, 641, 648, 649, 654, 664, 665, 669, 679, 687, 691, 692, 693, 694, 695, 696, 697, 698, 700, 703, 706, 711, 712, 713, 715, 718, 720, 725, 726, 729, 730, 747, 750, 755, 765, 766, 769, 770, 782, 788, 789, 791, 797, 804, 809, 810, 812, 813, 814, 815, 825, 827, 830, 831, 832, 843, 846, 856], "user_emb": 385, "user_feat": [726, 729, 730, 766, 769, 770, 810, 812, 813], "user_id": 832, "user_nid": 385, "user_orig_nids_0": 695, "usernam": 21, "userwarn": [145, 177, 178, 179, 686, 733, 773, 818, 839, 852], "user\uac00": 810, "user\uc640": [788, 810], "usr": [818, 827], "usual": [4, 10, 21, 330, 457, 556, 692, 696, 706, 710, 712, 714, 718, 722, 723, 728, 730, 819, 826, 829, 832, 833, 838, 850, 853], "util": [1, 4, 11, 13, 146, 169, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 289, 291, 303, 305, 308, 314, 344, 380, 381, 385, 443, 454, 455, 456, 457, 565, 681, 682, 683, 686, 689, 690, 691, 695, 699, 713, 718, 721, 722, 723, 727, 730, 733, 735, 736, 761, 762, 763, 773, 775, 776, 780, 805, 806, 807, 817, 822, 827, 838, 839, 842, 843, 852, 856, 859], "utransform": 863, "utyp": [125, 126, 385, 546, 633, 716, 729, 759, 769, 802, 812], "uv": [51, 61, 88, 556, 673], "uva": [210, 291, 556, 560], "v": [4, 5, 21, 22, 27, 35, 48, 51, 57, 60, 61, 62, 63, 87, 88, 90, 93, 94, 107, 114, 120, 121, 131, 161, 178, 179, 226, 227, 230, 244, 245, 254, 256, 258, 260, 262, 268, 270, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 297, 317, 332, 336, 342, 343, 350, 389, 393, 399, 400, 402, 403, 405, 406, 410, 413, 415, 416, 418, 419, 472, 473, 498, 499, 555, 571, 619, 620, 621, 622, 623, 632, 633, 641, 647, 660, 673, 698, 701, 702, 703, 705, 706, 707, 716, 723, 724, 728, 729, 730, 742, 745, 746, 747, 749, 750, 751, 755, 759, 763, 764, 768, 769, 770, 783, 786, 787, 788, 790, 791, 793, 797, 802, 807, 808, 811, 812, 813, 818, 821, 828, 836, 837, 850, 852, 856, 859, 862, 863], "v0": 779, "v1": 821, "v100": [14, 720, 804], "v2": 821, "v3": 821, "v_": 852, "v_1": 821, "v_2": 821, "v_a": 693, "v_add_": 5, "v_add_u": 5, "v_attr": 125, "v_b": [386, 418, 457, 693, 851], "v_div_": 5, "v_div_u": 5, "v_dot_": 5, "v_dot_u": 5, "v_fea": [402, 410, 413, 419], "v_feat": [399, 400, 403, 405, 406, 416], "v_i": [403, 729, 769, 812, 853, 856, 863], "v_j": [862, 863], "v_k": [856, 863], "v_max": 859, "v_mul_": 5, "v_mul_u": 5, "v_p": 432, "v_proj": 818, "v_sub_": 5, "v_sub_u": 5, "vacabulari": 184, "vaganova": 851, "val": [101, 102, 134, 137, 138, 139, 140, 149, 155, 168, 171, 180, 182, 185, 186, 187, 188, 192, 193, 329, 501, 566, 575, 585, 586, 590, 592, 595, 596, 597, 598, 599, 603, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 624, 625, 627, 628, 816, 817, 818, 819, 821, 832, 833, 834, 836, 847, 868], "val1": [614, 626], "val2": [614, 626], "val_acc": [816, 817, 819, 834, 836, 851, 868], "val_edg": [139, 157, 158, 191, 847], "val_edge_mask": [157, 158, 191], "val_g": [157, 158, 191], "val_idx": [138, 140, 818], "val_lik": 821, "val_load": 868, "val_loss": 851, "val_mask": [25, 137, 140, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 171, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 687, 689, 730, 735, 770, 775, 813, 816, 817, 819, 834, 836, 839, 846], "val_metr": 818, "val_nid": 846, "val_set": [157, 158, 191, 868], "val_siz": [161, 162, 163, 598, 606, 610, 611, 612, 613, 618, 620, 624, 818, 821], "valid": [5, 25, 91, 125, 131, 138, 139, 140, 147, 150, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 174, 175, 176, 181, 191, 192, 194, 195, 197, 198, 205, 207, 249, 292, 309, 314, 444, 679, 688, 692, 695, 714, 726, 730, 734, 774, 810, 813, 816, 817, 825, 826, 827, 829, 831, 832, 833, 834, 836, 837, 839, 851, 853, 856, 859, 863, 868, 869], "valid_data": [164, 166], "valid_dataload": [818, 829, 846], "valid_it": 863, "valid_label": [688, 734, 774], "valid_load": [688, 734, 774], "valid_mask": [173, 730, 770, 813], "valid_nid": 846, "valid_r": 173, "valid_ratio": 173, "valid_set": [827, 829, 869], "validation_set": [309, 314, 827, 829, 831, 832, 833, 869], "valu": [4, 9, 12, 22, 23, 30, 31, 34, 51, 57, 58, 61, 62, 63, 73, 88, 89, 93, 113, 114, 115, 117, 120, 121, 126, 131, 137, 147, 148, 156, 164, 174, 178, 179, 183, 184, 197, 205, 210, 214, 216, 219, 220, 240, 241, 242, 244, 245, 246, 250, 287, 288, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 305, 308, 310, 315, 319, 323, 327, 330, 331, 332, 333, 337, 338, 343, 351, 355, 381, 383, 385, 387, 391, 392, 393, 394, 396, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 434, 439, 442, 444, 445, 453, 472, 473, 474, 477, 479, 482, 484, 501, 503, 505, 509, 511, 517, 519, 523, 525, 538, 539, 548, 554, 559, 561, 568, 575, 578, 579, 580, 581, 583, 585, 588, 589, 590, 592, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 624, 625, 626, 627, 628, 631, 649, 663, 665, 667, 685, 687, 694, 695, 720, 723, 724, 727, 772, 817, 818, 821, 827, 839, 850, 852, 853, 856, 862, 863, 869], "valueerror": 693, "valueobject": 22, "van": 856, "vanilla": [818, 863], "vanillar": 818, "vanish": 414, "var": [395, 417], "vare": 186, "varepsilon": [411, 863], "vari": [687, 722, 723, 817, 832, 833], "variabl": [21, 245, 473, 694, 815, 835, 842, 843, 852], "varianc": [395, 417], "variant": [214, 245, 473, 561, 850, 853], "variat": [214, 297, 303, 561, 852], "varieti": [699, 859, 863], "variou": [4, 14, 221, 305, 417, 692, 718, 821, 832, 833, 835, 838, 862], "vast": 835, "vaswani": 818, "vcpu": 14, "ve": [821, 846], "vec": [150, 400, 405, 406, 817, 853], "vector": [128, 129, 159, 214, 216, 219, 232, 239, 240, 351, 352, 381, 382, 385, 395, 400, 403, 410, 416, 423, 437, 438, 443, 568, 592, 595, 596, 597, 599, 606, 607, 608, 610, 611, 612, 613, 617, 619, 620, 621, 622, 623, 624, 631, 667, 683, 687, 695, 700, 726, 816, 817, 819, 821, 834, 835, 837, 838, 846, 850, 853, 856, 859, 862, 863, 864, 866], "vector_v": 821, "venu": 647, "venv": 827, "verbos": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 428, 685, 689, 732, 735, 772, 775], "veri": [4, 10, 22, 122, 184, 692, 699, 712, 714, 715, 717, 726, 728, 729, 846, 847, 856, 860, 863, 866], "verifi": [21, 130, 200, 633, 723, 852], "verify_ssl": 200, "versa": [852, 853], "versatil": 814, "versin": 807, "version": [4, 10, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 216, 245, 399, 423, 473, 563, 687, 695, 726, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 821, 822, 826, 827, 829, 832, 833, 850, 859, 862, 869], "vert": [414, 436, 450, 454], "vertex": [6, 214, 239, 291, 303, 352, 410, 561], "vertic": [214, 303, 351, 561, 698, 852], "vh": 137, "via": [5, 11, 22, 41, 93, 113, 122, 214, 216, 234, 297, 303, 309, 392, 393, 394, 407, 427, 429, 455, 546, 547, 561, 565, 687, 691, 698, 700, 711, 712, 713, 714, 717, 720, 729, 814, 832, 833, 835, 836, 837, 838, 843, 846], "viabl": 695, "vibrat": [178, 179], "vice": [852, 853], "vid": [58, 559], "video": 137, "view": [4, 9, 43, 44, 46, 51, 74, 77, 103, 104, 246, 333, 337, 338, 456, 474, 538, 554, 559, 560, 572, 573, 606, 620, 671, 672, 674, 676, 677, 727, 729, 769, 801, 812, 818, 851, 853, 856, 859, 862, 863], "viewbackward": [389, 437], "viewbackward0": 392, "virtual": [10, 210, 444, 681, 713, 827], "visibl": [116, 130, 336, 342, 555, 632, 641], "vision": [818, 835, 864, 866], "visit": [0, 22, 217, 230, 556], "visitattr": 22, "visitor": 22, "visual": [815, 817, 856, 862], "viz_idx": 863, "vocab": [184, 856], "vocab_fil": 184, "vocab_s": [184, 856, 863], "vocabulari": [174, 184, 856], "void": 22, "vol": [240, 352], "volta": [9, 706, 791], "volum": [240, 352], "vote": 161, "vs2019": 815, "vtype": [125, 126, 385, 546, 559, 633, 716, 729, 759, 769, 802, 812], "w": [5, 21, 27, 28, 60, 87, 114, 115, 118, 119, 122, 126, 167, 250, 333, 337, 338, 342, 381, 385, 390, 391, 394, 398, 405, 406, 407, 413, 415, 418, 419, 424, 425, 538, 549, 550, 554, 648, 654, 655, 656, 657, 660, 662, 665, 666, 668, 669, 679, 700, 707, 712, 716, 720, 723, 726, 727, 744, 751, 756, 759, 763, 766, 767, 780, 785, 793, 798, 802, 804, 807, 810, 816, 817, 819, 821, 832, 833, 836, 850, 851, 853, 856, 859], "w1": [414, 819, 837], "w2": [819, 837], "w_": [406, 412, 705, 749, 790, 850, 863], "w_0": [418, 851], "w_comp": 851, "w_h": 863, "w_i": 399, "w_iou": 856, "w_j": 399, "w_k": [410, 863], "w_kcdot": 863, "w_l": [707, 751, 793], "w_new": 5, "w_o": [457, 863], "w_ocdot": 863, "w_q": 863, "w_qcdot": 863, "w_r": [418, 707, 751, 793, 851], "w_t": 386, "w_v": 863, "w_vcdot": 863, "wa": [9, 141, 158, 162, 182, 186, 191, 389, 441, 702, 817, 846, 851, 856, 863], "wai": [1, 4, 5, 126, 209, 232, 239, 250, 351, 352, 395, 400, 417, 453, 656, 657, 662, 669, 685, 689, 692, 702, 703, 710, 712, 714, 716, 721, 729, 819, 821, 835, 836, 846, 847, 853, 863], "wait": 21, "walk": [13, 217, 381, 385, 413, 548, 556, 558, 559, 560, 663, 666, 846, 847], "walk_length": [381, 558], "walkthrough": [716, 821], "wang": [850, 852, 853, 856], "want": [4, 21, 22, 41, 210, 214, 216, 217, 219, 245, 297, 473, 561, 686, 687, 692, 695, 698, 703, 709, 711, 712, 715, 717, 718, 726, 727, 729, 730, 783, 826, 827, 829, 835, 837, 839, 846, 853], "warn": [166, 827, 839, 850, 851, 852, 853, 856, 859, 862, 863], "watch": [43, 862], "wayn": 167, "wb": 847, "wc": 414, "we": [4, 6, 9, 14, 21, 22, 27, 28, 31, 41, 45, 68, 79, 82, 105, 131, 133, 137, 144, 171, 179, 180, 181, 182, 188, 207, 210, 220, 234, 240, 241, 245, 297, 314, 337, 338, 339, 351, 352, 355, 385, 386, 389, 396, 397, 398, 407, 413, 418, 430, 432, 472, 473, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 556, 561, 567, 572, 573, 638, 681, 683, 687, 691, 692, 693, 694, 695, 703, 710, 711, 712, 713, 714, 717, 718, 719, 720, 721, 725, 726, 729, 730, 779, 814, 815, 816, 817, 818, 819, 821, 822, 826, 827, 829, 832, 833, 836, 837, 838, 842, 843, 846, 847, 850, 851, 852, 853, 859, 862, 863, 868, 869], "web": [132, 155, 187, 193, 556, 662], "webkb": [155, 187, 193], "websit": [145, 167, 180, 689, 735, 775, 815], "wedg": 244, "week": 161, "weight": [5, 6, 21, 118, 119, 120, 125, 126, 145, 245, 249, 250, 297, 303, 308, 345, 346, 347, 348, 355, 381, 382, 383, 385, 386, 388, 391, 393, 398, 400, 403, 404, 405, 406, 407, 408, 410, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 441, 442, 455, 457, 473, 548, 549, 550, 556, 561, 562, 564, 629, 630, 655, 656, 657, 662, 663, 666, 694, 698, 699, 700, 708, 715, 719, 722, 725, 743, 744, 752, 758, 762, 780, 784, 785, 794, 801, 806, 816, 817, 819, 821, 836, 839, 850, 851, 853, 856, 859, 862, 863, 869], "weight1": 780, "weight2": 780, "weight_and_sum": 441, "weight_anim": 862, "weight_column": 556, "weight_decai": [719, 720, 804, 816, 851, 856], "weight_nam": [118, 119], "weighted_reduc": [827, 869], "weightedsageconv": 836, "weihua916": 165, "welcom": [21, 721, 863], "well": [4, 7, 21, 56, 96, 125, 126, 130, 173, 220, 236, 240, 552, 633, 681, 685, 686, 687, 689, 695, 696, 701, 703, 710, 712, 714, 715, 725, 726, 728, 729, 788, 810, 819, 822, 828, 835, 839, 843, 846, 850, 853, 862, 863], "were": [137, 149, 180, 182, 185, 716, 815, 859, 863], "west": [689, 735, 775], "wh": [425, 427, 708, 752, 794], "wh_": [708, 752, 794], "what": [9, 21, 22, 240, 565, 718, 729, 730, 819, 821, 826, 828, 846, 850, 856, 859, 863], "whatev": 21, "wheel": [172, 816, 817, 818, 819, 821, 826, 827, 829, 832, 833], "when": [1, 4, 10, 14, 20, 21, 22, 31, 36, 41, 48, 51, 56, 57, 68, 70, 80, 89, 125, 130, 131, 146, 157, 158, 168, 169, 173, 191, 200, 210, 213, 214, 221, 222, 223, 224, 225, 232, 235, 239, 240, 241, 242, 246, 247, 249, 287, 290, 291, 293, 297, 303, 308, 310, 314, 326, 333, 337, 338, 339, 340, 351, 352, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 410, 412, 413, 418, 420, 423, 427, 429, 430, 431, 432, 434, 474, 475, 538, 545, 555, 557, 560, 561, 562, 563, 564, 567, 568, 631, 633, 639, 641, 659, 667, 687, 692, 693, 694, 695, 699, 703, 712, 714, 715, 717, 720, 723, 724, 728, 819, 821, 829, 832, 833, 837, 838, 842, 846, 850, 852, 859, 863], "whenev": [706, 837], "whenver": 859, "where": [4, 9, 10, 14, 21, 26, 34, 45, 48, 53, 57, 58, 62, 63, 73, 79, 82, 100, 105, 120, 128, 129, 130, 131, 135, 136, 157, 159, 162, 171, 186, 210, 214, 215, 216, 219, 226, 227, 240, 243, 244, 250, 297, 305, 310, 317, 319, 330, 331, 332, 335, 336, 339, 340, 341, 342, 343, 350, 355, 386, 387, 388, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 472, 497, 498, 499, 545, 548, 556, 557, 558, 560, 563, 567, 568, 611, 612, 614, 624, 631, 643, 644, 656, 657, 660, 662, 665, 666, 667, 671, 672, 674, 676, 677, 678, 681, 687, 689, 693, 694, 695, 696, 698, 707, 710, 713, 724, 726, 727, 728, 729, 730, 792, 816, 817, 818, 819, 821, 828, 832, 833, 834, 835, 836, 837, 850, 851, 852, 853, 856, 859, 863, 868], "wherea": [852, 853], "whether": [4, 9, 10, 21, 48, 53, 54, 57, 58, 62, 63, 65, 66, 68, 117, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 210, 213, 214, 216, 219, 220, 226, 231, 234, 235, 236, 238, 240, 241, 242, 246, 287, 297, 298, 303, 308, 309, 310, 334, 342, 344, 350, 351, 352, 386, 395, 399, 400, 402, 403, 405, 406, 407, 411, 415, 417, 418, 428, 431, 434, 444, 450, 455, 474, 545, 557, 561, 562, 563, 564, 643, 644, 680, 683, 685, 690, 694, 695, 716, 717, 726, 729, 772, 776, 821, 831, 832, 833, 834, 837, 839, 852, 859, 863], "which": [0, 1, 4, 9, 10, 20, 21, 22, 32, 36, 41, 42, 51, 56, 61, 88, 92, 116, 120, 122, 130, 131, 140, 143, 146, 148, 158, 161, 162, 163, 169, 171, 178, 179, 180, 182, 183, 186, 188, 189, 190, 195, 197, 205, 210, 211, 212, 217, 219, 222, 223, 224, 225, 230, 231, 236, 240, 244, 245, 287, 289, 292, 293, 297, 300, 303, 305, 306, 308, 309, 310, 314, 317, 326, 332, 333, 336, 337, 338, 342, 343, 351, 355, 383, 386, 387, 389, 390, 392, 393, 394, 395, 397, 399, 402, 403, 405, 406, 407, 410, 413, 416, 418, 420, 424, 426, 428, 442, 443, 444, 445, 448, 451, 452, 456, 472, 473, 474, 538, 539, 546, 547, 554, 555, 556, 557, 558, 560, 563, 568, 572, 573, 610, 617, 624, 631, 632, 633, 638, 641, 643, 644, 647, 649, 654, 657, 662, 665, 666, 667, 671, 674, 679, 682, 683, 686, 687, 689, 691, 692, 694, 695, 696, 699, 700, 701, 702, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 720, 723, 724, 726, 727, 730, 794, 814, 815, 816, 821, 825, 828, 832, 833, 834, 836, 837, 842, 843, 846, 852, 853, 856, 859, 863, 868], "while": [5, 9, 22, 68, 73, 92, 114, 115, 147, 179, 197, 205, 210, 214, 240, 291, 297, 309, 318, 397, 398, 413, 424, 425, 426, 427, 428, 429, 444, 561, 563, 614, 683, 692, 693, 694, 695, 699, 707, 711, 720, 728, 819, 822, 829, 846, 852, 853, 859], "whitespac": 694, "whl": [821, 826], "who": [21, 145, 159, 691, 710, 814, 846], "whole": [173, 210, 240, 665, 695, 706, 713, 715, 719, 723, 815, 852, 863], "whom": 145, "whose": [4, 10, 54, 116, 118, 119, 121, 125, 126, 131, 221, 240, 242, 297, 299, 300, 313, 332, 336, 339, 383, 424, 474, 475, 545, 557, 572, 573, 632, 655, 656, 657, 658, 662, 695, 710, 819, 852], "why": [22, 828, 853], "wi": 414, "wide": [1, 436, 687, 730, 834], "width": [852, 862], "wiki": [192, 846], "wikic": 192, "wikipedia": [134, 149, 182, 185, 192, 577, 579, 580, 587, 610, 611, 612, 835], "wildcard": 26, "win": [116, 632, 641], "window": [183, 207, 297, 300, 313, 843], "window_s": [381, 385], "wisconsin": 193, "wise": [4, 5, 13, 73, 113, 219, 220, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 390, 449, 549, 550, 570, 571, 598, 618, 643, 644, 693, 705, 706, 708, 779, 790, 794, 818, 837, 839, 853, 863], "wish": [21, 117, 130, 710, 712, 717, 726, 814], "with_label": [852, 856, 859], "within": [4, 20, 21, 161, 209, 287, 297, 300, 305, 310, 313, 351, 354, 381, 385, 424, 425, 426, 427, 428, 429, 431, 539, 545, 693, 708, 724, 800, 819, 852, 859, 863], "without": [5, 6, 21, 27, 28, 114, 115, 116, 131, 241, 242, 245, 246, 287, 293, 297, 301, 303, 308, 322, 332, 413, 430, 432, 473, 546, 547, 550, 553, 561, 562, 563, 610, 611, 612, 624, 641, 669, 686, 687, 703, 706, 720, 728, 788, 828, 852, 856], "wm": 641, "wmt14": 863, "wn18": 191, "word": [21, 108, 135, 136, 137, 155, 180, 182, 184, 187, 193, 210, 213, 245, 383, 473, 638, 692, 834, 856, 859, 863], "word2vec": 159, "wordid": 856, "wordnet": 191, "work": [3, 4, 8, 9, 11, 21, 116, 118, 119, 188, 214, 216, 219, 293, 387, 399, 402, 403, 405, 406, 407, 410, 413, 420, 453, 556, 632, 656, 657, 658, 659, 660, 662, 663, 666, 684, 685, 696, 698, 710, 711, 713, 714, 725, 726, 730, 827, 835, 837, 839, 843, 852, 857, 859, 863, 866, 868, 869], "workaround": 853, "worker": [4, 188, 235, 291, 692, 696, 713, 738, 778, 781, 799, 843], "workflow": [834, 837], "workload": [13, 232, 239, 691, 695, 710, 723, 821, 843, 868], "workspac": [696, 740, 780, 781, 846], "workspace\ub294": 781, "workspace\uc758": 781, "world": [162, 164, 293, 695, 780, 828, 835, 859, 863], "world_siz": [827, 842, 868, 869], "would": [9, 21, 26, 89, 130, 131, 210, 214, 216, 219, 297, 302, 319, 350, 391, 399, 400, 403, 405, 406, 416, 419, 420, 438, 556, 561, 633, 643, 644, 707, 710, 712, 714, 716, 725, 726, 828, 836, 837, 839, 856, 859, 863], "wouldn": 859, "wrap": [131, 210, 211, 212, 298, 302, 715, 718, 720, 804, 827, 842, 863, 868, 869], "wrapper": [8, 21, 22, 294, 302, 315, 827, 842, 869], "writabl": 839, "write": [4, 21, 22, 309, 316, 383, 565, 641, 650, 692, 695, 705, 711, 723, 726, 780, 816, 819, 832, 833, 834, 837, 839, 840, 852, 856, 859], "write_t": 695, "writeback": 641, "writeback_map": [111, 641], "writer": 134, "written": [9, 706, 820, 826, 827, 829, 852, 863], "wrong": [21, 420], "wu": 748, "wv": 863, "www": [162, 748, 816, 817, 818, 819, 826, 827, 829, 836, 843], "x": [5, 6, 9, 21, 34, 35, 93, 94, 100, 113, 122, 132, 133, 144, 170, 183, 184, 246, 339, 349, 381, 386, 388, 390, 392, 393, 394, 395, 401, 414, 415, 417, 420, 421, 423, 430, 431, 432, 433, 434, 435, 440, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 545, 567, 607, 614, 625, 665, 666, 679, 683, 695, 700, 701, 712, 714, 715, 717, 719, 720, 726, 729, 744, 745, 755, 756, 757, 758, 760, 766, 769, 785, 786, 797, 798, 800, 801, 803, 804, 810, 812, 815, 816, 817, 818, 819, 821, 826, 827, 829, 835, 846, 847, 850, 856, 859, 862, 863, 869], "x1": [339, 567, 606, 617, 821], "x2": [339, 567, 606, 617, 821], "x64": 815, "x86_64": 843, "x_": [339, 414, 430, 432, 498, 567, 570, 821], "x_0": 414, "x_1": [414, 821], "x_2": [414, 821], "x_c": 414, "x_dst": [383, 757, 800], "x_e": [499, 570], "x_i": [401, 410, 412, 414, 436, 665, 821, 863], "x_j": [401, 410, 821, 856, 863], "x_sign": 817, "x_size": 856, "x_src": 383, "x_type": 386, "x_u": [498, 499, 571, 705, 749, 790], "x_uv": 859, "x_v": [498, 499, 571, 705, 749, 790], "xavier": [382, 403, 405, 406, 419, 420], "xavier_normal_": 853, "xavier_uniform_": [10, 426, 428, 453, 719, 722, 762, 806, 851], "xcode": 815, "xend": 863, "xeon": [720, 842], "xi": [245, 473, 817], "xlabel": 862, "xrightarrow": 647, "xtick": 862, "xuv": 859, "xv1": 821, "xv2": 821, "xw_t": 386, "xxx": [0, 694, 739, 780], "xxx_edg": [694, 780], "xxx_node": [694, 780], "xxx_note": 780, "xxx_stat": [694, 780], "xxx\ub294": 780, "y": [9, 21, 120, 184, 244, 245, 343, 381, 386, 424, 425, 442, 445, 455, 472, 473, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 700, 714, 715, 719, 720, 726, 744, 755, 757, 766, 785, 797, 800, 804, 810, 815, 817, 819, 821, 826, 827, 835, 837, 856, 862, 869], "y1": 9, "y_": [245, 339, 430, 432, 473, 567, 729, 769, 812, 837], "y_dst": 383, "y_hat": [712, 719, 818, 819, 827, 869], "y_i": [827, 869], "y_pred": 818, "y_true": 818, "y_u": [244, 343, 472], "y_v": [120, 244, 343, 472], "yaml": [148, 309, 314, 830], "yaml_cont": [832, 833], "yaml_data": 309, "yandex": 180, "ye": [856, 863], "year": [695, 698], "yellow": 828, "yelp": [162, 163, 194], "yet": [4, 713, 843], "yield": [220, 290, 404, 414, 638, 639, 712, 717, 828, 829, 838, 853], "ying": 556, "yingtongd": 162, "yiran": 748, "yizhou": 72, "ylabel": 862, "you": [6, 9, 14, 21, 22, 26, 89, 114, 118, 119, 130, 131, 186, 210, 213, 214, 216, 217, 219, 287, 293, 332, 414, 420, 560, 561, 562, 563, 633, 683, 686, 687, 700, 706, 711, 712, 713, 715, 716, 717, 725, 726, 729, 730, 733, 773, 814, 815, 817, 820, 821, 823, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 843, 846, 847, 851, 852, 853, 854, 856, 859, 860, 862, 863, 866, 868, 869], "your": [6, 8, 9, 21, 118, 119, 145, 164, 166, 175, 177, 178, 179, 183, 184, 683, 689, 692, 706, 710, 711, 713, 714, 715, 716, 721, 725, 726, 730, 775, 828, 829, 834, 837, 840, 843, 859, 863], "yu": [850, 851, 852, 859], "yum": 815, "yyi": 0, "z": [9, 178, 391, 817, 852, 853, 863], "z2": 853, "z_": 355, "z_e": 570, "z_i": [389, 391, 853], "z_j": [389, 853], "z_list": 852, "z_v": [571, 852], "zachari": [167, 839], "zero": [4, 27, 28, 30, 43, 46, 70, 74, 89, 93, 103, 108, 113, 114, 115, 118, 119, 120, 122, 125, 130, 150, 178, 179, 210, 235, 240, 249, 297, 305, 310, 325, 340, 349, 387, 397, 399, 402, 403, 405, 406, 407, 410, 412, 413, 416, 420, 443, 447, 449, 453, 454, 455, 477, 478, 479, 480, 482, 483, 484, 485, 501, 503, 504, 505, 506, 509, 510, 511, 512, 517, 518, 519, 520, 523, 524, 525, 526, 555, 562, 563, 575, 576, 579, 580, 591, 592, 593, 595, 596, 597, 598, 599, 604, 606, 611, 612, 613, 614, 618, 620, 624, 626, 628, 631, 633, 639, 640, 641, 643, 644, 659, 667, 679, 681, 687, 692, 694, 695, 703, 713, 720, 723, 725, 726, 727, 738, 747, 755, 757, 765, 766, 778, 780, 788, 797, 800, 809, 810, 817, 821, 837, 839, 846, 852, 856, 859, 862, 863], "zero_grad": [381, 385, 424, 425, 426, 427, 428, 429, 691, 711, 712, 715, 717, 719, 720, 726, 728, 729, 730, 737, 755, 756, 758, 760, 766, 768, 769, 770, 777, 797, 798, 801, 803, 804, 810, 811, 812, 813, 816, 817, 818, 819, 826, 827, 829, 834, 836, 837, 838, 846, 847, 850, 851, 852, 853, 856, 868, 869], "zero_initi": 859, "zeros_lik": [755, 797, 847], "zhang": [748, 850, 851, 852, 853, 856, 859, 862, 863], "zhao": [856, 862], "zheng": [850, 851, 852, 853, 856, 859, 862, 863], "zhiyu": 748, "zhiyuchen": 748, "zhjwy9343": 748, "zhou": [862, 863], "zihao": [856, 863], "zinc": 195, "zip": [165, 168, 172, 186, 686, 689, 714, 715, 719, 735, 773, 775, 816, 817, 819, 826, 827, 829, 846, 847, 852, 862, 869], "zpve": [178, 179], "\u4e00\u4e2a\u4e8c\u5206\u56fe": 747, "\u4e00\u4e2a\u4ec5\u5e73\u8861\u56fe\u4e2d\u8282\u70b9": 739, "\u4e00\u4e2a\u53ef\u9009\u9879\u662f\u7528\u6237\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u793a\u4f8b\u68c0\u67e5\u4e0b\u8f7d\u540e\u6587\u4ef6\u7684sha": 733, "\u4e00\u4e2a\u540c\u6784\u56fe": 747, "\u4e00\u4e2a\u56fe\u6279\u6b21\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u5f20\u5927\u56fe": 768, "\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e0c\u671b": 769, "\u4e00\u4e2a\u5b50\u56fe\u5bf9\u5e94\u4e00\u79cd\u5173\u7cfb": 747, "\u4e00\u4e2a\u5e94\u7528\u4e8e": 751, "\u4e00\u4e2a\u5f02\u6784\u56fe\u7531\u4e00\u7cfb\u5217\u5b50\u56fe\u6784\u6210": 747, "\u4e00\u4e2a\u5f02\u6784\u56fe\u793a\u4f8b": 747, "\u4e00\u4e2a\u6279\u6b21\u4e2d\u4e0d\u540c\u7684\u56fe\u662f\u5b8c\u5168\u5206\u5f00\u7684": 768, "\u4e00\u4e2a\u662f\u8fb9\u7684\u96c6\u5408": 742, "\u4e00\u4e2a\u6709\u6548\u7684\u56fe\u540d\u79f0\u5e94\u8be5\u4ec5\u5305\u542b\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf": 739, "\u4e00\u4e2a\u6b63\u6837\u672c\u56fe": 758, "\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fd0\u7b97\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u51fd\u6570": 767, "\u4e00\u4e2a\u7528\u4e8e\u6307\u5b9a": 750, "\u4e00\u4e2a\u7528\u4e8e\u6307\u793a\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7684\u5b57\u6bb5\u540d": 750, "\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5d4c\u5165": 738, "\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b": 751, "\u4e00\u4e2a\u805a\u5408\u51fd\u6570\u548c\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570": 750, "\u4e00\u4e2a\u8d1f\u6837\u672c\u56fe": 758, "\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u805a\u5408\u64cd\u4f5c\u5305\u62ec": 750, "\u4e00\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u805a\u5408\u51fd\u6570": 762, "\u4e00\u53f0\u673a\u5668\u53ef\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b": 737, "\u4e00\u662f\u8282\u70b9\u7684\u96c6\u5408": 742, "\u4e00\u6761\u8fb9": 742, "\u4e00\u6761\u94fe\u8def0": 743, "\u4e00\u6837": 738, "\u4e00\u6b21\u6027\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684": 766, "\u4e00\u76f4\u5230\u8f93\u5165": 754, "\u4e00\u79cd\u5b58\u50a8\u5f02\u6784\u56fe\u7684\u5e38\u89c1\u65b9\u6cd5\u662f\u5728\u4e0d\u540c\u7684csv\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 747, "\u4e00\u822c\u6765\u8bf4": 750, "\u4e00\u822c\u6d41\u7a0b\u662f": 768, "\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u591a\u5c42gnn\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 766, "\u4e0a\u56fe\u4e2d\u9690\u53bb\u4e86\u548c\u8ba1\u7b97\u4e0d\u76f8\u5173\u7684\u8fb9": 755, "\u4e0a\u7684\u5206\u5e03\u5f0f\u90bb\u5c45\u91c7\u6837\u63d0\u4f9b\u4e86": 738, "\u4e0a\u7684\u7279\u5f81\u4e3a": 749, "\u4e0a\u7684\u7684\u7279\u5f81\u4e3a": 749, "\u4e0a\u7684\u8282\u70b9": 755, "\u4e0a\u7684\u8bad\u7ec3\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u6a21\u578b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 770, "\u4e0a\u8c03\u7528\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570": 738, "\u4e0a\u8fd0\u884c": 738, "\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u4e3a\u5904\u7406\u5f02\u6784\u56fe\u8ba1\u7b97\u7684\u4e3b\u8981\u903b\u8f91": 764, "\u4e0a\u8ff0\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u4e3a": 750, "\u4e0a\u9762\u4ee3\u7801\u91cc\u7684": 762, "\u4e0a\u9762\u7684dataloader\u4e00\u6b21\u8fed\u4ee3\u4f1a\u751f\u6210\u4e09\u4e2a\u8f93\u51fa": 760, "\u4e0a\u9762\u7684dgl": 760, "\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230": 733, "\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e00\u4e2a": 733, "\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408\u7684\u8ba1\u7b97": 763, "\u4e0b\u4f8b\u7684\u8f93\u51fa\u8282\u70b9\u5305\u542b\u4e86\u6ca1\u6709\u5165\u8fb9\u7684\u5b64\u7acb\u8282\u70b9": 755, "\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u8282\u70b98\u4e3a\u79cd\u5b50\u8282\u70b9\u65f6\u7b2c\u4e8c\u4e2agnn\u5c42\u6240\u9700\u7684\u5757": 755, "\u4e0b\u56fe\u663e\u793a\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\u53ca\u5b83\u4eec\u95f4\u7684\u76f8\u4e92\u4f5c\u7528": 737, "\u4e0b\u6587\u5c55\u793a\u4e86sageconv\u793a\u4f8b\u4e2d\u7684": 763, "\u4e0b\u6587\u662f\u5728\u4e00\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 769, "\u4e0b\u6587\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u4f8b\u5b50": 755, "\u4e0b\u7684\u76ee\u5f55": 733, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": [731, 748], "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e\u96c6\u7684url": 732, "\u4e0b\u8f7d\u6587\u4ef6": 733, "\u4e0b\u9762\u4e2d\u4f7f\u7528": 735, "\u4e0b\u9762\u4ee5": 735, "\u4e0b\u9762\u4f7f\u7528": 735, "\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684": 735, "\u4e0b\u9762\u5c55\u793a\u4e86\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684\u793a\u4f8b": 740, "\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50": 747, "\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u901a\u8fc7\u5bf9\u8282\u70b9\u7279\u5f81\u964d\u7ef4\u6765\u51cf\u5c11\u6d88\u606f\u7ef4\u5ea6\u7684\u793a\u4f8b": 751, "\u4e0b\u9762\u662f\u4f7f\u7528\u70b9\u79ef\u8ba1\u7b97\u8fb9\u5f97\u5206\u7684\u4f8b\u5b50": 769, "\u4e0b\u9762\u662f\u901a\u8fc7\u4f7f\u7528\u51c6\u786e\u6027\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u4e00\u4e2a\u4f8b\u5b50": 770, "\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u4e13\u95e8\u7528\u4e8e\u5728\u90bb\u5c45\u91c7\u6837\u65f6\u5220\u9664\u5c0f\u6279\u6b21\u7684\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u53cd\u5411\u8fb9": 756, "\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 770, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f": 759, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u5728dgl\u4e2d\u521b\u5efa\u5f02\u6784\u56fe\u7684\u793a\u4f8b": 747, "\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4f7f\u7528\u4e86": 746, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b": 732, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e00\u4e2a\u62e5\u6709": 766, "\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe": 769, "\u4e0b\u9762\u7684\u52a8\u753b\u5c55\u793a\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b": 757, "\u4e0b\u9762\u7684\u6d41\u7a0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6a21\u7248\u7684\u5de5\u4f5c\u65b9\u5f0f": 732, "\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u4fdd\u5b58\u548c\u8bfb\u53d6\u56fe\u548c\u6570\u636e\u96c6\u4fe1\u606f\u7684\u5217\u8868": 736, "\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8bad\u7ec3\u96c6\u62c6\u5206": 738, "\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5\u7684\u793a\u4f8b": 758, "\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e": [758, 760], "\u4e0d\u540c\u540d\u79f0\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u5f62\u72b6": 744, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u5355\u72ec\u7684id": 747, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e38\u5e38\u5177\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5c5e\u6027": 752, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6216\u5927\u5c0f": 747, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6709\u5355\u72ec\u7684id": 747, "\u4e0d\u5fc5\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5": 747, "\u4e0d\u662fpytorch\u7684nn\u6a21\u5757": 738, "\u4e0d\u80fd\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u5b50\u96c6": 744, "\u4e0d\u8fc7": 746, "\u4e0d\u8fc7\u5927\u90e8\u5206\u7684dgl": 746, "\u4e0e": [737, 738], "\u4e0e\u4e0d\u5b58\u5728\u7684\u8fb9": 758, "\u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c": 768, "\u4e0e\u540c\u6784\u56fe\u7684\u60c5\u51b5\u7c7b\u4f3c": 747, "\u4e0e\u5f02\u6784\u56fe\u76f8\u5173\u8054\u7684": 747, "\u4e0e\u6574\u56fe\u5206\u7c7b\u4e0d\u540c": 735, "\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92": 737, "\u4e0e\u6b64\u540c\u65f6": 739, "\u4e0e\u8fb9\u7279\u5f81": 750, "\u4e0e\u901a\u5e38\u4ee5\u5f20\u91cf\u4e3a\u53c2\u6570\u7684pytorch": 763, "\u4e0e\u91c7\u6837\u5668\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u5c0f\u6279\u6b21\u6570\u636e": 737, "\u4e0e\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5668\u8fde\u63a5\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u5b83\u4eec": 738, "\u4e14\u53ea\u8003\u8651\u5e73\u5747\u805a\u5408\u51fd\u6570\u7684\u60c5\u51b5": 759, "\u4e14\u663e\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u5b58\u50a8\u7684\u8bbe\u5907\u4fe1\u606f": 746, "\u4e24\u4e2a\u51fd\u6570\u5728\u53d8\u6362\u540e\u7684\u56fe\u4e0a\u91cd\u65b0\u52a0\u5165\u6279\u6b21\u4fe1\u606f": 768, "\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684numpy\u6570\u7ec4\u4f1a\u5f88\u5927": 739, "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9\u7684\u8054\u7cfb": 756, "\u4e24\u540d\u4f5c\u8005\u53ef\u4ee5\u5728\u4e0d\u540c\u5e74\u4efd\u5171\u540c\u7f72\u540d\u6587\u7ae0": 742, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b": 766, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 766, "\u4e2a\u4eba\u59d3\u540d": 748, "\u4e2a\u4eba\u94fe\u63a5": 748, "\u4e2a\u5bf9\u5e94\u7684\u8d1f\u91c7\u6837\u6837\u672c": 769, "\u4e2a\u8282\u70b9\u6216\u8fb9": 746, "\u4e2a\u8282\u70b9\u7684\u56fe\u4e0a\u8fd0\u884c\u7684": 754, "\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 758, "\u4e2d": [733, 735, 736, 742, 743, 747, 760], "\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u6574\u56fe\u4e0a\u8bad\u7ec3\u4e00\u4e2a2\u5c42\u7684rgcn\u6a21\u578b": 760, "\u4e2d\u4ecb\u7ecd\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 765, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6cd5\u548c": 765, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236": 770, "\u4e2d\u521b\u5efa": 738, "\u4e2d\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801": 735, "\u4e2d\u5904\u7406\u6bcf\u4e2a\u6570\u636e\u5b9e\u4f8b\u662f\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5": 736, "\u4e2d\u5b58\u50a8\u7ed3\u679c": 750, "\u4e2d\u5b9a\u4e49\u7684": 766, "\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u96c6\u7684\u57fa\u7c7b": 732, "\u4e2d\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u6d88\u606f\u51fd\u6570\u548c\u805a\u5408\u51fd\u6570\u4f5c\u4e3a": 750, "\u4e2d\u5df2\u7ecf\u6709\u4e86": 770, "\u4e2d\u6240\u4ecb\u7ecd\u7684": 758, "\u4e2d\u6240\u8ff0\u7684\u5168\u56fe\u8bad\u7ec3": 754, "\u4e2d\u6240\u8ff0\u7684\u8fb9\u56de\u5f52\u6a21\u578b\u76f8\u540c": 769, "\u4e2d\u6240\u91c7\u6837\u7684\u8282\u70b9": 769, "\u4e2d\u627e\u5230": 735, "\u4e2d\u6307\u5b9a": 739, "\u4e2d\u6307\u5b9a\u66f4\u65b0\u51fd\u6570": 750, "\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 740, "\u4e2d\u6587\u7248": [684, 685, 686, 688, 689, 690, 691, 692, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730], "\u4e2d\u6587\u7248\u94fe\u63a5": 814, "\u4e2d\u662f\u5426\u5b58\u6709\u5904\u7406\u540e\u7684\u6570\u636e": 732, "\u4e2d\u67e5\u770b\u5f02\u6784\u56fe\u5377\u79ef": 770, "\u4e2d\u6807\u8bc6\u8282\u70b9\u6570\u636e": 738, "\u4e2d\u7684": 738, "\u4e2d\u7684\u4e00\u4e2a": 752, "\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20": 760, "\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9": 747, "\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801": 735, "\u4e2d\u7684\u4f8b\u5b50": 770, "\u4e2d\u7684\u505a\u6cd5\u7c7b\u4f3c": 770, "\u4e2d\u7684\u5206\u533a\u6570\u636e\u548c\u76f8\u5173\u6587\u4ef6": 740, "\u4e2d\u7684\u5b57\u6bb5\u540d": 750, "\u4e2d\u7684\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 768, "\u4e2d\u7684\u7279\u5f81\u6765\u52a0\u8f7d\u6807\u7b7e": 760, "\u4e2d\u7684\u8fb9": 747, "\u4e2d\u8282\u70b9\u7684\u96c6\u5408": 768, "\u4e2d\u95f4\u67d0\u4e00\u5c42\u5bf9\u5e94\u7684\u8fb9\u754c\u9700\u8981\u5305\u542b\u8be5\u5c42\u53ca\u6240\u6709\u540e\u7eed\u5c42\u8ba1\u7b97\u6d89\u53ca\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 755, "\u4e2d\u95f4\u6d88\u606f": 750, "\u4e3a\u4e86\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "\u4e3a\u4e86\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u83b7\u5f97\u5e73\u8861\u7684\u5de5\u4f5c\u8d1f\u8f7d": 739, "\u4e3a\u4e86\u5904\u7406\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u56fe\u6570\u636e\u96c6": 732, "\u4e3a\u4e86\u5b8c\u6210\u5355\u4e2a\u56fe\u7684\u9884\u6d4b": 768, "\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684": 747, "\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b": 770, "\u4e3a\u4e86\u5e76\u884c\u5316\u8ba1\u7b97": 737, "\u4e3a\u4e86\u6307\u4ee3\u591a\u6761\u8fb9": 746, "\u4e3a\u4e86\u8bbe\u7f6e": 747, "\u4e3a\u4e86\u968f\u673a": 760, "\u4e3a\u4f8b": 735, "\u4e3a\u540e\u7eed\u5728\u56fe\u4e0a\u8fdb\u884c\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u7684\u6027\u80fd\u6539\u5584\u63d0\u4f9b\u53ef\u80fd": 735, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": [748, 754, 760], "\u4e3a\u5f02\u6784\u56fe\u4fee\u6539gnn\u6a21\u5757\u7684\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684": 759, "\u4e3a\u5f02\u6784\u56fe\u751f\u6210\u8fb9\u754c\u4e0e\u4e3a\u540c\u6784\u56fe\u751f\u6210\u8fb9\u754c\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c": 755, "\u4e3a\u63d0\u5347\u6570\u636e\u52a0\u8f7d\u901f\u5ea6": 768, "\u4e3a\u6709\u5411\u56fe": 755, "\u4e3a\u67d0\u4e00\u79cd\u8fb9\u7c7b\u578b": 769, "\u4e3a\u6b64": [755, 758], "\u4e3a\u7b80\u4fbf\u8d77\u89c1": 735, "\u4e3a\u7b80\u5355\u8d77\u89c1": 760, "\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0\u7684id": 739, "\u4e3b\u8981\u539f\u56e0\u662fpytorch": 738, "\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u8fd0\u884c\u91c7\u6837api\u4ee5\u652f\u6301\u5c0f\u6279\u91cf\u8bad\u7ec3": 738, "\u4e3b\u8ba1\u7b97\u673a": 740, "\u4e4b\u524d\u58f0\u660e\u5206\u5e03\u5f0f\u5d4c\u5165": 738, "\u4e4b\u524d\u88ab\u58f0\u660e": 738, "\u4e4b\u524d\u8c03\u7528": 738, "\u4e4b\u540e": 763, "\u4e4b\u95f4\u5206\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e0e": 769, "\u4e4b\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684": 769, "\u4e4b\u95f4\u7684\u5173\u7cfb": 742, "\u4e4b\u95f4\u7684\u5f97\u5206": 769, "\u4e4b\u95f4\u7684\u5f97\u5206\u8981\u9ad8\u4e8e": 769, "\u4e58\u4ee52\u5f97\u5230\u6700\u7ec8\u7ed3\u679c": 750, "\u4e5f\u53ef\u4ee5\u5728\u4e0d\u6d89\u53ca\u6d88\u606f\u4f20\u9012\u7684\u60c5\u51b5\u4e0b": 750, "\u4e5f\u53ef\u4ee5\u662f\u6709\u5411\u7684": 742, "\u4e5f\u5c06\u5728gpu\u4e0a": 745, "\u4e5f\u5c31\u662f\u8bf4": 738, "\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u7ea7\u522b\u7684\u91c7\u6837api": 738, "\u4e5f\u63d0\u4f9b\u4e86": 738, "\u4e5f\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 756, "\u4e5f\u79f0\u4e3a": 750, "\u4e86\u89e3\u4e86\u4e0a\u8ff0\u8ba1\u7b97\u89c4\u5219\u540e": 768, "\u4e8c\u5206\u56fe\u662f\u4e00\u7c7b\u7279\u6b8a\u7684": 742, "\u4e8c\u5206\u56fe\u7684\u60c5\u51b5": 763, "\u4ea4\u53c9\u71b5\u635f\u5931": 769, "\u4eba\u4eec\u81ea\u7136\u4f1a\u60f3\u8981\u5728\u6a21\u578b\u5f00\u53d1\u4e2d\u4f7f\u7528\u5b83\u4eec": 767, "\u4ec5\u4ec5\u4fdd\u7559\u4e86\u8f93\u51fa\u8282\u70b9\u6240\u9700\u8981\u6536\u96c6\u6d88\u606f\u7684\u8fb9": 755, "\u4ec5\u5141\u8bb8\u4f7f\u7528\u6570\u503c\u7c7b\u578b": 744, "\u4ec5\u6709\u7684\u4ee3\u7801\u4fee\u6539\u51fa\u73b0\u5728\u7b2c4": 737, "\u4ecd\u7136\u5177\u6709\u76f8\u540c\u7684\u7ed3\u679c": 768, "\u4ece": [732, 755], "\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230": 755, "\u4ece\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa": 755, "\u4ece\u5185\u5b58\u89d2\u5ea6\u6765\u8bf4\u662f\u9ad8\u6548\u7684": 751, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [735, 741, 746, 748], "\u4ece\u5de6\u81f3\u53f3": 768, "\u4ece\u6210\u5bf9\u7684\u8fb9": 743, "\u4ece\u7528\u4e8e\u56fe\u548c\u7a00\u758f\u77e9\u9635\u7684\u5916\u90e8python\u5e93": 743, "\u4ece\u76ee\u5f55": 736, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe\u6570\u636e": 743, "\u4ece\u800c\u4ea7\u751f\u5305\u542b\u8fb9\u5c0f\u6279\u6b21\u7684\u5b50\u56fe\u4ee5\u53ca\u4f9b\u4e0b\u6587\u4e2d\u6a21\u5757\u4f7f\u7528\u7684": 756, "\u4ece\u800c\u4ee5\u5c0f\u6279\u6b21\u904d\u5386\u6574\u4e2a\u56fe\u6570\u636e\u96c6": 768, "\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u7f51\u7edc\u901a\u4fe1": 739, "\u4ece\u800c\u5b8c\u6210\u540e\u5411\u4f20\u64ad": 770, "\u4ece\u800c\u5bfc\u81f4\u591a\u6b21\u521b\u5efa\u548c\u5220\u9664": 738, "\u4ece\u800c\u8fdb\u4e00\u6b65\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u5e76\u8282\u7701\u5185\u5b58\u5360\u7528": 751, "\u4ece\u8f93\u51fa\u5f00\u59cb": 754, "\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u6d88\u606f\u4f20\u9012\u5747\u4f7f\u7528": 763, "\u4ee3\u7801\u5b9e\u73b0\u7684\u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u8c03\u7528": 756, "\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u8bfb": 759, "\u4ee3\u7801\u91cc\u79fb\u9664\u4e86\u5f52\u4e00\u5316": 759, "\u4ee3\u8868\u8ba1\u7b97": 760, "\u4ee5\u4e0a3\u79cd\u56fe\u7c7b\u578b\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684": 763, "\u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u73b0\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684": 751, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u5f20\u91cf": 738, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e862\u4e2a\u8282\u70b9\u7279\u5f81": 744, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u6570\u636e\u52a0\u8f7d\u5668": 756, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u7684": 760, "\u4ee5\u4e0b\u4ee3\u7801\u5728\u6ce8\u91ca\u91cc\u4fdd\u7559\u4e86\u6574\u56fe\u5b9e\u73b0\u7684\u8bed\u53e5": 759, "\u4ee5\u4e0b\u4ee3\u7801\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50": 767, "\u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728": 733, "\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4e3a": 734, "\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a\u53d6\u5e73\u5747\u503c\u5e76\u6c42\u548c": 768, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u4e3a\u4ecescipy\u7a00\u758f\u77e9\u9635\u548cnetworkx\u56fe\u521b\u5efadgl\u56fe\u7684\u793a\u4f8b": 743, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5b9e\u73b0\u4e86\u901a\u8fc7\u5408\u5e76\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5168\u8fde\u63a5\u5c42\u6765\u9884\u6d4b\u8fb9\u7684\u5f97\u5206": 756, "\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u56fe\u7528\u4e8e\u6f14\u793a\u8fb9\u5206\u7c7b": 766, "\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e86": 766, "\u4ee5\u4e0b\u4ee3\u7801\u7531\u4e8e\u8f93\u51fa\u8282\u70b9\u672a\u8986\u76d6\u6240\u6709\u8fd9\u4e9b\u8282\u70b9": 755, "\u4ee5\u4e0b\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u5206\u5e03\u5f0f\u65b9\u5f0f\u8bad\u7ec3graphsage\u7684\u793a\u4f8b": 737, "\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86": 768, "\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u4e86\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f": 731, "\u4ee5\u4e0b\u56fe\u4e3a\u4f8b": 755, "\u4ee5\u4e0b\u5c0f\u8282\u5c06\u9010\u4e00\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4": 760, "\u4ee5\u4e0b\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9\u5747\u5300\u91c7\u68375\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 758, "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50": 752, "\u4ee5\u4e0b\u793a\u4f8b\u5c06\u8bad\u7ec3\u96c6\u5185\u548c\u8bad\u7ec3\u96c6\u5916\u7684\u8282\u70b9\u770b\u4f5c\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 739, "\u4ee5\u4e0b\u9762\u7528\u4e8e\u5168\u56fe\u7684gnn\u6a21\u5757\u4e3a\u4f8b": 759, "\u4ee5\u4e0b\u9762\u7684\u81ea\u5b9a\u4e49\u56fe\u5377\u79ef\u6a21\u5757\u4ee3\u7801\u4e3a\u4f8b": 759, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u5b50\u56fe\u7ed3\u6784": 739, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8282\u70b9\u7279\u5f81": 739, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8fb9\u7279\u5f81": 739, "\u4ee5\u4fbf\u533a\u5206": 756, "\u4ee5\u4fbf\u5b83\u4e5f\u53ef\u4ee5\u5728\u5f02\u6784\u56fe\u4e0a\u4f7f\u7528": 755, "\u4ee5\u4fbf\u6bcf\u4e2a\u8bad\u7ec3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bad\u7ec3\u96c6\u5b50\u96c6": 738, "\u4ee5\u50a8\u5b58\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u5c5e\u6027": 744, "\u4ee5\u5145\u5206\u5229\u7528": 763, "\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f": 770, "\u4ee5\u53ca": 737, "\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97": 741, "\u4ee5\u53ca\u53ef\u5b9a\u5236\u7684\u805a\u5408\u51fd\u6570\u548c\u975e\u7ebf\u6027\u51fd\u6570": 770, "\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5e26\u6709\u6d88\u606f\u4f20\u9012\u7684gnn\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282": 770, "\u4ee5\u53ca\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u5728\u5c0f\u6279\u6b21\u6570\u636e\u4e0a\u8fdb\u884c\u8bc4\u4f30\u548c\u63a8\u7406\u6a21\u578b\u7684\u7528\u6237": 754, "\u4ee5\u53ca\u628a\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u7684\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u540e\u7684\u5355\u4e00\u8fb9\u7c7b\u578b": 766, "\u4ee5\u53ca\u6765\u81ea\u8f93\u5165\u8282\u70b9\u7684\u8868\u793a\u5982\u4f55\u4f20\u64ad\u5230\u8f93\u51fa\u8282\u70b9": 760, "\u4ee5\u53ca\u7531\u5c0f\u6279\u6b21\u8fb9\u5bfc\u51fa\u7684\u539f\u59cb\u56fe\u7684\u5b50\u56fe": 756, "\u4ee5\u53ca\u8ba1\u7b97\u5176\u4e24\u7aef\u8282\u70b9\u8868\u793a\u6240\u9700\u7684\u5757\u5217\u8868": 756, "\u4ee5\u53ca\u8bf8\u5982\u7c7b\u522b\u6570": 732, "\u4ee5\u53ca\u8d1f\u91c7\u6837\u5668": 758, "\u4ee5\u53ca\u8fb9\u7684\u6807\u7b7e": 766, "\u4ee5\u591a\u5c42gcn\u4e3a\u4f8b": 760, "\u4ee5\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206": 735, "\u4ee5\u5c06\u4efb\u4f55\u8fb9\u754c\u8f6c\u6362\u4e3a\u5757": 755, "\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u7ec4\u8fb9\u8fdb\u884c\u8fed\u4ee3": 756, "\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u548c\u7f51\u7edc\u901a\u4fe1": 737, "\u4ee5\u652f\u6301\u9700\u8981\u8282\u70b9\u5d4c\u5165\u7684\u76f4\u63a8": 738, "\u4ee5\u67e5\u770b\u5982\u4f55\u4ece\u5916\u90e8\u6570\u636e\u6e90\u6784\u5efa\u56fe\u7684\u5b8c\u6574\u6307\u5357": 735, "\u4ee5\u6982\u7387p\u968f\u673a\u9009\u62e9\u8fb9": 755, "\u4ee5\u7a81\u51fa\u5c55\u793a\u7528\u4e8e\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 735, "\u4ee5\u83b7\u5f97": 735, "\u4ee5\u8868\u683c\u683c\u5f0f\u50a8\u5b58\u8282\u70b9": 743, "\u4ee5\u8bbf\u95ee\u7fa4\u96c6\u4e2d\u7684\u5206\u533a\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 738, "\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 738, "\u4ee5\u8fdb\u884c\u8fed\u4ee3": 735, "\u4ee5\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 755, "\u4ee5\u907f\u514d\u91c7\u6837\u6240\u5e26\u6765\u7684\u968f\u673a\u6027": 757, "\u4ee5\u9632\u4f5c\u8005\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u66f4\u6539\u4e86\u6587\u4ef6": 733, "\u4efb\u4f55\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u4ee5\u7528\u4f5c\u8fb9\u754c": 755, "\u4efb\u4f55\u6d89\u53cagpu\u56fe\u7684\u64cd\u4f5c\u90fd\u662f\u5728gpu\u4e0a\u8fd0\u884c\u7684": 745, "\u4efb\u52a1": 769, "\u4efb\u52a1\u52a0\u8f7d\u6570\u636e\u96c6": 734, "\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u4e00\u6b65\u805a\u5408": 764, "\u4f1a\u6839\u636eip\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u5bf9\u5e94\u7684\u8ba1\u7b97\u673a\u6765\u5b58\u50a8\u56fe\u5206\u533a": 740, "\u4f1a\u7ed3\u5408\u805a\u5408\u540e\u7684\u6d88\u606f\u548c\u8282\u70b9\u672c\u8eab\u7684\u7279\u5f81\u6765\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 749, "\u4f1a\u805a\u5408\u8282\u70b9\u63a5\u53d7\u5230\u7684\u6d88\u606f": 749, "\u4f1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684": 764, "\u4f1a\u975e\u5e38\u6d88\u8017\u8d44\u6e90": 757, "\u4f20\u7ed9": 739, "\u4f46\u4e0d\u540c\u7684\u662f": 768, "\u4f46\u4e0d\u652f\u6301\u4e00\u4e9b\u8ba1\u7b97\u8fd0\u7b97\u7b26": 738, "\u4f46\u5176\u57fa\u672c\u601d\u60f3\u548c\u672c\u7ae0\u63cf\u8ff0\u7684\u6d41\u7a0b\u662f\u4e00\u81f4\u7684": 766, "\u4f46\u53ea\u5bf9\u4e00\u5c42\u8fdb\u884c\u8ba1\u7b97": 757, "\u4f46\u5b83\u6bcf\u6b21\u53ea\u4e3a\u4e00\u5c42\u8fdb\u884c\u91c7\u6837": 757, "\u4f46\u662f": [755, 763], "\u4f46\u662f\u4efb\u4f55\u62e5\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u7528\u4f5c\u8fb9\u754c": 755, "\u4f46\u6709\u65f6\u7528\u6237\u8fd8\u662f\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668": 755, "\u4f46\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe\u5bf9\u8c61": 734, "\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u660e\u663e\u7684\u533a\u522b": 756, "\u4f4d\u4e8e\u8282\u70b9\u5217\u8868\u7684\u6700\u524d\u9762": 763, "\u4f4d\u6216": 746, "\u4f4d\u6574\u6570": 746, "\u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u8282\u70b9id\u548c\u8fb9id": 746, "\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03": 766, "\u4f5c\u4e3a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684dgl": 761, "\u4f5c\u4e3a\u5165\u53c2": 758, "\u4f5c\u4e3a\u53c2\u6570": 760, "\u4f5c\u4e3a\u6f14\u793a\u7684\u6837\u4f8b\u4ee3\u7801": 770, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e": 738, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e\u4e4b\u4e00\u6dfb\u52a0\u5230": 738, "\u4f5c\u4e3a\u8282\u70b9\u8868\u793a\u8ba1\u7b97\u6a21\u578b\u4ee5\u53ca\u524d\u4e00\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684": 766, "\u4f5c\u4e3a\u8f93\u5165": 755, "\u4f5c\u4e3a\u8fb9\u9884\u6d4b\u6a21\u578b": 766, "\u4f5c\u5f0a": 756, "\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9": 735, "\u4f7f\u7528": 738, "\u4f7f\u7528dgl": 768, "\u4f7f\u7528int32\u6784\u5efa\u56fe": 746, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": [731, 748], "\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 750, "\u4f7f\u7528\u5e73\u5747\u8bfb\u51fa\u8ba1\u7b97\u56fe\u8868\u793a": 768, "\u4f7f\u7528\u5e95\u5c42api\u65f6": 738, "\u4f7f\u7528\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 770, "\u4f7f\u7528\u6240\u6709\u8282\u70b9": 770, "\u4f7f\u7528\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 770, "\u4f7f\u7528\u6709\u5411\u7684networkx\u56fe": 743, "\u4f7f\u7528\u6a21\u578b\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u8282\u70b9\u7c7b\u578b\u548c\u6570\u636e\u7279\u5f81\u7684\u5b57\u5178": 766, "\u4f7f\u7528\u8be5\u540d\u79f0\u6765\u8bc6\u522b\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u56fe": 739, "\u4f7f\u7528\u8d1f\u91c7\u6837\u65b9\u6cd5\u540e": 758, "\u4f7f\u7528\u8fd9\u6837\u7684": 738, "\u4f8b\u5982": [736, 738, 739, 740, 741, 742, 744, 747, 750, 753, 755, 756, 758, 759, 760, 762, 766, 767, 768, 769, 770], "\u4f8b\u5982nf": 740, "\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a": 768, "\u4f8b\u5982\u4f7f\u7528": 768, "\u4f8b\u5982\u5728\u4e0b\u56fe\u4e2d": 747, "\u4f8b\u5982\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b": 738, "\u4f8b\u5982\u60f3\u5728\u67d0\u4e00\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u5206\u7c7b\u4efb\u52a1": 766, "\u4f8b\u5982\u6c42\u548c\u4ee5\u53ca\u6c42\u5747\u503c": 738, "\u4f8b\u5982\u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf": 738, "\u4f9d\u6279\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3": 757, "\u4fdd\u5b58dglgraph\u5bf9\u8c61\u548c\u6807\u7b7e\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 736, "\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 736, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [731, 732, 748], "\u4fdd\u5b58\u56fe\u548c\u6807\u7b7e": 736, "\u4fdd\u5b58\u8bad\u7ec3\u597d\u7684\u6a21\u578b": 770, "\u4fdd\u7559\u5173\u7cfb": 747, "\u4fee\u6539\u6a21\u578b\u8bad\u7ec3\u5faa\u73af\u90e8\u5206": 760, "\u501f\u7528\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u5c0f\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5": 768, "\u503c\u4e3a\u4e00\u7684\u5143\u7d20\u8868\u793a\u4e00\u6761\u8fb9": 767, "\u503c\u4e3a\u4f5c\u7528\u5728\u8be5\u5173\u7cfb\u4e0ann\u6a21\u5757\u5bf9\u8c61": 764, "\u503c\u5219\u4e3a\u5bf9\u5e94nn\u6a21\u5757\u7684\u81ea\u5b9a\u4e49\u53c2\u6570": 764, "\u503c\u662f\u8fd9\u79cd\u5173\u7cfb\u5bf9\u5e94": 752, "\u5047\u5b9agraph": 767, "\u5047\u8bbe\u6279\u6b21\u5927\u5c0f\u4e3a": 768, "\u5047\u8bbe\u6709\u5982\u4e0b\u7684\u8fb9\u754c": 755, "\u5047\u8bbe\u7ea2\u8272\u8282\u70b9\u4e3a\u9700\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8282\u70b9": 755, "\u5047\u8bbe\u8282\u70b9": 749, "\u5047\u8bbe\u8981\u4f7f\u75282\u5c42gnn\u8ba1\u7b97\u79cd\u5b50\u8282\u70b98": 755, "\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8fb9\u7c7b\u578b": 768, "\u5143\u7ec4\u4e2d\u7684\u7b2c1\u4e2a\u5143\u7d20\u4e3a\u6e90\u8282\u70b9\u7279\u5f81": 763, "\u5148\u6765\u770b\u4e00\u4e0b": 755, "\u5168\u56fe": 770, "\u51713\u4e2a\u6210\u5458\u5c5e\u6027": 750, "\u5173\u4e8e": 744, "\u5173\u4e8edgl\u5185\u7f6e\u56fe\u5377\u79ef\u6a21\u5757\u7684\u5b8c\u6574\u5217\u8868": 770, "\u5173\u4e8e\u5185\u7f6e\u51fd\u6570\u7684\u5217\u8868": 750, "\u5173\u4e8e\u5185\u7f6e\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5": 758, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [741, 748], "\u5173\u4e8e\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u8fdb\u9636\u7528\u6cd5": 750, "\u5173\u6ce8": [747, 756], "\u5173\u7cfb": 756, "\u5173\u7cfb\u53ef\u4ee5\u662f\u65e0\u5411\u7684": 742, "\u5173\u7cfb\u8868\u793a\u4e3a": 763, "\u5176\u4e2d": [739, 746, 751, 755, 764, 768, 769], "\u5176\u4e2dxxx\u662f\u63d0\u4f9b\u7ed9\u5212\u5206api\u7684\u56fe\u7684\u540d\u79f0": 739, "\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u6f14\u793a\u4e86\u67e5\u8be2\u56fe\u7ed3\u6784\u7684\u90e8\u5206api\u7684\u4f7f\u7528\u65b9\u6cd5": 746, "\u5176\u4e2d\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u6a21\u5757\u7ec4\u4ef6": 768, "\u5176\u4e2d\u5305\u542b\u6240\u6709\u8d1f\u91c7\u6837\u7684\u8282\u70b9\u5bf9\u4f5c\u4e3a\u8fb9": 769, "\u5176\u4e2d\u5305\u542b\u6709\u5173\u8f93\u5165\u56fe\u7684\u6240\u6709\u4fe1\u606f": 738, "\u5176\u4e2d\u5305\u542b\u7531\u8d1f\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u6240\u6709\u4e0d\u5b58\u5728\u7684\u8fb9": 758, "\u5176\u4e2d\u5305\u542b\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u5185\u6240\u6709\u7684\u8fb9": 758, "\u5176\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b": 738, "\u5176\u4e2d\u7684\u8fb9\u8fde\u63a5\u4e24\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 742, "\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8fb9\u754c": 755, "\u5176\u4e2d\u7ea2\u8272\u548c\u7eff\u8272\u8282\u70b9": 755, "\u5176\u4e2d\u8282\u70b9\u548c\u8fb9\u53ef\u4ee5\u662f\u6709\u7c7b\u578b\u7684": 741, "\u5176\u4f59\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8": 737, "\u5176\u503c\u4e3a\u6bcf\u4e2a\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 764, "\u5176\u6570\u5b66\u5b9a\u4e49\u4e3a": 764, "\u5176\u6700\u7ec8\u8868\u793a\u5c06\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c": 754, "\u5176\u6b21": 768, "\u5176\u6d88\u606f\u4f20\u9012\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b": 755, "\u5176\u7ed3\u679c": 745, "\u5176\u7ed3\u679c\u662f": 757, "\u5176\u884c\u4e3a\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u975e\u5e38\u76f8\u4f3c": 738, "\u5176\u9002\u7528\u4e8e\u5355\u5411\u4e8c\u5206\u56fe": 759, "\u5176\u952e\u4e3a": 764, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 733, "\u5177\u4f53\u5982\u4e0b\u6240\u793a": 770, "\u5177\u4f53\u6765\u8bf4": [737, 757], "\u5177\u4f53\u884c\u4e3a\u5982\u4e0b": 747, "\u5177\u6709\u5bf9\u96c6\u7fa4\u5185\u6240\u6709\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u65e0\u5bc6\u7801ssh\u8bbf\u95ee\u6743\u9650": 740, "\u5177\u6709\u76f8\u540c\u7684\u952e": 764, "\u5185\u7f6e\u51fd\u6570": 750, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": [748, 749], "\u5185\u7f6e\u6d88\u606f\u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\u6216\u4e8c\u5143\u51fd\u6570": 750, "\u5185\u7f6e\u7684dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u7684\u8f93\u5165\u56fe\u53ca\u7279\u5f81\u5fc5\u987b\u6ee1\u8db3\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00": 759, "\u518d\u5c06": 750, "\u518d\u6784\u5efa\u4e00\u4e2a\u5173\u7cfb\u5b57\u5178": 747, "\u518d\u6b21\u63d0\u9192\u4e0b": 760, "\u518d\u7531\u8fb9\u754c\u8f6c\u6362\u6210\u5757": 755, "\u51c6\u5907\u4e00\u4e2a\u6279\u6b21\u7684\u56fe": 768, "\u51fa\u4e8e\u5efa\u6a21\u7684\u76ee\u7684": 747, "\u51fd\u6570": [735, 746, 747, 750, 763, 768], "\u51fd\u6570\u4e2d\u5b9e\u73b0\u6570\u636e\u5904\u7406": 735, "\u51fd\u6570\u6267\u884c\u4e86\u5b9e\u9645\u7684\u6d88\u606f\u4f20\u9012\u548c\u8ba1\u7b97": 763, "\u51fd\u6570\u662f\u57fa\u4e8e\u5747\u5300\u5206\u5e03\u7684\u91c7\u6837\u51fd\u6570": 758, "\u51fd\u6570\u6765\u5728\u8fd0\u884c\u65f6\u62c6\u5206\u8bad\u7ec3": 738, "\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684": 746, "\u51fd\u6570\u6765\u6784\u5efa\u4e00\u4e2a": 746, "\u51fd\u6570\u7684\u5185\u5bb9\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a3\u9879\u64cd\u4f5c": 763, "\u51fd\u6570\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u5728\u5b8c\u6210\u6d88\u606f\u805a\u5408\u540e\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 763, "\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 766, "\u51fd\u6570\u7684\u8f93\u51fa\u4e0d\u4f1a\u5168\u4e3a0": 763, "\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u7684\u5bf9\u8c61": 764, "\u51fd\u6570\u805a\u5408\u6765\u81ea\u591a\u4e2a\u5173\u7cfb\u7684\u7ed3\u679c": 764, "\u51fd\u6570\u8fd8\u4f7f\u75282\u4e2a\u989d\u5916\u7684\u5b57\u5178\u53c2\u6570": 764, "\u51fd\u6570\u8fdb\u884c\u89e3\u538b\u7f29": 733, "\u51fd\u6570\u9700\u8981\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7c7b\u578b": 764, "\u51fd\u6570\u9700\u8981\u5904\u7406\u8f93\u5165\u7684\u8bb8\u591a\u6781\u7aef\u60c5\u51b5": 763, "\u5206\u522b\u5728\u7b2c8": 744, "\u5206\u522b\u662f\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u51fd\u6570\u4e0e\u805a\u5408\u51fd\u6570": 755, "\u5206\u522b\u662f\u77e9\u9635": 751, "\u5206\u522b\u7528\u4e8e\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5f02\u6784\u56fe\u548c\u52a0\u8f7d\u5b83\u4eec": 747, "\u5206\u522b\u7528\u4e8e\u8bbf\u95ee\u6e90\u8282\u70b9": 750, "\u5206\u533a": [737, 739], "\u5206\u533a0\u7684\u6570\u636e": 739, "\u5206\u533a1\u7684\u6570\u636e": 739, "\u5206\u533a\u6570\u636e\u548c\u8bad\u7ec3\u811a\u672c\u90fd\u5df2\u88ab\u590d\u5236\u5230\u96c6\u7fa4\u6216\u5b58\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u8ba1\u7b97\u673a\u5747\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5b58\u50a8\u7a7a\u95f4": 740, "\u5206\u533a\u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca\u56fe\u5206\u533a": 740, "\u5206\u5e03\u5f0f\u5d4c\u5165\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u5f20\u91cf\u4e4b\u4e0a": 738, "\u5206\u5e03\u5f0f\u5d4c\u5165\u7684\u521b\u5efa\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684\u521b\u5efa\u975e\u5e38\u76f8\u4f3c": 738, "\u5206\u5e03\u5f0f\u5f20\u91cf\u5fc5\u987b\u4e0e\u56fe\u7684\u8282\u70b9\u6216\u8fb9\u76f8\u5173\u8054": 738, "\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668\u5177\u6709\u4e0epytorch": 738, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u548c\u72ec\u7acb\u6a21\u5f0f": 738, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": [737, 748], "\u5206\u5e03\u5f0f\u8bad\u7ec3": 748, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u5c06\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u5206\u533a": 740, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [737, 748], "\u5206\u5e03\u5f0f\u91c7\u6837\u548c\u6570\u636e\u5206\u5272": 738, "\u5206\u5e03\u5f0f\u91c7\u6837\u6a21\u5757\u9075\u5faa\u76f8\u540c\u7684\u8bbe\u8ba1": 738, "\u5206\u914did\u540e": 739, "\u5206\u914d\u7ed9": 738, "\u5207\u7247\u53d6\u8f93\u5165\u7279\u5f81\u7684\u524d\u51e0\u884c": 759, "\u5207\u7247\u884c\u6570\u53ef\u4ee5\u901a\u8fc7": 759, "\u5212\u5206api\u901a\u8fc7\u5728": 739, "\u5212\u5206\u6216\u7279\u5f81\u5f52\u4e00\u5316\u7b49\u64cd\u4f5c\u5efa\u8bae\u5728": 732, "\u5212\u5206\u63a9\u7801": 735, "\u5217\u8868": 734, "\u5219": 738, "\u5219dgl\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u8282\u70b9\u7279\u5f81\u524d\u4e00\u90e8\u5206\u8bbe\u4e3a\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 759, "\u5219dgl\u5141\u8bb8\u4f7f\u7528": 747, "\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b": 747, "\u5219\u53ea\u9700\u8981\u6309\u7167\u5982\u4e0b\u7684\u65b9\u6cd5\u91cd\u5199forward\u51fd\u6570": 759, "\u5219\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6d88\u606f\u6216\u805a\u5408\u51fd\u6570": 750, "\u5219\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u7b80\u5355\u5730\u5b9a\u4e49\u91c7\u6837\u5668": 755, "\u5219\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570": 735, "\u5219\u53ef\u4ee5\u901a\u8fc7": 760, "\u5219\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u76f4\u63a5\u8bfb\u53d6\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 755, "\u5219\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u51fd\u6570": 733, "\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee": 760, "\u5219\u56fe\u8bfb\u51fa\u7684\u5f20\u91cf\u5f62\u72b6\u4e3a": 768, "\u5219\u5b83\u4e5f\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55": 733, "\u5219\u6307\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u7ed3\u679c": 764, "\u5219\u6a21\u578b\u5728\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3\u65f6\u53ea\u9700\u505a\u5f88\u5c0f\u7684\u8c03\u6574": 760, "\u5219\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fb9\u7c7b\u578b\u53ca\u5176\u53cd\u5411\u8fb9\u7c7b\u578b\u4e4b\u95f4\u7684\u6620\u5c04": 756, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u5411\u4e8c\u5206\u56fe": 759, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u540c\u6784\u56fe": 759, "\u5219\u8fb9\u662f\u65e0\u5411\u7684": 742, "\u5219\u8fb9\u662f\u6709\u5411\u7684": 742, "\u5219\u901a\u5e38\u4e0d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7cbe\u786e\u7684\u79bb\u7ebf\u63a8\u65ad": 757, "\u5219\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u4f18\u5316\u5668": 738, "\u5219\u9ed8\u8ba4\u503c\u4e3a": 740, "\u521b\u5efa": 735, "\u521b\u5efa\u4e00\u4e2a": 746, "\u521b\u5efa\u4e00\u4e2a\u5177\u67093\u79cd\u8282\u70b9\u7c7b\u578b\u548c3\u79cd\u8fb9\u7c7b\u578b\u7684\u5f02\u6784\u56fe": 747, "\u521b\u5efa\u5206\u5e03\u5f0f\u56fe\u5bf9\u8c61": 737, "\u521b\u5efa\u5d4c\u5165\u65f6": 738, "\u521b\u5efa\u800c\u6765": 743, "\u521b\u5efa\u91c7\u6837\u5668": 737, "\u521b\u5efa\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u793a\u4f8b": 735, "\u521d\u59cb\u5316api\u5e94\u6309\u4ee5\u4e0b\u987a\u5e8f\u8c03\u7528": 738, "\u521d\u59cb\u5316dgl\u7684\u5206\u5e03\u5f0f\u6a21\u5757": 737, "\u521d\u59cb\u5316\u53c2\u6570": 762, "\u521d\u59cb\u56fe\u548c\u8981\u8ba1\u7b97\u8868\u793a\u7684\u8282\u70b9": 755, "\u5220\u9664\u5c0f\u6279\u6b21\u4e2d\u7684\u8fb9\u53ca\u5176\u53cd\u5411\u8fb9\u7684\u65b9\u6cd5\u5982\u4e0b": 756, "\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 770, "\u5229\u7528\u8fd9\u4e9b\u4f18\u5316\u7684\u4e00\u4e2a\u5e38\u89c1\u5b9e\u8df5\u662f\u901a\u8fc7\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 751, "\u5230": [746, 766], "\u524d\u8005\u5728": 738, "\u524d\u9762\u7ae0\u8282\u91cc\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7528\u5728\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 755, "\u5269\u4f59\u90e8\u5206\u7684\u8bad\u7ec3\u4ee3\u7801\u548c\u540c\u6784\u56fe\u4ee3\u7801\u76f8\u540c": 768, "\u52a0\u6743\u7684": 742, "\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7dgl\u7684\u5185\u7f6e\u51fd\u6570": 751, "\u52a0\u8f7d": 734, "\u5305\u542b\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b": 759, "\u5305\u542b\u4e86\u6bcf\u4e2agnn\u5c42\u8981\u8ba1\u7b97\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u51fa": 760, "\u5305\u542b\u4e86\u96c6\u7fa4\u4e2d\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 740, "\u5305\u542b\u591a\u4e2a\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u7c7b": 737, "\u5305\u542b\u90bb\u5c45\u91c7\u6837\u548c\u6d88\u606f\u4f20\u9012": 757, "\u5305\u62ec": [737, 743, 763], "\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e": 769, "\u5305\u62ec\u5206\u533a\u4e2d\u7684\u56fe\u7ed3\u6784": 738, "\u5305\u62ec\u81ea\u5faa\u73af\u7684\u8fb9": 742, "\u5305\u62ec\u8bbf\u95ee\u8282\u70b9": 738, "\u5305\u63d0\u4f9b\u4e86\u7528\u4e8e\u4e0b\u8f7d\u548c\u5904\u7406ogb\u6570\u636e\u96c6\u5230": 734, "\u533a\u522b\u53ea\u5728\u4e8e\u8282\u70b9\u88ab\u5212\u5206\u4e3a\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 759, "\u5355\u5411\u4e8c\u5206\u56fe": 759, "\u5355\u72ec\u8c03\u7528\u9010\u8fb9\u8ba1\u7b97": 750, "\u5373": [751, 755, 767], "\u5373\u4e00\u7ec4\u673a\u5668": 737, "\u5373\u4efb\u610f\u4e24\u4e2a\u56fe\u4e4b\u95f4\u6ca1\u6709\u8fb9\u8fde\u63a5": 768, "\u5373\u4f7f": 738, "\u5373\u6267\u884c": 751, "\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b": 768, "\u5373\u6b63\u786e\u7684\u6807\u6ce8": 770, "\u5373\u6bcf\u4e2a\u884c\u5207\u7247\u50a8\u5b581\u4e2a\u8282\u70b9\u62161\u6761\u8fb9\u7684\u7279\u5f81": 744, "\u5373\u8282\u70b94": 755, "\u5373\u8fb9": 746, "\u5373\u9884\u6d4b\u4efb\u52a1\u6570": 735, "\u539f\u5219\u662f\u5c06": 759, "\u539f\u56e0\u662f\u6d88\u606f\u4f20\u9012\u540e\u7684\u7279\u5f81\u7ec4\u5408\u9700\u8981\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u8282\u70b9\u8868\u793a": 755, "\u539f\u56e0\u662f\u8fd9\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u8868\u793a": 757, "\u539f\u56fe\u4e0a\u7684\u5176\u4ed6\u8282\u70b9\u662f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u7684": 755, "\u539f\u59cb\u7279\u5f81\u5728cpu\u4e0a": 745, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8282\u70b9id": 747, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8fb9id": 747, "\u539f\u59cb\u7684\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684id\u88ab\u5b58\u50a8\u5728": 747, "\u539f\u59cb\u8282\u70b9\u7c7b\u578b": 747, "\u539f\u59cb\u8fb9\u7c7b\u578b": 747, "\u53c2\u6570": 764, "\u53c2\u8003\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7b2c16\u548c18\u884c": 744, "\u53c2\u8003\u624b\u518c\u63d0\u4f9b\u4e86\u8be5\u7528\u6cd5\u7684\u66f4\u591a\u7ec6\u8282": 743, "\u53c2\u8003\u7528\u6237\u6307\u5357": 752, "\u53c2\u89c1": [750, 759], "\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u548c\u6574\u578b": 744, "\u53cd\u5411\u8fb9\u901a\u5e38\u5177\u6709\u4e0e\u6b63\u5411\u8fb9\u672c\u8eab\u4e0d\u540c\u7684\u8fb9\u7c7b\u578b": 756, "\u53d6\u5e73\u5747\u503c": 768, "\u53d8\u91cf": 767, "\u53e6\u4e00\u4e2a\u5e94\u7528\u4e8e": 751, "\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 738, "\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 745, "\u53e6\u5916": [738, 740, 751], "\u53e6\u89c1": 743, "\u53ea\u4f7f\u7528": 747, "\u53ea\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5305\u62ec\u8282\u70b9\u8868\u793a\u7684\u5b57\u5178\u6765\u8ba1\u7b97\u9884\u6d4b\u503c": 770, "\u53ea\u8981\u4f7f\u8fd4\u56de\u7684\u56fe\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9": 755, "\u53ea\u9700\u8981\u6309\u4e0b\u4f8b\u7f16\u5199\u4ee3\u7801": 766, "\u53ea\u9700\u8981\u8282\u70b94": 755, "\u53ea\u9700\u8981\u9884\u6d4b\u6bcf\u4e2a\u8fb9\u7684\u6807\u91cf\u5206\u6570\u800c\u4e0d\u662f\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03": 758, "\u53ef\u4ee5\u4ece\u5916\u90e8\u6765\u6e90\u6784\u9020\u4e00\u4e2a": 743, "\u53ef\u4ee5\u4f7f\u7528": [746, 755], "\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u8868\u793a": 742, "\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e0a\u8ff0\u8fb9\u754c\u8f6c\u6362\u4e3a\u8f93\u51fa\u8282\u70b9\u4e3a8\u7684\u5757": 755, "\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4ee5\u4e0b\u4ee3\u7801\u7684\u65b9\u6cd5\u83b7\u53d6\u5355\u4e2a\u56fe\u6570\u636e\u96c6\u7684\u56fe\u6570\u636e": 765, "\u53ef\u4ee5\u5148\u62bd\u53d6\u5f02\u6784\u56fe\u7684\u8fb9\u7c7b\u578b\u5b50\u56fe": 747, "\u53ef\u4ee5\u5148\u901a\u8fc7\u60f3\u8981\u56ca\u62ec\u7684\u8282\u70b9\u7f16\u53f7\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe": 753, "\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u7684\u5757": 755, "\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c": 738, "\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\u94fe\u63a5\u9884\u6d4b\u6a21\u578b": 758, "\u53ef\u4ee5\u5b8c\u6210\u4e00\u8f6e\u6d88\u606f\u4f20\u9012\u8ba1\u7b97": 770, "\u53ef\u4ee5\u5c06\u5176\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539\u4ee5\u652f\u6301\u8fb9\u6743\u91cd": 767, "\u53ef\u4ee5\u5c06\u8be5\u7c7b\u578b\u6570\u636e\u52a0\u8f7d\u5230python\u5bf9\u8c61": 743, "\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe": 768, "\u53ef\u4ee5\u627e\u5230": 763, "\u53ef\u4ee5\u63a5\u53d7\u975e\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570": 745, "\u53ef\u4ee5\u63d0\u9ad8\u8282\u70b9": 735, "\u53ef\u4ee5\u662f\u5f02\u6784\u56fe\u6216\u6765\u81ea\u5f02\u6784\u56fe\u7684\u5b50\u56fe\u533a\u5757": 764, "\u53ef\u4ee5\u7528\u4e8e\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6a21\u5757": 738, "\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u8282\u70b9\u6536\u5230\u7684\u6d88\u606f": 750, "\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f": 733, "\u53ef\u4ee5\u8ba9\u7528\u6237\u4e0d\u7528\u4e00\u6b21\u6027\u628a\u6240\u6709\u8282\u70b9\u7279\u5f81\u62f7\u8d1d\u5230gpu\u4e0a": 754, "\u53ef\u4ee5\u901a\u8fc7": 755, "\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u552f\u4e00\u6807\u8bc6": 738, "\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u56fe\u5377\u79ef\u6a21\u5757\u6765\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u67b6\u6784": 770, "\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c": 766, "\u53ef\u4ee5\u9075\u5faa\u76f8\u540c\u7684\u539f\u7406\u6765\u6784\u5efa\u56fe": 743, "\u53ef\u4ee5\u91cd\u5199\u4e0a\u9762\u7684": 755, "\u53ef\u547d\u540d\u7684\u7279\u5f81": 744, "\u53ef\u5c06\u6570\u636e\u548c\u8ba1\u7b97\u540c\u65f6\u5206\u5e03\u5728\u4e00\u7ec4\u8ba1\u7b97\u8d44\u6e90\u4e2d": 737, "\u53ef\u5c06\u6570\u636e\u590d\u5236\u5230\u96c6\u7fa4\u7684\u8ba1\u7b97\u673a\u4e0a": 737, "\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570": 766, "\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5de5\u4f5c\u7684\u60f3\u6cd5\u90fd\u5f88\u7c7b\u4f3c": 769, "\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u8868\u793a\u6765\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u5efa\u6a21": 752, "\u53ef\u9009": [731, 739, 748], "\u53ef\u907f\u514d\u8be5\u884c\u4e3a": 743, "\u5404\u79cd\u6570\u636e\u683c\u5f0f": 743, "\u5408\u5e76\u6210\u4e00\u79cd\u8fb9\u7684\u56fe": 766, "\u540c\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u6761": 742, "\u540c\u65f6": [746, 755], "\u540c\u65f6dgl\u4e5f\u5efa\u8bae\u5b9e\u73b0\u4fdd\u5b58\u548c\u5bfc\u5165\u51fd\u6570": 732, "\u540c\u65f6\u4e5f\u652f\u6301\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u91c7\u6837\u7b56\u7565": 754, "\u540c\u65f6\u5c06\u8fb9id\u6620\u5c04\u5230\u5176\u53cd\u5411\u8fb9id": 756, "\u540c\u65f6\u5efa\u7acb\u53cd\u5411\u8fb9": 766, "\u540c\u65f6\u7701\u7565\u4e86\u8be6\u7ec6\u7684\u6570\u636e\u5904\u7406\u4ee3\u7801\u4ee5\u7a81\u51fa\u5c55\u793a\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 735, "\u540c\u6784\u56fe": 763, "\u540c\u6784\u56fe\u548c\u4e8c\u5206\u56fe\u53ea\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f02\u6784\u56fe": 747, "\u540c\u6784\u56fe\u548c\u5757": 759, "\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e4b\u95f4\u552f\u4e00\u7684\u5b9e\u73b0\u5dee\u5f02\u662f\u540e\u8005\u9700\u8981\u7528": 758, "\u540c\u6784\u56fe\u7684\u60c5\u51b5": 763, "\u540c\u6784\u7684": 742, "\u540c\u6837": [738, 760], "\u540c\u6837\u5730": 766, "\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 766, "\u540d\u79f0\u5c31\u5f88\u6709\u7528": 738, "\u540e": 768, "\u540e\u4e00\u79cd\u65b9\u6cd5\u6548\u7387\u9ad8\u5f97\u591a": 751, "\u540e\u7eed\u7ae0\u8282\u7684\u5185\u5bb9\u5747\u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u56fe\u548c\u8282\u70b9": 765, "\u540e\u8005\u53ef\u4ee5\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u8fdb\u884c\u8fed\u4ee3": 760, "\u540e\u8005\u652f\u6301\u89e3\u538b\u7f29zip\u6587\u4ef6": 733, "\u5411\u524d": 756, "\u5411\u540e": 756, "\u5411\u91cf\u6216\u591a\u7ef4\u5f20\u91cf": 744, "\u5426\u5219": 756, "\u5426\u5219\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0": 733, "\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u7a7a\u95f4": 740, "\u542f\u52a8\u811a\u672c\u4f1a\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u4efb\u52a1": 740, "\u542f\u52a8\u811a\u672c\u5728\u540e\u53f0\u542f\u52a8\u670d\u52a1\u5668": 738, "\u5434\u7d2b\u8587": 748, "\u548c": [732, 735, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 750, 751, 752, 755, 756, 757, 761, 762, 763, 764, 766, 768, 769, 770], "\u548c1\u4e2a\u8fb9\u7279\u5f81": 744, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 757, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 757, "\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9": 747, "\u548c\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u566a\u58f0\u5206\u5e03": 769, "\u548c\u5305\u542b\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u5757": 759, "\u548c\u5b50\u56fe\u5757": 763, "\u548c\u5b83\u4eec\u7684\u5173\u7cfb": 741, "\u548c\u5c0f\u6279\u91cf\u7684\u8fb9id\u6570\u7ec4": 758, "\u548c\u666e\u901a\u7684nn\u6a21\u5757\u4e00\u6837": 764, "\u548c\u7528\u4e8e\u5206\u5e03\u5f0f\u53ef\u5b66\u4e60\u5d4c\u5165\u7684": 738, "\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81": 763, "\u548c\u8282\u70b9\u5206\u7c7b\u4e00\u6837\u7684\u90bb\u5c45\u91c7\u6837\u5668": 756, "\u552f\u4e00\u7684\u533a\u522b\u662f\u5728\u8c03\u7528": 766, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4e3a\u8bad\u7ec3\u96c6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u7684\u5b57\u5178": 760, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528": [738, 756], "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8d1f\u91c7\u6837\u65b9\u6cd5": 758, "\u5546\u54c1": 742, "\u5546\u5bb6": 742, "\u56de\u5f52": [735, 748, 765, 769], "\u56de\u5f52\u4e2d\u7684\u8282\u70b9\u8868\u793a\u6a21\u578b": 758, "\u56de\u5f52\u4e2d\u7684\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 758, "\u56de\u5f52\u4efb\u52a1": 766, "\u56de\u5f52\u6240\u9700\u7684\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 756, "\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u8fb9\u5f97\u5206\u6a21\u578b\u76f8\u540c": 769, "\u56de\u5f52\u7684\u6a21\u578b": 766, "\u56de\u5f52\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b": 756, "\u56de\u5f52\u7684\u8bad\u7ec3\u7c7b\u4f3c": 756, "\u56de\u5f52\u91cc\u7684\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c": 758, "\u56de\u60f3\u4e00\u4e0b\u5728": 755, "\u56e0\u4e3a": 751, "\u56e0\u4e3a\u4e0a\u8ff0\u7684\u5f97\u5206\u9884\u6d4b\u6a21\u578b\u5728\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 769, "\u56e0\u4e3a\u4e0d\u9700\u8981\u5728\u8fb9\u4e0a\u4fdd\u5b58feat_src\u548cfeat_dst": 751, "\u56e0\u4e3a\u53cb\u8c0a\u662f\u76f8\u4e92\u7684": 742, "\u56e0\u4e3a\u540c\u6b65sgd\u4f1a\u5047\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c0f\u6279\u6b21": 738, "\u56e0\u4e3a\u5b83\u4eec\u7ecf\u8fc7\u4e86\u5927\u91cf\u4f18\u5316": 750, "\u56e0\u4e3a\u5bf9\u4e8e\u5904\u7406\u540e\u7684\u5927\u578b\u6570\u636e\u96c6": 732, "\u56e0\u4e3a\u5d4c\u5165\u662f\u6a21\u578b\u7684\u4e00\u90e8\u5206": 738, "\u56e0\u4e3a\u7528\u6237\u9700\u8981\u6307\u5b9a\u5728\u54ea\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b": 769, "\u56e0\u4e3a\u9700\u8981\u4ece\u7b2c\u4e00\u5c42\u5f00\u59cb\u5bf9\u8282\u70b9\u8868\u793a\u9010\u5c42\u8ba1\u7b97": 757, "\u56e0\u6b64": [735, 738, 740, 743, 745, 747, 755, 756, 758], "\u56e0\u6b64\u5982\u679c\u4e00\u5f20\u56fe\u5f88\u5927": 739, "\u56e0\u6b64\u6570\u636e\u96c6\u7684\u5212\u5206\u662f\u5728\u56fe\u7684\u8282\u70b9\u96c6\u4e0a\u8fdb\u884c": 735, "\u56e0\u6b64\u672c\u793a\u4f8b\u8bf4\u660e\u4e86\u5982\u4f55\u4f7f\u7528\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5411\u91cf\u7684\u70b9\u79ef\u6765\u8ba1\u7b97\u5206\u6570": 758, "\u56e0\u6b64\u7528\u6237\u65e0\u6cd5\u4ecenn\u6a21\u5757\u7684\u53c2\u6570\u8bbf\u95ee\u5b83": 738, "\u56e0\u6b64\u76f4\u63a5\u5728\u8fb9\u754c\u5b50\u56fe\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012\u6709\u5f88\u5927\u5f00\u9500": 755, "\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u5728\u968f\u673a\u62bd\u53d6\u7684\u5c0f\u6279\u6b21\u56fe\u4e0a\u8fdb\u884c\u9ad8\u6548\u7684\u8bad\u7ec3": 768, "\u56e0\u6b64\u9700\u8981\u5c06\u6240\u8981\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b": 766, "\u56fe": [735, 748], "\u56fe\u4e0a\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38\u6709\u4e09\u79cd\u7c7b\u578b": 735, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u4e00\u5f20\u539f\u59cb\u5c0f\u56fe": 768, "\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u662fdgl\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u7684\u8fb9\u5217\u8868\u4e2d\u6700\u5927\u7684\u70b9id\u63a8\u65ad\u6240\u5f97\u51fa\u7684": 746, "\u56fe\u5212\u5206api\u5f53\u524d\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c": 739, "\u56fe\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u4e8c\u5206\u56fe": 763, "\u56fe\u53ef\u4ee5\u662f": 742, "\u56fe\u540d\u79f0\u6807\u8bc6\u4e86\u96c6\u7fa4\u4e2d\u6240\u9700\u52a0\u8f7d\u7684\u56fe": 738, "\u56fe\u5c06\u4f1a\u88ab\u89c6\u4e3a\u4e8c\u5206\u56fe": 763, "\u56fe\u6216\u5f20\u91cf": 745, "\u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3": 770, "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [748, 765, 768, 770], "\u56fe\u662f\u7528\u4ee5\u8868\u793a\u5b9e\u4f53\u53ca\u5176\u5173\u7cfb\u7684\u7ed3\u6784": 742, "\u56fe\u6ce8\u610f\u529b\u7f51\u7edc": 767, "\u56fe\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210": 742, "\u56fe\u7684": 735, "\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86": 770, "\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e2a\u5178\u578b\u9009\u9879\u662f\u805a\u5408\u7c7b\u578b": 762, "\u56fe\u8868\u793a\u5b9e\u4f53": 741, "\u5728": [735, 736, 738, 760, 763], "\u5728dgl": 761, "\u5728dgl\u4e2d": [747, 750, 752, 755], "\u5728dgl\u4e2d\u79f0\u4e4b\u4e3a": 760, "\u5728dgl\u7684\u56fe\u91cc": 746, "\u5728dgl\u91cc\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b9e\u73b0\u8fd9\u4e00\u9700\u6c42": 767, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 741, "\u5728gpu\u4e0a\u8fdb\u884c\u5168\u56fe\u524d\u5411\u4f20\u64ad\u901a\u5e38\u7531\u4e8e\u663e\u5b58\u5927\u5c0f\u7684\u9650\u5236\u800c\u4e0d\u53ef\u884c": 757, "\u5728graph": 750, "\u5728jupyt": 738, "\u5728mxnet\u4e2d\u662ffloat\u5f20\u91cf": 735, "\u5728nn\u6a21\u5757\u4e2d": 763, "\u5728node": 734, "\u5728python\u5b57\u5178\u91cc\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f": 736, "\u5728sageconv\u4e2d": 762, "\u5728sageconv\u8bba\u6587\u91cc": 762, "\u5728update_all\u5916\u8c03\u7528\u66f4\u65b0\u51fd\u6570": 750, "\u5728user\u7c7b\u578b\u7684\u8282\u70b9\u548cclick\u7c7b\u578b\u7684\u8fb9\u4e0a\u968f\u673a\u751f\u6210\u8bad\u7ec3\u96c6\u7684\u63a9\u7801": 765, "\u5728\u4e00\u4e2a\u52a0\u6743\u56fe\u91cc": 767, "\u5728\u4e00\u4e2a\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 737, "\u5728\u4e00\u5c42\u4e2d": 757, "\u5728\u4e0a\u9762\u7684\u7b49\u5f0f\u4e2d": 749, "\u5728\u4ecb\u7ecddgl\u4e2d\u90bb\u5c45\u91c7\u6837\u7684\u7528\u6cd5\u4e4b\u524d": 755, "\u5728\u4f7f\u7528pytorch\u65f6": 738, "\u5728\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 752, "\u5728\u5185\u7f6e\u6570\u636e\u96c6": 736, "\u5728\u5185\u90e8": 738, "\u5728\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0b": 738, "\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e2d": 738, "\u5728\u521b\u5efa\u56fe\u7684\u65f6\u5019": 746, "\u5728\u521d\u6b65\u4e86\u89e3\u4e86\u5206\u5e03\u5f0f\u7ec4\u4ef6\u540e": 737, "\u5728\u52a0\u6743\u56fe\u4e2d": 742, "\u5728\u533a\u5757\u521b\u5efa\u7684\u9636\u6bb5": 763, "\u5728\u534a\u76d1\u7763\u8282\u70b9\u5206\u7c7b\u7684\u573a\u666f\u91cc": 739, "\u5728\u540c\u6784\u56fe\u4e2d": 742, "\u5728\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e0a\u505a\u8bc4\u5206\u9884\u6d4b\u65f6": 756, "\u5728\u56fe\u5212\u5206\u540e": 739, "\u5728\u56fe\u5212\u5206\u671f\u95f4\u7684\u56fe\u540d\u79f0": 738, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [748, 749], "\u5728\u57fa\u4e8e\u90bb\u5c45\u91c7\u6837\u7684\u8fb9\u5206\u7c7b\u4e2d": 756, "\u5728\u591a\u91cd\u56fe\u4e2d": 742, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": [748, 753, 763, 765], "\u5728\u5b58\u50a8\u56fe\u5206\u533a\u6570\u636e": 737, "\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u91c7\u6837\u5668\u540e": 755, "\u5728\u5bf9\u56fe\u8fdb\u884c\u5212\u5206\u65f6": 739, "\u5728\u5c0f\u6279\u6b21\u8bad\u7ec3\u4e2d": 763, "\u5728\u5f02\u6784\u56fe\u4e0a": 756, "\u5728\u5f02\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u548c\u5728\u540c\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u7565\u6709\u4e0d\u540c": 768, "\u5728\u5f02\u6784\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u7684\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684": 760, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [748, 749], "\u5728\u5f02\u6784\u56fe\u4e2d": 742, "\u5728\u5f02\u6784\u56fe\u7684\u60c5\u51b5\u4e0b": 763, "\u5728\u5f53\u524d\u5b9e\u73b0\u4e2d": 738, "\u5728\u5f97\u5230": 768, "\u5728\u6240\u6709\u8fb9\u7c7b\u578b\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012": 770, "\u5728\u63a8\u8350\u573a\u666f\u4e2d\u5f88\u5e38\u89c1": 766, "\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d": 742, "\u5728\u6574\u4e2a\u56fe\u6279\u6b21\u4e0a\u8fdb\u884c\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3": 768, "\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5": 751, "\u5728\u672c\u4f8b\u4e2d\u7701\u7565": 770, "\u5728\u672c\u8282\u4e2d": 737, "\u5728\u6784\u9020\u51fd\u6570\u4e2d": 762, "\u5728\u67d0\u4e9b\u573a\u666f\u4e2d": 769, "\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u8fb9\u4e0a\u4e3a\u6bcf\u4e00\u6761\u8fb9\u9884\u6d4b\u7684\u7aef\u5230\u7aef\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a": 766, "\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u6587\u4ef6\u5939\u5185": 739, "\u5728\u6bcf\u4e2a\u751f\u6210\u5757\u5217\u8868\u7684\u8fed\u4ee3\u4e2d": 760, "\u5728\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u4e2d\u7684\u8282\u70b9\u6570\u4e0a\u5b9e\u73b0\u5206\u533a\u95f4\u7684\u5e73\u8861": 739, "\u5728\u6d88\u606f\u4f20\u9012\u65f6": 750, "\u5728\u6d88\u606f\u51fd\u6570\u91cc": 767, "\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 738, "\u5728\u7528\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 755, "\u5728\u7b2c9\u884c\u547d\u540d\u4e3a": 744, "\u5728\u7c7bdgldataset\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u5904\u7406\u6a21\u7248\u7684\u6d41\u7a0b\u56fe": 732, "\u5728\u7f16\u5199\u5b8c\u8fd9\u4e9b\u4ee3\u7801\u4e4b\u540e": 735, "\u5728\u8bad\u7ec3\u5668\u8fdb\u7a0b\u4e2d": 738, "\u5728\u8bad\u7ec3\u671f\u95f4": 739, "\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u63a9\u7801\u533a\u5206\u8bad\u7ec3": 766, "\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 755, "\u5728\u8fb9\u4e0a\u5c06\u4ee5\u4e0a\u4e24\u90e8\u5206\u7ebf\u6027\u64cd\u4f5c\u7684\u7ed3\u679c\u76f8\u52a0": 751, "\u5728\u8fb9\u96c6": 742, "\u5728\u8fd9\u4e2a\u573a\u666f\u91cc": 768, "\u5728\u8fd9\u4e2a\u6279\u6b21\u7684\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u4ee5\u66f4\u65b0\u8282\u70b9\u6216\u8fb9\u7684\u7279\u5f81": 768, "\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a": 740, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": 763, "\u5728\u8fd9\u91cc\u53ef\u4ee5\u590d\u7528\u4e0a\u8ff0\u63d0\u5230\u7684": 766, "\u5728\u8fdb\u884c\u63a8\u65ad\u65f6": 757, "\u5757": [755, 756, 760], "\u5757\u4e5f\u53ef\u7528\u4e8e\u5f02\u6784\u56fe": 755, "\u5757\u7684\u8f93\u51fa\u8282\u70b9\u4e3a": 755, "\u578b\u8282\u70b9\u5230": 747, "\u578b\u8282\u70b9\u7684\u8fb9": 747, "\u57fa\u4e8egnn\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u9700\u9884\u6d4b\u7684\u8282\u70b9\u5bf9": 769, "\u5904\u7406\u548c\u4fdd\u5b58\u56fe\u6570\u636e\u63d0\u4f9b\u4e86\u7b80\u5355\u800c\u5e72\u51c0\u7684\u89e3\u51b3\u65b9\u6848": 731, "\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u96c6\u7684\u4fdd\u5b58\u76ee\u5f55": 732, "\u5904\u7406\u6570\u636e": [731, 748], "\u5904\u7406\u8fc7\u7684\u6570\u636e\u6bd4\u8f83\u5927": 736, "\u590d\u5236\u5230": 740, "\u590d\u5236\u5230gpu": 745, "\u591a\u5c42\u611f\u77e5\u673a": 766, "\u5927\u90e8\u5206\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u9988\u8ba1\u7b97\u4e2d\u4ec5\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5f15\u5165\u56fe\u7ed3\u6784\u4fe1\u606f": 767, "\u5982": [743, 746, 758, 765, 766, 770], "\u5982panda": 743, "\u5982\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684": 744, "\u5982\u4e0b": 744, "\u5982\u4e0b\u4ee3\u7801\u6240\u6f14\u793a\u7684": 755, "\u5982\u4e0b\u4f8b\u6240\u793a": 746, "\u5982\u4e0b\u56fe\u6240\u793a": [754, 755], "\u5982\u4e0b\u6240\u793a": [755, 756], "\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u6240\u793a": 746, "\u5982\u4ee3\u7801\u6240\u793a": 735, "\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a": 738, "\u5982\u524d\u6240\u8ff0": 738, "\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b": 744, "\u5982\u63cf\u8ff0\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u79f0\u5173\u7cfb": 742, "\u5982\u63cf\u8ff0\u975e\u5bf9\u79f0\u5173\u7cfb": 742, "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684id\u76f8\u540c": 756, "\u5982\u679c\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u9002\u7528": 747, "\u5982\u679c\u4ee5\u6a21\u578b\u9009\u62e9\u4e3a\u76ee\u7684\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807": 757, "\u5982\u679c\u4f7f\u7528": 746, "\u5982\u679c\u5177\u6709\u6700\u5927id\u7684\u8282\u70b9\u6ca1\u6709\u8fb9": 746, "\u5982\u679c\u539f\u56fe\u5305\u542b\u591a\u79cd\u8282\u70b9\u7c7b\u578b": 759, "\u5982\u679c\u539f\u56fe\u53ea\u5305\u542b\u4e00\u79cd\u8282\u70b9\u7c7b\u578b": 759, "\u5982\u679c\u539f\u59cb\u6570\u636e\u5df2\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6": 735, "\u5982\u679c\u53ea\u9884\u6d4b": 770, "\u5982\u679c\u540e\u7aef\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u4ece\u78c1\u76d8\u4e2d\u4fdd\u5b58\u6216\u52a0\u8f7d\u5f20\u91cf\u7684\u5de5\u5177": 743, "\u5982\u679c\u56fe\u662f\u5f02\u6784\u7684": 770, "\u5982\u679c\u56fe\u91cc\u53ea\u6709\u4e00\u79cd\u8282\u70b9\u6216\u8fb9\u7c7b\u578b": 747, "\u5982\u679c\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8005\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e": 746, "\u5982\u679c\u5bf9\u901f\u5ea6\u4e0d\u592a\u5173\u6ce8\u7684\u8bdd": 743, "\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 760, "\u5982\u679c\u6570\u636e\u96c6\u662f\u4e00\u4e2azip\u6587\u4ef6": 733, "\u5982\u679c\u6587\u4ef6\u662f": 733, "\u5982\u679c\u662f\u4ece\u56fe\u4e2d\u5f97\u5230\u7684\u8fb9\u754c": 755, "\u5982\u679c\u672a\u63d0\u4f9b\u5177\u4f53\u7aef\u53e3": 740, "\u5982\u679c\u6a21\u578b\u540c\u65f6\u5177\u6709\u8282\u70b9\u5d4c\u5165\u548c\u89c4\u5219\u7684\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 738, "\u5982\u679c\u7279\u5f81\u5b58\u50a8\u5728": 760, "\u5982\u679c\u7528\u6237\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u7684\u6a21\u578b\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a": 766, "\u5982\u679c\u7528\u6237\u53ea\u60f3\u66f4\u65b0\u56fe\u4e2d\u7684\u90e8\u5206\u8282\u70b9": 753, "\u5982\u679c\u7528\u6237\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u4e00\u6b21\u4ec5\u4f7f\u7528\u4e00\u5f20\u56fe": 768, "\u5982\u679c\u7528\u6237\u5df2\u6709\u4e00\u4e2a\u7528\u4e8e\u6574\u4e2a\u56fe\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u4f20\u9012\u6a21\u5757": 759, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u6570\u636e\u96c6\u6216\u5176\u4ed6\u517c\u5bb9": 765, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5220\u9664\u5f02\u6784\u56fe\u4e2d\u7684\u53cd\u5411\u8fb9": 756, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5f00\u53d1\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 756, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 760, "\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570": 766, "\u5982\u679c\u7528\u6237\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u800c\u53c8\u4e0d\u60f3\u81ea\u5df1\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6b63\u786e\u7684\u76ee\u5f55\u4e2d": 733, "\u5982\u679c\u7528\u6237\u60f3\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 758, "\u5982\u679c\u7528\u6237\u60f3\u9884\u6d4b\u8fb9\u7c7b\u578b\u4e3a": 766, "\u5982\u679c\u7528\u6237\u6709\u5305\u542b\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u8282\u70b9\u6216\u8fb9\u7684\u5927\u56fe": 754, "\u5982\u679c\u7528\u6237\u6a21\u578b\u5728\u5168\u56fe\u4e0a\u662f\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u7684": 760, "\u5982\u679c\u7528\u6237\u719f\u6089": 769, "\u5982\u679c\u7528\u6237\u719f\u6089\u5982\u4f55\u5b9a\u5236\u7528\u4e8e\u66f4\u65b0\u6574\u4e2a\u540c\u6784\u56fe\u6216\u5f02\u6784\u56fe\u7684gnn\u6a21\u5757": 759, "\u5982\u679c\u7528\u6237\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 733, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570\u65e0\u6cd5\u7528\u5185\u7f6e\u51fd\u6570\u5b9e\u73b0": 750, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757\u5168\u4f7f\u7528\u7684\u662fdgl\u5185\u7f6e\u6a21\u5757": 760, "\u5982\u679c\u7528\u6237\u8981\u5f15\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 738, "\u5982\u679c\u8981\u4ee5\u67d0\u79cd\u6982\u7387\u5c06\u79cd\u5b50\u8282\u70b9\u7684\u5165\u8fb9\u968f\u673a\u5254\u9664": 755, "\u5982\u679c\u8bad\u7ec3\u811a\u672c\u91cc\u5305\u542b\u9700\u8981\u5728\u670d\u52a1\u5668": 738, "\u5982\u679c\u8be5api\u6ca1\u6709\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0id": 739, "\u5982\u679c\u8be5\u7c7b\u7ee7\u627f\u81ea": 733, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u4e0d\u662f\u5757": 759, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u662f\u4e00\u4e2a\u5757": 759, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5f20\u91cf\u5bf9": 759, "\u5982\u679c\u9700\u8981\u7684\u8bdd": 770, "\u5b50\u56fe\u5728dgl\u4e2d\u79f0\u4e3a\u533a\u5757": 763, "\u5b50\u56fe\u5757\u7684\u60c5\u51b5": 763, "\u5b50\u56fe\u662f\u4ece\u76f8\u540c\u7684\u6570\u636e\u52a0\u8f7d\u5668\u4ea7\u751f\u7684": 756, "\u5b50\u56fe\u91c7\u6837\u548c\u90bb\u5c45\u91c7\u6837\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u7528gpu\u8bad\u7ec3gnn\u6a21\u578b\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6d88\u8017": 757, "\u5b50\u6a21\u5757\u6839\u636e\u805a\u5408\u7c7b\u578b\u800c\u6709\u6240\u4e0d\u540c": 762, "\u5b50\u7c7b\u4e4b\u5916\u5b8c\u6210": 732, "\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570": 732, "\u5b58\u50a8\u4e86\u5212\u5206\u63a9\u7801": 735, "\u5b58\u50a8\u4e86\u8f93\u5165\u8282\u70b9\u7279\u5f81": 767, "\u5b58\u50a8\u5206\u533a\u7684\u56fe\u7ed3\u6784\u4ee5\u53ca\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u4e00\u4e9b\u5143\u6570\u636e": 739, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u533aid": 739, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u7684\u5206\u533aid": 739, "\u5b58\u50a8\u5c5e\u4e8e\u8be5\u5206\u533a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u7279\u5f81": 739, "\u5b58\u50a8\u6587\u4ef6\u7684\u8def\u5f84": 733, "\u5b58\u50a8\u9690\u5c42\u8868\u793a\u9700\u8981": 754, "\u5b5f\u51e1\u8363": 748, "\u5b83\u4e3a": 738, "\u5b83\u4ece\u805a\u5408\u4e0e\u66f4\u65b0\u7684\u89d2\u5ea6\u5f52\u7eb3\u603b\u7ed3\u4e86\u591a\u79cdgnn\u6a21\u578b\u7684\u5b9e\u73b0": 749, "\u5b83\u4eec\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684api\u76f8\u4f3c": 737, "\u5b83\u4eec\u4e3b\u8981\u88ab\u7528\u6765\u63d0\u4f9b\u56fe\u4fe1\u606f": 738, "\u5b83\u4eec\u53ea\u5305\u62ec\u4e00\u79cd\u5173\u7cfb": 747, "\u5b83\u4eec\u5b58\u50a8\u8282\u70b9\u548c\u8fb9id\u4e0e\u5206\u533aid\u4e4b\u95f4\u7684\u6620\u5c04": 739, "\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e": 738, "\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f\u5b57\u7b26\u4e32": 750, "\u5b83\u4eec\u786e\u4fdd\u6240\u6709\u90e8\u5206\u90fd\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u548c\u8fb9": 738, "\u5b83\u4eec\u901a\u8fc7": 742, "\u5b83\u4eec\u9075\u5faa\u4e86\u7531": 731, "\u5b83\u4eec\u90fd\u662f\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9": 763, "\u5b83\u5141\u8bb8\u7528\u6237\u4e3a\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u90e8\u5206\u90bb\u5c45\u8282\u70b9\u4ee5\u6c47\u805a\u4fe1\u606f": 755, "\u5b83\u5177\u6709": 766, "\u5b83\u5177\u6709\u4e0e\u5e38\u89c4\u5f20\u91cf\u76f8\u540c\u7684api": 738, "\u5b83\u5206\u6279\u8fed\u4ee3\u8bad\u7ec3\u8282\u70b9id\u6570\u7ec4": 760, "\u5b83\u52a0\u8f7d\u5206\u533a\u6570\u636e": 738, "\u5b83\u5305\u62ec": 764, "\u5b83\u53ef\u4ee5\u7528\u6700\u5c11\u7684\u8fb9\u5206\u5272\u4ee5\u751f\u6210\u5206\u533a": 739, "\u5b83\u53ef\u83b7\u53d6\u8282\u70b9\u7684\u6240\u6709\u90bb\u5c45": 760, "\u5b83\u5728\u5355\u4e2aapi\u8c03\u7528\u91cc\u5408\u5e76\u4e86\u6d88\u606f\u751f\u6210": 750, "\u5b83\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6240\u6709\u8ba1\u7b97": 738, "\u5b83\u5b9e\u73b0\u4e86\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u7684\u57fa\u672c\u6a21\u7248": 732, "\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9": 758, "\u5b83\u5c06\u4ee5\u72ec\u7acb\u6a21\u5f0f\u8fd0\u884c": 738, "\u5b83\u5c06\u751f\u6210\u4e24\u4e2a\u989d\u5916\u7684numpy\u6587\u4ef6": 739, "\u5b83\u5e94\u5f53\u4ee5\u539f\u56fe": 758, "\u5b83\u5e94\u8be5\u7ee7\u627f": 761, "\u5b83\u6307\u5b9a\u8282\u70b9\u96c6\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u7c7b\u578b\u7ea6\u675f": 747, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165": 746, "\u5b83\u662fgraphsage\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u56fe\u5377\u79ef\u6a21\u5757": 770, "\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 760, "\u5b83\u7528": 737, "\u5b83\u7ee7\u627f\u81ea": 732, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8282\u70b9": 750, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8fb9": 750, "\u5b83\u8fd4\u56de\u4ee5\u8fb9\u7c7b\u578b\u4e3a\u952e": 758, "\u5b83\u901a\u8fc7\u5c06\u8fb9\u4e0a\u7279\u5f81\u4e0e\u5176\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6d88\u606f": 749, "\u5b8b\u6021\u7136": 748, "\u5b8c\u5168\u76f8\u540c": 756, "\u5b8c\u6574\u7684\u5185\u7f6e\u91c7\u6837\u65b9\u6cd5\u6e05\u5355": 760, "\u5b98\u65b9\u7684": 734, "\u5b9a\u4e49": [738, 747], "\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9010\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u8ba1\u7b97": 749, "\u5b9a\u4e49\u6a21\u578b\u548c\u4f18\u5316\u5668": 737, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 760, "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [748, 754, 756, 760], "\u5b9e\u4f8b\u5316heterographconv": 770, "\u5b9e\u4f8b\u5316sageconv": 770, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad\u7684\u65b9\u6cd5\u4f9d\u7136\u9700\u8981\u4f7f\u7528": 757, "\u5b9e\u73b0\u903b\u8f91\u4e0e\u6d88\u606f\u4f20\u9012\u7ea7\u522b\u7684api": 764, "\u5b9e\u9645\u5e94\u7528\u4e2d": 769, "\u5bf9dataloader\u8fdb\u884c\u8fed\u4ee3": 760, "\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570": 766, "\u5bf9\u4e8e": 759, "\u5bf9\u4e8emxnet\u540e\u7aef": 761, "\u5bf9\u4e8epytorch\u540e\u7aef": 761, "\u5bf9\u4e8etensorflow\u540e\u7aef": 761, "\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26\u6743\u91cd\u7684\u56fe": 767, "\u5bf9\u4e8e\u4e00\u4e2a\u52a0\u6743\u56fe": 767, "\u5bf9\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5c42": 757, "\u5bf9\u4e8e\u4e00\u5143\u51fd\u6570": 750, "\u5bf9\u4e8e\u4e00\u822c\u7684pytorch\u6a21\u5757": 762, "\u5bf9\u4e8e\u4e8c\u5143\u51fd\u6570": 750, "\u5bf9\u4e8e\u4e8c\u5206\u56fe": 764, "\u5bf9\u4e8e\u5168\u90bb\u5c45\u91c7\u6837": 760, "\u5bf9\u4e8e\u5177\u6709\u4e24\u4e2a\u5173\u7cfb": 747, "\u5bf9\u4e8e\u5177\u6709\u5341\u4ebf\u7ea7\u6570\u91cf\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 739, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3": 738, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8bc4\u4f30": 738, "\u5bf9\u4e8e\u52a0\u6743\u56fe": 744, "\u5bf9\u4e8e\u540c\u6784\u56fe\u4e0a\u7684\u5168\u56fe\u8bad\u7ec3": 763, "\u5bf9\u4e8e\u56fe\u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b": 770, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc": 762, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4": 770, "\u5bf9\u4e8e\u591a\u4e2a\u8282\u70b9": 746, "\u5bf9\u4e8e\u5e95\u5c42\u7684\u91c7\u6837api": 738, "\u5bf9\u4e8e\u5f97\u5206\u7684\u9884\u6d4b": 758, "\u5bf9\u4e8e\u65e0\u5411\u7684\u56fe": 746, "\u5bf9\u4e8e\u65e0\u6cd5\u5168\u90e8\u8f7d\u5165\u7684\u60c5\u51b5": 765, "\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5": 751, "\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012": 750, "\u5bf9\u4e8e\u7279\u5b9a\u76ee\u6807\u8282\u70b9": 762, "\u5bf9\u4e8e\u79bb\u7ebf\u63a8\u65ad\u7684\u793a\u4f8b": 757, "\u5bf9\u4e8e\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 738, "\u5bf9\u4e8e\u8981\u62f7\u8d1d\u7684\u7279\u5f81": 747, "\u5bf9\u4e8e\u8bad\u7ec3\u811a\u672c": 737, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u6570\u91cf": 759, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u7279\u5f81": 759, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u6570\u91cf": 759, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 759, "\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1": 766, "\u5bf9\u4e8e\u8fd9\u4e2a\u5757": 755, "\u5bf9\u4e8e\u90bb\u5c45\u91c7\u6837": 755, "\u5bf9\u5176\u8fdb\u884c\u62c6\u5206": 738, "\u5bf9\u56fe\u8fdb\u884c\u5206\u533a\u7684\u8ba1\u7b97\u673a": 740, "\u5bf9\u5b83\u6240\u6709\u8282\u70b9\u7279\u5f81\u53d6\u5e73\u5747\u503c\u7684\u805a\u5408\u8bfb\u51fa\u516c\u5f0f\u5982\u4e0b": 768, "\u5bf9\u5e94\u4e8e\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b": 747, "\u5bf9\u5e94\u7740\u4e0b\u56fe\u6240\u793a\u7684\u5305\u542b4\u4e2a\u8282\u70b9\u7684\u56fe": 746, "\u5bf9\u5f02\u6784\u56fe\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u7684\u63a5\u53e3\u662f": 752, "\u5bf9\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u5408\u5e76\u7528\u6237\u6307\u5b9a\u7684\u7279\u5f81": 747, "\u5bf9\u6240\u6709\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u6c42\u548c": 768, "\u5bf9\u6bcf\u4e2a\u5173\u7cfb\u8ba1\u7b97\u548c\u805a\u5408\u6d88\u606f": 752, "\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u6d88\u606f": 752, "\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a": 766, "\u5bf9\u8c61": [738, 739, 743, 746], "\u5bf9\u8c61\u65f6": 743, "\u5bf9\u8c61\u67098\u6761\u8fb9": 743, "\u5bf9\u8c61\u6d88\u5931": 738, "\u5bf9\u8c61\u7684api": 734, "\u5bf9\u8c61\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 746, "\u5bf9\u8c61\u7684\u5217\u8868\u548c\u6807\u7b7e\u5f20\u91cf\u7684\u5217\u8868": 735, "\u5bf9\u8c61\u7684\u8282\u70b9\u548c\u8fb9\u53ef\u5177\u6709\u591a\u4e2a\u7528\u6237\u5b9a\u4e49\u7684": 744, "\u5bf9\u8f93\u5165\u8282\u70b9\u7279\u5f81": 759, "\u5bfc\u5165\u548c\u4fdd\u5b58": 732, "\u5bfc\u5165\u5904\u7406\u540e\u7684\u6570\u636e": 732, "\u5bfc\u5165\u6570\u636e": 735, "\u5c06": 759, "\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 739, "\u5c06\u4e00\u5f20\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u805a\u5408\u6210\u6574\u5f20\u56fe\u7684\u56fe\u8868\u793a": 768, "\u5c06\u4e0a\u8ff0\u56fe\u4f5c\u4e3a\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u8f93\u5165": 766, "\u5c06\u4e0e\u8f93\u5165\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u7279\u5f81\u52a0\u8f7d\u5230gpu\u4e0a": 760, "\u5c06\u4e0e\u8f93\u51fa\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u6807\u7b7e\u52a0\u8f7d\u5230gpu\u4e0a": 760, "\u5c06\u4e3a\u7a7a": 763, "\u5c06\u4ee5\u5206\u5e03\u5f0f\u6a21\u5f0f\u8fd0\u884c": 738, "\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u56fe\u7684\u5217\u8868": 760, "\u5c06\u4f1a\u62a5\u9519": 755, "\u5c06\u5176\u547d\u540d\u4e3a": 744, "\u5c06\u539f\u59cb\u6570\u636e\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8": 732, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe": 732, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 735, "\u5c06\u5757\u5217\u8868\u548c\u8f93\u5165\u8282\u70b9\u7279\u5f81\u4f20\u5165\u591a\u5c42gnn\u5e76\u83b7\u53d6\u8f93\u51fa": 760, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u4fdd\u5b58\u81f3": 732, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u7f13\u5b58\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 736, "\u5c06\u5f97\u5230\u7684\u56fe\u548c\u8f93\u5165\u7279\u5f81\u4f20\u5165\u4e0a\u8ff0\u6a21\u578b": 758, "\u5c06\u5fc5\u8981\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81\u590d\u5236\u5230gpu\u4e0a": 757, "\u5c06\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 735, "\u5c06\u6570\u636e\u96c6\u7684\u6709\u7528\u4fe1\u606f": 736, "\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55self": 733, "\u5c06\u6bcf\u4e2a\u7c7b\u578b\u6d88\u606f\u805a\u5408\u7684\u7ed3\u679c\u76f8\u52a0": 752, "\u5c06\u88ab\u6e05\u9664": 750, "\u5c06\u8ba1\u7b97\u673a": 740, "\u5c06\u8f93\u51fa\u590d\u5236\u56decpu": 757, "\u5c06\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 767, "\u5c0f\u6279\u6b21\u662f\u4e00\u4e2a\u5143\u7ec4": 734, "\u5c24\u5176\u662f\u5728\u5305\u542b\u5927\u91cf\u672a\u6807\u8bb0\u6570\u636e\u7684\u534a\u76d1\u7763\u7cfb\u7edf\u4e2d": 757, "\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 755, "\u5c31\u597d\u50cf\u8fd9\u4e9b\u8fb9\u6839\u672c\u4e0d\u5b58\u5728\u4e00\u6837": 756, "\u5c31\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u7684\u5e73\u5747\u503c\u8bfb\u51fa\u8ba1\u7b97": 768, "\u5c31\u662f\u56fe\u7684\u6a21\u5f0f": 747, "\u5c3d\u53ef\u80fd": 750, "\u5c42\u56fe\u5377\u79ef\u7f51\u7edc": 754, "\u5c42\u8fdb\u884c\u8ba1\u7b97": 754, "\u5c42\u9009\u62e9\u8be5\u6279\u6b21\u8282\u70b9\u7684\u5168\u90e8\u6216\u90e8\u5206\u90bb\u5c45\u8282\u70b9": 754, "\u5c5e\u4e8e\u53e6\u4e00\u7c7b\u578b\u7684\u53cd\u5411\u8fb9": 756, "\u5d4c\u5165": 737, "\u5df2\u7ecf\u8d2d\u4e70": 742, "\u5e26\u6807\u7b7e\u548c\u672a\u5e26\u6807\u7b7e": 739, "\u5e38\u7528\u7684\u5f02\u6784\u56fe": 742, "\u5e38\u7528\u7684\u805a\u5408\u7c7b\u578b\u5305\u62ec": 762, "\u5e38\u89c1\u7684\u66f4\u65b0\u64cd\u4f5c\u662f\u6839\u636e\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u6765\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u548c\u8fdb\u884c\u5f52\u4e00\u5316": 763, "\u5e38\u89c1\u7684\u805a\u5408\u65b9\u6cd5\u5305\u62ec": 768, "\u5e76\u4e14\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1": 738, "\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u8c03\u7528\u5b83\u65f6": 738, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u7ef4\u5ea6\u5e7f\u64ad": 750, "\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7": 755, "\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 750, "\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8868\u793a\u8bad\u7ec3": 738, "\u5e76\u4e14\u60f3\u5c06\u5176\u7528\u4e8e\u5757": 759, "\u5e76\u4e14\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u7684\u5b57\u5178": [756, 758], "\u5e76\u4e14\u6709\u591a\u4e2a\u5df2\u6709\u7684api\u53ef\u4ee5\u7b80\u5316\u6b64\u64cd\u4f5c": 732, "\u5e76\u4e14\u7528\u6237\u4e0d\u5e0c\u671b\u5728\u5efa\u6a21\u4e2d\u533a\u5206\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b": 747, "\u5e76\u4e14\u7528\u6237\u5e0c\u671b\u5bf9\u5d4c\u5165\u6267\u884c\u7a00\u758f\u66f4\u65b0": 738, "\u5e76\u4e14\u805a\u5408\u51fd\u6570\u7684\u8f93\u51fa\u503c\u5168\u4e3a0": 763, "\u5e76\u4e14\u904d\u5386\u79cd\u5b50\u8282\u70b9\u751f\u6210\u4e00\u7cfb\u5217\u7684\u5757": 755, "\u5e76\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u51fa\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u53ef\u80fd\u5f97\u5206": 766, "\u5e76\u4e3a\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4f7f\u7528\u4e00\u79cd\u56fe\u5377\u79ef\u6a21\u5757": 770, "\u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 766, "\u5e76\u4f5c\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u6700\u7ec8\u7ed3\u679c": 770, "\u5e76\u4f7f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5668\u5747\u53ef\u8bbf\u95ee\u5b83\u4eec": 738, "\u5e76\u5411\u672c\u5730\u8bad\u7ec3\u5668\u8fd4\u56de\u4e00\u90e8\u5206": 738, "\u5e76\u5411\u672c\u5730\u8fdb\u7a0b\u8fd4\u56de\u8282\u70b9\u7684\u5b50\u96c6": 738, "\u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528": 766, "\u5e76\u5728\u540c\u6837\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u5c06\u5206\u533a\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 737, "\u5e76\u5728\u6240\u6709\u673a\u5668\u4e0a\u542f\u52a8\u8bad\u7ec3\u4efb\u52a1": 737, "\u5e76\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u4fe1\u606f\u4f20\u9012": 770, "\u5e76\u5bf9\u5b83\u4eec\u5e94\u7528\u76f8\u540c\u7684\u64cd\u4f5c": 747, "\u5e76\u5bf9\u8282\u70b9\u548c\u8fb9\u91c7\u6837\u4ee5\u751f\u6210\u7528\u4e8e\u8bad\u7ec3\u7684\u5c0f\u6279\u6b21\u6570\u636e": 737, "\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5757": 755, "\u5e76\u5c06\u5206\u533a\u6570\u636e\u81ea\u52a8\u52a0\u8f7d\u5230\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e2d": 738, "\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u7a00\u758f\u4f18\u5316\u5668": 738, "\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d": 738, "\u5e76\u5c06\u751f\u6210\u7684\u5757\u5217\u8868\u653e\u5230gpu\u4e0a": 756, "\u5e76\u5c06\u751f\u6210\u7684\u5b50\u56fe\u5217\u8868\u653e\u5230gpu\u4e0a": 760, "\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728outputs\u5b57\u5178\u4e2d": 764, "\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237": 764, "\u5e76\u5c06\u8f93\u51fa\u4f5c\u4e3a\u8282\u70b9\u7684\u65b0\u7279\u5f81": 750, "\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u7ba1\u9053\u7684\u6bcf\u4e2a\u7ec4\u4ef6": 731, "\u5e76\u63d0\u53d6\u8f93\u51fa\u7684user\u8282\u70b9\u5d4c\u5165": 770, "\u5e76\u6709\u53ef\u80fd\u5229\u7528\u8fd9\u70b9": 756, "\u5e76\u7528\u5b83\u6784\u9020\u4e00\u4e2a\u5f02\u6784\u56fe": 747, "\u5e76\u7528\u5bf9\u5e94\u7684\u4e24\u4e2a\u7aef\u70b9id\u8868\u793a\u4e00\u6761\u8fb9": 746, "\u5e76\u8ba1\u7b97\u672c\u5730\u8fdb\u7a0b\u7684\u8282\u70b9": 737, "\u5e76\u8df3\u8fc7\u4ece\u6587\u4ef6\u6784\u5efa\u56fe\u7684\u5b9e\u73b0": 735, "\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u7684\u5b57\u5178": 770, "\u5e76\u8fd4\u56de\u6e90\u8282\u70b9id\u6570\u7ec4\u548c\u76ee\u6807\u8282\u70b9id\u6570\u7ec4": 758, "\u5e76\u901a\u8fc7\u5728\u8bad\u7ec3\u8282\u70b9\u4e0a\u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u6807\u7b7e\u6765\u8ba1\u7b97\u635f\u5931": 770, "\u5e76\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u4e2d\u5177\u6709\u5e42\u5f8b\u5206\u5e03\u7684\u56fe\u8fdb\u884c\u4e86\u4f18\u5316": 739, "\u5e94\u7528\u56fe\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570": 768, "\u5e95\u5c42api\u8981\u6c42\u7528\u6237\u7f16\u5199\u4ee3\u7801\u4ee5\u660e\u786e\u5b9a\u4e49\u5982\u4f55\u5bf9\u8282\u70b9\u5c42\u8fdb\u884c\u91c7\u6837": 738, "\u5efa\u7acb\u70b9\u548c\u8fb9\u7279\u5f81": 766, "\u5efa\u8bae\u7684\u5b9e\u73b0\u662f\u5c06\u7ebf\u6027\u64cd\u4f5c\u5206\u6210\u4e24\u90e8\u5206": 751, "\u5f02\u6784\u56fe": [741, 742, 748, 752, 763], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u540c\u6784\u56fe\u7684\u6a21\u578b\u8bad\u7ec3\u662f\u4e00\u6837\u7684": 770, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": [748, 761], "\u5f02\u6784\u56fe\u4e0a\u7684\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206": 752, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 760, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 769, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u548c\u540c\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6ca1\u6709\u592a\u5927\u533a\u522b": 769, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u6a21\u578b\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u51e0\u4e4e\u76f8\u540c": 758, "\u5f02\u6784\u56fe\u4e2d\u8282\u70b9\u7c7b\u578b\u7684\u987a\u5e8f": 747, "\u5f02\u6784\u56fe\u4e2d\u8fb9\u7c7b\u578b\u7684\u987a\u5e8f": 747, "\u5f02\u6784\u56fe\u4e3a\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u53ca\u5176\u76f8\u5173\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u63a5\u53e3": 747, "\u5f02\u6784\u56fe\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u8fb9\u7684\u7c7b\u578b": 765, "\u5f02\u6784\u56fe\u7684\u5377\u79ef\u64cd\u4f5c\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u53c2\u6570": 764, "\u5f02\u6784\u56fe\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u51e0\u4e4e\u76f8\u540c": 756, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 770, "\u5f02\u6784\u56fe\u91cc\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 747, "\u5f02\u6784\u7684": 742, "\u5f20\u5efa": 748, "\u5f20\u6000\u6587": 748, "\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570\u5fc5\u987b\u5728gpu\u4e0a": 745, "\u5f52\u4e00\u5316": 763, "\u5f52\u4e00\u5316\u53ef\u4ee5\u662fl2\u5f52\u4e00\u5316": 762, "\u5f53": 754, "\u5f531\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a0\u65f6": 763, "\u5f53\u4e00\u53f0\u673a\u5668\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u65f6": 738, "\u5f53\u4f7f\u7528": 743, "\u5f53\u524d": 738, "\u5f53\u524d\u4ec5\u652f\u6301\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 738, "\u5f53\u524d\u7248\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3api\u4ec5\u652f\u6301pytorch\u540e\u7aef": 737, "\u5f53\u524d\u7248\u672c\u7684\u5b9e\u73b0\u4ec5\u652f\u6301\u5177\u6709\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 737, "\u5f53\u5f15\u5165\u591a\u79cd\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u540e": 747, "\u5f53\u7528\u6237\u4f7f\u7528\u542f\u52a8\u811a\u672c\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 738, "\u5f53\u7528\u6237\u5728python\u547d\u4ee4\u884c\u6216jupyt": 738, "\u5f53\u811a\u672c\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 738, "\u5f53\u8bad\u7ec3\u811a\u672c\u5728\u8bad\u7ec3\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 738, "\u5f53\u8f93\u5165\u7279\u5f81": 763, "\u5f53\u8fb9\u7c7b\u578b\u552f\u4e00\u5730\u786e\u5b9a\u4e86\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u7684\u7c7b\u578b\u65f6": 747, "\u5f90\u4e1c\u8f89": 748, "\u5f97\u5206": 769, "\u5f97\u5230": 766, "\u5f97\u5230\u5757\u4e2d\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u521d\u59cb\u8282\u70b9id": 755, "\u5f97\u5230\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 759, "\u5f97\u5230\u8fb9id\u5230\u8f93\u5165\u8fb9\u754c\u4e2d\u8fb9\u7684\u521d\u59cbid\u7684\u6620\u5c04": 755, "\u5fc5\u987b\u5728": 738, "\u5fc5\u987b\u5728dgl\u7684\u4efb\u4f55\u5176\u4ed6\u5206\u5e03\u5f0fapi\u4e4b\u524d": 738, "\u5fc5\u987b\u5728\u521d\u59cb\u5316": 738, "\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8c03\u7528\u542f\u52a8\u811a\u672c": 740, "\u60c5\u51b5\u4f1a\u6709\u6240\u4e0d\u540c": 756, "\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f": 742, "\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570": 755, "\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u90bb\u5c45\u91c7\u6837\u7b56\u7565": 755, "\u60f3\u8981\u5b9e\u73b0\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u517c\u5bb9\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 754, "\u60f3\u8981\u7528dgl\u63d0\u4f9b\u7684\u90bb\u5c45\u91c7\u6837\u5668\u505a\u8fb9\u5206\u7c7b": 756, "\u60f3\u8d2d\u4e70": 742, "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528g": 764, "\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e2a\u96c6\u7fa4\u7684\u73af\u5883\u8bbe\u7f6e": 737, "\u6216": [742, 747, 759], "\u6216numpi": 746, "\u6216\u4e3a\u76f8\u5173\u5b9e\u4f53\u63a8\u8350\u8fdb\u884c\u6700\u8fd1\u90bb\u641c\u7d22\u6216\u6700\u5927\u5185\u79ef\u641c\u7d22": 769, "\u6216\u65e0\u5411\u56fe\u4e2d\u7684\u90bb\u5c45": 755, "\u6216\u662f": 742, "\u6216\u8005\u60f3\u8981\u5173\u4e8e\u5757\u7684\u66f4\u6df1\u5165\u7684\u4ecb\u7ecd": 760, "\u6216\u8005\u60f3\u8981\u5bf9\u5757\u7684\u6982\u5ff5\u6709\u66f4\u8be6\u7ec6\u7684\u4e86\u89e3": 756, "\u6240\u4ee5dgl\u4e0d\u63a8\u8350\u5728": 750, "\u6240\u4ee5\u5f53\u5c06\u65e0\u5411\u7684networkx\u56fe\u8f6c\u6362\u4e3a": 743, "\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u5c06\u5176\u9644\u52a0\u5230\u4f18\u5316\u5668\u4e0a\u4ee5\u8fdb\u884c\u5c0f\u6279\u91cf\u8bad\u7ec3": 738, "\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019": 736, "\u6240\u4ee5\u8fd9\u91cc\u96be\u4ee5\u679a\u4e3e\u6240\u6709\u9009\u9879": 743, "\u6240\u6709\u6d88\u606f\u4f20\u9012\u51fd\u6570": 768, "\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6709\u65b9\u5411\u7684": 746, "\u6240\u6709\u8282\u70b9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53": 742, "\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u5fc5\u987b\u8c03\u7528\u521b\u5efa": 738, "\u6240\u6709\u8fb9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5173\u7cfb": 742, "\u6240\u8ff0": 765, "\u6267\u884c\u542f\u52a8\u811a\u672c\u7684\u8ba1\u7b97\u673a": 740, "\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u5bf9\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u64cd\u4f5c": 750, "\u6269\u5c55\u4e3a": 763, "\u6279\u6b21": [748, 753, 760, 763, 765], "\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u5f20\u91cf\u5747\u901a\u8fc7\u5c06\u6240\u6709\u56fe\u4e0a\u7684\u76f8\u5e94\u7279\u5f81\u62fc\u63a5\u5f97\u5230": 768, "\u6279\u6b21\u5316\u7684\u56fe": 768, "\u6279\u91cf\u5f52\u4e00\u5316\u7b49": 768, "\u628a\u5b83\u5b58\u5728\u56fe\u4e2d\u7528\u6765\u505a\u6d88\u606f\u4f20\u9012": 752, "\u628a\u5b83\u7684\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u7684\u4e8c\u5206\u56fe": 755, "\u628a\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 767, "\u62bd\u53d6\u51fa\u6765": 764, "\u62c6\u5206\u8bad\u7ec3\u96c6": 737, "\u62f7\u8d1d\u8282\u70b9\u7279\u5f81": 747, "\u62f7\u8d1d\u8fb9\u7684\u7279\u5f81": 747, "\u62fc\u63a5": 751, "\u6307\u4ee3\u4e00\u6761": 746, "\u6307\u5411\u8282\u70b9": 746, "\u6307\u5b9a\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55\u6216\u5df2\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55": 732, "\u6307\u5b9a\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 740, "\u6307\u5b9a\u56fe\u7c7b\u578b": 763, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u5206\u533a\u6570\u636e\u7684\u76f8\u5bf9\u8def\u5f84": 740, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u7528\u6237\u7684\u8bad\u7ec3\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84": 740, "\u6307\u5b9a\u6bcf\u4e2a\u5173\u7cfb\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570": 752, "\u6307\u5b9a\u8bad\u7ec3\u673a\u5668\u4e2d\u5b58\u50a8\u4e0e\u5206\u5e03\u5f0f\u8bad\u7ec3\u6709\u5173\u7684\u6240\u6709\u6570\u636e\u7684\u76ee\u5f55": 740, "\u6307\u5b9a\u96c6\u7fa4\u7684ip\u914d\u7f6e\u6587\u4ef6": 740, "\u6307\u793a\u76f8\u5e94\u8282\u70b9\u548c\u8fb9\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u5f81\u5b57\u6bb5\u540d": 750, "\u6362\u53e5\u8bdd\u8bf4": 738, "\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570": 750, "\u63a5\u53d7\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684\u53c2\u6570": 750, "\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178": 752, "\u63a5\u53d7\u6765\u81ea\u540e\u7aef\u6846\u67b6\u7684\u4efb\u4f55\u8bbe\u5907\u5bf9\u8c61": 745, "\u63a5\u53e3\u53ef\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5f81": 744, "\u63a5\u53e3\u7684\u91cd\u8981\u8bf4\u660e": 744, "\u63a5\u6536\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u5f20\u91cf\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 770, "\u63a5\u7740\u8c03\u7528\u7528\u6237\u9884\u5148\u6ce8\u518c\u5728\u8be5\u5173\u7cfb\u4e0a\u7684nn\u6a21\u5757": 764, "\u63a8\u65ad": 738, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [737, 748], "\u63a8\u65ad\u7b97\u6cd5\u4e0d\u540c\u4e8e\u8bad\u7ec3\u7b97\u6cd5": 757, "\u63a8\u65ad\u7b97\u6cd5\u5c06\u5305\u542b\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 757, "\u63a8\u7406\u671f\u95f4\u5b9a\u4f4d\u8282\u70b9": 739, "\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u8868\u793a\u8bad\u7ec3": 738, "\u63a9\u7801": 732, "\u63a9\u7801\u5728pytorch\u548ctensorflow\u4e2d\u662fbool\u5f20\u91cf": 735, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee5\u56fe\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u62bd\u8c61": 741, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u540c\u6784\u56fe\u8282\u70b9\u5206\u7c7b\u7684\u4f8b\u5b50": 770, "\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd": 738, "\u63d0\u4f9b\u4e86\u4e00\u5c0f\u90e8\u5206": 738, "\u63d0\u4f9b\u4e86\u51e0\u4e2aapi\u6765\u8bbf\u95ee\u56fe\u7ed3\u6784": 738, "\u63d0\u4f9b\u4e86\u5bf9": 759, "\u63d0\u4f9b\u4e86\u63a5\u53e3\u4ee5\u5904\u7406\u56fe\u7684\u7ed3\u6784": 741, "\u63d0\u4f9b\u4e86\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 735, "\u63d0\u5230\u7684\u4e24\u5c42gcn\u4e3a\u4f8b": 757, "\u64cd\u4f5c": 750, "\u652f\u6301\u7d22\u5f15\u8bfb\u53d6\u548c\u5199\u5165": 738, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u975e\u5e38\u76f8\u4f3c": 756, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8fb9\u5206\u7c7b": 758, "\u6570\u636e\u5bfc\u5165": 735, "\u6570\u636e\u6587\u4ef6\u5939": 747, "\u6570\u636e\u6837\u672c\u7684\u6570\u91cf": 732, "\u6570\u636e\u96c6\u4e2d\u56fe\u7684\u6570\u91cf": 735, "\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u5f20\u56fe\u90fd\u6709\u5b83\u72ec\u7279\u7684\u7ed3\u6784\u548c\u8282\u70b9\u4e0e\u8fb9\u7684\u7279\u5f81": 768, "\u6570\u636e\u96c6\u4e2d\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u56fe": 735, "\u6570\u636e\u96c6\u4e5f\u53ea\u5305\u62ec\u4e00\u4e2a\u56fe": 734, "\u6570\u636e\u96c6\u7c7b\u4f3c": 734, "\u6574\u56fe\u5206\u7c7b": [735, 748, 765, 770], "\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f": 768, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a": 768, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u9700\u8981\u5728\u5f88\u591a\u56fe\u4e0a\u8fdb\u884c\u8bad\u7ec3": 768, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u4e0e\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u5178\u578b\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u96c6\u7c7b\u4f3c": 735, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u91cc\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\u662f\u4e00\u4e2a\u56fe\u548c\u5b83\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4": 768, "\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b": 768, "\u6574\u56fe\u5206\u7c7b\u6d41\u7a0b": 768, "\u6574\u56fe\u5206\u7c7b\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a": 768, "\u6587\u4ef6\u4e2d\u52a0\u8f7d": 743, "\u6587\u4ef6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5e94\u6307\u5b9a\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u7684\u76f8\u5bf9\u8def\u5f84": 740, "\u65b9\u4fbf\u5e7f\u5927\u4e2d\u6587\u7528\u6237\u7fa4\u5b66\u4e60\u548c\u4f7f\u7528dgl": 748, "\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\u9a8c\u8bc1": 746, "\u65b9\u6cd5": [753, 755], "\u65b9\u6cd5\u4ece\u6700\u540e\u4e00\u5c42\u5f00\u59cb\u751f\u6210\u4e00\u4e2a\u5757\u7684\u5217\u8868": 755, "\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b": 766, "\u65b9\u6cd5\u8ba1\u7b97\u9884\u6d4b\u503c\u5373\u53ef": 766, "\u65e0\u5411\u7684": 742, "\u65e0\u76d1\u7763\u5b66\u4e60graphsag": 758, "\u65e0\u9700\u8fdb\u884c\u6b64\u7c7b\u68c0\u9a8c": 763, "\u65f6": 738, "\u65f6\u5206\u5e03\u5f0f\u91c7\u6837\u4ee3\u7801\u4e0e\u5355\u8fdb\u7a0b\u91c7\u6837\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c": 738, "\u65f6\u8bbe\u7f6e": 756, "\u65f6\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u8fed\u4ee3": 756, "\u65f6\u9700\u8981\u6307\u5b9a\u8fb9\u7684\u7c7b\u578b": 766, "\u662f": 739, "\u662f1\u4e2a\u5143\u7ec4\u65f6": 763, "\u662f\u4e00\u4e2apython\u7c7b": 738, "\u662f\u4e00\u4e2a\u56fe\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u51c6\u6570\u636e\u96c6": 734, "\u662f\u4e00\u4e2a\u5728\u4e8c\u5206\u56fe\u4e0a\u505a\u8fb9\u5206\u7c7b\u7684\u4ee3\u7801\u793a\u4f8b": 756, "\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u90bb\u5c45\u91c7\u6837\u5668\u7c7b": 755, "\u662f\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\u7684\u51fd\u6570": 755, "\u662f\u4e00\u4e2a\u9ad8\u7ea7api": 750, "\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 756, "\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 741, "\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u7684": 769, "\u662f\u4ee5\u8fb9\u7c7b\u578b\u5b57\u5178\u548c\u9884\u6d4b\u7ed3\u679c\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 758, "\u662f\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 752, "\u662f\u5426\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f": 732, "\u662f\u5426\u91cd\u65b0\u5bfc\u5165\u6570\u636e\u96c6": 732, "\u662f\u56fe": 768, "\u662f\u5904\u7406": 732, "\u662f\u5b9a\u4e49\u5728\u6bcf\u6761\u8fb9\u4e0a\u7684\u6d88\u606f\u51fd\u6570": 749, "\u662f\u5bf9\u5e94\u6bcf\u4e2a\u5173\u7cfb": 764, "\u662f\u5e38\u6570\u9879\u8d85\u53c2\u6570": 769, "\u662f\u7528\u4e8e\u7279\u5f81\u5f52\u4e00\u5316\u7684\u53ef\u8c03\u7528\u51fd\u6570": 762, "\u662f\u805a\u5408\u51fd\u6570": 764, "\u662f\u8282\u70b9": 768, "\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55": 740, "\u662f\u987e\u5ba2": 742, "\u6635\u79f0": 748, "\u6682\u4e0d\u652f\u6301\u7a00\u758f\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 738, "\u66f4\u591a\u7ec6\u8282": 735, "\u66f4\u591a\u8be6\u7ec6\u7528\u6cd5\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357": 753, "\u66f4\u65b0\u51fd\u6570": [749, 750], "\u66f4\u65b0\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u53c2\u6570": 750, "\u66ff\u6362\u4e3a": 759, "\u6700\u540e": [764, 768], "\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b": 770, "\u6700\u7b80\u5355\u7684\u90bb\u5c45\u91c7\u6837\u5668\u662f": 760, "\u6709": 750, "\u67093\u4e2a\u6587\u4ef6\u4ee5dgl\u683c\u5f0f\u5b58\u50a8\u5206\u533a\u6570\u636e": 739, "\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9002\u5408\u4fdd\u5b58\u5904\u7406\u8fc7\u7684\u6570\u636e": 736, "\u6709\u5173dgl\u7684\u5185\u7f6e\u91c7\u6837\u5668\u7684\u5b8c\u6574\u5217\u8868": 756, "\u6709\u5173dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5982\u4f55\u5de5\u4f5c": 770, "\u6709\u5173\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 735, "\u6709\u5173\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 735, "\u6709\u5173\u8bad\u7ec3\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 735, "\u6709\u5173\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 735, "\u6709\u5206\u5e03\u5f0f\u7684\u7248\u672c": 738, "\u6709\u5411": 742, "\u6709\u5411\u7684": 742, "\u6709\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u53ef\u50a8\u5b58\u56fe": 743, "\u6709\u65f6\u5e0c\u671b\u4ece\u8ba1\u7b97\u4f9d\u8d56\u4e2d\u5220\u9664\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u8fb9": 756, "\u6709\u65f6\u7528\u6237\u4f1a\u60f3\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 765, "\u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c": 766, "\u6709\u65f6\u8fb9\u4e0a\u7684\u6d88\u606f\u53ef\u80fd\u662f\u9ad8\u7ef4\u7684": 751, "\u6709\u7740\u8bb8\u591a\u4f7f\u7528\u8282\u70b9\u5d4c\u5165\u7684\u65b9\u6cd5": 769, "\u670d\u52a1\u5668": 737, "\u670d\u52a1\u5668\u8fdb\u7a0b": 737, "\u670d\u52a1\u5668\u8fdb\u7a0b\u8d1f\u8d23\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570": 738, "\u672a\u52a0\u6743\u7684": 742, "\u672a\u6765dgl\u5c06\u652f\u6301\u5206\u5e03\u5f0f\u56fe\u5212\u5206": 739, "\u672c\u4f8b\u4e2d\u7701\u7565": 770, "\u672c\u7ae0\u4e2d\u9009\u62e9": 770, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u5927\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u65b9\u6cd5": 754, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e3a\u7528\u6237\u81ea\u5df1\u7684\u56fe\u6570\u636e\u521b\u5efa\u4e00\u4e2adgl\u6570\u636e\u96c6": 731, "\u672c\u7ae0\u4ee3\u7801\u4f7f\u7528pytorch\u4f5c\u4e3adgl\u7684\u540e\u7aef\u6846\u67b6": 765, "\u672c\u7ae0\u4f1a\u4ee5\u4e0b\u9762\u4ee3\u7801\u6240\u521b\u5efa\u7684\u4e00\u4e2a\u5f02\u6784\u56fe\u4e3a\u4f8b": 765, "\u672c\u7ae0\u4f59\u4e0b\u7684\u5c0f\u8282\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4e3b\u9898": 754, "\u672c\u7ae0\u5047\u8bbe\u7528\u6237\u7684\u56fe\u4ee5\u53ca\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u90fd\u80fd\u5b58\u8fdbgpu": 765, "\u672c\u7ae0\u5171\u6709\u56db\u8282": 765, "\u672c\u7ae0\u5c06\u4f7f\u7528pytorch\u4f5c\u4e3a\u540e\u7aef": 761, "\u672c\u7ae0\u7684": 770, "\u672c\u7ae0\u7684\u524d\u534a\u90e8\u5206\u4ecb\u7ecd\u4e86\u4e0d\u540c\u573a\u666f\u4e0b\u5982\u4f55\u8fdb\u884c\u968f\u673a\u8bad\u7ec3\u7684\u65b9\u6cd5": 754, "\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5206\u5e03\u5f0f\u7ec4\u4ef6": 737, "\u672c\u7ae0\u7684\u540e\u7eed\u90e8\u5206\u5c55\u793a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5": 732, "\u672c\u7ae0\u7684\u5f02\u6784\u56fe\u6837\u4f8b\u6570\u636e": 766, "\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u89e3\u91ca\u4e86\u5982\u4f55\u5728\u5f02\u6784\u56fe\u4e0a\u5b9e\u73b0\u6d88\u606f\u4f20\u9012": 749, "\u672c\u7ae0\u901a\u8fc7\u4f7f\u7528": 765, "\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u4e86dgl\u7684\u6d88\u606f\u4f20\u9012api": 749, "\u672c\u7ae0\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e86\u56fe\u7684\u5b9a\u4e49": 741, "\u672c\u8282\u4e0d\u6d89\u53ca\u901a\u8fc7\u8f6c\u6362\u5176\u4ed6\u56fe\u6765\u751f\u6210\u56fe\u7684\u51fd\u6570": 743, "\u672c\u8282\u4ec5\u7ed9\u51fa\u4e00\u4e9b\u5e38\u89c1\u683c\u5f0f\u7684\u4e00\u822c\u60c5\u51b5": 743, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728gpu\u663e\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u5c0f\u6279\u6b21\u5904\u7406\u548c\u90bb\u5c45\u91c7\u6837\u5b9e\u73b0\u5168\u56fe\u524d\u5411\u4f20\u64ad\u7684\u65b9\u6cd5": 757, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97api": 738, "\u672c\u8282\u4ee5\u5185\u7f6e\u6570\u636e\u96c6": 735, "\u672c\u8282\u4ee5\u5185\u7f6e\u7684\u6570\u636e\u96c6": 735, "\u672c\u8282\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u7684\u57fa\u672c\u7528\u6cd5": 734, "\u672c\u8282\u4f1a\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u7528\u6237\u81ea\u5df1\u7684\u91c7\u6837\u5668\u5e76\u5c06\u5176\u52a0\u5165\u5230gnn\u7684\u8bad\u7ec3\u6846\u67b6\u4e2d": 755, "\u672c\u8282\u4f7f\u7528dgl\u5185\u7f6e\u7684\u6570\u636e\u96c6": 770, "\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5904\u7406\u4e0e\u8fd9\u4e9b\u4efb\u52a1\u76f8\u5173\u7684\u6570\u636e\u96c6": 735, "\u672c\u8282\u628a\u8282\u70b9": 769, "\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5904\u7406\u56fe": 735, "\u672c\u8d28\u4e0a": 759, "\u673a\u5668\u96c6\u7fa4\u4e0a": 740, "\u674e\u5e86\u6807": 748, "\u6765\u4fdd\u5b58\u56fe\u7684\u70b9id": 746, "\u6765\u505a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\u6570\u636e\u96c6": 735, "\u6765\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u5757\u7684\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 760, "\u6765\u5904\u7406zip\u6587\u4ef6": 733, "\u6765\u5c55\u793a\u6a21\u578b\u7684\u8bad\u7ec3": 770, "\u6765\u5e73\u8861\u6bcf\u4e2a\u7c7b\u578b\u8282\u70b9\u5728\u5b50\u56fe\u4e2d\u7684\u5165\u5ea6": 739, "\u6765\u5f00\u53d1\u6d88\u606f\u4f20\u9012\u529f\u80fd": 751, "\u6765\u6307\u4ee3\u8fd9\u4e24\u4e2a\u5173\u7cfb\u662f\u53ef\u4ee5\u7684": 747, "\u6765\u6307\u5b9a\u6574\u5408\u4e0d\u540c\u5173\u7cfb\u805a\u5408\u7ed3\u679c\u7684\u65b9\u5f0f": 752, "\u6765\u6307\u793a\u6b64\u591a\u4efb\u52a1\u6570\u636e\u96c6\u4e2d\u7684\u9884\u6d4b\u4efb\u52a1\u603b\u6570": 735, "\u6765\u66ff\u6362\u56fe": 760, "\u6765\u67e5\u770bdgl\u7684\u5185\u7f6e\u6a21\u578b\u6a21\u5757\u662f\u5426\u652f\u6301\u63a5\u53d7": 760, "\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684\u6570\u636e\u96c6": 735, "\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 765, "\u6765\u81eanetworkx": 743, "\u6765\u81eascipi": 743, "\u6765\u81ea\u52a8\u5b8c\u6210": 733, "\u6765\u83b7\u53d6\u8282\u70b9": 737, "\u6765\u83b7\u53d6\u88ab\u5212\u5206\u7684\u56fe\u5206\u533a\u6570\u636e": 737, "\u6765\u83b7\u5f97\u5206\u7c7b\u8f93\u51fa": 768, "\u6765\u8ba1\u7b97\u8282\u70b9\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 769, "\u6765\u8ba1\u7b97\u8fb9\u7684\u5206\u6570": 758, "\u6765\u8bbf\u95ee\u8282\u70b9\u548c\u8fb9\u4e2d\u7684\u6570\u636e": 738, "\u6765\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 758, "\u6784\u5efa\u4e00\u4e2a2\u5c42\u7684gnn\u6a21\u578b": 770, "\u6784\u5efa\u4e86\u4e00\u4e2a\u65e0\u5411\u7684networkx\u56fe": 743, "\u6784\u5efa\u56fe": 735, "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": [748, 759, 765, 770], "\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u6ce8\u518c\u548c\u524d\u5411\u4f20\u64ad\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u64cd\u4f5c\u4e0e\u540e\u7aef\u6846\u67b6\u4e00\u6837": 761, "\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1": 762, "\u6784\u9020\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u4e86": 762, "\u6807\u7b7e": [732, 735], "\u6807\u7b7e\u548c\u6570\u636e\u96c6\u5212\u5206\u7684\u63a9\u7801": 732, "\u6807\u7b7e\u6570\u7b49\u57fa\u672c\u4fe1\u606f": 732, "\u6807\u91cf\u6574\u578b\u7279\u5f81": 744, "\u6829\u6829\u7684\u590f\u5929": 748, "\u6839\u636e": 766, "\u6839\u636edgl\u6240\u4f7f\u7528\u7684\u540e\u7aef\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 761, "\u6839\u636e\u4efb\u52a1\u8bbe\u8ba1\u5206\u7c7b\u5c42": 768, "\u6839\u636e\u5176\u590d\u6742\u6027": 752, "\u6839\u636e\u5f53\u524d\u7684\u4efb\u52a1\u60c5\u51b5": 739, "\u6839\u636e\u8fd9\u4e2a\u826f\u597d\u7684\u6027\u8d28": 768, "\u6839\u636e\u9700\u8981\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u6765\u9009\u62e9": 759, "\u68c0\u67e5": 733, "\u68c0\u67e5\u5728": [732, 736], "\u68c0\u6d4b\u8f93\u5165\u56fe\u5bf9\u8c61\u662f\u5426\u7b26\u5408\u89c4\u8303": 763, "\u6a21\u5757": [748, 759, 765, 770], "\u6a21\u5757\u4e2d": 763, "\u6a21\u5757\u4f5c\u4e3a\u56fe\u5377\u79ef\u5c42": 768, "\u6a21\u5757\u63a5\u53d7\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684": 760, "\u6a21\u5757\u9996\u5148\u5bf9\u6bcf\u79cd\u8fb9\u7c7b\u578b\u8fdb\u884c\u5355\u72ec\u7684\u56fe\u5377\u79ef\u8ba1\u7b97": 770, "\u6a21\u578b": 738, "\u6a21\u578b\u4e2d\u5e94\u7279\u522b\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9": 768, "\u6a21\u578b\u5b9a\u4e49": 737, "\u6a21\u578b\u5b9a\u4e49\u5b8c\u6210\u540e": 768, "\u6a21\u578b\u5b9e\u73b0\u4f4d\u4e8e": 768, "\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6\u4e2d": 766, "\u6a21\u578b\u5c06": 756, "\u6a21\u578b\u63a5\u53d7\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868": 756, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u51e0\u4e4e\u76f8\u540c": 760, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c": 756, "\u6a21\u578b\u7684\u8f93\u5165\u662f\u5e26\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u7684\u6279\u6b21\u5316\u56fe": 768, "\u6a21\u578b\u8bad\u7ec3\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u4f4d\u4e8e": 768, "\u6a21\u578b\u8bad\u7ec3\u7684\u5faa\u73af": 737, "\u6b22\u8fce\u7ed9dgl\u8d21\u732e\u66f4\u591a\u7684\u6a21\u5757": 761, "\u6b63\u5728\u9500\u552e": 742, "\u6b63\u6837\u672c": 758, "\u6b64\u51fd\u6570\u5bf9": 750, "\u6b64\u521b\u5efa\u8fc7\u7a0b\u624d\u80fd\u6210\u529f": 738, "\u6b64\u5904\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49gnn\u6a21\u5757\u7684\u4e00\u4e2a\u793a\u4f8b": 759, "\u6b64\u5916": [735, 745, 747], "\u6b64\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5": 738, "\u6b64\u8c03\u7528\u901a\u8fc7\u5c06\u6e90\u8282\u70b9\u7279\u5f81": 750, "\u6bcf\u4e00\u6761\u8fb9": 769, "\u6bcf\u4e2a": 734, "\u6bcf\u4e2a\u5173\u7cfb\u4e0a\u7684dgl": 764, "\u6bcf\u4e2a\u5173\u7cfb\u7531\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4": 747, "\u6bcf\u4e2a\u56fe\u7684\u6807\u7b7e\u6570": 735, "\u6bcf\u4e2a\u8282\u70b9\u7279\u5f81\u5177\u6709\u552f\u4e00\u540d\u79f0": 744, "\u6bcf\u4e2a\u8fb9\u7279\u5f81\u4e5f\u5177\u6709\u552f\u4e00\u540d\u79f0": 744, "\u6bcf\u53f0\u8ba1\u7b97\u673a\u8d1f\u8d23\u4e00\u4e2a\u4e14\u53ea\u8d1f\u8d23\u4e00\u4e2a\u5206\u533a": 738, "\u6bcf\u5c42\u53ea\u5c55\u793a\u524d3\u4e2a\u5c0f\u6279\u6b21": 757, "\u6bcf\u6761\u8fb9\u7684\u6743\u91cd": 744, "\u6bcf\u6761\u8fb9\u90fd\u4e0e\u4e00\u4e2a\u6807\u91cf\u6743\u91cd\u503c\u76f8\u5173\u8054": 742, "\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u91cf\u6743\u91cd": 767, "\u6bcf\u6b21\u68af\u5ea6\u4e0b\u964d": 754, "\u6bcf\u79cd\u5173\u7cfb\u5bf9\u5e94\u4e00\u4e2a": 763, "\u6bcf\u8282\u5bf9\u5e94\u4e00\u79cd\u56fe\u5b66\u4e60\u4efb\u52a1": 765, "\u6bcf\u884c\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 740, "\u6bd4\u5982": [751, 762], "\u6bd4\u5982gml\u6216json": 747, "\u6bd4\u5982\u5217\u8868": 746, "\u6bd4\u5982\u5728": 763, "\u6c88\u6210": 748, "\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u8fb9": 755, "\u6ca1\u6709\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u5c31\u6ca1\u6709\u660e\u786e\u7684\u8fd4\u56de\u503c": 747, "\u6ce8\u518c\u53c2\u6570\u548c\u5b50\u6a21\u5757": 762, "\u6ce8\u518c\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u6216\u8005\u5b50\u6a21\u5757": 762, "\u6ce8\u610f": [743, 747, 757, 759, 765], "\u6ce8\u610f\u7ed3\u679c\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u7279\u5f81": 752, "\u6ce8\u610f\u8ba1\u7b97\u65b9\u6cd5\u662f\u4e00\u6837\u7684": 757, "\u6d4b\u8bd5\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u5e94\u8282\u70b9": 738, "\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e": 770, "\u6d88\u606f\u4f20\u9012\u662f\u5b9e\u73b0gnn\u7684\u4e00\u79cd\u901a\u7528\u6846\u67b6\u548c\u7f16\u7a0b\u8303\u5f0f": 749, "\u6d88\u606f\u4f20\u9012\u7684\u5b9a\u4e49\u662f": 755, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [748, 765, 766, 770], "\u6d88\u606f\u4f20\u9012\u9700\u8981\u805a\u96c6\u5176\u90bb\u5c45": 755, "\u6d88\u606f\u51fd\u6570": 750, "\u6d88\u606f\u7684\u5185\u7f6e\u51fd\u6570\u7684\u547d\u540d\u7ea6\u5b9a\u662f": 750, "\u6d88\u606f\u805a\u5408\u548c\u8282\u70b9\u7279\u5f81\u66f4\u65b0": 750, "\u6e38\u620f": 747, "\u6e90": [750, 751], "\u6e90\u4ee3\u7801": 735, "\u6e90\u6587\u4ef6\u4e2d\u7684": 768, "\u6e90\u8282\u70b9": 758, "\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u76f8\u540c": 763, "\u6e90\u8282\u70b9\u7279\u5f81": 763, "\u6e90\u8282\u70b9\u7c7b\u578b": 747, "\u6fc0\u6d3b\u51fd\u6570": 763, "\u70b9\u4e0a\u8ba1\u7b97": 749, "\u7136\u540e": [760, 770], "\u7136\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e9b": 741, "\u7136\u540e\u540c\u6837\u901a\u8fc7\u8c03\u7528": 766, "\u7136\u540e\u5728\u5b50\u56fe\u4e0a\u8c03\u7528": 753, "\u7136\u540e\u5728\u7f51\u7edc\u7684\u7b2c": 754, "\u7136\u540e\u5bf9\u6240\u6709\u6d88\u606f\u6c42\u548c\u6765\u66f4\u65b0\u8282\u70b9\u7279\u5f81": 750, "\u7136\u540e\u5c06\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4e0a\u7684\u6d88\u606f\u805a\u5408\u7ed3\u679c\u518d\u76f8\u52a0": 770, "\u7136\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u8fb9\u7684": 750, "\u7136\u540e\u5c06\u8be5\u5b50\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 747, "\u7136\u540e\u5e94\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42": 751, "\u7136\u540e\u6839\u636e\u56fe\u7c7b\u578b\u6269\u5c55\u8f93\u5165\u7279\u5f81": 763, "\u7136\u540e\u8bb2\u89e3\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u5728\u70b9\u548c\u8fb9\u4e0a\u4f7f\u7528\u8fd9\u4e9bapi": 749, "\u7136\u800c": 757, "\u7269\u54c1": [741, 742], "\u7279\u5f81": [732, 747], "\u7279\u5f81\u4e0a": 750, "\u7279\u5f81\u4e5f\u5fc5\u987b\u5728gpu\u4e0a": 745, "\u7279\u5f81\u548c\u5212\u5206\u63a9\u7801\u7684\u6807\u51c6\u65b9\u6cd5": 735, "\u7279\u5f81\u548c\u76ee\u6807\u8282\u70b9\u7684": 750, "\u7279\u5f81\u5c3a\u5bf8\u662f7": 768, "\u7279\u5f81\u5f20\u91cf\u4f7f\u7528": 744, "\u7279\u5f81\u6570\u636e\u4e5f\u62f7\u8d1d\u5230\u4e86gpu\u4e0a": 745, "\u7279\u5f81\u6c42\u548c": 750, "\u7279\u6b64\u81f4\u8c22\u4e0b\u8ff0\u8d21\u732e\u8005": 748, "\u72ec\u7acb\u6a21\u5f0f\u8981\u6c42\u8f93\u5165\u56fe\u4ec5\u5177\u6709\u4e00\u4e2a\u5206\u533a": 738, "\u738b\u5efa\u6c11": 748, "\u73a9": 747, "\u751f\u6210\u8fb9\u754c": 755, "\u7528": [737, 746, 761], "\u7528\u4e8e\u5206\u5e03\u5f0f\u56fe\u7684": 738, "\u7528\u4e8e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684": 738, "\u7528\u4e8e\u521d\u59cb\u5316": 738, "\u7528\u4e8e\u5728dgl\u4e2d\u81ea\u5b9a\u4e49\u56fe\u6570\u636e\u96c6\u7684\u6a21\u677f": 732, "\u7528\u4e8e\u5728\u673a\u5668\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1": 740, "\u7528\u4e8e\u5b9a\u4e49\u5f02\u6784\u56fe\u4e0agnn\u6a21\u5757": 764, "\u7528\u4e8e\u5bf9\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u91c7\u6837\u4ee5\u751f\u6210\u5c0f\u6279\u6b21\u8bad\u7ec3\u6570\u636e": 738, "\u7528\u4e8e\u5c06\u56fe\u5206\u533a\u590d\u5236\u5230\u96c6\u7fa4": 740, "\u7528\u4e8e\u6307\u5b9a\u56fe\u7c7b\u578b\u5e76\u5c06": 763, "\u7528\u4e8e\u8bbf\u95ee\u5176\u5143\u6570\u636e": 738, "\u7528\u4e8e\u8bbf\u95ee\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d\u7684\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 738, "\u7528\u4ece0\u5f00\u59cb\u7684\u8fde\u7eed\u6574\u6570\u91cd\u65b0\u6807\u8bb0\u6240\u6709\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 747, "\u7528\u4fdd\u5b58\u7684\u8fb9\u7279\u5f81\u4e0e\u5bf9\u5e94\u8fb9\u7684\u539f\u59cb\u6d88\u606f\u76f8\u4e58": 767, "\u7528\u6237": [741, 742, 747], "\u7528\u6237\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5b83": 750, "\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528mlp": 766, "\u7528\u6237\u4e5f\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a": 766, "\u7528\u6237\u4ec5\u9700\u5bf9\u5355\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3": 737, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 755, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528": 760, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8282\u70b9": 758, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7": 739, "\u7528\u6237\u53ea\u9700\u4f7f\u7528\u65b0\u7684\u8282\u70b9\u548c\u8fb9\u7684id": 739, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 760, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u51fa\u8282\u70b9\u7684\u6807\u7b7e": 760, "\u7528\u6237\u53ea\u9700\u8981\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a": 766, "\u7528\u6237\u53ef\u4ee5\u4ece\u8fd4\u56de\u7684\u5b57\u5178\u4e2d\u63d0\u53d6": 770, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528": [756, 770], "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u50cfpandas\u8fd9\u6837\u7684\u5305\u5148\u5c06csv\u6587\u4ef6\u89e3\u6790\u4e3anumpy\u6570\u7ec4\u6216\u6846\u67b6\u5f20\u91cf": 747, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 750, "\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u52a0\u8f7d\u5668": 755, "\u7528\u6237\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5c06\u8bad\u7ec3\u96c6": 739, "\u7528\u6237\u53ef\u4ee5\u53c2\u7167": 757, "\u7528\u6237\u53ef\u4ee5\u53c2\u8003": [735, 755, 756, 758, 760], "\u7528\u6237\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u7f6e\u6570\u636e\u96c6": 735, "\u7528\u6237\u53ef\u4ee5\u53ea\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4\u6765\u6307\u5b9a\u8fb9\u7c7b\u578b": 747, "\u7528\u6237\u53ef\u4ee5\u5728": [735, 770], "\u7528\u6237\u53ef\u4ee5\u5728\u5b9e\u4f8b\u5316": 756, "\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u6709\u5173\u6570\u636e\u96c6\u7684\u56fe": 732, "\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b": 768, "\u7528\u6237\u53ef\u4ee5\u5bf9\u8981\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b\u6784\u9020\u4e00\u4e2a\u8d1f\u91c7\u6837\u56fe": 769, "\u7528\u6237\u53ef\u4ee5\u5c06": 738, "\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6cbf\u6240\u6709\u5165\u8fb9\u4f20\u9012\u6d88\u606f\u7684\u8fb9\u754c": 755, "\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u6807\u7b7e\u4f7f\u7528": 766, "\u7528\u6237\u53ef\u4ee5\u5c06\u6743\u91cd\u50a8\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 744, "\u7528\u6237\u53ef\u4ee5\u5c06\u7528\u4e8e\u5757\u7684\u8bed\u53e5\u548c\u539f\u5148\u7528\u4e8e\u6574\u56fe\u7684\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83": 759, "\u7528\u6237\u53ef\u4ee5\u5c06\u91c7\u6837\u5668\u5bf9\u8c61\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668\u5bf9\u8c61": 755, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u62d3\u5c55\u4e3a\u5bf9\u591a\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 769, "\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u5173\u7cfb\u5207\u7247\u7684\u65b9\u5f0f\u521b\u5efa\u8fd9\u4e2a\u56fe": 766, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u4f7f\u7528": 735, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6a21\u578b\u7684\u8bad\u7ec3": 770, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199\u9884\u6d4b\u6a21\u5757": 766, "\u7528\u6237\u53ef\u4ee5\u6309\u8282\u70b9\u7c7b\u578b\u6765\u83b7\u53d6\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 755, "\u7528\u6237\u53ef\u4ee5\u67e5\u9605": 760, "\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027": 735, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u590d\u7528\u5b83": 756, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 770, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528": 756, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528graphdataload": 768, "\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u7f16\u5199\u5728\u6240\u6709\u8fb9\u4e0a\u8fdb\u884c\u9884\u6d4b\u7684\u5168\u56fe\u8bad\u7ec3\u4ee3\u7801": 766, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": [755, 768], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nn\u6a21\u5757\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c\u6765\u7ed9nn\u6a21\u5757\u589e\u52a0\u8fb9\u6743\u91cd\u652f\u6301": 767, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u4f20\u5165\u4e24\u4e2agpu\u5f20\u91cf\u6765\u521b\u5efagpu\u4e0a\u7684": 745, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u4fdd\u7559\u7684\u5173\u7cfb\u6765\u521b\u5efa\u5f02\u6784\u56fe\u7684\u5b50\u56fe": 747, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8fb9": 758, "\u7528\u6237\u53ef\u4ee5\u904d\u5386\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u83b7\u5f97\u7531\u5c0f\u6279\u6b21\u8fb9\u7ec4\u6210\u7684\u5b50\u56fe": 756, "\u7528\u6237\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528": 769, "\u7528\u6237\u53ef\u4ee5\u91cd\u7528\u5728\u8fb9\u5206\u7c7b": 758, "\u7528\u6237\u53ef\u5c06\u4e00\u7cfb\u5217\u7684\u56fe\u5efa\u7acb\u6210\u4e00\u4e2a\u56fe\u6279\u6b21": 768, "\u7528\u6237\u53ef\u5c06\u5176\u4f20\u7ed9\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a": 768, "\u7528\u6237\u53ef\u5c06\u591a\u5f20\u56fe\u7ec4\u6210\u4e00\u4e2a\u6279\u6b21": 768, "\u7528\u6237\u53ef\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6": 770, "\u7528\u6237\u53ef\u80fd\u4f1a\u9700\u8981\u6807\u51c6\u5316\u539f\u59cb\u8fb9\u6743\u91cd": 767, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6cbf\u7740\u6240\u6709\u8fb9\u7c7b\u578b\u4ece\u90bb\u5c45\u90a3\u91cc\u6536\u96c6\u6d88\u606f": 770, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9": 769, "\u7528\u6237\u53ef\u80fd\u9700\u8981\u5c06\u4e00\u4e9b\u5173\u7cfb\u5408\u5e76": 747, "\u7528\u6237\u5728\u8bad\u7ec3\u8fb9\u5206\u7c7b\u6a21\u578b\u65f6": 756, "\u7528\u6237\u5728\u8c03\u7528dglgraph": 747, "\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 750, "\u7528\u6237\u5c06\u9700\u8981\u4e00\u53f0\u5927\u5185\u5b58\u7684\u673a\u5668\u6765\u5bf9\u56fe\u8fdb\u884c\u5212\u5206": 739, "\u7528\u6237\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b": 768, "\u7528\u6237\u5e0c\u671b\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e94\u7528\u4e0d\u540c\u7684\u64cd\u4f5c": 747, "\u7528\u6237\u5fc5\u987b\u5b9e\u73b0": 735, "\u7528\u6237\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5757": 760, "\u7528\u6237\u6307\u5357\u5c06\u4ee5\u5185\u7f6e\u6570\u636e\u96c6\u4e3a\u4f8b": 735, "\u7528\u6237\u6700\u597d\u4f7f\u7528": 746, "\u7528\u6237\u6709\u65f6\u4f1a\u5e0c\u671b\u4ece\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u56fe\u4e2d\u5220\u53bb\u90e8\u5206\u8fb9\u53ca\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9": 756, "\u7528\u6237\u7684\u4efb\u52a1\u662f\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 766, "\u7528\u6237\u81ea\u5df1\u7684\u8bad\u7ec3\u4ee3\u7801": 735, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5411\u7c7b\u6dfb\u52a0\u5c5e\u6027\u4ee5\u6307\u793a\u4e00\u4e9b\u6709\u7528\u7684\u6570\u636e\u96c6\u4fe1\u606f": 735, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5c06\u65b0\u7684": 738, "\u7528\u6237\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u552f\u4e00\u7684\u5f20\u91cf\u540d\u79f0": 738, "\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 758, "\u7528\u6237\u8fd8\u5fc5\u987b\u5c06gnn\u7684\u5c42\u6570\u4f20\u9012\u7ed9\u7236\u7c7b": 755, "\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 768, "\u7528\u6237\u8fd8\u9700\u8981\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5272\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 738, "\u7528\u6237\u9664\u4e86\u9700\u8981\u4f7f\u7528\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 768, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u6307\u5b9a\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf": 740, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u6761\u8fb9\u90fd\u521b\u5efa\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9": 746, "\u7528\u6237\u9700\u8981\u4ece\u6a21\u578b\u4e2d\u6536\u96c6\u6240\u6709\u5206\u5e03\u5f0f\u5d4c\u5165": 738, "\u7528\u6237\u9700\u8981\u5206\u5272\u8bad\u7ec3\u96c6": 738, "\u7528\u6237\u9700\u8981\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 758, "\u7528\u6237\u9700\u8981\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u53e6\u5916\u4e00\u4e2a\u56fe": 769, "\u7528\u6237\u9700\u8981\u63d0\u4f9b\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 738, "\u7528\u6237\u9700\u8981\u660e\u786e\u5730\u6307\u660e\u8282\u70b9\u7684\u6570\u91cf": 746, "\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b": 766, "\u7528\u6237\u9996\u5148\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u7684\u7ef4\u5ea6": 762, "\u7528\u6765\u6307\u5b9a\u4e0d\u540c\u8bad\u7ec3\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7aef\u53e3": 740, "\u7528\u8be5\u6a21\u5757\u8fdb\u884c\u79bb\u7ebf\u63a8\u65ad": 757, "\u7528\u8fb9\u4e24\u7aef\u8282\u70b9\u8868\u793a\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u6253\u5206": 756, "\u7531gpu\u5f20\u91cf\u6784\u9020\u7684\u56fe\u4e5f\u5728gpu\u4e0a": 745, "\u7531\u4e8etensor\u7c7b\u5185\u90e8\u4f7f\u7528c\u6765\u5b58\u50a8": 746, "\u7531\u4e8e\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u5c06\u539f\u6765\u7684\u8fb9\u7c7b\u578b\u5b58\u6210\u8fb9\u7279\u5f81": 766, "\u7531\u4e8e\u6574\u56fe\u5206\u7c7b\u5904\u7406\u7684\u662f\u5f88\u591a\u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe": 768, "\u7531\u4e8e\u66f4\u65b0\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u7528\u7eaf\u5f20\u91cf\u64cd\u4f5c\u5b9e\u73b0": 750, "\u7531\u4e8e\u8fd9\u91cc\u7684\u5173\u7cfb\u5b9a\u4e49\u6d88\u9664\u4e86\u8fb9\u7c7b\u578b\u7684\u6b67\u4e49": 747, "\u7531\u591a\u5c42gnn\u8ba1\u7b97\u5f97\u51fa": 769, "\u7684": [746, 754], "\u7684api\u4ee5\u65b9\u4fbf\u6570\u636e\u8bbf\u95ee": 738, "\u7684api\u7528\u4e8e\u6b64\u4f18\u5316": 735, "\u7684nn\u6a21\u5757": 764, "\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u6240\u4e0d\u540c": 756, "\u7684\u5177\u4f53\u5b9a\u4e49": 770, "\u7684\u5178\u578b\u793a\u4f8b\u5982\u4e0b": 740, "\u7684\u5185\u5b58\u7a7a\u95f4": 754, "\u7684\u51fd\u6570\u662f": 763, "\u7684\u5212\u5206": 739, "\u7684\u5212\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u8d1f\u8f7d\u4e0d\u5e73\u8861": 739, "\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c": 738, "\u7684\u521b\u5efa\u9700\u8981": 738, "\u7684\u524d\u9a71\u8282\u70b9": 755, "\u7684\u539f\u5219": 744, "\u7684\u53c2\u6570": 752, "\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6d88\u606f\u51fd\u6570": 750, "\u7684\u56fe\u540d\u79f0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570": 739, "\u7684\u5b50\u7c7b": [731, 735], "\u7684\u5b9e\u4f8b": 750, "\u7684\u5b9e\u73b0\u4e5f\u53d1\u751f\u4e86\u53d8\u5316": 735, "\u7684\u5b9e\u73b0\u4f1a\u5305\u542b\u4e24\u4e2a\u5b57\u5178": 760, "\u7684\u5b9e\u73b0\u5982\u4e0b": 755, "\u7684\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206": 751, "\u7684\u5f02\u6784\u56fe": 747, "\u7684\u5f20\u91cf": 767, "\u7684\u5f97\u5206\u6765\u8bad\u7ec3\u94fe\u8def\u6a21\u578b": 758, "\u7684\u6210\u5458\u5c5e\u6027": 750, "\u7684\u6240\u6709\u5165\u8fb9": 755, "\u7684\u6559\u7a0b": 743, "\u7684\u6570\u636e": 765, "\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c": 737, "\u7684\u6d88\u606f": 755, "\u7684\u7236\u7c7b": 755, "\u7684\u7279\u5f81": [741, 744, 768, 770], "\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u4e14\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5bfc\u5165\u56fe\u6570\u636e": 732, "\u7684\u793a\u4f8b": 764, "\u7684\u7b80\u5316\u7248": 759, "\u7684\u805a\u5408\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c": 750, "\u7684\u8282\u70b9": 742, "\u7684\u8282\u70b9\u5d4c\u5165": 770, "\u7684\u8282\u70b9\u7279\u5f81": 755, "\u7684\u8282\u70b9\u8868\u793a": 769, "\u7684\u8282\u70b9\u8868\u793a\u6a21\u5757\u79f0\u4f5c": 766, "\u7684\u8868\u5f81": 768, "\u7684\u8868\u793a\u6240\u9700\u7684\u8282\u70b9": 760, "\u7684\u8ba1\u7b97": 768, "\u7684\u8bba\u6587\u4e2d": 755, "\u7684\u8be6\u7ec6\u4fe1\u606f": 735, "\u7684\u8bed\u6cd5\u4e0e\u5e38\u89c4\u56fe\u4e2d\u7684": 755, "\u7684\u8bed\u6cd5\u5c06\u53ea\u5305\u542b\u8be5\u5173\u7cfb\u7684\u5b50\u56fe": 764, "\u7684\u8f93\u51fa": 755, "\u7684\u8f93\u51fa\u5f20\u91cf\u7684\u5217\u8868": 764, "\u7684\u8fb9": [746, 769], "\u7684\u8fb9\u4e92\u76f8\u8fde\u63a5": 742, "\u7684\u8fb9\u603b\u662f\u6709\u5411\u7684": 743, "\u7684\u8fb9\u7684\u6807\u7b7e": 766, "\u7684\u8fb9\u7c7b\u578b": 766, "\u7684\u90e8\u5206": 735, "\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5411\u540e\u8fed\u4ee3": 755, "\u76ee\u524d": 738, "\u76ee\u5f55\u4e2d": 735, "\u76ee\u6807": [750, 751], "\u76ee\u6807\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 750, "\u76ee\u6807\u8282\u70b9\u6570\u7ec4\u5bf9\u4e3a\u503c\u7684\u5b57\u5178": 758, "\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 747, "\u76f4\u5230\u5230\u8fbe\u8f93\u5165\u5c42": 754, "\u76f4\u5230\u8bad\u7ec3\u4efb\u52a1\u7ed3\u675f": 738, "\u76f8\u4e58\u751f\u6210\u6d88\u606f": 750, "\u76f8\u5173api": [743, 744, 746, 747], "\u76f8\u5173\u6982\u8ff0\u8bf7\u9605\u8bfbapi\u53c2\u8003\u624b\u518c": 743, "\u76f8\u5173\u7684\u6838\u5fc3\u6982\u5ff5": 741, "\u76f8\u5173\u7684\u7279\u5f81\u4e5f\u4f1a\u88ab\u62f7\u8d1d": 747, "\u76f8\u540c": [755, 764], "\u76f8\u540c\u540d\u79f0\u7684\u7279\u5f81\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b": 744, "\u76f8\u5bf9\u5730": 742, "\u76f8\u6bd4\u4e4b\u4e0b": 757, "\u76f8\u6bd4\u540c\u6784\u56fe": 747, "\u77e5\u9053": 756, "\u786e\u5b9a": 763, "\u793a\u4f8b\u5982\u4e0b\u6240\u793a": 758, "\u793e\u4ea4\u7f51\u7edc\u7684\u56fe\u7531\u8868\u793a\u540c\u4e00\u5b9e\u4f53\u7c7b\u578b\u7684\u4eba\u53ca\u5176\u76f8\u4e92\u4e4b\u95f4\u7684\u793e\u4ea4\u5173\u7cfb\u7ec4\u6210": 742, "\u79cd\u5b50\u8282\u70b9": 755, "\u79f0\u4e3a": 732, "\u79f0\u4e3a\u70b9id": 746, "\u79f0\u4e3a\u8fb9id": 746, "\u7ae0\u8282": 748, "\u7ae0\u8282\u4e2d\u4e5f\u4f1a\u63d0\u5230": 755, "\u7b2c1\u7ae0": 748, "\u7b2c2\u4e2a\u5143\u7d20\u4e3a\u76ee\u6807\u8282\u70b9\u7279\u5f81": 763, "\u7b2c2\u7ae0": [748, 765, 766, 770], "\u7b2c3\u7ae0": [748, 759, 765, 770], "\u7b2c4\u7ae0": [748, 765, 768, 770], "\u7b2c5\u7ae0": [748, 754], "\u7b2c6\u7ae0": [748, 753, 763, 765], "\u7b2c7\u7ae0": 748, "\u7b2c\u4e00\u90e8\u5206\u4e0e": 756, "\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u8282\u70b9": 755, "\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u8fb9\u4e0a\u7684\u9884\u6d4b\u503c": 766, "\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u901a\u5e38\u662f\u524d\u4e00\u90e8\u5206\u7684\u8f93\u51fa": 756, "\u7b49": [750, 762], "\u7b49conv\u6a21\u5757\u4e2d": 763, "\u7b49\u4ef7\u4e8e\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u63a5\u6536\u5230\u6d88\u606f\u6c42\u548c\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 750, "\u7ba1\u7406\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u4e2d\u88ab\u5212\u5206\u548c\u5b58\u50a8\u7684\u5bc6\u96c6\u5f20\u91cf": 738, "\u7c7b": 733, "\u7c7b\u4e2d\u4e0b\u8f7d\u4e00\u4e2a": 733, "\u7c7b\u4e2d\u770b\u5230\u6a21\u578b\u5b9e\u73b0\u7684\u7ec6\u8282": 770, "\u7c7b\u4f3c": 737, "\u7c7b\u548c": 760, "\u7c7b\u578b\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u4fdd\u7559": 747, "\u7c7b\u578b\u7684\u8282\u70b9\u7684": 747, "\u7c7b\u578b\u7684\u8fb9\u7684": 747, "\u7c7b\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053": 731, "\u7c7b\u6709\u62bd\u8c61\u51fd\u6570": 732, "\u7c7b\u8fdb\u884c\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 760, "\u7ea2\u8272\u70b9": 755, "\u7ec6\u8282\u5185\u5bb9\u53ef\u4ee5\u5728\u4e0b\u9762\u7684disttensor\u548cdistembedding\u7ae0\u8282\u91cc\u67e5\u770b": 738, "\u7ed3\u5408\u4e86\u8282\u70b9\u8868\u793a\u6a21\u5757\u548c\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u6a21\u578b\u5982\u4e0b\u6240\u793a": 766, "\u7ed3\u5408\u4f7f\u7528": [756, 760], "\u7ed9\u5b9agnn\u5c42": 755, "\u7ed9\u5b9a\u4e00\u5f20\u56fe": 768, "\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 769, "\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u540e": 766, "\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u7f16\u53f7": 746, "\u7ef4\u5ea6\u901a\u5e38\u5305\u62ec\u8f93\u5165\u7684\u7ef4\u5ea6": 762, "\u7eff\u8272\u548c\u7ea2\u8272\u8282\u70b9": 755, "\u7eff\u8272\u70b9": 755, "\u7eff\u8272\u8282\u70b9": 755, "\u7f13\u5b58\u6982\u7387\u5206\u5e03": 758, "\u7f16\u5199dgl": [748, 761], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [748, 749, 763], "\u7f16\u7801\u5e02\u573a\u7684\u56fe\u53ef\u4ee5\u6709\u8868\u793a": 742, "\u8003\u8651\u4ee5\u4e0b\u57fa\u4e8edgl\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b": 767, "\u8003\u8651\u4ee5\u4e0b\u8fb9\u754c": 755, "\u8003\u8651\u5230\u67d0\u4e9b\u56fe\u8fb9\u7684\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u8282\u70b9\u7684\u6570\u91cf": 751, "\u8003\u8651\u5728\u4e00\u4e2a\u6709": 754, "\u800c": 743, "\u800c\u4e0d\u662f": 756, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u5f20\u91cf": 759, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5927\u56fe": 768, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u6807\u7b7e": 760, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81": 760, "\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e": 768, "\u800c\u4e0d\u662f\u5e95\u5c42\u6846\u67b6\u91cc\u7684\u5f20\u91cf": 738, "\u800c\u4e0d\u662f\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u5f20\u91cf\u7684\u5b57\u5178": [756, 758], "\u800c\u4e14\u4e24\u79cd\u8282\u70b9\u5177\u6709\u4e0d\u540c\u7684\u7279\u5f81": 747, "\u800c\u4ee5\u4e0b\u7528\u6237\u5b9a\u4e49\u6d88\u606f\u51fd\u6570\u4e0e\u6b64\u5185\u7f6e\u51fd\u6570\u7b49\u4ef7": 750, "\u800c\u540e\u8005\u5219\u6807\u8bc6dgl\u670d\u52a1\u5668\u4e2d\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 738, "\u800c\u5728cpu\u4e0a\u8fdb\u884c\u5219\u8ba1\u7b97\u901f\u5ea6\u5f88\u6162": 757, "\u800c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u7684\u56fe\u91c7\u6837\u7b97\u6cd5": 768, "\u800c\u662f\u5728": 750, "\u800c\u7ebf\u6027\u5c42\u8f93\u51fa\u7ef4\u6570\u8f83\u4f4e": 751, "\u800c\u975e4\u6761": 743, "\u805a\u5408\u51fd\u6570": [749, 750], "\u805a\u5408\u51fd\u6570\u6765\u5b9e\u73b0": 763, "\u805a\u5408\u51fd\u6570\u901a\u5e38\u6709\u4e24\u4e2a\u53c2\u6570": 750, "\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u4e0a\u7684\u7ed3\u679c": 764, "\u805a\u5408\u7c7b\u578b": 762, "\u805a\u5408\u7c7b\u578b\u51b3\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u4e0d\u540c\u8fb9\u4e0a\u7684\u4fe1\u606f": 762, "\u80e1\u9a8f": 748, "\u8282\u70b9": [741, 750], "\u8282\u70b92": 755, "\u8282\u70b93": 755, "\u8282\u70b93\u662f\u4e00\u4e2a\u5b64\u7acb\u8282\u70b9": 755, "\u8282\u70b98": 755, "\u8282\u70b9\u5206\u7c7b": [735, 748, 765], "\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b": 735, "\u8282\u70b9\u5206\u7c7b\u7684rgcn\u6a21\u578b": 766, "\u8282\u70b9\u5206\u7c7b\u901a\u5e38\u5728\u5355\u4e2a\u56fe\u4e0a\u8fdb\u884c": 735, "\u8282\u70b9\u548c": [751, 766], "\u8282\u70b9\u548c\u8fb9": [741, 748], "\u8282\u70b9\u548c\u8fb9id\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4": 746, "\u8282\u70b9\u548c\u8fb9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u6784\u5efa\u7684": 746, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [741, 748], "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0": 744, "\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684": 742, "\u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c": 770, "\u8282\u70b9\u5f20\u91cf": 746, "\u8282\u70b9\u6570\u636e\u540d\u79f0\u548c\u5f20\u91cf\u540d\u79f0\u4e0d\u5fc5\u76f8\u540c": 738, "\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 738, "\u8282\u70b9\u6807\u7b7e\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u5668\u4e2d": 760, "\u8282\u70b9\u7279\u5f81": 751, "\u8282\u70b9\u7279\u5f81\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u4e2d": 760, "\u8282\u70b9\u7279\u5f81\u548c\u6807\u7b7e\u5b58\u50a8\u5728\u5176\u56fe\u4e0a": 770, "\u8282\u70b9\u7279\u5f81\u548c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u5b58\u50a8\u5728": 735, "\u8282\u70b9\u7279\u5f81\u7ef4\u6570\u8f83\u9ad8": 751, "\u8282\u70b9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u7684": 747, "\u8282\u70b9\u7684\u6807\u7b7e": 735, "\u8282\u70b9\u7684\u7279\u5f81": 735, "\u8282\u70b9\u7684\u7c7b\u522b": 770, "\u8282\u70b9\u7684\u8fb9": 766, "\u8282\u70b9\u7c7b\u578b": 735, "\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7ed3\u679c": 760, "\u8282\u70b9\u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6": 769, "\u82e5\u7528\u56fe\u5bf9twitter\u7528\u6237\u7684\u5173\u6ce8\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21": 742, "\u82e5\u7528\u56fe\u5bf9\u793e\u4ea4\u7f51\u7edc\u4e2d\u4eba\u4eec\u7684\u53cb\u8c0a\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21": 742, "\u83ab\u4f73\u5e05\u5b50": 748, "\u83b7\u53d6": [747, 755], "\u83b7\u53d6drug\u8282\u70b9\u7684\u6570\u91cf": 747, "\u83b7\u53d6\u5212\u5206\u7684\u63a9\u7801": 735, "\u83b7\u53d6\u5212\u5206\u7684\u6807\u7b7e": 734, "\u83b7\u53d6\u5355\u4e00\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81": 747, "\u83b7\u53d6\u539f\u59cbid": 739, "\u83b7\u53d6\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u91cf": 747, "\u83b7\u53d6\u6807\u7b7e": 735, "\u83b7\u53d6\u7279\u5b9a\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u7684\u7279\u5f81": 747, "\u83b7\u53d6\u79cd": 755, "\u83b7\u53d6\u805a\u5408\u51fd\u6570\u7684\u5185\u90e8\u51fd\u6570": 764, "\u83b7\u53d6\u8282\u70b91\u7684\u7279\u5f81": 744, "\u83b7\u53d6\u8282\u70b9\u7279\u5f81": 735, "\u83b7\u53d6\u8282\u70b9\u7684id": 746, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u8fb9\u7c7b\u578b": 735, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u63a9\u7801": 735, "\u83b7\u53d6\u8fb90\u548c3\u7684\u7279\u5f81": 744, "\u83b7\u53d6\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 756, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9": 746, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9\u548c\u8fb9id": 746, "\u83b7\u5f97": 759, "\u867d\u7136dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u90bb\u5c45\u91c7\u6837\u5668": 755, "\u867d\u7136\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u8fb9\u754c": 755, "\u867d\u7136\u8fd9\u4e24\u4e2a\u6a21\u5757\u90fd\u6bd4\u4e0a\u8ff0\u7684\u793a\u4f8b\u4ee3\u7801\u8981\u590d\u6742": 766, "\u884c\u4f18\u5148": 744, "\u8868\u660e\u4e24\u8282\u70b9\u95f4\u5b58\u5728\u5173\u7cfb": 742, "\u8868\u793a": 750, "\u8868\u793a\u5728\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u5b58\u5728\u4ece": 747, "\u8868\u793a\u5b83\u662f\u4ece\u8282\u70b9": 746, "\u8868\u793a\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u8ba1\u7b97\u7ed3\u679c": 764, "\u88ab\u4e70\u4e0b": 756, "\u88ab\u5173\u6ce8": 756, "\u88ab\u805a\u5408\u7684\u7279\u5f81\u5c06\u4f1a\u4e0e\u8282\u70b9\u7684\u521d\u59cb\u7279\u5f81\u62fc\u63a5\u8d77\u6765": 763, "\u8981\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u91c7\u6837\u5668": 760, "\u8981\u5bf9\u6e90\u8282\u70b9\u7684": 750, "\u8981\u5c06\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u5165": 760, "\u8981\u6267\u884c\u8d1f\u91c7\u6837": 769, "\u8981\u67e5\u627e\u7ed9\u5b9a\u8282\u70b9\u7c7b\u578b\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u6570\u91cf": 755, "\u8981\u805a\u5408\u7684\u7279\u5f81\u5927\u5c0f\u4e3a": 768, "\u8981\u8ba1\u7b97": 755, "\u89c11": 741, "\u8ba1\u7b97": [755, 769], "\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u94fe\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 769, "\u8ba1\u7b97\u5e94\u7528\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5806\u76ee\u6807\u8282\u70b9\u6240\u91c7\u6837\u7684\u5b50\u56fe": 763, "\u8ba1\u7b97\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 758, "\u8ba1\u7b97\u5fc5\u987b\u5728\u8fb9\u4e0a\u4fdd\u5b58\u6d88\u606f": 751, "\u8ba1\u7b97\u635f\u5931\u503c": 770, "\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u63a5\u53d7\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7684\u4e24\u4e2a\u5b57\u5178": 756, "\u8ba1\u7b97\u635f\u5931\u5e76\u53cd\u5411\u4f20\u64ad": 760, "\u8ba1\u7b97\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 756, "\u8ba1\u7b97\u8f93\u51fa": 757, "\u8ba1\u7b97\u8fb9\u5b50\u56fe\u4e2d\u8fb9\u7684\u5f97\u5206": 756, "\u8ba1\u7b97\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6": 770, "\u8bad\u7ec3": [735, 748, 753, 763, 765, 770], "\u8bad\u7ec3\u4e00\u4e2a\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u6d89\u53ca\u5230\u6bd4\u5bf9\u4e24\u4e2a\u76f8\u8fde\u63a5\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u4e0e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u7684\u5dee\u5f02": 769, "\u8bad\u7ec3\u4e0b\u6e38\u4efb\u52a1\u7684\u5206\u7c7b\u5668": 769, "\u8bad\u7ec3\u540e": 769, "\u8bad\u7ec3\u5668": 737, "\u8bad\u7ec3\u5668\u4f1a\u5bf9\u5c40\u90e8\u5206\u533a\u4e2d\u5e26\u6807\u7b7e\u8282\u70b9\u7684\u5b50\u96c6\u8fdb\u884c\u8ba1\u7b97": 739, "\u8bad\u7ec3\u5668\u8fdb\u7a0b": 737, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [748, 754], "\u8bad\u7ec3\u5faa\u73af\u901a\u8fc7\u6570\u636e\u52a0\u8f7d\u5668\u53bb\u904d\u5386\u6570\u636e": 758, "\u8bad\u7ec3\u6548\u7387\u4f1a\u5f88\u4f4e": 768, "\u8bad\u7ec3\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357\u53ef\u4ee5\u5728": 735, "\u8bad\u7ec3\u6a21\u578b": 760, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u548c\u540c\u6784\u56fe\u65f6\u4e00\u81f4": 769, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u91cc\u4f1a\u91cd\u590d\u6784\u5efa\u8d1f\u91c7\u6837\u56fe\u5e76\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u503c": 769, "\u8bad\u7ec3\u7b97\u6cd5\u6709\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 757, "\u8bad\u7ec3\u811a\u672c": 740, "\u8bad\u7ec3\u8fc7\u7a0b\u5305\u62ec\u904d\u5386dataloader\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u90e8\u5206": 768, "\u8bad\u7ec3\u90e8\u5206\u548c\u540c\u6784\u56fe\u7684\u8bad\u7ec3\u57fa\u672c\u4e00\u81f4": 766, "\u8bad\u7ec3\u90e8\u5206\u5982\u4e0b\u6240\u793a": 766, "\u8bb0\u4e3a": 742, "\u8bb0\u4f5c": 769, "\u8bb2\u89e3\u4e86\u5982\u4f55\u5bf9\u5c0f\u89c4\u6a21\u7684\u56fe\u6570\u636e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 765, "\u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210": 768, "\u8bb8\u591a\u635f\u5931\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807": 769, "\u8bb8\u591a\u77e5\u540dpython\u5e93": 743, "\u8bbe\u7f6e": 747, "\u8bbe\u7f6e\u9009\u9879": 762, "\u8bbf\u95ee\u5176\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 755, "\u8bbf\u95ee\u8be5\u5757\u7684\u8f93\u5165\u8282\u70b9\u7279\u5f81": 755, "\u8be5api\u4f1a\u76f8\u5e94\u5730\u6253\u4e71\u6240\u6709\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 739, "\u8be5api\u652f\u6301\u968f\u673a\u5212\u5206\u548c\u4e00\u4e2a\u57fa\u4e8e": 739, "\u8be5pytorch\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u6279\u7684\u5f62\u5f0f\u8fed\u4ee3\u8bad\u7ec3\u8fb9id\u7684\u6570\u7ec4": 756, "\u8be5\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0": 759, "\u8be5\u4f8b\u5b50\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5355\u4e2a\u8282\u70b9": 755, "\u8be5\u4f8b\u5b50\u91cc\u7701\u7565\u4e86\u8bad\u7ec3\u65e9\u505c\u548c\u6a21\u578b\u4fdd\u5b58\u90e8\u5206\u7684\u4ee3\u7801": 766, "\u8be5\u505a\u6cd5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 751, "\u8be5\u51fd\u6570\u5047\u5b9a\u539f\u59cb\u6570\u636e\u5df2\u7ecf\u4f4d\u4e8e": 735, "\u8be5\u51fd\u6570\u7684\u7ec6\u8282\u5982\u4e0b\u6240\u793a": 763, "\u8be5\u540d\u79f0\u4ecd\u5b58\u5728\u4e8e\u7fa4\u96c6\u4e2d": 738, "\u8be5\u56fe\u5177\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 747, "\u8be5\u5b50\u56fe\u5305\u62ec\u521d\u59cb\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u548c\u6307\u5b9a\u8282\u70b9\u7684\u5165\u8fb9": 755, "\u8be5\u5f20\u91cf\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e0e\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u6570\u91cf\u4e00\u81f4": 744, "\u8be5\u6587\u4ef6\u5305\u542b\u672c\u5730\u8ba1\u7b97\u673a\u4e2d\u5206\u533a\u6570\u636e\u7684\u4fe1\u606f": 740, "\u8be5\u65b9\u6cd5\u80fd\u8282\u7701\u5728\u5927\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u9500\u548c\u8ba1\u7b97\u8d44\u6e90": 754, "\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4e3a\u5b83\u4eec\u751f\u6210\u8fb9\u754c": 755, "\u8be5\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u957f\u5ea6\u6216\u8fde\u63a5\u7684\u5f3a\u5ea6": 742, "\u8be5\u6a21\u578b\u4e0e\u5f02\u6784\u56fe\u4e0a\u8fb9\u5206\u7c7b\u7684\u6a21\u578b\u6709\u4e9b\u4e0d\u540c": 769, "\u8be5\u6a21\u578b\u7684\u8f93\u5165\u5305\u62ec\u4e0a\u8ff0\u4e09\u9879\u4ee5\u53ca\u8f93\u5165\u7684\u7279\u5f81": 758, "\u8be5\u7c7b\u4e3a\u5bfc\u5165": 731, "\u8be5\u811a\u672c\u5305\u542b\u56db\u4e2a\u53c2\u6570": 740, "\u8be5\u811a\u672c\u6709\u4ee5\u4e0b\u5047\u8bbe": 740, "\u8be5\u8fb9\u7c7b\u578b\u662f\u901a\u8fc7\u5408\u5e76\u6240\u6709\u4ece": 766, "\u8be5\u91c7\u6837\u65b9\u6cd5\u6839\u636e\u4e0e\u8282\u70b9\u7684\u5ea6\u7684\u5e42\u6210\u6b63\u6bd4\u7684\u6982\u7387\u5206\u5e03\u5bf9\u8d1f\u6837\u672c\u76ee\u6807\u8282\u70b9\u8fdb\u884c\u91c7\u6837": 758, "\u8be6\u7ec6\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003": 735, "\u8be6\u7ec6\u89e3\u91ca": 739, "\u8bf4\u660e\u805a\u5408\u662f\u9010\u7c7b\u8fdb\u884c\u7684": 752, "\u8bf7\u4f7f\u7528": 733, "\u8bf7\u53c2\u8003": [735, 756, 770], "\u8bf7\u53c2\u8003dgl\u7684\u5185\u7f6e\u6570\u636e\u96c6": 735, "\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357\u7684": 765, "\u8bf7\u53c2\u89c1": [735, 739, 750], "\u8bf7\u53c2\u89c1\u542f\u52a8\u811a\u672c\u90e8\u5206": 738, "\u8bf7\u53c2\u9605": 732, "\u8bf7\u53c2\u9605\u4e0b\u6587\u91cc\u5206\u5e03\u5f0f\u56fe\u91c7\u6837\u90e8\u5206": 738, "\u8bf7\u53c2\u9605\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u7ae0\u8282": 738, "\u8bf7\u6ce8\u610f": [732, 735, 736, 737, 755, 760, 763, 770], "\u8bf7\u786e\u4fdd\u4f7f\u7528\u4e0e\u539f\u59cb\u6587\u4ef6\u540d\u76f8\u540c\u7684\u540e\u7f00": 733, "\u8bf7\u786e\u4fdd\u5b83\u88ab\u5b58\u653e\u5728\u76ee\u5f55": 733, "\u8bf8\u5982\u91c7\u6837": 732, "\u8bfb\u51fa": 768, "\u8bfb\u51fa\u51fd\u6570\u4f1a\u5206\u522b\u4f5c\u7528\u5728\u56fe\u6279\u6b21\u4e2d\u7684\u6bcf\u5f20\u56fe\u4e0a": 768, "\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528networkx\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u89e3\u6790": 743, "\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003": [760, 770], "\u8bfb\u8005\u53ef\u4ee5\u5728api\u6587\u6863\u4e2d\u627e\u5230": 764, "\u8bfb\u8005\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53c2\u8003": 766, "\u8bfb\u8005\u53ef\u53c2\u8003": [742, 746], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": 757, "\u8c03\u7528\u540e": 750, "\u8c03\u7528\u6b64api": 738, "\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u635f\u5931": 769, "\u8d1f\u6837\u672c": 758, "\u8d1f\u8d23\u4f7f\u7528": 755, "\u8d1f\u8d23\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684": 740, "\u8d1f\u91c7\u6837": 769, "\u8d2d\u4e70": 756, "\u8d4b\u503c": 766, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [748, 754], "\u8df3\u8fc7\u4e00\u4e9b\u5904\u7406\u7684\u4ee3\u7801": 735, "\u8df3\u8fc7\u6570\u636e\u5904\u7406": 735, "\u8f6c\u6362\u6210int32": 746, "\u8f6c\u6362\u6210int64": 746, "\u8f7d\u5165ogb\u7684graph": 734, "\u8f7d\u5165ogb\u7684link": 734, "\u8f7d\u5165ogb\u7684nod": 734, "\u8f7d\u5165\u6570\u636e\u96c6": 734, "\u8f83\u5927\u65f6": 754, "\u8f93\u5165": 764, "\u8f93\u5165\u4ecd\u7136\u662fdgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868\u548c\u8f93\u5165\u7279\u5f81": 756, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81": 770, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81\u5b57\u5178": 770, "\u8f93\u5165\u7279\u5f81\u5c06\u88ab\u7ec4\u7ec7\u4e3a\u5143\u7ec4": 764, "\u8f93\u5165\u7684user\u548cgame\u8282\u70b9": 755, "\u8f93\u5165\u7ef4\u5ea6\u53ef\u88ab\u5206\u4e3a\u6e90\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6": 762, "\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u5c06\u540c\u65f6\u5305\u542b\u8fd9\u4e9b\u5b64\u7acb\u8282\u70b9": 755, "\u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81": 766, "\u8f93\u51fa\u7684user\u548cgame\u8282\u70b9": 755, "\u8f93\u51fa\u7684\u7ef4\u5ea6\u548c\u9690\u5c42\u7684\u7ef4\u5ea6": 762, "\u8f93\u51fa\u76ee\u5f55\u91cc\u59cb\u7ec8\u5305\u542b\u4e00\u4e2a\u540d\u4e3axxx": 739, "\u8f93\u51fa\u8282\u70b9": 755, "\u8f93\u51fa\u8282\u70b9\u4e5f\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 755, "\u8f93\u51fa\u8282\u70b9\u53ef\u4ee5\u6bd4\u4ee5\u4e0a\u8282\u70b9\u5305\u542b\u66f4\u591a\u8282\u70b9": 755, "\u8f93\u51fa\u8282\u70b9\u7684id\u4f4d\u4e8e\u5176\u5b83\u8282\u70b9\u4e4b\u524d": 755, "\u8fb9": [735, 739, 741, 742, 744, 746, 749, 750], "\u8fb9\u4e0a\u8ba1\u7b97": 749, "\u8fb9\u5206\u7c7b": [748, 756, 765, 769, 770], "\u8fb9\u5206\u7c7b\u4e2d\u76f8\u540c\u7684\u90bb\u5c45\u91c7\u6837\u5668": 758, "\u8fb9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u7684\u8bad\u7ec3": 765, "\u8fb9\u5206\u7c7b\u6a21\u578b\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210": 756, "\u8fb9\u53ca\u5176\u7279\u5f81": 743, "\u8fb9\u5b50\u56fe\u4ee5\u53ca\u8f93\u5165\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad": 756, "\u8fb9\u6743\u91cd\u53ef\u4ee5\u662f\u8fde\u63a5\u5f3a\u5ea6\u6216\u8005\u4fe1\u5fc3\u6307\u6570": 767, "\u8fb9\u6743\u91cd\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a": 767, "\u8fb9\u7279\u5f81": [737, 738], "\u8fb9\u7279\u5f81\u548c\u56fe\u91c7\u6837": 738, "\u8fb9\u754c\u5b50\u56fe": 755, "\u8fb9\u7684id\u4f4d\u4e8e\u90bb\u8fd1\u533a\u95f4\u5185": 735, "\u8fb9\u7684\u7279\u5f81\u6570\u636e": 765, "\u8fb9\u7684\u90bb\u5c45\u7684\u5c40\u90e8\u6027": 735, "\u8fb9\u7c7b\u578b": [735, 747], "\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u79f0\u4f5c": 766, "\u8fb9\u7c7b\u578b\u9884\u6d4b\u7684\u7b2c\u4e00\u6b65\u4ecd\u7136\u662f\u8ba1\u7b97\u8282\u70b9\u8868\u793a": 766, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": [737, 748], "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u56fe\u4f5c\u4e3a\u8fb9\u754c": 755, "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u754c": 755, "\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178": 755, "\u8fd4\u56de\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u7684\u5143\u7ec4": 735, "\u8fd4\u56de\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u7279\u5f81\u5b57\u5178": 752, "\u8fd4\u56de\u7684\u662f": 738, "\u8fd8\u5141\u8bb8\u901a\u8fc7\u6307\u5b9a": 739, "\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u4e0b\u6e38\u4efb\u52a1\u83b7\u53d6\u9690\u85cf\u8282\u70b9\u8868\u793a": 770, "\u8fd8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8de8\u7c7b\u578b\u6574\u5408\u51fd\u6570": 752, "\u8fd8\u652f\u6301\u751f\u6210\u7528\u4e8e\u94fe\u63a5\u9884\u6d4b\u7684\u8d1f\u6837\u672c": 758, "\u8fd8\u662f": 766, "\u8fd8\u80fd\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528": 746, "\u8fd8\u9700\u8981\u5728\u8bfb\u51fa\u51fd\u6570\u4e2d\u805a\u5408\u4e0d\u540c\u7c7b\u522b\u7684\u8282\u70b9": 768, "\u8fd8\u9700\u8981\u5c06\u5176\u4e0e": 760, "\u8fd92\u4e2a\u5b57\u5178\u4e0e": 764, "\u8fd9\u4e00\u793a\u4f8b\u6765\u4e86\u89e3\u5982\u4f55\u9884\u6d4b\u5f02\u6784\u56fe\u4e2d\u7684\u8fb9\u7c7b\u578b": 766, "\u8fd9\u4e00\u7ae0\u4e2d\u63d0\u5230\u7684\u56fe\u5377\u79ef\u7f51\u7edc\u83b7\u5f97": 766, "\u8fd9\u4e0e\u5728": 770, "\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u5e03\u5c14\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165": 738, "\u8fd9\u4e2a": 765, "\u8fd9\u4e2aapi\u4f1a\u4e0edgl\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u5e76\u521b\u5efa\u91c7\u6837\u5668\u8fdb\u7a0b": 738, "\u8fd9\u4e2aapi\u5c06\u8fd0\u884c\u670d\u52a1\u5668\u4ee3\u7801": 738, "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u8bc4\u5206\u9884\u6d4b\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 766, "\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u539f\u56fe\u8f6c\u6362\u6210\u4e00\u4e2a\u5305\u542b\u53cd\u5411\u8fb9\u7684\u56fe": 746, "\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u53d8\u91cf\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u548c\u5176\u4ed6\u8f93\u5165\u7279\u5f81": 767, "\u8fd9\u4e2a\u5b57\u5178\u7684\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u91cc": 752, "\u8fd9\u4e2a\u5b57\u5178\u7684\u952e\u4e3a\u5173\u7cfb\u540d": 764, "\u8fd9\u4e2a\u63a5\u53e3\u5c06\u66f4\u65b0\u6240\u6709\u7684\u8fb9": 750, "\u8fd9\u4e2a\u6570\u636e\u52a0\u8f7d\u5668\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668": 755, "\u8fd9\u4e2a\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe": 735, "\u8fd9\u4e2a\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 735, "\u8fd9\u4e2a\u6574\u5408\u65b9\u5f0f\u53ef\u4ee5\u662f": 752, "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f02\u6784\u56fe": 766, "\u8fd9\u4e2a\u6a21\u578b\u4e0d\u4ec5\u53ef\u4ee5\u505a\u8282\u70b9\u5206\u7c7b": 770, "\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u53ef\u8c03\u8282\u7684\u5c42\u6570": 770, "\u8fd9\u4e2a\u8fc7\u7a0b": 735, "\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u4f1a\u6784\u5efa\u8ba1\u7b97\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe": 754, "\u8fd9\u4e3a\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u4e86\u7a7a\u95f4": 750, "\u8fd9\u4e48\u505a\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4": 732, "\u8fd9\u4e9budf\u5fc5\u987b\u5728": 738, "\u8fd9\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u72ec\u7acb\u7684id\u7a7a\u95f4\u548c\u7279\u5f81": 747, "\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32": 750, "\u8fd9\u4e9b\u56fe\u8868\u793a\u6bcf\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56": 760, "\u8fd9\u4e9b\u5c5e\u6027\u65e8\u5728\u523b\u753b\u6bcf\u4e00\u79cd\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 752, "\u8fd9\u4e9b\u5e03\u5c14\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf": 738, "\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u548c\u6d88\u606f\u4f20\u9012\u4e2d\u7684\u503c\u65e0\u6548": 763, "\u8fd9\u4e9b\u670d\u52a1\u5668\u4e00\u8d77\u5de5\u4f5c\u4ee5\u5c06\u56fe\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 737, "\u8fd9\u4e9b\u6784\u5efa\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u91cd\u89c6\u6027\u80fd\u7684\u573a\u666f": 743, "\u8fd9\u4e9b\u6a21\u5757\u662f\u7eafpytorch": 762, "\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u662f\u6807\u91cf": 744, "\u8fd9\u4e9b\u7c7b\u4f1a\u751f\u6210\u9700\u8ba1\u7b97\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u8ba1\u7b97\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u56fe": 760, "\u8fd9\u4e9b\u8282\u70b9\u4e0e\u7528\u6237\u5e0c\u671b\u8ba1\u7b97\u6700\u7ec8\u8868\u793a\u7684\u8282\u70b9\u76f8\u540c": 760, "\u8fd9\u4e9b\u8282\u70b9\u662f\u8ba1\u7b97\u8282\u70b9\u6700\u7ec8\u8868\u793a\u6240\u9700\u7684\u6240\u6709\u5fc5\u9700\u7684\u8282\u70b9": 760, "\u8fd9\u4ec5\u662f\u4e2a\u4f8b\u5b50": 768, "\u8fd9\u4f1a\u5c06\u56fe\u7ed3\u6784\u548c\u7279\u5f81\u6570\u636e\u90fd\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u8bbe\u5907": 745, "\u8fd9\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58": 751, "\u8fd9\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4": 739, "\u8fd9\u5305\u62ec\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 737, "\u8fd9\u53d6\u51b3\u4e8e\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\u6027": 742, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f": 738, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u6027\u80fd\u4e0d\u4f73": 763, "\u8fd9\u53ef\u80fd\u5e26\u6765\u975e\u6700\u4f18\u7684\u914d\u7f6e": 739, "\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528": 747, "\u8fd9\u5bf9\u4e8e\u540c\u6b65sgd\u975e\u5e38\u91cd\u8981": 738, "\u8fd9\u5c31\u5e26\u6765\u4e86\u5177\u6709\u4e0d\u540c\u7279\u5f81\u7684\u591a\u6761\u8fb9": 742, "\u8fd9\u5e73\u8861\u4e86\u4e0d\u540c\u7c7b\u578b\u8282\u70b9\u7684\u8fde\u8fb9\u6570\u91cf": 739, "\u8fd9\u5f88\u5bb9\u6613\u8d85\u8fc7\u4e00\u5757gpu\u7684\u663e\u5b58\u9650\u5236": 754, "\u8fd9\u662f\u4e00\u4e2a": 750, "\u8fd9\u662f\u56e0\u4e3adgl\u8981\u5b9a\u4f4d\u5e76\u5220\u9664\u5305\u542b\u5728\u5c0f\u6279\u6b21\u4e2d\u7684\u53cd\u5411\u8fb9": 756, "\u8fd9\u662f\u56e0\u4e3a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u8fb9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee": 739, "\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e00\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u6d88\u606f\u7684\u805a\u5408\u548c\u7ed3\u5408": 757, "\u8fd9\u662f\u56e0\u4e3a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u53ea\u7528\u4e00\u4e2a\u56fe": 735, "\u8fd9\u662f\u5c0f\u6279\u91cf\u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u7528\u6cd5": 753, "\u8fd9\u662f\u7531\u4e8e": 743, "\u8fd9\u6837\u4e0d\u4ec5\u80fd\u63d0\u5347\u901f\u5ea6": 746, "\u8fd9\u6837\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5e2e\u7528\u6237\u8282\u7701\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u65f6\u95f4": 736, "\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c": 769, "\u8fd9\u6837\u7684\u65b9\u6cd5\u79f0\u4f5c": 769, "\u8fd9\u70b9\u5728\u4e4b\u540e\u7684": 755, "\u8fd9\u79cd\u60c5\u51b5\u4e0b": 766, "\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97dgl\u7684\u4ee3\u7801\u53ef\u4ee5\u65e0\u7f1d\u5d4c\u5165\u5230\u540e\u7aef\u6846\u67b6\u7684\u4ee3\u7801\u4e2d": 761, "\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f": 747, "\u8fd9\u7b49\u4ef7\u4e8e\u628a\u6bcf\u6761\u6d88\u606f\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u91cd\u76f8\u4e58": 767, "\u8fd9\u7c7b\u64cd\u4f5c\u53eb\u505a": 768, "\u8fd9\u8981\u6c42\u6240\u6709\u5f20\u91cf\u53c2\u6570\u90fd\u5df2\u7ecf\u653e\u5728gpu\u4e0a": 745, "\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u56e0\u6a21\u5757\u800c\u5f02": 763, "\u8fd9\u91cc": 735, "\u8fd9\u91cc\u4ee56": 757, "\u8fd9\u91cc\u5148\u89e3\u91ca\u4e00\u4e0b\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 755, "\u8fd9\u91cc\u5220\u9664\u4e86\u81ea\u73af": 760, "\u8fd9\u91cc\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u5faa\u73af\u4ec5\u5305\u542b\u4f7f\u7528\u5b9a\u5236\u7684\u6279\u5904\u7406\u8fed\u4ee3\u5668\u904d\u5386\u6570\u636e\u96c6\u7684\u5185\u5bb9": 760, "\u8fd9\u91cc\u7684\u79bb\u7ebf\u63a8\u65ad\u88ab\u5b9e\u73b0\u4e3agnn\u6a21\u5757\u7684\u4e00\u4e2a\u65b9\u6cd5": 757, "\u8fd9\u91cc\u7701\u7565\u4e86": 735, "\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u5165\u7684\u56fe\u6570\u636e\u4e0d\u80fd\u5305\u542b\u8fb9\u7684\u7c7b\u578b\u4fe1\u606f": 766, "\u8fdb\u800c\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6765\u6784\u5efadglgraph\u5bf9\u8c61": 743, "\u8fdb\u884c\u4f18\u5316": 751, "\u8fdb\u884c\u521b\u5efa\u65f6": 743, "\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 770, "\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97": 770, "\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316": 762, "\u8fdb\u884c\u8bad\u7ec3": 766, "\u8fde\u63a5\u4e00\u5bf9\u8282\u70b9": 742, "\u9009\u62e9\u4e00\u4e2a\u5c0f\u6279\u6b21\u7684\u56fe\u8282\u70b9": 754, "\u9010\u5143\u7d20\u6c42\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c": 768, "\u9010\u5c42\u8ba1\u7b97\u8868\u793a": 757, "\u901a\u5e38": [738, 759], "\u901a\u5e38\u4f1a\u805a\u5408\u5e76\u6c47\u603b\u5355\u4e2a\u56fe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f": 768, "\u901a\u5e38\u5728\u6d88\u606f\u4f20\u9012\u7684\u6700\u540e\u4e00\u6b65\u5c06\u5176\u4e0e\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408": 750, "\u901a\u5e38\u65e0\u6cd5\u8fdb\u884c": 754, "\u901a\u5e38\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u90bb\u5c45\u8fdb\u884c\u771f\u6b63\u7684\u805a\u5408": 757, "\u901a\u5e38\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u91c7\u6837\u8fc7\u7a0b\u53d8\u6162\u5f88\u591a": 756, "\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u591a\u5c42\u7684\u56fe\u795e\u7ecf\u7f51\u7edc": 770, "\u901a\u8fc7": [744, 750], "\u901a\u8fc7idx\u5f97\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e00\u4e2a\u6837\u672c": 732, "\u901a\u8fc7idx\u83b7\u53d6\u5bf9\u5e94\u7684\u56fe\u548c\u6807\u7b7e": 735, "\u901a\u8fc7\u5173\u7cfb\u540d": 764, "\u901a\u8fc7\u5e73\u5747\u8bfb\u51fa\u503c\u6765\u8ba1\u7b97\u5355\u56fe\u7684\u8868\u5f81": 768, "\u901a\u8fc7\u5f20\u91cf\u5206\u914d\u521b\u5efa\u7279\u5f81\u65f6": 744, "\u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a": 768, "\u901a\u8fc7\u7d22\u5f15": 763, "\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b": 766, "\u901a\u8fc7\u8c03\u7528": 764, "\u904d\u5386\u6240\u6709\u8fb9\u7684\u7c7b\u578b": 755, "\u90a3\u4e48\u5728\u5757\u4e0a\u8ba1\u7b97\u7684\u4ee3\u7801\u4e5f\u662f\u7c7b\u4f3c\u7684": 759, "\u90a3\u4e48\u5b83\u4eec\u5df2\u7ecf\u652f\u6301\u4e86\u8fb9\u6743\u91cd": 767, "\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2a\u7528": 766, "\u90a3\u4e48\u7528\u6237\u5c31\u9700\u8981\u8c03\u7528\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 751, "\u90a3\u4e48\u8be5\u51fd\u6570\u5e94\u4ee5\u521d\u59cb\u56fe\u4ee5\u53ca\u7531\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u6784\u6210\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 758, "\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u5e38\u5982\u4e0b": 754, "\u90bb\u5c45\u91c7\u6837\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528": 757, "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u5757\u7684\u5217\u8868": 758, "\u90bb\u63a5\u77e9\u9635\u91cc\u7684\u5143\u7d20\u4e0d\u662f\u96f6\u5c31\u662f\u4e00": 767, "\u90fd\u662f\u540e\u7eed\u56fe\u795e\u7ecf\u7f51\u7edc\u5c42\u8ba1\u7b97\u4e2d\u67d0\u6761\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 755, "\u90fd\u6709": 769, "\u90fd\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 759, "\u914d\u7f6e\u6587\u4ef6": 740, "\u91c7\u6837": 758, "\u91c7\u6837\u4ee3\u7801\u7c7b\u4f3c\u4e8e\u5355\u8fdb\u7a0b\u91c7\u6837": 738, "\u91c7\u6837\u5668": 737, "\u91c7\u6837\u5668\u65e0\u6cd5\u5728\u5177\u6709\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684pytorch": 738, "\u91c7\u6837\u5668\u8fdb\u7a0b": 737, "\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf\u5fc5\u987b\u5339\u914d": 740, "\u91cc\u5b9e\u73b0\u4e86\u5f88\u591a\u5e38\u7528\u7684\u56fe\u6570\u636e\u96c6": 731, "\u91cc\u6240\u4ecb\u7ecd\u7684\u6027\u80fd\u4f18\u5316": 763, "\u91cc\u662f\u5426\u6709\u5904\u7406\u8fc7\u7684\u6570\u636e\u6587\u4ef6": 736, "\u91cc\u7684": 769, "\u91cc\u8bfb\u53d6\u5904\u7406\u8fc7\u7684\u6570\u636e": 736, "\u91cc\u9762\u4fdd\u5b58\u4e86\u8bad\u7ec3\u811a\u672c": 740, "\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b": 754, "\u91cd\u6392\u56fe\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u5c40\u90e8\u6027": 735, "\u91cd\u65b0\u521d\u59cb\u5316\u53ef\u5b66\u4e60\u7684\u53c2\u6570": 762, "\u9488\u5bf9mxnet\u548cpytorch\u540e\u7aef\u4e5f\u6709\u5bf9\u5e94\u7684\u6a21\u5757": 770, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [748, 754], "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [748, 754], "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [748, 754], "\u94fe\u63a5\u9884\u6d4b": [735, 748, 758, 765, 770], "\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u4e5f\u5e94\u4f7f\u7528\u7c7b\u4f3c\u7684\u5e03\u5c14\u6570\u7ec4": 738, "\u94fe\u63a5\u9884\u6d4b\u548c\u6574\u56fe\u5206\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 765, "\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5904\u7406\u4e0e\u8282\u70b9\u5206\u7c7b\u76f8\u4f3c": 735, "\u9500\u6bc1distgraph\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0distgraph\u7684\u884c\u4e3a\u6ca1\u6709\u88ab\u5b9a\u4e49": 738, "\u952e\u662f\u4e00\u79cd\u5173\u7cfb": 752, "\u957f\u5ea6\u4e3a3\u7684\u8282\u70b9\u7279\u5f81": 744, "\u95f4\u9694\u635f\u5931": 769, "\u9648\u77e5\u96e8": 748, "\u9664\u4e86": 756, "\u9664\u4e86\u56fe\u7ed3\u6784": 743, "\u9664\u4e86\u5e73\u8861\u8282\u70b9\u7684\u7c7b\u578b\u4e4b\u5916": 739, "\u9664\u4e86\u5f20\u91cf\u7684\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b\u4e4b\u5916": 738, "\u9664\u4e86\u6570\u636e\u7ef4\u5ea6": 762, "\u9664\u4e86\u7528\u6237\u5728\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u65f6\u65e0\u6cd5\u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 738, "\u9664\u4e86\u8f93\u5165\u56fe\u548c\u8f93\u5165\u5f20\u91cf": 764, "\u9664\u4ee5\u5165\u5ea6": 763, "\u9664\u6b64\u4e4b\u5916": 751, "\u968f\u540e": 758, "\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b": 756, "\u9690\u5c42\u5927\u5c0f\u4e3a": 754, "\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u5404\u81ea\u8d1f\u8d23\u4e00\u5f20\u5b50\u56fe": 737, "\u9700\u8981\u4e0b\u56fe\u4e2d\u7684\u6765\u81ea\u8282\u70b94": 755, "\u9700\u8981\u4ee5\u5c0f\u6279\u6b21\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2agnn\u5c42\u6240\u6709\u8282\u70b9\u7684\u8f93\u51fa\u8868\u793a": 757, "\u9700\u8981\u5411\u6570\u636e\u8f7d\u5165\u5668\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u5bf9\u5e94\u8fb9id\u7684\u5b57\u5178": 758, "\u9700\u8981\u5bf9\u7528\u4e8e\u6574\u56fe\u7684gnn\u6a21\u5757\u8fdb\u884c\u5982\u4e0b\u8c03\u6574\u4ee5\u5c06\u5176\u7528\u4e8e\u5757\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5": 759, "\u9700\u8981\u5c06\u5176\u4e0e": 756, "\u9700\u8981\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a": 735, "\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u8282\u70b9\u548c\u8fb9\u7c7b\u578b": 747, "\u9700\u8981\u6839\u636e\u56fe\u7c7b\u578b\u88ab\u6307\u5b9a": 763, "\u9700\u8981\u6ce8\u610f": 768, "\u9700\u8981\u6ce8\u610f\u7684\u662f\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u8282\u70b9\u548c\u8fb9\u5c5e\u6027\u6ca1\u6709\u6279\u6b21\u5927\u5c0f\u5bf9\u5e94\u7684\u7ef4\u5ea6": 768, "\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c": 760, "\u975e\u7ebf\u6027\u548c\u57fa\u5206\u89e3": 760, "\u975e\u96f6\u7684\u5143\u7d20\u53ef\u4ee5\u53d6\u4efb\u610f\u6807\u91cf\u503c": 767, "\u975e\u96f6\u9879": 743, "\u9762\u5411\u90a3\u4e9b\u60f3\u8981\u5f00\u53d1\u65b0\u7684\u91c7\u6837\u7b97\u6cd5": 754, "\u987e\u5ba2": 742, "\u9884\u6d4b\u56fe\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u4efb\u52a1\u7c7b\u578b": 766, "\u9884\u6d4b\u5b83\u7684\u7c7b\u578b\u662f": 766, "\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027": 768, "\u9884\u6d4b\u8fb9\u5f97\u5206\u7684\u6a21\u578b\u548c\u8fb9\u5206\u7c7b": 769, "\u9996\u5148": 768, "\u9996\u5148\u4f7f\u7528pip\u5b89\u88c5ogb\u5305": 734, "\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0a\u56fe\u6240\u793a\u7684dglgraph": 755, "\u9996\u5148\u6211\u4eec\u904d\u5386\u56fe\u4e2d\u6240\u6709\u7684\u5173\u7cfb": 764, "\u9a8c\u8bc1": 738, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6": 766, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u5206\u5272\u4e5f\u4ee5\u5e03\u5c14\u63a9\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u56fe\u4e0a": 770, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 738, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b": 770, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57": 770, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u5212\u5206": 766, "\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u8282\u70b9\u770b\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 739, "\u9ad8\u5c42\u91c7\u6837api\u4e3a\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u91c7\u6837\u7b97\u6cd5": 738, "\u9ec4\u5d1f": 748, "\u9ed8\u8ba4": 732, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [738, 739], "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8fdb\u884c\u7279\u5f81\u5408\u5e76": 747, "\uac00": [775, 777, 778, 780, 790, 793, 794, 804, 807, 808, 811], "\uac00\uae4c\uc6b4": 775, "\uac00\ub2a5": 813, "\uac00\ub2a5\ub3c4": 812, "\uac00\ub2a5\ud558\ub2e4": [775, 780, 785, 791, 793, 795, 799, 801, 810, 811, 813], "\uac00\ub2a5\ud55c": [781, 791, 793, 813], "\uac00\uc774\ub4dc\ub294": 775, "\uac00\uc774\ub4dc\uc640": 799, "\uac00\uc7a5": [791, 802, 803, 807, 810, 813], "\uac00\uc815\ud558\uace0": [777, 812], "\uac00\uc815\ud558\ub294": 778, "\uac00\uc815\ud558\uba74": 810, "\uac00\uc815\ud558\uc790": 793, "\uac00\uc815\ud55c\ub2e4": [780, 781, 809, 810], "\uac00\uc838\ub2e4": 799, "\uac00\uc911\uce58": [780, 783, 785, 790], "\uac00\uc911\uce58\uace0": 792, "\uac00\uc911\uce58\ub294": [783, 792], "\uac00\uc911\uce58\ub4e4\uc744": 806, "\uac00\uc911\uce58\ub85c": 780, "\uac00\uc911\uce58\ub97c": [780, 783, 785, 792], "\uac00\uc911\uce58\uc640": 783, "\uac00\uc911\uce58\uc758": 780, "\uac00\uc911\uce58\uc774\ub2e4": 780, "\uac00\uc9c0": [777, 778, 780, 796, 798, 803, 812, 813], "\uac00\uc9c0\uace0": [803, 811, 813], "\uac01": [771, 776, 777, 778, 779, 780, 781, 783, 785, 787, 788, 790, 794, 796, 797, 799, 800, 801, 803, 804, 807, 808, 810, 811, 812, 813], "\uac01\uac01": [791, 793, 802], "\uac04\uacb0\ud558\uac8c": 791, "\uac04\ub2e8\ud558\uac8c": [776, 803, 810], "\uac04\ub2e8\ud558\uace0": 771, "\uac04\ub2e8\ud558\ub2e4": [780, 803, 810], "\uac04\ub2e8\ud55c": 782, "\uac04\ub2e8\ud788": 810, "\uac04\ub7b5\ud558\uac8c": 775, "\uac04\ub7b5\ud55c": 810, "\uac04\uc12d\uc774": 811, "\uac04\uc5d0": [779, 788], "\uac04\uc758": [783, 811, 812], "\uac12": 773, "\uac12\ub3c4": 780, "\uac12\ub4e4\uc744": 813, "\uac12\ub4e4\uc774\ub2e4": 780, "\uac12\ub4e4\uc778\ub370": 780, "\uac12\uc5d0": [798, 801, 804], "\uac12\uc73c\ub85c": [780, 804], "\uac12\uc740": [780, 794, 808, 810], "\uac12\uc744": [779, 780, 792, 807, 810], "\uac12\uc758": 779, "\uac12\uc774": 780, "\uac12\uc774\ub2e4": 780, "\uac12\uc778": 781, "\uac15\ub3c4\ub97c": 783, "\uac15\ub825\ud55c\uac00": 797, "\uac15\uc870\ud558\uae30": 775, "\uac15\ud558\uac8c": 771, "\uac16\uac70\ub098": 783, "\uac16\uac8c": 794, "\uac16\uace0": [774, 778, 779, 780, 785, 787, 788, 791, 799, 802, 810], "\uac16\uae30": [780, 794], "\uac16\ub294": [778, 779, 780, 782, 783, 784, 785, 787, 788, 794, 796, 797, 798, 802, 804, 810, 811], "\uac16\ub294\ub2e4": [777, 779, 780, 783, 785, 788, 791, 792, 799, 800, 809, 812], "\uac16\ub294\ub2e4\uace0": [778, 780], "\uac16\ub294\ub2e4\uba74": [780, 788, 798], "\uac16\ub294\ub370": [778, 780, 791, 804], "\uac16\ub3c4\ub85d": [778, 779, 780, 797], "\uac16\uc544\uc57c": 785, "\uac16\uc73c\uba70": 810, "\uac16\uc744": [782, 783, 785, 794, 808], "\uac16\uc74c": 802, "\uac16\uc9c0": [783, 807], "\uac19\uace0": 778, "\uac19\ub2e4": [772, 777, 778, 780, 781, 788, 791, 793, 794, 796, 797, 798, 799, 801, 803, 807, 810, 811, 812], "\uac19\ub3c4\ub85d": 780, "\uac19\uc544\uc57c": [781, 785, 787], "\uac19\uc544\uc57c\ub9cc": 778, "\uac19\uc740": [772, 777, 778, 779, 780, 781, 783, 785, 787, 788, 791, 792, 793, 797, 798, 799, 802, 803, 806, 807, 808, 809, 810, 811, 812, 813], "\uac19\uc744": 778, "\uac19\uc774": [775, 783, 790, 797, 798, 801, 802, 806, 808, 809, 810, 811, 812, 813], "\uac1c": 787, "\uac1c\uac00": 780, "\uac1c\uae4c\uc9c0": 787, "\uac1c\ub150\uc5d0": [798, 803], "\uac1c\ub150\uc740": [797, 798, 803], "\uac1c\ub150\uc744": 782, "\uac1c\ub97c": 778, "\uac1c\ub9cc": 778, "\uac1c\ubc1c": 778, "\uac1c\ubc1c\uc744": 787, "\uac1c\ubc1c\uc774": 799, "\uac1c\ubc1c\ud558\uace0": 778, "\uac1c\uc218": [772, 778, 781], "\uac1c\uc218\uac00": [780, 797], "\uac1c\uc218\uacfc": [778, 781], "\uac1c\uc218\ub294": [778, 781, 802], "\uac1c\uc218\ub97c": [778, 780], "\uac1c\uc218\uc5d0": [780, 799], "\uac1c\uc218\uc640": [778, 780, 785], "\uac1c\uc218\uc758": [778, 780], "\uac1c\uc22b\ub97c": 775, "\uac1c\uc758": [774, 778, 779, 780, 781, 801, 812], "\uac1c\uc778": 796, "\uac1d\uccb4": [776, 777, 784, 807], "\uac1d\uccb4\uac00": 778, "\uac1d\uccb4\ub294": 791, "\uac1d\uccb4\ub4e4\uc744": 778, "\uac1d\uccb4\ub4e4\uc758": 775, "\uac1d\uccb4\ub85c": [774, 780], "\uac1d\uccb4\ub97c": [778, 791, 798], "\uac1d\uccb4\ub9cc": 774, "\uac1d\uccb4\uc5d0": 778, "\uac1d\uccb4\uc640": 776, "\uac1d\uccb4\uc774\ub2e4": 791, "\uac2f\uc218\ub97c": 804, "\uac70\uafb8\ub85c": 796, "\uac70\ub4ed": 780, "\uac70\ub4ed\uc81c\uacf1\uc5d0": 801, "\uac70\uc758": [775, 798, 801, 803, 810], "\uac78\ub9ac\ub294": 800, "\uac78\uccd0\uc11c": [780, 788, 807], "\uac80\uc0c9\ud560": 779, "\uac80\uc99d": [778, 780, 800, 810, 813], "\uac80\uc99d\uacfc": 796, "\uac80\uc99d\uc744": 773, "\uac83": [798, 802, 803, 804], "\uac83\uacfc": [778, 780, 783, 798, 801, 805, 810], "\uac83\uacfc\ub294": 803, "\uac83\ub3c4": [773, 787, 791, 810], "\uac83\ub3e0": 799, "\uac83\ub4e4\uc5d0": 784, "\uac83\ub4e4\uc774\ub2e4": 780, "\uac83\ub9cc\uc774": 802, "\uac83\uc5d0": [780, 802], "\uac83\uc73c\ub85c": [780, 799, 803, 813], "\uac83\uc740": [775, 778, 785, 792, 797, 798, 800, 802, 803, 810, 811, 812, 813], "\uac83\uc744": [771, 772, 775, 776, 778, 779, 780, 788, 791, 793, 797, 801, 802, 811, 813], "\uac83\uc774": [774, 775, 776, 780, 793, 797, 798, 799, 800, 801, 803, 811, 812], "\uac83\uc774\uace0": [775, 778, 798], "\uac83\uc774\ub2e4": [772, 773, 775, 778, 780, 783, 785, 787, 788, 793, 796, 797, 798, 801, 802, 803, 807, 808, 810, 811, 812, 813], "\uac83\uc774\uc9c0\ub9cc": 804, "\uac83\uc778\ub2e4": 780, "\uac83\uc778\uc9c0": [797, 802], "\uac83\uc778\uc9c0\uc5d0": 802, "\uac83\uc77c": [801, 811], "\uac83\uc785\ub2c8\ub2e4": 789, "\uac83\uc9c0\ub9cc": 780, "\uac83\ucc98\ub7fc": [792, 798, 801], "\uacb0\uacfc": [786, 793, 797, 800, 808], "\uacb0\uacfc\uac00": 811, "\uacb0\uacfc\ub294": [780, 807, 808], "\uacb0\uacfc\ub4e4\uc740": 808, "\uacb0\uacfc\ub4e4\uc774": 780, "\uacb0\uacfc\ub77c\ub294": 803, "\uacb0\uacfc\ub85c": 798, "\uacb0\uacfc\ub85c\uc11c": 813, "\uacb0\uacfc\ub97c": [780, 782, 791, 793, 794, 797, 803, 808, 811], "\uacb0\uacfc\uc5d0": [778, 791], "\uacb0\uacfc\uc640": 791, "\uacb0\uacfc\uc758": 811, "\uacb0\uc815\ud55c\ub2e4": 806, "\uacb0\uc815\ud560": [779, 788], "\uacb0\ud569\ud558\uace0": 791, "\uacbd\ub85c\ub4e4\uc740": 781, "\uacbd\ub85c\ub85c": 781, "\uacbd\ub85c\ub97c": 781, "\uacbd\uc6b0": [773, 776, 778, 780, 781, 785, 788, 791, 795, 796, 797, 802, 804, 806, 807, 808, 811, 812], "\uacbd\uc6b0\uac00": [788, 810, 812], "\uacbd\uc6b0\ub294": 788, "\uacbd\uc6b0\ub3c4": [776, 797, 802, 809, 811], "\uacbd\uc6b0\ub4e4": 802, "\uacbd\uc6b0\ub77c\uba74": 791, "\uacbd\uc6b0\ub97c": 793, "\uacbd\uc6b0\uc5d0": [776, 778, 800, 807], "\uacbd\uc6b0\uc5d0\ub294": [775, 780, 787, 793, 796, 806], "\uacbd\uc6b0\uc5d0\ub9cc": 778, "\uacbd\uc6b0\uc640": [775, 788, 797, 811], "\uacbd\uc6b0\uc640\ub294": 811, "\uacc4\ub2e8\ub41c": 812, "\uacc4\uc0b0": [801, 804, 807, 810], "\uacc4\uc0b0\ub418\uc5b4\uc57c": [796, 803], "\uacc4\uc0b0\ub41c": 780, "\uacc4\uc0b0\uc740": 800, "\uacc4\uc0b0\uc744": [777, 779, 780], "\uacc4\uc0b0\uc774": 778, "\uacc4\uc0b0\uc801\uc778": 780, "\uacc4\uc0b0\ud558\uace0\uc790": 810, "\uacc4\uc0b0\ud558\uae30": [777, 797, 798, 801, 810], "\uacc4\uc0b0\ud558\uae30\ub97c": 803, "\uacc4\uc0b0\ud558\ub294": [797, 798, 800, 801, 810, 812, 813], "\uacc4\uc0b0\ud558\ub294\ub370": 803, "\uacc4\uc0b0\ud558\uba74": 810, "\uacc4\uc0b0\ud55c": 803, "\uacc4\uc0b0\ud55c\ub2e4": [798, 812], "\uacc4\uc0b0\ud55c\ub2e4\uace0": 810, "\uacc4\uc0b0\ud560": [797, 800, 803, 812, 813], "\uacc4\uc0b0\ud574\uc57c\ud558\uae30": 800, "\uacc4\uc0b0\ud574\uc57c\ud55c\ub2e4": 800, "\uacc4\uc18d": 804, "\uacc4\ud68d\uc774\ub77c\uba74": 809, "\uace0\uac1d": 783, "\uace0\uae09": [791, 796], "\uace0\ub824\ud558\uac8c": 780, "\uace0\ub824\ud558\uc790": 797, "\uace0\ub824\ud55c": 780, "\uace0\ub824\ud574\uc11c": 780, "\uace0\ub9bd": 797, "\uace0\ub9bd\ub41c": 797, "\uace0\uc720\uc758": 805, "\uace0\uc720\ud558\uac8c": [778, 788], "\uace0\uc720\ud558\ub2e4": 779, "\uace0\uc720\ud55c": [779, 780, 785, 787], "\uace0\uce58\uae30": 803, "\uacf1\ud558\uace0": [791, 804], "\uacf1\ud558\uae30": 792, "\uacf1\ud574\uc11c": 791, "\uacf3\uc5d0": [780, 784], "\uacf5\uac04\uacfc": 788, "\uacf5\ub3d9": 783, "\uacf5\ubc31": 780, "\uacf5\ubc31\uc73c\ub85c": 780, "\uacf5\uc2dd": 774, "\uacf5\uc2dd\uc5d0": 797, "\uacf5\uc2dd\uc73c\ub85c": [791, 808], "\uacf5\uc2dd\uc740": [797, 807], "\uacf5\ud1b5\uc801\uc778": 784, "\uacfc": [777, 778, 780, 781, 782, 783, 804, 806, 809], "\uacfc\uc815\uc5d0\uc11c": [780, 807], "\uacfc\uc81c": 812, "\uacfc\uc81c\ub4e4\uc758": 809, "\uacfc\uc81c\ub97c": 780, "\uad00\uacc4": [782, 783, 788, 794], "\uad00\uacc4\uac00": [783, 788, 808], "\uad00\uacc4\ub294": [783, 788, 807, 808], "\uad00\uacc4\ub2f9": [788, 807], "\uad00\uacc4\ub4e4\uc744": [788, 798], "\uad00\uacc4\ub4e4\uc758": 808, "\uad00\uacc4\ub85c": 808, "\uad00\uacc4\ub85c\ubd80\ud130": 808, "\uad00\uacc4\ub97c": [783, 788, 808, 811], "\uad00\uacc4\uc5d0": 808, "\uad00\uacc4\uc758": 794, "\uad00\uacc4\uc774\uace0": [794, 798], "\uad00\uacc4\uc778": 798, "\uad00\ub828": [781, 808], "\uad00\ub828\ub41c": [775, 781, 788, 791, 806, 812], "\uad00\ub828\uc5c6\uc774": 779, "\uad00\ub828\uc774": 799, "\uad00\ub9ac\ud558\ub294\ub370": 788, "\uad00\ub9ac\ud55c\ub2e4": 778, "\uad49\uc7a5\ud788": [776, 811], "\uad50\uccb4\ud558\ub294": 803, "\uad50\uccb4\ud55c\ub2e4": 802, "\uad6c\ub3d9\ud558\uace0": 778, "\uad6c\ub9e4\uc790": 783, "\uad6c\ubcc4\uc774": 788, "\uad6c\ubcc4\ud558\uace0": 778, "\uad6c\ubcc4\ud558\ub294": 780, "\uad6c\ubcc4\ud558\ub294\ub370": 778, "\uad6c\ubcc4\ud574\ubcfc": 811, "\uad6c\ubd84\ub418\ub294": 780, "\uad6c\ubd84\ub41c\ub2e4": 780, "\uad6c\ubd84\ub41c\ub2e4\uace0": 810, "\uad6c\ubd84\uc9c1\uae30": 798, "\uad6c\ubd84\ud55c\ub2e4\uba74": 779, "\uad6c\uc131": 780, "\uad6c\uc131\ub418\uc5b4": [805, 809], "\uad6c\uc131\ub418\uc5b4\uc57c": 780, "\uad6c\uc131\ub41c": [780, 783, 811, 812], "\uad6c\uc131\ub41c\ub2e4": [780, 783, 798, 803, 808, 813], "\uad6c\uc131\ud558\ub294": 780, "\uad6c\uc131\ud560": 780, "\uad6c\uc785": 783, "\uad6c\uc785\ud588\uc74c": 783, "\uad6c\uc870": 782, "\uad6c\uc870\ub294": 778, "\uad6c\uc870\ub85c": 782, "\uad6c\uc870\ub97c": [787, 811], "\uad6c\uc870\uc640": [777, 778, 780, 784, 786], "\uad6c\uc870\uc774\ub2e4": 783, "\uad6c\uccb4\uc801\uc778": 775, "\uad6c\ud558\uace0": 810, "\uad6c\ud558\uae30": [791, 813], "\uad6c\ud558\ub294\ub370": [798, 801], "\uad6c\ud574\uc9c4": 811, "\uad6c\ud604": [775, 803, 810, 813], "\uad6c\ud604\uacfc": [798, 801], "\uad6c\ud604\ub355\uc5d0": 805, "\uad6c\ud604\ub3c4": [798, 801], "\uad6c\ud604\ub418\uc5b4": [791, 807, 808, 813], "\uad6c\ud604\ub418\uc5b4\uc57c": 772, "\uad6c\ud604\ub41c\ub2e4": [807, 810], "\uad6c\ud604\ub41c\ub2e4\ub294": 800, "\uad6c\ud604\uc0c1\uc758": [798, 801], "\uad6c\ud604\uc5d0": 775, "\uad6c\ud604\uc5d0\uc11c": 803, "\uad6c\ud604\uc740": [775, 778, 793, 797, 802, 803, 811], "\uad6c\ud604\uc774": [775, 791, 798, 801, 802], "\uad6c\ud604\ud558\uace0": [771, 777, 778, 791, 796, 804, 811], "\uad6c\ud604\ud558\uae30": [776, 796, 803], "\uad6c\ud604\ud558\uae30\ub9cc": 797, "\uad6c\ud604\ud558\ub294": [771, 772, 800, 802, 803], "\uad6c\ud604\ud558\ub294\ub370": 772, "\uad6c\ud604\ud558\ub294\uc9c0": 790, "\uad6c\ud604\ud558\uba74": 793, "\uad6c\ud604\ud55c": [797, 802], "\uad6c\ud604\ud55c\ub2e4": [772, 773], "\uad6c\ud604\ud560": [773, 775, 776, 791, 813], "\uad6c\ud604\ud574\uc11c": 773, "\uad6c\ud604\ud574\uc57c": 775, "\uad8c\uc7a5\ud558\ub294\ub370": [772, 791], "\uad8c\uc7a5\ud55c\ub2e4": [771, 775, 776, 778, 793], "\uaddc\uce59\uc740": 791, "\uaddc\uce59\uc744": 811, "\uade0\ub4f1": 812, "\uade0\ub4f1\ud558\uac8c": 801, "\uade0\uc77c": 799, "\uade0\ud5dd\uc744": 780, "\uade0\ud615\uc744": 780, "\uade0\ud615\uc7a1\ud78c": 780, "\uadf8": [772, 778, 779, 780, 782, 784, 788, 790, 791, 793, 795, 796, 797, 800, 801, 803, 806, 807, 810, 811, 812, 813], "\uadf8\uac83\ub4e4\uc5d0": 788, "\uadf8\uac83\ub4e4\uc740": 778, "\uadf8\uac83\ub4e4\uc744": [778, 797], "\uadf8\uac83\ub4e4\uc758": [777, 780, 783, 784, 796, 798, 810], "\uadf8\uac83\uc740": 812, "\uadf8\uac83\uc758": [780, 803], "\uadf8\ub300\ub85c": [797, 801], "\uadf8\ub4e4\uc758": 783, "\uadf8\ub798\ub4e4": 811, "\uadf8\ub798\uc11c": [780, 784], "\uadf8\ub798\ud504": [772, 774, 777, 780, 781, 786, 789, 790, 794, 796, 797, 798, 800, 801, 803, 806, 808], "\uadf8\ub798\ud504\uac00": [778, 779, 780, 781, 783, 788, 797, 798, 802, 807, 810, 811, 813], "\uadf8\ub798\ud504\uac04\uc758": [798, 801], "\uadf8\ub798\ud504\ub098": 802, "\uadf8\ub798\ud504\ub294": [779, 780, 782, 783, 786, 788, 797, 798, 799, 802, 807, 811], "\uadf8\ub798\ud504\ub3c4": 797, "\uadf8\ub798\ud504\ub4e4": 775, "\uadf8\ub798\ud504\ub4e4\uacfc": 801, "\uadf8\ub798\ud504\ub4e4\ub85c": [777, 780], "\uadf8\ub798\ud504\ub4e4\uc5d0": [796, 801, 808, 809, 810, 811, 812], "\uadf8\ub798\ud504\ub4e4\uc5d0\uc11c": 812, "\uadf8\ub798\ud504\ub4e4\uc744": [779, 787, 811], "\uadf8\ub798\ud504\ub4e4\uc758": [775, 776, 780, 788, 798, 801, 803], "\uadf8\ub798\ud504\ub85c": [780, 781, 787, 797, 807, 811, 812], "\uadf8\ub798\ud504\ub85c\ubd80\ud130": [779, 784], "\uadf8\ub798\ud504\ub97c": [774, 775, 777, 778, 779, 780, 783, 784, 787, 797, 798, 799, 802, 803, 809, 810, 811, 812, 813], "\uadf8\ub798\ud504\ub9cc": 775, "\uadf8\ub798\ud504\ubcc4": 785, "\uadf8\ub798\ud504\uc5d0": [775, 778, 782, 786, 787, 789, 790, 795, 797, 800, 802, 803, 807, 809, 812, 813], "\uadf8\ub798\ud504\uc5d0\ub3c4": 797, "\uadf8\ub798\ud504\uc5d0\uc11c": [775, 780, 783, 794, 797, 808], "\uadf8\ub798\ud504\uc5d0\uc11c\ub294": 780, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": [790, 812], "\uadf8\ub798\ud504\uc640": [788, 797, 798, 799, 801, 802, 808, 809, 810, 811], "\uadf8\ub798\ud504\uc758": [775, 778, 779, 780, 782, 783, 785, 787, 788, 793, 797, 799, 802, 807, 808, 811], "\uadf8\ub798\ud504\uc774\uace0": 783, "\uadf8\ub798\ud504\uc774\uae30": 784, "\uadf8\ub798\ud504\uc774\ub2e4": [783, 794, 811, 812], "\uadf8\ub798\ud504\uc774\uc5b4\uc57c": 802, "\uadf8\ub798\ud504\uc774\uc790": 811, "\uadf8\ub798\ud504\uc778": [785, 796, 798], "\uadf8\ub798\ud504\uc77c": 788, "\uadf8\ub798\ud504\ud2d1": 779, "\uadf8\ub7a8\uc758": 788, "\uadf8\ub7a8\ud504\ub97c": 812, "\uadf8\ub7ec\uba74": 810, "\uadf8\ub7f0": 812, "\uadf8\ub807\uc9c0": [773, 798, 809], "\uadf8\ub8f9": 777, "\uadf8\ub8f9\uc73c\ub85c": 788, "\uadf8\ub9ac\uace0": [772, 775, 777, 778, 780, 781, 782, 783, 784, 788, 790, 791, 797, 798, 804, 805, 806, 809, 811, 813], "\uadf8\ub9bc\uc5d0\uc11c\uc640": 797, "\uadf8\ub9bc\uc740": [777, 779, 797], "\uadf8\ub9bc\uc758": 797, "\uadf8\uc5d0": [780, 794], "\uadf8\uc640": [783, 798], "\uae30\ub2a5": 784, "\uae30\ub2a5\uc740": 799, "\uae30\ub2a5\uc744": [780, 784, 791, 797], "\uae30\ubc18\uc73c\ub85c": [779, 781, 807], "\uae30\ubc18\uc758": [780, 812], "\uae30\ubc18\uc774\ub2e4": 797, "\uae30\ubc95\uc744": 810, "\uae30\ubc95\uc774\ub2e4": 792, "\uae30\ubcf8": [772, 778, 779, 780, 781, 791, 797], "\uae30\ubcf8\uc801\uc73c\ub85c": 802, "\uae30\ubcf8\uc801\uc778": [772, 774, 780, 782, 803], "\uae30\uc220\uc801\uc73c\ub85c\ub294": 797, "\uae30\uc5ec\ub97c": 805, "\uae30\uc900\uc758": 789, "\uae30\ud638\ub9cc\uc73c\ub85c": 780, "\uae38\uc774": 783, "\uae38\uc774\ub294": 778, "\uae40\ubb34\ud604": 789, "\uae54\ub054\ud55c": [771, 788], "\uae68\uc9d0": 778, "\uaf2d": [772, 780], "\ub05d\ub098\uba74": 780, "\ub098\ub204\uace0": [777, 778, 780], "\ub098\ub204\ub294": [778, 780, 793], "\ub098\ub208\ub2e4": 780, "\ub098\ub220\uc57c\ub9cc": 778, "\ub098\ub220\uc57c\ud55c\ub2e4": 778, "\ub098\ub220\uc838": 775, "\ub098\ub220\uc838\uc11c": [778, 779], "\ub098\ub220\uc9c4": 778, "\ub098\ub25c\ub2e4": [794, 806], "\ub098\ub25c\ub2e4\ub294": 802, "\ub098\ub260": 807, "\ub098\uba38\uc9c0": [777, 780, 811], "\ub098\uba38\uc9c0\ub294": 797, "\ub098\uba38\uc9c0\uc5d0\uc11c\ub294": [772, 777], "\ub098\uc544\uac00": [780, 786], "\ub098\uc5f4\ub418\uc5b4": 780, "\ub098\uc5f4\ud558\uace0": 780, "\ub098\uc5f4\ud558\uae30\ub294": 784, "\ub098\ud0c0\ub0b8\ub2e4": [783, 787], "\ub098\ud0c0\ub0b8\ub2e4\ub294": 811, "\ub0a8\uc544\uc788\ub2e4": 791, "\ub0ae\ub2e4\uace0": 793, "\ub0ae\ucd94\ub294": 793, "\ub0b4\ubcf4\ub0b4\ub294": 810, "\ub0b4\ubd80\uc801\uc73c\ub85c": [784, 791], "\ub0b4\ubd80\uc801\uc73c\ub85c\ub294": 778, "\ub0b4\uc5d0\uc11c": 780, "\ub0b4\uc6a9\uc73c\ub85c": 797, "\ub0b4\uc6a9\uc740": [775, 791], "\ub0b4\uc6a9\uc774": 784, "\ub0b8": 798, "\ub108\ubb34": [793, 799, 810], "\ub110\ub9ac": 813, "\ub118\uc744": 796, "\ub123\uae30": 799, "\ub124": [779, 780, 781], "\ub124\uac00\uc9c0": 779, "\ub124\uac00\ud2f0\ube0c": 812, "\ub124\uc784\uc2a4\ud328\uc774\uc2a4\uc5d0": 791, "\ub124\ud2b8\uc6cc\ud06c": [777, 780, 781, 789, 796, 802, 812], "\ub124\ud2b8\uc6cc\ud06c\uac00": [797, 813], "\ub124\ud2b8\uc6cc\ud06c\ub294": [783, 813], "\ub124\ud2b8\uc6cc\ud06c\ub4e4\uc5d0\uc11c": 794, "\ub124\ud2b8\uc6cc\ud06c\ub97c": [778, 803, 809, 810], "\ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c": 783, "\ub124\ud2b8\uc6cc\ud06c\uc758": 806, "\ub178\ub4dc": [777, 779, 782, 783, 784, 785, 788, 790, 791, 796, 797, 798, 801, 802, 807, 808, 809, 811, 812], "\ub178\ub4dc\uac00": [778, 780, 796, 803], "\ub178\ub4dc\uac04\uc758": 788, "\ub178\ub4dc\ub098": 794, "\ub178\ub4dc\ub294": [799, 813], "\ub178\ub4dc\ub4e4": [778, 780, 782, 796, 797, 798, 812], "\ub178\ub4dc\ub4e4\uac04\uc758": [782, 783], "\ub178\ub4dc\ub4e4\uacfc": [783, 785, 788, 797, 798, 799, 803], "\ub178\ub4dc\ub4e4\ub85c": 779, "\ub178\ub4dc\ub4e4\ub9cc\uc774": 797, "\ub178\ub4dc\ub4e4\uc5d0": [780, 797, 800, 803, 811, 812], "\ub178\ub4dc\ub4e4\uc5d0\uac8c": 791, "\ub178\ub4dc\ub4e4\uc5d0\uc11c": 797, "\ub178\ub4dc\ub4e4\uc640": 775, "\ub178\ub4dc\ub4e4\uc740": [779, 780, 783, 797, 803], "\ub178\ub4dc\ub4e4\uc744": [777, 780, 797, 801, 803, 807], "\ub178\ub4dc\ub4e4\uc758": [778, 780, 783, 793, 795, 796, 797, 800, 803, 807, 810, 811, 812, 813], "\ub178\ub4dc\ub4e4\uc774": [779, 783, 797, 798, 802], "\ub178\ub4dc\ub4e4\uc774\ub098": [780, 811], "\ub178\ub4dc\ub4e4\uc774\ub2e4": [782, 797, 807], "\ub178\ub4dc\ub85c": [793, 802, 803], "\ub178\ub4dc\ub97c": [779, 780, 783, 787, 791, 797, 801, 807, 813], "\ub178\ub4dc\ubcc4": 790, "\ub178\ub4dc\uc5d0": [780, 785, 787, 790, 801, 803, 806, 808, 810, 813], "\ub178\ub4dc\uc5d0\ub3c4": 797, "\ub178\ub4dc\uc5d0\uc11c": [775, 793], "\ub178\ub4dc\uc640": [777, 778, 779, 780, 782, 787, 788, 790, 791, 794, 797, 802, 807, 811], "\ub178\ub4dc\uc758": [775, 778, 780, 787, 788, 790, 791, 792, 795, 797, 798, 800, 802, 803, 806, 807, 810, 813], "\ub178\ub4e4\ub4e4": 797, "\ub178\ub4e4\ub4e4\uc744": 797, "\ub178\ub4e4\ub4e4\uc758": 800, "\ub178\ub4e4\uc5d0": 797, "\ub178\ub4e4\uc744": 797, "\ub178\ub4e4\uc758": [778, 780], "\ub178\uc774\uc988": 812, "\ub178\ud2b8": [780, 794, 797, 799, 810, 811], "\ub179\uc0c9": 797, "\ub179\uc0c9\uacfc": 797, "\ub179\uc0c9\uc73c\ub85c": 797, "\ub192\ub3c4\ub85d": 812, "\ub192\uc740": 793, "\ub193\uc774\uac8c": 807, "\ub208\uc5d0": 798, "\ub274\ub7f4": [789, 794, 796, 797, 802, 803, 806, 812], "\ub290\ub9b0": 800, "\ub294": [772, 774, 778, 780, 781, 783, 784, 787, 788, 790, 791, 794, 797, 798, 799, 801, 803, 804, 807, 808, 809, 811, 812, 813], "\ub298": 797, "\ub2a5\ub825\uc774": 791, "\ub2e4\ub8e8\uace0": 802, "\ub2e4\ub8e8\uae30": [773, 811], "\ub2e4\ub8e8\ub294": 799, "\ub2e4\ub8e8\ub294\ub370": 782, "\ub2e4\ub8e8\uc9c0": 784, "\ub2e4\ub8ec": 800, "\ub2e4\ub8ec\ub2e4": [777, 778, 796], "\ub2e4\ub8f0": [784, 787, 807, 808], "\ub2e4\ub974\uac8c": [775, 778, 803, 807], "\ub2e4\ub974\uae30": 797, "\ub2e4\ub974\uc9c0": [810, 811, 812], "\ub2e4\ub978": [778, 780, 781, 782, 783, 784, 786, 787, 788, 791, 793, 794, 798, 799, 803, 808, 809, 810, 811, 813], "\ub2e4\ub978\ub370": [800, 812], "\ub2e4\ub984\uc744": 774, "\ub2e4\uba74": 779, "\ub2e4\uc2dc": [778, 780, 788, 802], "\ub2e4\uc591\ud55c": [778, 784, 808, 812], "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0": 773, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 771, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294": 773, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c": 773, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c\ub2e4": 773, "\ub2e4\uc6b4\ub85c\ub4dc\ud574\uc11c": 774, "\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc": [780, 810, 812, 813], "\ub2e4\uc74c": [771, 773, 774, 775, 776, 778, 779, 780, 787, 788, 791, 797, 798, 799, 801, 802, 803, 804, 806, 810, 811, 812, 813], "\ub2e4\uc74c\uacfc": [772, 775, 777, 780, 781, 788, 790, 791, 792, 793, 794, 796, 797, 798, 801, 802, 803, 807, 808, 809, 810, 811, 812, 813], "\ub2e4\uc74c\uc5d0": 807, "\ub2e4\uc74c\uc5d0\ub294": 797, "\ub2e4\uc74c\uc73c\ub85c": 796, "\ub2e4\uc74c\uc73c\ub85c\ub294": [801, 806], "\ub2e4\uc74c\uc740": [780, 781, 801, 804, 812, 813], "\ub2e4\uc74c\uc744": [781, 808], "\ub2e4\uc911": [779, 783], "\ub2e4\uc911\uc758": 778, "\ub2e4\ucc28\uc6d0": 785, "\ub2e8": [776, 778, 780], "\ub2e8\uacc4\uac00": 778, "\ub2e8\uacc4\ub4e4\uc744": 806, "\ub2e8\uacc4\ub85c": 780, "\ub2e8\uacc4\ub97c": [780, 803], "\ub2e8\uacc4\ub9c8\ub2e4": 796, "\ub2e8\uacc4\uc5d0\uc11c": [790, 793, 807], "\ub2e8\ubc29\ud5a5": 802, "\ub2e8\uc21c\ud558\uac8c": [798, 802, 803, 811, 813], "\ub2e8\uc21c\ud55c": 803, "\ub2e8\uc21c\ud788": 797, "\ub2e8\uc704\ub85c": 811, "\ub2e8\uc77c": [775, 777, 778, 780, 791, 802, 808, 809, 810], "\ub2e8\uc885": 807, "\ub2e8\uc9c0": [788, 797, 802, 813], "\ub2e8\ud56d": 791, "\ub2e8\ud56d\uc758": 791, "\ub2ec\ub77c\uc9c4\ub2e4": [798, 806], "\ub2ec\uc131\ud558\uae30": 812, "\ub2ec\uc131\ud558\ub294": 793, "\ub2f4\uace0": [778, 780, 798, 803, 811], "\ub2f4\ub2f9\ud558\ub294": 794, "\ub2f4\ub2f9\ud55c\ub2e4": [778, 780, 797], "\ub300\ub7b5": 780, "\ub300\ubd80\ubd84": [778, 787, 804], "\ub300\ubd80\ubd84\uc758": [776, 811], "\ub300\uc0c1": 802, "\ub300\uc0c1\uc73c\ub85c": 802, "\ub300\uc2e0": [778, 788, 801], "\ub300\uc2e0\uc5d0": [798, 801], "\ub300\uce6d\uc801\uc778": 783, "\ub300\ud45c\ud558\ub3c4\ub85d": 803, "\ub300\ud55c": [771, 772, 773, 775, 776, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 798, 800, 801, 802, 803, 804, 807, 808, 809, 811, 812, 813], "\ub300\ud574": [777, 803, 808], "\ub300\ud574\uc11c": [778, 780, 797, 800, 801, 803, 804, 806, 808, 809, 810, 811, 812, 813], "\ub300\ud578": 796, "\ub354": [775, 776, 778, 780, 786, 791, 793, 797, 800, 804, 813], "\ub354\ubd88\uc5b4": [780, 784, 808, 811], "\ub354\ubd88\uc5b4\uc11c": 779, "\ub354\ud55c\ub2e4": 793, "\ub354\ud560": 775, "\ub354\ud574\uc11c": [780, 791, 811], "\ub355\uc5d0": 811, "\ub370\uc774": 778, "\ub370\uc774\ud130": [772, 780, 784, 787, 788, 789, 791, 797, 804, 806, 809, 813], "\ub370\uc774\ud130\uac00": [775, 776, 781, 800, 811], "\ub370\uc774\ud130\ub294": [775, 780], "\ub370\uc774\ud130\ub3c4": [780, 784], "\ub370\uc774\ud130\ub85c": 779, "\ub370\uc774\ud130\ub85c\ub354\ub97c": 811, "\ub370\uc774\ud130\ub85c\uc11c": 778, "\ub370\uc774\ud130\ub97c": [771, 773, 776, 777, 778, 779, 780, 784, 786], "\ub370\uc774\ud130\ub9cc": 786, "\ub370\uc774\ud130\uc14b": [772, 774, 776, 804, 809, 813], "\ub370\uc774\ud130\uc14b\uacfc": 775, "\ub370\uc774\ud130\uc14b\ub4e4": 771, "\ub370\uc774\ud130\uc14b\ub4e4\uc740": 775, "\ub370\uc774\ud130\uc14b\ub4e4\uc744": 774, "\ub370\uc774\ud130\uc14b\uc5d0": [772, 774, 775, 776, 800], "\ub370\uc774\ud130\uc14b\uc740": [774, 775, 813], "\ub370\uc774\ud130\uc14b\uc744": [771, 772, 774, 775, 803, 809, 811], "\ub370\uc774\ud130\uc14b\uc758": [774, 775, 811], "\ub370\uc774\ud130\uc14b\uc774": 773, "\ub370\uc774\ud130\uc5d0": [778, 779, 780, 781, 798], "\ub370\uc774\ud130\uc640": [777, 778, 779, 780, 781, 784], "\ub370\uc774\ud130\uc758": [775, 778], "\ub370\uc774\ud14c\uc14b\uc744": 775, "\ub370\uc774\ud2b8\ub97c": 772, "\ub374\uc2a4": 778, "\ub3c4\uad6c\ub4e4\uc744": 777, "\ub3c4\uc6c0\uc774": 793, "\ub3c4\ucc29\uc9c0": 788, "\ub3c4\ucd9c\ud560": 810, "\ub3c5\ub9bd\uc801\uc778": 788, "\ub3d5\uae30": 780, "\ub3d5\ub294": 781, "\ub3d9\uae30\ud654": 778, "\ub3d9\uc2dc": 778, "\ub3d9\uc2dc\uc5d0": [777, 778], "\ub3d9\uc548": [780, 791], "\ub3d9\uc548\uc5d0": 778, "\ub3d9\uc77c\ud558\uac8c": 788, "\ub3d9\uc77c\ud558\uae30\uc5d0": 798, "\ub3d9\uc77c\ud558\ub2e4": [775, 780, 793, 797, 804, 805, 807, 812, 813], "\ub3d9\uc77c\ud558\ub3c4\ub85d": 798, "\ub3d9\uc77c\ud55c": [777, 778, 791], "\ub3d9\uc791\uc740": 807, "\ub3d9\uc791\ud558\uac8c": 802, "\ub3d9\uc791\ud558\ub294": [799, 810], "\ub3d9\uc791\ud558\ub294\uc9c0": [771, 802, 813], "\ub3d9\uc791\ud558\ub294\uc9c0\ub97c": 772, "\ub3d9\uc791\ud55c\ub2e4": [778, 799, 802], "\ub3d9\uc791\ud560": 797, "\ub3d9\uc791\ud568": 799, "\ub3d9\uc885": 783, "\ub418\uac8c": 777, "\ub418\uace0": 807, "\ub418\uae30": 807, "\ub418\uae30\ub3c4": 794, "\ub418\ub294": 797, "\ub418\ub3c4\ub85d": 803, "\ub418\ubc84\ub9bc": 804, "\ub41c\ub2e4": [775, 783, 788, 793, 794, 797, 798, 807, 810, 811, 812, 813], "\ub41c\ub2e4\ub294": 803, "\ub420": [780, 781, 797], "\ub450": [778, 780, 781, 783, 785, 786, 788, 793, 794, 798, 801, 804, 810, 811, 812], "\ub450\uac00\uc9c0": [778, 779, 788, 799, 808], "\ub450\uac1c": 802, "\ub450\uac1c\ub85c": 793, "\ub450\uac1c\uc758": [783, 784, 791, 803], "\ub450\ubc88\uc9f8": [780, 797, 798], "\ub450\ubc88\uc9f8\ub294": [798, 807], "\ub450\ubc88\uc9f8\ub85c": 811, "\ub458\uc740": 810, "\ub4a4\uc5d0": 781, "\ub4e4": [797, 811], "\ub4e4\uaca0\ub2e4": 775, "\ub4e4\ub9cc": 797, "\ub4e4\uba74": [778, 791, 792, 801, 810, 811, 812], "\ub4e4\uc5b4": [776, 778, 779, 780, 782, 783, 785, 791, 797, 799, 802, 803, 810, 811, 812, 813], "\ub4e4\uc5b4\uac08": [799, 809], "\ub4e4\uc5b4\ubcf4\uc790": [793, 797, 802, 803], "\ub4e4\uc744": [791, 798], "\ub4e4\uc758": [790, 798, 801, 803], "\ub4e4\uc790": 802, "\ub4ec\ub140": 788, "\ub4f1": 772, "\ub4f1\uacfc": 806, "\ub4f1\ub85d": 806, "\ub4f1\ub85d\uacfc": 805, "\ub4f1\ub85d\ud55c\ub2e4": 806, "\ub4f1\uc740": 780, "\ub4f1\uc758": 813, "\ub4f1\uc774": [791, 811], "\ub4f1\uc7a5\ud55c\ub2e4\ub294": 797, "\ub514\ub809\ud1a0\ub9ac": [773, 781], "\ub514\ub809\ud1a0\ub9ac\ub85c": [773, 781], "\ub514\ub809\ud1a0\ub9ac\ub97c": [780, 781], "\ub514\ub809\ud1a0\ub9ac\uc5d0": [773, 775, 780], "\ub514\ub809\ud1a0\ub9ac\uc640": 780, "\ub514\ub809\ud1a0\ub9ac\uc758": 780, "\ub514\ubc14\uc774\uc2a4": 787, "\ub514\ubc14\uc774\uc2a4\ub85c": 799, "\ub514\uc2a4\ud06c\ub85c": 776, "\ub514\uc2a4\ud06c\uc5d0": [772, 773, 776, 784], "\ub514\uc790\uc778\uc744": 778, "\ub525\ub7ec\ub2dd": 813, "\ub525\ub7ec\ub2dd\uc5d0\uc11c": 811, "\ub530\ub77c": [780, 787, 805, 806, 807, 812, 813], "\ub530\ub77c\uc11c": [775, 778, 779, 780, 781, 783, 784, 786, 797, 798, 799, 801, 802, 804, 807], "\ub530\ub974\uace0": 778, "\ub530\ub974\uba74": 797, "\ub530\ub978\ub2e4": [771, 785], "\ub54c": [777, 778, 779, 780, 788, 791, 793, 798, 800, 801, 803, 806, 808, 810, 811, 812], "\ub54c\uae4c\uc9c0": 796, "\ub54c\ub294": [779, 788, 804], "\ub54c\ub85c\ub294": [793, 798, 809], "\ub54c\ub860": 810, "\ub54c\ubb38\uc5d0": [775, 776, 778, 783, 788, 793, 797, 800, 801, 804, 807, 810, 811, 812], "\ub54c\ubb38\uc774\ub2e4": [771, 772, 778, 780, 784, 787, 791, 793, 797, 798, 799, 800, 812], "\ub54c\uc758": 804, "\ub5a0\uc62c\ub824": 797, "\ub610\ub294": [772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 794, 796, 797, 802, 806, 808, 809, 811, 812, 813], "\ub610\ud55c": [772, 775, 778, 780, 781, 787, 796, 803, 810, 813], "\ub611\uac19\uc774": 811, "\ub73b": 812, "\ub744\ub294": 798, "\ub77c\uace0": [787, 791, 797, 803, 810, 812], "\ub77c\ub294": [775, 779, 780, 791], "\ub77c\uc774\ube0c\ub7ec\ub9ac": 784, "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4": 784, "\ub77c\uc778": 785, "\ub77c\uc778\uc774\ub2e4": 777, "\ub798\ud551\ud558\uba74": 804, "\ub79c\ub364": 780, "\ub7ec\ud37c\ub7f0\uc2a4": 784, "\ub7f0\uce58": 781, "\ub7f0\uce6d\ud558\uae30": 777, "\ub808\uc774\ube14": [772, 775, 784, 811], "\ub808\uc774\ube14\uacfc": 813, "\ub808\uc774\ube14\ub4e4\uc758": 775, "\ub808\uc774\ube14\ub85c": 810, "\ub808\uc774\ube14\ub9cc": 803, "\ub808\uc774\ube14\uc740": [803, 813], "\ub808\uc774\ube14\uc744": [776, 788, 803, 810], "\ub808\uc774\ube14\uc774": [780, 800], "\ub808\uc774\uc544\uc6c3\uc744": 785, "\ub808\uc774\uc5b4": [793, 800, 803, 804, 810, 812, 813], "\ub808\uc774\uc5b4\uac00": 778, "\ub808\uc774\uc5b4\ub4e4": 800, "\ub808\uc774\uc5b4\ub4e4\uc744": 800, "\ub808\uc774\uc5b4\ub85c\ubd80\ud130": 797, "\ub808\uc774\uc5b4\ub97c": 797, "\ub808\uc774\uc5b4\ubd80\ud130": 800, "\ub808\uc774\uc5b4\uc5d0": [797, 798, 800, 803, 811], "\ub808\uc774\uc5b4\uc5d0\uc11c": [796, 803], "\ub808\uc774\uc5b4\uc758": [793, 796, 797, 800], "\ub808\uc774\uc774\ubcc4\ub85c": 800, "\ub85c": [779, 781, 782, 784, 787, 790, 802, 803, 804, 807, 808, 813], "\ub85c\ub354": 778, "\ub85c\ub354\uac00": [798, 803], "\ub85c\ub354\ub294": 801, "\ub85c\ub354\ub85c\ubd80\ud130": 798, "\ub85c\ub354\ub97c": [778, 797, 798, 801], "\ub85c\ub354\uc5d0": 801, "\ub85c\ub354\uc5d0\uc11c": 798, "\ub85c\ub4dc\ub420": [778, 779, 803], "\ub85c\ub4dc\uc548\ub2e4": 780, "\ub85c\ub4dc\uc5d0": 772, "\ub85c\ub4dc\ud558\uace0": [778, 780], "\ub85c\ub4dc\ud558\uae30": [771, 775], "\ub85c\ub4dc\ud558\ub294": 803, "\ub85c\ub4dc\ud558\uba74": 803, "\ub85c\ub4dc\ud55c\ub2e4": [778, 803], "\ub85c\ub4dc\ud55c\ub2e4\ub294": 803, "\ub85c\ub529": [771, 772, 774], "\ub85c\ub529\ub420": 780, "\ub85c\ub529\uc744": 772, "\ub85c\ub529\ud558\uace0": [771, 772, 784], "\ub85c\ub529\ud558\uae30": 780, "\ub85c\ub529\ud558\ub294": [774, 784, 799], "\ub85c\ub529\ud55c\ub2e4": 803, "\ub85c\ub529\ud568": 776, "\ub85c\ubd80\ud130": [778, 779, 784, 797], "\ub85c\uc11c": 790, "\ub85c\uc758": 787, "\ub85c\uc9c1\uc73c\ub85c": 808, "\ub85c\uceec": [772, 773, 776, 777, 778, 780, 781], "\ub8e8\ud504": 783, "\ub8f9\uacfc": [777, 798, 800, 812, 813], "\ub8f9\uc740": [798, 801, 803, 810, 811, 812, 813], "\ub8f9\uc744": [780, 800, 810, 813], "\ub8f9\uc774\ub791": 803, "\ub97c": [772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813], "\ub9ac\uadf8\ub798\uc158": [775, 809], "\ub9ac\uadf8\ub808\uc158": [798, 809, 812, 813], "\ub9ac\uadf8\ub808\uc158\uacfc": 798, "\ub9ac\uadf8\ub808\uc158\uc5d0\uc11c": 801, "\ub9ac\uadf8\ub808\uc158\uc744": [798, 801, 810], "\ub9ac\ub4c0\uc154": 794, "\ub9ac\ub4dc\uc544\uc6c3\uc740": 811, "\ub9ac\uc14b": 806, "\ub9ac\uc18c\uc2a4\ub4e4\uc758": 777, "\ub9ac\uc18c\uc2a4\ub97c": 800, "\ub9ac\uc2a4\ud2b8": [801, 803], "\ub9ac\uc2a4\ud2b8\ub4e4\uc5d0": 808, "\ub9ac\uc2a4\ud2b8\ub85c": 775, "\ub9ac\uc2a4\ud2b8\ub85c\ubd80\ud130": 811, "\ub9ac\uc2a4\ud2b8\ub97c": [797, 798, 803, 811], "\ub9ac\uc2a4\ud2b8\uc5d0": 811, "\ub9ac\uc2a4\ud2b8\uc5d0\uc11c": 798, "\ub9ac\uc2a4\ud2b8\uc640": [775, 776, 798], "\ub9ac\uc2a4\ud2b8\uc758": 807, "\ub9ac\uc2a4\ud2b8\uc774\ub2e4": 808, "\ub9ac\ud134\ub418\uc9c0": 778, "\ub9ac\ud134\ub41c": [797, 813], "\ub9ac\ud134\ub41c\ub2e4": [780, 798], "\ub9ac\ud134\ud558\uae30": 810, "\ub9ac\ud134\ud558\ub3c4\ub85d": 775, "\ub9ac\ud134\ud55c\ub2e4": [778, 780, 798, 810, 813], "\ub9ac\ud134\ud55c\ub2e4\ub294": 778, "\ub9ac\ud134\ud574\uc57c": 801, "\ub9ac\ud134\ud574\uc57c\ud55c\ub2e4": 801, "\ub9b4\ub9ac\uc988\uc5d0\uc11c": 779, "\ub9c1\ud06c": [778, 796, 809, 811, 813], "\ub9c1\ud06c\ub97c": 775, "\ub9c8\ub2e4": [778, 801], "\ub9c8\uc2a4\ud06c": 775, "\ub9c8\uc2a4\ud06c\ub294": 775, "\ub9c8\uc2a4\ud06c\ub4e4\uc744": 775, "\ub9c8\uc2a4\ud06c\ub85c": 810, "\ub9c8\uc2a4\ud06c\ub85c\uc11c": 813, "\ub9c8\uc2a4\ud06c\ub97c": 775, "\ub9c8\uc2a4\ud130": 781, "\ub9c8\uc9c0\ub9c9": [790, 791, 793, 797, 798, 803, 807], "\ub9c8\uc9c0\ub9c9\uc5d0\ub294": 806, "\ub9c8\uc9c0\ub9c9\uc73c\ub85c": [791, 796, 808, 811], "\ub9c8\uce5c": 775, "\ub9cc": 799, "\ub9cc\ub4dc\ub294": [771, 775, 778, 780, 784, 787, 788, 790, 797, 798, 802, 803, 805, 812], "\ub9cc\ub4dc\ub294\ub370": [784, 805], "\ub9cc\ub4e0": [780, 795, 801, 809, 810], "\ub9cc\ub4e0\ub2e4": [780, 784, 798, 803, 810, 811], "\ub9cc\ub4e4": [778, 779, 780, 784, 786, 797, 798, 806, 807, 811], "\ub9cc\ub4e4\uac8c": 797, "\ub9cc\ub4e4\uace0": [778, 787, 788, 802, 812], "\ub9cc\ub4e4\uace0\uc790": [796, 810], "\ub9cc\ub4e4\uae30": [777, 779, 780, 787, 789, 791, 800, 802, 809, 813], "\ub9cc\ub4e4\uba74": 784, "\ub9cc\ub4e4\uc5b4": [778, 798], "\ub9cc\ub4e4\uc5b4\ub0b4\uae30": 811, "\ub9cc\ub4e4\uc5b4\ub0b4\ub294": 797, "\ub9cc\ub4e4\uc5b4\ub0b8\ub2e4": [801, 811], "\ub9cc\ub4e4\uc5b4\ub0bc": 807, "\ub9cc\ub4e4\uc5b4\uc11c": [793, 811], "\ub9cc\ub4e4\uc5b4\uc57c": [778, 780, 787], "\ub9cc\ub4e4\uc5b4\uc57c\ud560": 797, "\ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74": 797, "\ub9cc\ub4e4\uc5b4\uc9c0\uba74": [778, 780], "\ub9cc\ub4e4\uc5b4\uc9c4\ub2e4": [778, 783, 785], "\ub9cc\ub4e4\uc5b4\uc9c8": [780, 798], "\ub9cc\ub4e4\uc5c8\ub2e4": 775, "\ub9cc\ub4e4\uc5c8\ub2e4\uba74": 810, "\ub9cc\ub4e4\uc790": 773, "\ub9cc\uc57d": [773, 775, 778, 779, 780, 784, 788, 791, 793, 796, 797, 798, 799, 801, 803, 804, 809, 813], "\ub9cc\uc744": [779, 813], "\ub9cc\uc871\ud558\uc9c0": 788, "\ub9cc\uc871\ud574\uc57c": 802, "\ub9ce\uc740": [775, 778, 780, 793, 797, 799, 800, 811], "\ub9ce\uc774": [771, 772, 793, 805, 811, 812], "\ub9d0\ud558\uc790\uba74": 778, "\ub9de\uac8c": 800, "\ub9de\ub3c4\ub85d": [780, 803], "\ub9de\ucd94\uac83\uc744": 780, "\ub9de\ucd94\ub294": 780, "\ub9de\ucd98\ub2e4": 780, "\ub9de\ucd9c": 780, "\ub9e4": [778, 803], "\ub9e4\ub274\uc5bc\uc758": 784, "\ub9e4\ubc88": 803, "\ub9e4\uc6b0": [793, 803], "\ub9e4\ud551": 798, "\ub9e4\ud551\uc740": 797, "\ub9e4\ud551\uc744": [780, 798], "\ub9e4\ud551\uc774\ub2e4": 780, "\ub9e4\ud551\ud558\ub294": 808, "\ub9f4\ubc84": 791, "\ub9f4\ubc84\ub97c": 791, "\uba04\uc57d": 780, "\uba38\uc2e0": 781, "\uba38\uc2e0\ub4e4\uc5d0": [778, 780], "\uba38\uc2e0\ub4e4\uc758": [778, 781], "\uba38\uc2e0\ub7ec\ub2dd": 775, "\uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294": 775, "\uba38\uc2e0\uc5d0": [779, 780, 781], "\uba38\uc2e0\uc5d0\uc11c": [778, 780, 781], "\uba38\uc2e0\uc740": 781, "\uba38\uc2e0\uc744": 781, "\uba38\uc2e0\uc758": [778, 781], "\uba38\uc2e0\uc774": [778, 781], "\uba3c\uc800": [778, 797], "\uba40\ud2f0": [775, 799, 803, 810, 812, 813], "\uba4b\uc9c4": 811, "\uba54\ub274\uc5bc\uc5d0": 784, "\uba54\ubaa8\ub9ac": [793, 799, 800, 804], "\uba54\ubaa8\ub9ac\uac00": [796, 804], "\uba54\ubaa8\ub9ac\ub098": 803, "\uba54\ubaa8\ub9ac\ub97c": [793, 799, 804], "\uba54\ubaa8\ub9ac\uc5d0": [799, 809], "\uba54\ubaa8\ub9ac\uc640": 800, "\uba54\uc18c\ub4dc": 797, "\uba54\uc18c\ub4dc\ub294": 797, "\uba54\uc18c\ub4dc\ub85c": [800, 810], "\uba54\uc18c\ub4dc\ub97c": [787, 797, 810], "\uba54\uc18c\ub4dc\uc5d0": 810, "\uba54\uc18c\uc2a4\ub4e4": 797, "\uba54\uc2dc\uc9c0": [790, 800, 802, 803, 805, 808, 809, 811, 813], "\uba54\uc2dc\uc9c0\ub4e4": 791, "\uba54\uc2dc\uc9c0\ub4e4\uc5b4": 800, "\uba54\uc2dc\uc9c0\ub4e4\uc744": [790, 791], "\uba54\uc2dc\uc9c0\ub4e4\uc774": 806, "\uba54\uc2dc\uc9c0\ub97c": [790, 793, 797, 803, 813], "\uba54\uc2dc\uc9c0\uc758": 793, "\uba54\uc9c0\uc2dc": [789, 794, 809, 813], "\uba54\ucf13\ud50c\ub798\uc774\uc2a4\ub97c": 783, "\uba54\ud0c0": 780, "\uba54\ud0c0\uadf8\ub798\ud504": 788, "\uba54\ud0c0\uadf8\ub798\ud504\uc758": 788, "\uba54\ud0c0\ub370\uc774\ud130\ub97c": 778, "\uba54\ud551\uc744": 780, "\uba64\uba38\ub97c": 797, "\uba85\ub839": 780, "\uba85\ub839\uc73c\ub85c": 774, "\uba85\ub839\uc740": 780, "\uba85\ub839\uc744": 780, "\uba85\ub839\uc758": 780, "\uba85\ub839\uc774": 780, "\uba85\ub839\ud589\uc774\ub098": 778, "\uba85\uc2dc\ub41c": [781, 807], "\uba85\uc2dc\ub41c\ub2e4\uba74": 780, "\uba85\uc2dc\uc801\uc73c\ub85c": 778, "\uba85\uc2dc\uc801\uc778": 787, "\uba85\uc2dc\ud558\uace0": 788, "\uba85\uc2dc\ud558\uae30\ub9cc": 810, "\uba85\uc2dc\ud558\ub294": 780, "\uba85\uc2dc\ud558\uc9c0": 780, "\uba85\uc2dc\ud55c\ub2e4": 780, "\uba85\uc2dc\ud560": [788, 798], "\uba85\uc2dc\ud574\uc57c": [779, 807], "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4": 788, "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4\ub294": 803, "\uba85\ud655\ud558\uac8c": 788, "\uba87": [777, 778, 780, 796, 798, 802, 803, 812, 813], "\uba87\uac00\uc9c0": [782, 812], "\uba87\uac1c\uc758": 802, "\ubaa8\ub378": [775, 777, 778, 796, 800, 807, 810], "\ubaa8\ub378\uacfc": 812, "\ubaa8\ub378\uacfc\ub294": 812, "\ubaa8\ub378\ub85c": [778, 810], "\ubaa8\ub378\ub9c1": [788, 794], "\ubaa8\ub378\ub9c1\uc5d0": 783, "\ubaa8\ub378\ub9c1\uc5d0\uc11c": [788, 792], "\ubaa8\ub378\ub9c1\ud558\ub294\ub370": 783, "\ubaa8\ub378\uc5d0": [775, 801, 810, 811, 813], "\ubaa8\ub378\uc5d0\uc11c\ub294": 813, "\ubaa8\ub378\uc740": [798, 801, 810, 812, 813], "\ubaa8\ub378\uc744": [778, 796, 800, 804, 805, 810, 811, 812, 813], "\ubaa8\ub378\uc758": [778, 796, 804, 811], "\ubaa8\ub378\uc774": [778, 799, 811], "\ubaa8\ub450": [780, 783, 788, 791, 797, 799, 800, 807, 811, 812], "\ubaa8\ub450\ub97c": 801, "\ubaa8\ub450\uc5d0": 797, "\ubaa8\ub4c8": [777, 789, 796, 803, 809, 813], "\ubaa8\ub4c8\uacfc": [807, 810], "\ubaa8\ub4c8\ub3c4": 778, "\ubaa8\ub4c8\ub4e4\uc740": [802, 803, 806], "\ubaa8\ub4c8\ub4e4\uc744": 813, "\ubaa8\ub4c8\ub9cc\uc744": 803, "\ubaa8\ub4c8\uc5d0": [807, 808, 811], "\ubaa8\ub4c8\uc5d0\uc11c": [798, 805, 807], "\ubaa8\ub4c8\uc740": [805, 806, 807, 810], "\ubaa8\ub4c8\uc744": [778, 796, 802, 803, 804, 805, 808, 809, 810, 813], "\ubaa8\ub4c8\uc758": [778, 800, 802, 805, 806, 810, 813], "\ubaa8\ub4c8\uc774": [778, 802, 803, 808, 813], "\ubaa8\ub4c8\uc774\uace0": 808, "\ubaa8\ub4c8\uc774\ub2e4": 806, "\ubaa8\ub4c8\uc778": 813, "\ubaa8\ub4c8\ucc98\ub7fc": 808, "\ubaa8\ub4dc\ub294": 778, "\ubaa8\ub4dc\ub85c": 778, "\ubaa8\ub4dc\uc5d0\uc11c\ub294": 778, "\ubaa8\ub4dc\uc640": 778, "\ubaa8\ub4e0": [777, 778, 779, 780, 781, 783, 784, 786, 787, 788, 791, 794, 796, 797, 799, 800, 801, 802, 803, 807, 810, 811, 813], "\ubaa8\uc544\uc11c": 788, "\ubaa8\uc74c\uc774\ub2e4": 774, "\ubaa9\ub85d": 811, "\ubaa9\ub85d\uc5d0": 811, "\ubaa9\ub85d\uc740": [791, 798, 803, 813], "\ubaa9\ub85d\uc744": [798, 803], "\ubaa9\ub85d\uc774": 797, "\ubaa9\uc801": 808, "\ubaa9\uc801\uc73c\ub85c": [788, 800], "\ubaa9\uc801\uc73c\ub85c\ub294": 800, "\ubaa9\uc801\uc740": 772, "\ubaa9\uc801\uc9c0": [780, 791, 797, 801, 803, 806, 807, 808], "\ubaa9\uc801\uc9c0\uac00": 797, "\ubaa9\uc801\uc9c0\uc640": 788, "\ubaa9\uc801\uc9c0\uc778": 797, "\ubb38\ubc95\uc744": 788, "\ubb38\uc790": 788, "\ubb38\uc790\ub4e4\uacfc": 780, "\ubb38\uc790\ub85c": 780, "\ubb38\uc790\ub9cc\ub4e4": 788, "\ubb38\uc790\uc5f4": 788, "\ubb38\uc790\uc5f4\uc774\ub2e4": [791, 794], "\ubb38\uc7a5\uc73c\ub85c": 810, "\ubb38\uc81c\ub294": 811, "\ubb38\uc81c\ub4e4\uacfc": 811, "\ubb38\uc81c\ub97c": [804, 807], "\ubb38\uc81c\uc640": 811, "\ubb38\uc81c\uc778": 810, "\ubbf8\ub2c8": [775, 777, 778, 795, 796, 800, 807, 811], "\ubbf8\ub2c8\ubc30\uce58": [778, 779, 801], "\ubbf8\ub2c8\ubc30\uce58\ub97c": 800, "\ubbf8\ub2c8\ubc30\uce58\ub9cc": 800, "\ubbf8\ub2c8\ubc30\uce58\uc5d0": [801, 803], "\ubbf8\ub2c8\ubc30\uce58\uc5d0\uc11c": 798, "\ubbf8\ub2c8\ubc30\uce58\uc640": 800, "\ubbf8\ub2c8\ubc30\uce58\uc758": [798, 800], "\ubbf8\ub798\uc758": 810, "\ubbf8\ub9ac": 813, "\ubbf8\ub9cc\uc758": 799, "\ubc0f": [775, 776, 778, 779, 782, 784, 785, 787, 788, 789, 790, 796, 797, 800, 804, 807, 809, 811, 813], "\ubc11\uc904": 780, "\ubc14\uafb8\uace0": 779, "\ubc14\uafb8\uae30\ub9cc": 797, "\ubc14\uafb8\ub294": 802, "\ubc14\uafb8\uba74": 804, "\ubc14\ub010": 775, "\ubc14\ub014": 779, "\ubc16\uc5d0\uc11c": [772, 791], "\ubc18\uacfc": 793, "\ubc18\ub300": 798, "\ubc18\ub300\ub85c": 783, "\ubc18\ub300\uc758": 780, "\ubc18\ub4dc\uc2dc": [791, 802], "\ubc18\uba74": 800, "\ubc18\uba74\uc5d0": 793, "\ubc18\ubcf5": 796, "\ubc18\ubcf5\ub41c\ub2e4": 796, "\ubc18\ubcf5\uc801\uc73c\ub85c": 812, "\ubc18\ubcf5\ud574\uc11c": 813, "\ubc18\uc774": 793, "\ubc18\ud658\ud558\ub294": 803, "\ubc1b\uace0": [778, 808, 813], "\ubc1b\ub294": [801, 807], "\ubc1b\ub294\ub2e4": [780, 787, 794, 803, 807, 808], "\ubc1b\ub294\ub2e4\ub294": [798, 801, 803], "\ubc1b\ub294\ub370": 791, "\ubc1b\uc544\ub4e4\uc778\ub2e4": 786, "\ubc1b\uc544\uc11c": 801, "\ubc1b\uc544\uc57c\ud558\uace0": 801, "\ubc1b\uc744": 803, "\ubc1c\ub824\uc640\uc11c": 811, "\ubc1c\uc0dd\uc2dc\ud0a4\ub294\ub370": 797, "\ubc1c\uc0dd\ud560": [778, 800], "\ubc25\ubc99\uc73c\ub85c": 792, "\ubc29\ubc95": [778, 787, 790, 807], "\ubc29\ubc95\uacfc": [797, 798, 803, 809], "\ubc29\ubc95\ub3c4": 796, "\ubc29\ubc95\ub4e4\uc5d0": 784, "\ubc29\ubc95\ub4e4\uc744": [787, 797], "\ubc29\ubc95\uc5d0": [775, 793, 809], "\ubc29\ubc95\uc73c\ub85c": [778, 780, 795, 799], "\ubc29\ubc95\uc73c\ub85c\ub294": 786, "\ubc29\ubc95\uc740": [775, 780, 784, 788, 793, 796, 800, 804, 810, 811, 812, 813], "\ubc29\ubc95\uc744": [771, 772, 774, 775, 780, 790, 791, 797, 800, 801, 804, 805, 810, 813], "\ubc29\ubc95\uc774\ub2e4": [775, 795, 799], "\ubc29\uc2dd\uc73c\ub85c": [790, 797], "\ubc29\uc2dd\uc744": 777, "\ubc29\uc2dd\uc758": 805, "\ubc29\uc9c0\ud558\ub294": 778, "\ubc29\ud5a5\uc131": [783, 797], "\ubc29\ud5a5\uc131\uc5d0": 783, "\ubc29\ud5a5\uc131\uc744": 783, "\ubc29\ud5a5\uc131\uc774": 783, "\ubc29\ud5a5\uc744": 787, "\ubc29\ud5a5\uc774": 784, "\ubc30\uc5f4": [788, 798, 801, 803], "\ubc30\uc5f4\uacfc": 801, "\ubc30\uc5f4\uc758": 801, "\ubc30\uc81c\ud558\uace0\uc790": 798, "\ubc30\uc81c\ud558\ub294": 798, "\ubc30\uce58": [775, 777, 778, 795, 796, 800, 807], "\ubc30\uce58\ub4e4\uc744": 778, "\ubc30\uce58\ub4e4\uc758": 803, "\ubc30\uce58\ub85c\ubd80\ud130": 798, "\ubc30\uce58\ub97c": [777, 778, 791, 796, 811], "\ubc30\uce58\uc548\uc5d0": 798, "\ubc30\uce58\uc5d0": [791, 811], "\ubc30\uce58\uc5d0\uc11c": 796, "\ubc31\uc564\ub4dc\ub9cc": 777, "\ubc31\uc5d4\ub4dc": [784, 805], "\ubc31\uc5d4\ub4dc\ub85c": [805, 809], "\ubc31\uc5d4\ub4dc\ub97c": 805, "\ubc84\ub9b0\ub2e4\ub294": 811, "\ubc84\uc804": 789, "\ubc84\uc804\ub3c4": [802, 811], "\ubc84\uc804\uc758": 780, "\ubc84\uc804\uc774\ub2e4": 810, "\ubc84\ud2f1\uc2a4\ub4e4": 783, "\ubc88": 813, "\ubc88\uc5ed\ud55c": 789, "\ubc88\ud638": 787, "\ubc88\ud638\uac00": [781, 787], "\ubc88\ud638\ub294": 787, "\ubc88\ud638\ub3c4": 781, "\ubc88\ud638\ub97c": 787, "\ubc94\uc704\ub3c4": 780, "\ubc94\uc704\ub97c": 780, "\ubc94\uc704\uc5d0": 775, "\ubc94\uc704\uc758": 813, "\ubc94\uc8fc\ud615": 810, "\ubc95\uc744": 796, "\ubc95\uce59\uc758": 780, "\ubca0\uce58\ub4e4\uc5d0": 798, "\ubca1\ud130": [785, 810], "\ubca1\ud130\ub294": 780, "\ubca1\ud130\ub4e4\uc758": 780, "\ubca1\ud130\ub97c": 780, "\ubca1\ud130\uc778": 780, "\ubca4\uce58\ub9c8\ud0b9": 774, "\ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0": 773, "\ubcc0\uacbd\uc740": 777, "\ubcc0\uacbd\ud558\uae30": 803, "\ubcc0\uacbd\ud574\uc11c": 810, "\ubcc0\uacbd\ud574\uc57c\ud560": 803, "\ubcc0\uc218\ub4e4": 780, "\ubcc0\ud615": 792, "\ubcc0\ud658": [778, 811], "\ubcc0\ud658\ub41c": 811, "\ubcc0\ud658\ub41c\ub2e4": 775, "\ubcc0\ud658\uc740": 788, "\ubcc0\ud658\uc744": 787, "\ubcc0\ud658\ud558\uace0": 780, "\ubcc0\ud658\ud558\uae30": 784, "\ubcc0\ud658\ud558\ub294": [779, 797], "\ubcc0\ud658\ud558\ub294\ub370": 784, "\ubcc0\ud658\ud558\ub3c4\ub85d": 780, "\ubcc0\ud658\ud558\uba74": [775, 784], "\ubcc0\ud658\ud558\uba74\uc11c": 797, "\ubcc0\ud658\ud55c\ub2e4": [779, 784, 788], "\ubcc0\ud658\ud560": [787, 788], "\ubcc0\ud658\ud574\uc11c": 784, "\ubcc4\ub3c4\ub85c": 780, "\ubcc4\ub3c4\ub85d": 811, "\ubcc4\ub3c4\uc758": [788, 812, 813], "\ubcc4\ub85c\ub3c4": 808, "\ubcd1\ub82c\ub85c": 780, "\ubcd1\ub82c\ud654": 777, "\ubcd1\ub82c\ud654\uc2dc\ud0a4\uace0": 777, "\ubcd1\ud569": [791, 810], "\ubcd1\ud569\uc774\uc804\uc5d0": 792, "\ubcd1\ud569\ud558\ub294": 810, "\ubcf4\ub0b4\uc8fc\uc138\uc694": 789, "\ubcf4\ub2e4": [778, 796, 797, 798, 799, 803], "\ubcf4\ub77c": 780, "\ubcf4\uba74": 788, "\ubcf4\uc5ec\uc8fc\uace0": 800, "\ubcf4\uc5ec\uc8fc\uae30": 802, "\ubcf4\uc5ec\uc8fc\ub294": 779, "\ubcf4\uc5ec\uc900\ub2e4": [771, 772, 774, 776, 777, 779, 780, 781, 787, 797, 798, 804], "\ubcf4\uc790": [778, 785, 787, 797, 800, 802], "\ubcf4\uc874\ud558\uace0": 788, "\ubcf4\ud1b5": [791, 813], "\ubcf4\ud1b5\uc740": [778, 791, 792, 798, 800, 806, 811], "\ubcf4\ud1b5\uc758": [808, 811], "\ubcf4\ud1b5\uc774\ub2e4": 798, "\ubcf4\ud638\ub97c": 778, "\ubcf5\uc0ac": 781, "\ubcf5\uc0ac\ub41c\ub2e4": 781, "\ubcf5\uc0ac\ub97c": 793, "\ubcf5\uc0ac\ud558\uace0": 777, "\ubcf5\uc0ac\ud558\uba74\uc11c": 788, "\ubcf5\uc0ac\ud55c\ub2e4": [781, 786], "\ubcf5\uc0ac\ud560": 786, "\ubcf5\uc7a1\ud558\ub2c8": 810, "\ubcf5\uc7a1\ud55c": [794, 797, 806, 811], "\ubcf8\uac83\uacfc": 813, "\ubcfc": 775, "\ubd80\ub3d9\uc18c\uc218\uc810": 791, "\ubd80\ub978\ub2e4": [787, 797, 803, 811], "\ubd80\ubd84": [775, 798], "\ubd80\ubd84\ub4e4\uc774": 778, "\ubd80\ubd84\uc5d0": 798, "\ubd80\ubd84\uc73c\ub85c": 798, "\ubd80\ubd84\uc740": [798, 807], "\ubd80\ubd84\uc744": [775, 778], "\ubd80\ubd84\uc758": [798, 807], "\ubd80\uc0b0": 778, "\ubd80\uc18d": [790, 798, 801, 810], "\ubd80\uc18d\ub418\ub294": 780, "\ubd80\uc218\uc801\uc73c\ub85c": 810, "\ubd80\uc5ec": 780, "\ubd80\uc5ec\ub41c\ub2e4": [780, 787], "\ubd80\uc5ec\ud558\uace0": 787, "\ubd80\uc5ec\ud558\uae30": 780, "\ubd80\uc5ec\ud558\ub294\ub370": 787, "\ubd80\uc5ec\ud55c\ub2e4": [780, 788], "\ubd80\ud130": [775, 778, 808, 810], "\ubd84\ub4e4\uc744": 796, "\ubd84\ub958": [778, 796, 801, 809, 812], "\ubd84\ub958\uac00": 811, "\ubd84\ub958\uae30": 812, "\ubd84\ub958\ub098": 811, "\ubd84\ub958\ub294": [775, 810, 811], "\ubd84\ub958\ub418\uc5b4": 813, "\ubd84\ub958\ub97c": [797, 809, 810], "\ubd84\ub958\uc5d0": 798, "\ubd84\ub958\uc5d0\uc11c": [798, 801], "\ubd84\ub958\uc640\ub294": 775, "\ubd84\ub958\uc744": [798, 801], "\ubd84\ub958\uc758": [775, 780, 798, 810], "\ubd84\ub958\uc774\ub2e4": 813, "\ubd84\ub958\ud558\uae30": 813, "\ubd84\ub958\ud558\ub294": [810, 812], "\ubd84\ub958\ud55c\ub2e4": 811, "\ubd84\ub958\ud560": 811, "\ubd84\ub9ac\ub418\uc5b4": 811, "\ubd84\uc0b0": 789, "\ubd84\uc0b0\ud558\uace0": 780, "\ubd84\uc0b0\ud558\ub294": 777, "\ubd84\uc0b0\ud559\uc2b5\uc774": 778, "\ubd84\uc11d\uc744": 775, "\ubd84\ud3ec": 801, "\ubd84\ud3ec\ub97c": 780, "\ubd84\ud3ec\uc5d0": 801, "\ubd84\ud3ec\uc5d0\uc11c": 812, "\ubd84\ud45c": 812, "\ubd84\ud560": [775, 778, 813], "\ubd84\ud560\uc744": 775, "\ubd84\ud560\ud558\uae30": 775, "\ubd84\ud560\ud558\uc5ec": 793, "\ubd88\uac00\ub2a5\ud558\ub2e4": [784, 785], "\ubd88\uac00\ub2a5\ud558\ub2e4\uba74": 791, "\ubd88\uade0\ud615\ud558\uac8c": 780, "\ubd88\ub9b0\ub2e4": 810, "\ubd88\ud544\uc694\ud55c": 793, "\ubd99\uc5ec\uc918\uc57c": 778, "\ube0c\ub79c\uce58\ub97c": 780, "\ube0c\ub85c\ub4dc\uce90\uc2a4\ud305\uc744": 791, "\ube14\ub85d": 807, "\ube14\ub85d\ub4e4\ub85c": 805, "\ube14\ub85d\uc774": 807, "\ube14\ub85d\uc77c": 808, "\ube44\uad50\ud558\ub294": 801, "\ube44\uad50\ud558\uba74": 807, "\ube44\uad50\ud558\uba74\uc11c": 812, "\ube44\uad50\ud574": 802, "\ube44\uad50\ud574\uc11c": 813, "\ube44\ub300\uce6d\uc801\uc778": 783, "\ube44\ub840\ud558\ub294": 801, "\ube44\ubc29\ud5a5\uc131": [783, 787], "\ube44\uc120\ud615\uc131": 813, "\ube44\uc2b7\ud558\uac8c": [778, 780, 803, 810], "\ube44\uc2b7\ud558\ub2e4": [775, 778, 798, 801, 802, 803, 812, 813], "\ube44\uc2b7\ud558\ub2e4\ub294": 802, "\ube44\uc2b7\ud558\uc9c0\ub9cc": 774, "\ube44\uc2b7\ud55c": [777, 778, 780, 804], "\ube44\ud2b8": 787, "\ube44\ud2b8\ub97c": 787, "\ube44\ud574\uc11c": 799, "\ube44\ud65c\uc131\ud654\ub418\uc5b4": 791, "\ube44\ud65c\uc131\ud654\ub418\uc5c8\uc744": 804, "\ube44\ud6a8\uc728\uc801\uc774\ub2e4": 811, "\ube44\ud6a8\uc728\uc801\uc778": 793, "\ube4c\ub4dc\uc778": [801, 803, 811, 813], "\ube4c\ub529": 805, "\ube4c\ud2b8\uc778": [775, 776, 790, 793, 802, 804, 813], "\ube4c\ud2b8\uc778\uc73c\ub85c": 798, "\ube60\ub974\uac8c": [775, 811], "\ube60\ub974\uace0": [787, 793], "\ube60\ub974\ub2e4": 804, "\ube60\ub974\uc9c0\ub294": 784, "\ube60\ub978": 787, "\ube68\uac04": 797, "\ube68\uac04\uc0c9": 797, "\ubfd0\ub9cc": 813, "\ubfd0\ub9cc\uc544\ub2c8\ub77c": 778, "\ubfd0\uc774\ub2e4": [801, 802, 803, 811], "\ubfd0\uc784\uc744": 788, "\uc0ac\ub77c\uc838\ub3c4": 778, "\uc0ac\ub78c\ub4e4": 783, "\uc0ac\ub78c\ub4e4\uacfc": 783, "\uc0ac\ub78c\ub4e4\uc758": 811, "\uc0ac\uc2e4\ub4e4": 785, "\uc0ac\uc2e4\uc744": 798, "\uc0ac\uc6a9": [778, 804, 810, 813], "\uc0ac\uc6a9\uacfc": 793, "\uc0ac\uc6a9\ub418\uace0": 806, "\uc0ac\uc6a9\ub418\uae30": [775, 784, 797], "\uc0ac\uc6a9\ub418\ub294": [771, 775, 778, 783, 788, 791, 792, 793, 795, 805, 806, 807, 811, 813], "\uc0ac\uc6a9\ub418\ub294\ub370": 804, "\uc0ac\uc6a9\ub418\uc5b4\uc57c": 781, "\uc0ac\uc6a9\ub41c": [778, 780, 791], "\uc0ac\uc6a9\ub41c\ub2e4": [778, 780, 781, 784, 787, 797, 800, 808, 811], "\uc0ac\uc6a9\ub41c\ub2e4\uba74": 783, "\uc0ac\uc6a9\ub41c\uba70": 804, "\uc0ac\uc6a9\ub420": [777, 778, 780, 781, 797, 798, 801, 810, 813], "\uc0ac\uc6a9\ub7c9\uc744": [793, 804], "\uc0ac\uc6a9\ubc95\uc740": [795, 797], "\uc0ac\uc6a9\ubc95\uc744": [774, 791], "\uc0ac\uc6a9\uc790": [785, 791], "\uc0ac\uc6a9\uc790\uac00": [778, 780, 788], "\uc0ac\uc6a9\uc790\ub294": [778, 779, 780, 781, 791], "\uc0ac\uc6a9\uc790\ub4e4\uacfc": 783, "\uc0ac\uc6a9\uc790\ub4e4\uc740": 780, "\uc0ac\uc6a9\uc790\uc758": 781, "\uc0ac\uc6a9\ud558\uaca0\ub2e4": 809, "\uc0ac\uc6a9\ud558\uace0": [780, 792, 798, 803], "\uc0ac\uc6a9\ud558\uae30": [780, 782, 787, 796, 801, 803], "\uc0ac\uc6a9\ud558\uae30\ub97c": 801, "\uc0ac\uc6a9\ud558\ub294": [775, 780, 787, 791, 793, 797, 799, 801, 804, 810, 811, 812, 813], "\uc0ac\uc6a9\ud558\ub294\ub370": [775, 796], "\uc0ac\uc6a9\ud558\ub294\uc9c0\ub294": 783, "\uc0ac\uc6a9\ud558\ub824\uba74": 798, "\uc0ac\uc6a9\ud558\uba70": 801, "\uc0ac\uc6a9\ud558\uba74": [784, 787, 793, 796], "\uc0ac\uc6a9\ud558\uba74\uc11c": 804, "\uc0ac\uc6a9\ud558\uc790": 811, "\uc0ac\uc6a9\ud558\uc9c0": [780, 804, 811], "\uc0ac\uc6a9\ud558\uc9c0\ub9cc": 800, "\uc0ac\uc6a9\ud55c": [775, 778, 780, 782, 787, 796, 799, 800, 805, 813], "\uc0ac\uc6a9\ud55c\ub2e4": [775, 779, 780, 781, 787, 798, 799, 801, 802, 809, 810, 811, 813], "\uc0ac\uc6a9\ud55c\ub2e4\ub294": [778, 798, 801], "\uc0ac\uc6a9\ud55c\ub2e4\uba74": 783, "\uc0ac\uc6a9\ud560": [775, 778, 780, 784, 787, 788, 798, 799, 801, 803, 809, 810], "\uc0ac\uc6a9\ud574": 811, "\uc0ac\uc6a9\ud574\ub3c4": 788, "\uc0ac\uc6a9\ud574\uc11c": [771, 775, 778, 779, 780, 781, 782, 783, 786, 787, 788, 790, 791, 793, 795, 797, 798, 800, 803, 804, 808, 809, 810, 811, 812, 813], "\uc0ac\uc6a9\ud574\uc57c": [778, 779, 780], "\uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4": [787, 798], "\uc0ac\uc6a9\ud588\ub2e4\uba74": 773, "\uc0ac\uc6a9\ud588\ub358": 801, "\uc0ac\uc774\uc5d0": [783, 798, 811, 812], "\uc0ac\uc774\uc758": [780, 797, 812], "\uc0ac\uc804": [794, 798, 801, 808], "\uc0ac\uc804\ub4e4\uc744": [798, 801], "\uc0ac\uc804\uc5d0\uc11c": 813, "\uc0ac\uc804\uc744": [788, 798, 801, 803, 808, 810, 813], "\uc0ac\uc804\uc758": 794, "\uc0ad\uc81c\ud558\uac8c\ud558\uae30": 778, "\uc0ad\uc81c\ud558\uae30\ub3c4": 798, "\uc0ad\uc81c\ud558\uae30\ub97c": 797, "\uc0b4\ud3b4\ubcf4\uaca0\ub2e4": 807, "\uc0b4\ud3b4\ubcf4\uae30": 797, "\uc0b4\ud3b4\ubcf4\uc790": [775, 791, 797, 803, 804], "\uc0c1\uad00\ud558\uc9c0": 780, "\uc0c1\ub2f9\ud55c": 799, "\uc0c1\ub2f9\ud788": 776, "\uc0c1\ub300": 781, "\uc0c1\ub300\uc801\uc73c\ub85c": [780, 811], "\uc0c1\uc138\ud55c": [798, 803], "\uc0c1\uc18d\ud55c": 797, "\uc0c1\uc18d\ud55c\ub2e4": 805, "\uc0c1\uc18d\ud574\uc11c": [772, 773], "\uc0c1\uc218": 812, "\uc0c1\uc704": 797, "\uc0c1\ud0dc\ub97c": 796, "\uc0c1\ud488": 783, "\uc0c1\ud638\uad00\uacc4\ub97c": 783, "\uc0c1\ud638\uc791\uc6a9\uc744": 777, "\uc0c1\ud669\uc5d0\uc11c": 811, "\uc0c8\ub85c\uc6b4": [778, 779, 780, 788, 796, 802], "\uc0d8\ub4e4\ub85c": 812, "\uc0d8\ub4e4\uc740": 812, "\uc0d8\ud50c": 801, "\uc0d8\ud50c\ub41c": [798, 801, 807], "\uc0d8\ud50c\ub7ec": [777, 778, 781, 796], "\uc0d8\ud50c\ub7ec\uac00": [799, 801], "\uc0d8\ud50c\ub7ec\ub294": [778, 803], "\uc0d8\ud50c\ub7ec\ub2e4": 801, "\uc0d8\ud50c\ub7ec\ub4e4\uacfc": 796, "\uc0d8\ud50c\ub7ec\ub4e4\uc5d0": 798, "\uc0d8\ud50c\ub7ec\ub4e4\uc740": [801, 803], "\uc0d8\ud50c\ub7ec\ub4e4\uc758": 803, "\uc0d8\ud50c\ub7ec\ub85c": 797, "\uc0d8\ud50c\ub7ec\ub97c": [797, 798, 801, 803], "\uc0d8\ud50c\ub7ec\uc640": 777, "\uc0d8\ud50c\ub9c1": [772, 801, 811], "\uc0d8\ud50c\ub9c1\uacfc": [778, 800], "\uc0d8\ud50c\ub9c1\ub41c": 812, "\uc0d8\ud50c\ub9c1\ub41c\ub2e4": 812, "\uc0d8\ud50c\ub9c1\ub420\uc9c0\ub97c": 778, "\uc0d8\ud50c\ub9c1\uc5d0": 796, "\uc0d8\ud50c\ub9c1\uc5d0\uc11c": [779, 803], "\uc0d8\ud50c\ub9c1\uc73c\ub85c": 800, "\uc0d8\ud50c\ub9c1\uc740": [778, 798, 799, 800], "\uc0d8\ud50c\ub9c1\uc744": [778, 796, 797, 799, 800, 812], "\uc0d8\ud50c\ub9c1\uc774": 800, "\uc0d8\ud50c\ub9c1\ud558\ub294": 801, "\uc0d8\ud50c\ub9c1\ud55c\ub2e4": [777, 779, 801], "\uc0d8\ud50c\ud558\ub294": 797, "\uc0dd\uac01\ud574": [797, 800], "\uc0dd\uac01\ud574\ubcf4\uc790": [796, 797], "\uc0dd\uae38": 804, "\uc0dd\ub7b5\ud55c\ub2e4": [775, 810], "\uc0dd\ub7b5\ud574\uc11c": 775, "\uc0dd\ub7b5\ud588\ub2e4": 775, "\uc0dd\uc120\ud55c": 780, "\uc0dd\uc131": [777, 784, 791, 805, 807], "\uc0dd\uc131\ub418\ub294": 807, "\uc0dd\uc131\ub41c": [778, 784, 798, 803], "\uc0dd\uc131\ub41c\ub2e4": [780, 808], "\uc0dd\uc131\uc2dc": 786, "\uc0dd\uc131\uc740": 778, "\uc0dd\uc131\uc744": [778, 801], "\uc0dd\uc131\uc774": 778, "\uc0dd\uc131\ud558\uace0": [778, 779, 785, 791, 797], "\uc0dd\uc131\ud558\uae30": [775, 777, 778, 782, 787], "\uc0dd\uc131\ud558\ub294": [778, 784, 787, 797, 803], "\uc0dd\uc131\ud558\ub294\uac83\uc744": 797, "\uc0dd\uc131\ud558\ub294\ub370": [778, 780, 797], "\uc0dd\uc131\ud558\uba70": 796, "\uc0dd\uc131\ud558\uba74": 812, "\uc0dd\uc131\ud558\uc9c0\ub9cc": 797, "\uc0dd\uc131\ud55c": [780, 801, 803, 809], "\uc0dd\uc131\ud55c\ub2e4": [778, 781, 785, 791, 797, 803], "\uc0dd\uc131\ud560": [778, 779, 788, 797, 810, 811], "\uc0e4\ub4dc": 778, "\uc11c\ub85c": [775, 780, 782, 783, 788, 798, 813], "\uc11c\ubc84": [777, 778], "\uc11c\ubc84\ub4e4\uac04\uc758": 778, "\uc11c\ubc84\ub4e4\uacfc": [777, 778], "\uc11c\ubc84\ub4e4\uc5d0\uc11c": 778, "\uc11c\ubc84\ub4e4\uc740": 777, "\uc11c\ubc84\ub4e4\uc744": [777, 778], "\uc11c\ubc84\ub4e4\uc774": 778, "\uc11c\ubc84\uc5d0": 779, "\uc11c\ube0c": [773, 775, 777, 779, 780, 797, 798, 799, 800, 807], "\uc11c\ube0c\uadf8\ub798\ud504": [807, 808], "\uc11c\ube0c\uadf8\ub798\ud504\ub97c": [788, 795], "\uc11c\ube0c\uadf8\ub798\ud504\uc5d0": 795, "\uc11c\ube0c\ubaa8\ub4c8": 806, "\uc11c\ube0c\ubaa8\ub4c8\ub4e4\uc744": 806, "\uc11c\ube0c\ubaa8\ub4c8\uc740": 806, "\uc11c\ube0c\uc14b\uc5d0": 780, "\uc11c\ube0c\uc14b\uc744": 778, "\uc11c\ube0c\ud074\ub798\uc2a4": 772, "\uc11c\ube0c\ud074\ub798\uc2a4\ub85c": 771, "\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c": 772, "\uc11c\uce58\ud558\ub294": 772, "\uc11e\uace0": 780, "\uc11e\uae30\uc804\uc758": 780, "\uc11e\ub294\ub2e4": 780, "\uc11e\uc5b4\uc57c\ud55c\ub2e4": 780, "\uc11e\uc5b4\uc900\ub2e4": 780, "\uc11e\uc778": 780, "\uc120\uc5b8\ub418\uc57c": 778, "\uc120\ud0dd": 800, "\uc120\ud0dd\uc744": 800, "\uc120\ud0dd\uc801\uc73c\ub85c": 781, "\uc120\ud0dd\uc801\uc778": 780, "\uc120\ud0dd\ud55c\ub2e4": [779, 796, 801, 804], "\uc120\ud0dd\ud560\uc9c0": 810, "\uc120\ud0dd\ud560\uc9c0\ub97c": 810, "\uc120\ud589": 797, "\uc120\ud615": 793, "\uc124\uba85\ub41c": 807, "\uc124\uba85\uc740": 810, "\uc124\uba85\uc744": [780, 798, 803], "\uc124\uba85\ud558\uace0": 771, "\uc124\uba85\ud558\uae30": 809, "\uc124\uba85\ud558\uae30\uc5d0\ub294": 810, "\uc124\uba85\ud55c": [801, 812], "\uc124\uba85\ud55c\ub2e4": [774, 775, 790, 797, 803, 813], "\uc124\uba85\ud588\ub4ef\uc774": 797, "\uc124\uc815": [777, 778, 781, 806], "\uc124\uc815\ub41c": 807, "\uc124\uc815\ub4e4\uc744": 780, "\uc124\uc815\uc5d0\uc11c\ub294": 791, "\uc124\uc815\uc73c\ub85c": [779, 780], "\uc124\uc815\uc73c\ub85c\ub294": [778, 791], "\uc124\uc815\uc740": 780, "\uc124\uc815\uc744": 780, "\uc124\uc815\ud558\uace0": 788, "\uc124\uc815\ud558\uae30": 799, "\uc124\uc815\ud558\ub294": 780, "\uc124\uc815\ud55c\ub2e4": 808, "\uc124\uc815\ud574\uc57c": 780, "\uc124\uce58\ub294": 780, "\uc124\uce58\ud558\ub294": 780, "\uc124\uce58\ud558\uc790": 780, "\uc124\uce58\ud55c\ub2e4": [774, 780], "\uc131\ub2a5": [796, 807], "\uc131\ub2a5\uc740": 804, "\uc131\ub2a5\uc774": 784, "\uc131\ub9bd\ud558\uae30": 793, "\uc131\uc9c8": 811, "\uc138": 780, "\uc138\uac00\uc9c0": [778, 807], "\uc138\uac1c\uc758": 803, "\uc138\ud305\uc5d0\uc11c": 778, "\uc139\uc158": 778, "\uc140\ud504": 780, "\uc148\ud50c\ub4e4": 812, "\uc14b": 780, "\uc14b\ub3c4": 778, "\uc14b\uc5d0": [778, 780, 803], "\uc14b\uc73c\ub85c": 778, "\uc14b\uc744": [777, 778], "\uc14b\uc758": 813, "\uc14b\uc774": 810, "\uc18c\uac1c\ub294": 784, "\uc18c\uac1c\ub97c": 782, "\uc18c\uac1c\ud55c": [796, 809, 811, 813], "\uc18c\uac1c\ud55c\ub2e4": [771, 772, 780, 782, 784, 790, 800, 805], "\uc18c\uc15c": 783, "\uc18c\uc2a4": [775, 780, 791, 792, 797, 801, 803, 806, 807], "\uc18c\uc2a4\ub4e4\ub85c": 775, "\uc18c\uc2a4\ub4e4\ub85c\ubd80\ud130": 784, "\uc18c\uc2a4\ub85c\ubd80\ud130": 787, "\uc18c\uc2a4\ub97c": [775, 782, 787], "\uc18d\ub3c4": [799, 800], "\uc18d\ub3c4\ub3c4": 787, "\uc18d\ub3c4\ub97c": 780, "\uc18d\ub4dc\ub97c": 793, "\uc18d\uc131": 780, "\uc18d\uc131\ub4e4\uc744": 780, "\uc18d\uc131\ub4e4\uc758": 780, "\uc18d\uc131\uc744": [780, 785, 794, 810], "\uc18d\uc131\uc758": 780, "\uc18d\ud558\ub294": 780, "\uc18d\ud558\ub294\uc9c0\ub97c": 778, "\uc18d\ud55c": [780, 791, 797], "\uc18d\ud55c\ub2e4": 779, "\uc194\ub8e8\uc158\uc740": 780, "\uc194\ub8e8\uc158\uc744": 780, "\uc218": [772, 773, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813], "\uc218\uac00": [793, 813], "\uc218\ub3c4": [779, 801, 807, 810], "\uc218\ub834\ud55c\ub2e4": 804, "\uc218\ub97c": [780, 797], "\uc218\ubc31\ub9cc": 796, "\uc218\ubcf4\ub2e4": 793, "\uc218\uc2dd\uc5d0\uc11c": 790, "\uc218\uc2ed\uc5b5": 780, "\uc218\uc2ed\uc5b5\uac1c\uc758": 796, "\uc218\uc5d0": 780, "\uc218\uc640": 778, "\uc218\uc758": [778, 779, 781, 797, 811], "\uc218\uc815\ud558\uba74": 777, "\uc218\uc815\ud560": 803, "\uc218\uc900\uc758": [778, 784, 808, 811], "\uc218\uc9d1\ud558\uace0": 778, "\uc218\uc9d1\ud558\uae30\ub97c": 813, "\uc218\uc9d1\ud558\ub294": 797, "\uc218\uc9d1\ud558\ub3c4\ub85d": 803, "\uc218\uc9d1\ud560": 797, "\uc218\ud559": [791, 807], "\uc218\ud559\uc801\uc73c\ub85c": 793, "\uc218\ud589": 781, "\uc218\ud589\ub418\uace0": 778, "\uc218\ud589\ub418\ub294": 813, "\uc218\ud589\ub418\ub294\uc9c0": 796, "\uc218\ud589\ub418\uba74": 778, "\uc218\ud589\ub41c": [781, 782, 797], "\uc218\ud589\ub41c\ub2e4": [772, 778, 780, 786, 804, 807, 811], "\uc218\ud589\ub420": [778, 791], "\uc218\ud589\uc774": 780, "\uc218\ud589\uc774\ub2e4": 778, "\uc218\ud589\ud558\uace0": [778, 813], "\uc218\ud589\ud558\uae30": [797, 804, 812], "\uc218\ud589\ud558\ub294": [777, 778, 781, 796, 800, 807, 813], "\uc218\ud589\ud558\uba74\uc11c": [777, 780], "\uc218\ud589\ud558\uc790": 810, "\uc218\ud589\ud558\uc9c0": 773, "\uc218\ud589\ud558\uc9c0\ub9cc": 811, "\uc218\ud589\ud55c\ub2e4": [780, 790, 800, 803, 804, 806, 807, 813], "\uc218\ud589\ud55c\ub2e4\uace0": 812, "\uc218\ud589\ud55c\ub2e4\ub294": 797, "\uc218\ud589\ud560": [777, 778, 780, 797, 800, 808, 811, 812], "\uc218\ud589\ud560\uc9c0\ub97c": 797, "\uc218\ud589\ud574\uc11c": [773, 811, 813], "\uc21c\uc11c\ub300\ub85c": 811, "\uc21c\uc11c\ub3c4": 772, "\uc21c\uc11c\ub3c4\ub294": 772, "\uc21c\uc11c\ub85c": 778, "\uc21c\uc11c\uc5d0": 787, "\uc21c\uc218": 791, "\uc21c\uc218\ud55c": 806, "\uc22b\uc790": 785, "\uc27d\uac8c": [772, 780], "\uc27d\ub2e4": 812, "\uc27d\uc9c0": 800, "\uc2a4\uce7c\ub77c": [783, 785, 792], "\uc2a4\ud06c\ub9bd\ud2b8": [778, 780, 781], "\uc2a4\ud06c\ub9bd\ud2b8\uac00": [778, 781], "\uc2a4\ud06c\ub9bd\ud2b8\ub294": 781, "\uc2a4\ud06c\ub9bd\ud2b8\ub4e4\uc744": 781, "\uc2a4\ud06c\ub9bd\ud2b8\ub97c": [777, 778, 780], "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0": 778, "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c": 781, "\uc2a4\ud06c\ub9bd\ud2b8\uc774\ub2e4": 804, "\uc2a4\ud0a4\ub9c8": 780, "\uc2a4\ud0a4\ub9c8\ub97c": 780, "\uc2a4\ud0a4\ub9c8\uc774\ub2e4": 788, "\uc2a4\ud0ed\uc5d0\uc11c": 791, "\uc2a4\ud1a0\ub9ac\uc9c0": 781, "\uc2ac\ub77c\uc774\uc2a4\ub294": 785, "\uc2dc\uac01\ud654\ud558\uba74": 796, "\uc2dc\uac04": 804, "\uc2dc\uac04\uc744": [772, 776, 800], "\uc2dc\ub098\ub9ac\uc624\ub4e4\ub85c": 796, "\uc2dc\ub4dc": [779, 797], "\uc2dc\ub9ac\uc988\ub85c": 788, "\uc2dc\uc2a4\ud15c\uc5d0\uc11c": 783, "\uc2dc\uc791": 781, "\uc2dc\uc791\uc73c\ub85c": 782, "\uc2dc\uc791\ud558\uace0": 788, "\uc2dc\uc791\ud558\uae30": 781, "\uc2dc\uc791\ud558\ub294": [780, 788, 797], "\uc2dc\uc791\ud55c\ub2e4": [787, 796], "\uc2dc\uc791\ud560": 811, "\uc2dc\uc791\ud574\uc11c": 800, "\uc2dd\ubcc4\ub420": 778, "\uc2e4\uc81c": [780, 807], "\uc2e4\uc81c\ub85c": 807, "\uc2e4\ud589": 779, "\uc2e4\ud589\ub418\ub294": [780, 781, 791], "\uc2e4\ud589\ub418\uba74": 778, "\uc2e4\ud589\ub418\uc57c": 781, "\uc2e4\ud589\ub41c": 780, "\uc2e4\ud589\ub41c\ub2e4": [777, 778, 780, 813], "\uc2e4\ud589\ub420": [778, 780, 781], "\uc2e4\ud589\ud558\uace0": [773, 778, 807], "\uc2e4\ud589\ud558\ub294": [777, 778, 793], "\uc2e4\ud589\ud558\uba74": 778, "\uc2e4\ud589\ud55c\ub2e4": 777, "\uc2e4\ud589\ud560": 778, "\uc2e4\ud589\ud574\uc11c": [777, 780], "\uc2e4\ud589\ud574\uc57c\ud558\uace0": 778, "\uc2e4\ud5d8\uc801\uc73c\ub85c": 779, "\uc2e4\ud5d8\uc801\uc778": 799, "\uc2f1\uae00": 778, "\uc2f6\ub2e4": [780, 788], "\uc2f6\ub2e4\uba74": [773, 780, 802, 803, 813], "\uc2f6\uc73c\uba74": 791, "\uc2f6\uc740": [778, 788, 795, 796, 812], "\uc30d\ub4e4": 783, "\uc30d\ub4e4\ub85c\ub9cc": 812, "\uc30d\uc5d0": 812, "\uc30d\uc73c\ub85c": 787, "\uc30d\uc744": [783, 801], "\uc30d\uc758": 801, "\uc30d\uc774\ub2e4": 811, "\uc30d\uc778": 802, "\uc313\uc544\uc11c": 813, "\uc4f0\uae30\ub97c": 778, "\uc4f0\uc774\ub294": [810, 811], "\uc544\ub2c8\uae30": 807, "\uc544\ub2c8\ub2e4": [778, 804], "\uc544\ub2c8\ub77c": [784, 811, 813], "\uc544\ub2cc": [802, 811], "\uc544\ub2cc\uc9c0\ub97c": 812, "\uc544\ub2d8\uc744": 802, "\uc544\ub798": [772, 777, 778, 779, 780, 781, 784, 785, 787, 788, 791, 797, 798, 800, 801, 802, 810, 812, 813], "\uc544\ub798\uc640": [787, 798, 803, 810, 811], "\uc544\ub798\uc758": [773, 788], "\uc544\ub9c8\ub3c4": 811, "\uc544\ubb34\uac83\ub3c4": 807, "\uc544\uc6c3\ud48b\ub4e4\uc744": 808, "\uc544\uc6c3\ud48b\uc740": 780, "\uc544\uc774\ub514\uc5b4\ub294": 812, "\uc544\uc774\ub514\uc5b4\ub97c": 811, "\uc544\uc774\ud15c\ub4e4\uc744": 801, "\uc544\uc774\ud15c\ub4e4\uc758": 783, "\uc544\uc774\ud15c\uc640": 801, "\uc544\uc774\ud15c\uc740": 811, "\uc544\uc774\ud15c\uc744": 803, "\uc544\uc8fc": [777, 784, 798, 800, 801], "\uc544\uc9c1": 804, "\uc544\ud06c\ub4e4": 783, "\uc544\ud0a4\ud14d\ud0c0": 791, "\uc548\uc5d0\ub294": 780, "\uc548\uc5d0\uc11c": 808, "\uc54a\uaca0\ub2e4": 784, "\uc54a\uace0": [773, 780, 788, 791, 804, 811], "\uc54a\uae30": [797, 799], "\uc54a\ub294": [780, 791, 801, 804], "\uc54a\ub294\ub2e4": [778, 780, 783, 799, 810, 811], "\uc54a\ub294\ub2e4\uba74": [788, 799], "\uc54a\ub294\uc9c0": 807, "\uc54a\ub2e4": [778, 784, 800, 810, 811, 812], "\uc54a\ub2e4\uba74": 809, "\uc54a\uc558\ub358": 798, "\uc54a\uc73c\uba74": 798, "\uc54a\uc740": [773, 775, 776, 780, 781, 797, 807], "\uc54a\uc744": 780, "\uc54a\uc9c0\ub9cc": 784, "\uc54c": 802, "\uc54c\uace0": [791, 812], "\uc54c\uace0\ub9ac\uc998\uacfc\ub294": 800, "\uc54c\uace0\ub9ac\uc998\ub4e4": 796, "\uc54c\uace0\ub9ac\uc998\uc740": 800, "\uc54c\uace0\ub9ac\uc998\uc744": [778, 811], "\uc54c\ub824\uc8fc\uace0": 803, "\uc54c\ub824\uc900\ub2e4": [780, 788], "\uc54c\ub824\uc9c4": 784, "\uc54c\uc218": 797, "\uc54c\uc544\ub0bc": 797, "\uc54c\uc544\ub450\uc790": [775, 788, 803, 813], "\uc54c\uc544\ubcf8\ub2e4": [775, 796, 809], "\uc54c\uc544\ubd24\ub2e4": 810, "\uc54c\ud30c\ubcb3": 780, "\uc55e": 810, "\uc55e\uc5d0": 807, "\uc55e\uc5d0\uc11c": [778, 803, 812], "\uc55e\uc73c\ub85c": 779, "\uc55e\uc73c\ub85c\uc758": 804, "\uc560\ub2c8\ub9e4\uc774\uc158\uc740": 800, "\uc564\ud2f0\ud2f0\ub4e4": 782, "\uc57d": 799, "\uc57d\uac04": [798, 811, 812], "\uc591\ubc29\ud5a5\uc5d0": 787, "\uc591\ubc29\ud5a5\uc758": 787, "\uc591\ubc29\ud5a5\uc774\uae30": 783, "\uc5b4\ub290\uc815\ub3c4": 798, "\uc5b4\ub514\uc11c\ub098": 773, "\uc5b4\ub5a4": [778, 780, 794, 797, 798, 803, 806, 812], "\uc5b4\ub5bb\uac8c": [771, 772, 778, 779, 780, 783, 790, 796, 797, 800, 802, 803, 806, 813], "\uc5b4\ub824\uc6b8": 796, "\uc5b8\uae09\ud55c": 791, "\uc5b8\uae09\ud588\ub4ef\uc774": 778, "\uc5b8\ub354\ud50c\ub85c\uc6b0": 804, "\uc5b8\uc5b4\uc5d0\uc11c": 787, "\uc5bb\uae30": [777, 780, 810], "\uc5bb\ub294": [779, 798], "\uc5bb\ub294\ub2e4": [798, 802, 803, 811], "\uc5bb\uc5b4\uc9c4": 808, "\uc5bb\uc740": [798, 808], "\uc5bb\uc744": [788, 797, 803, 809, 812], "\uc5bc\ub9c8\ub098": 797, "\uc5c5\ub370\uc774\ud2b8": [790, 791], "\uc5c5\ub370\uc774\ud2b8\ub97c": [778, 791, 795, 799, 804], "\uc5c5\ub370\uc774\ud2b8\ud558\uace0": 791, "\uc5c5\ub370\uc774\ud2b8\ud558\ub294": [797, 802, 804, 807, 811], "\uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4": [790, 791, 811], "\uc5c6\uac70\ub098": 783, "\uc5c6\uac8c": 807, "\uc5c6\uace0": 779, "\uc5c6\uae30": 793, "\uc5c6\ub294": [780, 784, 796, 800], "\uc5c6\ub294\uc9c0\ub97c": 803, "\uc5c6\ub2e4": [778, 779, 788, 797, 807, 811], "\uc5c6\ub2e4\ub294": [778, 800], "\uc5c6\uc560\uace0": 778, "\uc5c6\uc5b4\uc57c": 780, "\uc5c6\uc744": 783, "\uc5c6\uc774": 781, "\uc5d0": [775, 777, 778, 779, 780, 781, 788, 791, 794, 797, 798, 803, 804, 807, 808, 810, 811, 812, 813], "\uc5d0\ub294": [798, 803], "\uc5d0\ub7ec\ub97c": 797, "\uc5d0\uc11c": [771, 772, 773, 776, 778, 779, 780, 781, 783, 787, 792, 796, 797, 800, 801, 803, 807, 809, 811, 813], "\uc5d0\uc11c\ub294": [783, 810], "\uc5d0\uc11c\uc758": 802, "\uc5d0\uc9c0": [777, 779, 782, 783, 785, 790, 791, 793, 794, 796, 797, 801, 802, 809, 811, 812, 813], "\uc5d0\uc9c0\uac00": [780, 783, 787, 788, 798, 810, 811, 812], "\uc5d0\uc9c0\ub098": 780, "\uc5d0\uc9c0\ub294": [779, 783, 787, 788], "\uc5d0\uc9c0\ub3c4": 797, "\uc5d0\uc9c0\ub4e4\uacfc": 798, "\uc5d0\uc9c0\ub4e4\ub3c4": [783, 798], "\uc5d0\uc9c0\ub4e4\ub9cc\uc744": 797, "\uc5d0\uc9c0\ub4e4\uc5d0": [780, 798, 811], "\uc5d0\uc9c0\ub4e4\uc740": [785, 787, 798], "\uc5d0\uc9c0\ub4e4\uc744": [778, 782, 783, 787, 796, 798, 799, 801], "\uc5d0\uc9c0\ub4e4\uc758": [780, 783, 785, 788, 793, 797, 798, 801, 810, 812], "\uc5d0\uc9c0\ub4e4\uc774": [775, 780, 783, 794, 798, 812], "\uc5d0\uc9c0\ub85c": [783, 784, 812], "\uc5d0\uc9c0\ub85c\uc758": 793, "\uc5d0\uc9c0\ub97c": [777, 778, 779, 780, 784, 787, 788, 794, 797, 798, 801, 804], "\uc5d0\uc9c0\ubcc4": [790, 791], "\uc5d0\uc9c0\uc5d0": [780, 785, 787, 788, 790, 793, 810], "\uc5d0\uc9c0\uc5d0\ub294": 787, "\uc5d0\uc9c0\uc640": [778, 780, 788], "\uc5d0\uc9c0\uc640\ub294": 798, "\uc5d0\uc9c0\uc744": 797, "\uc5d0\uc9c0\uc758": [777, 778, 780, 782, 783, 788, 790, 791, 792, 794, 797, 798, 799, 801, 806, 810, 811, 812, 813], "\uc5d0\uc9c0\uc774\ub2e4": 787, "\uc5d0\uce58": [778, 784, 811], "\uc5d4\ud130\ub9ac": 812, "\uc5d4\ud2b8\ub9ac\ub97c": 780, "\uc5ec\uae30\uc11c": [779, 780, 797, 803, 806, 808, 810, 811, 812, 813], "\uc5ec\uae30\uc11c\ub294": [780, 809], "\uc5ec\uae30\uc11c\ubd80\ud130\ub294": 780, "\uc5ec\ub7ec": [775, 777, 778, 779, 780, 783, 784, 787, 788, 794, 796, 797, 802, 806, 807, 808, 811, 812, 813], "\uc5ec\ub7ec\uac00\uc9c0\uac00": 812, "\uc5ec\ub7ec\uac1c\uac00": 808, "\uc5ec\ub7ec\ubc88": 778, "\uc5ec\ub7ec\ubd84": 803, "\uc5ec\ub7ec\ubd84\ub9cc\uc758": [798, 803], "\uc5ec\ub7ec\ubd84\uc740": 813, "\uc5ec\ub7ec\ubd84\uc758": [791, 805], "\uc5ec\ubd80\ub97c": 780, "\uc5ec\uc804\ud788": [797, 800, 803], "\uc5ec\uc9c0\uac00": 791, "\uc5ed": 798, "\uc5ed\ubc29\ud5a5": 798, "\uc5ed\ubc29\ud5a5\uc758": 798, "\uc5ed\uc2dc": [774, 786, 803], "\uc5ed\ud560\uc744": [780, 790, 797], "\uc5f0\uacb0": [783, 807, 812], "\uc5f0\uacb0\ub418\ub294": 797, "\uc5f0\uacb0\ub418\uc5b4": [778, 780, 783], "\uc5f0\uacb0\ub418\uc9c0": 797, "\uc5f0\uacb0\ub41c": [787, 808, 812], "\uc5f0\uacb0\ub41c\ub2e4": 783, "\uc5f0\uacb0\ub85c": 783, "\uc5f0\uacb0\uc744": 778, "\uc5f0\uacb0\ud558\uace0": [793, 798, 810], "\uc5f0\uacb0\ud558\ub294": [783, 810, 811], "\uc5f0\uacb0\ud55c\ub2e4": [778, 783], "\uc5f0\uacb0\ud574\uc11c": 811, "\uc5f0\uad00\ub41c": [779, 788, 798, 808], "\uc5f0\uc0b0": [775, 778, 782, 786, 793, 796, 804, 811], "\uc5f0\uc0b0\uacfc": [777, 794], "\uc5f0\uc0b0\ub4e4\uc740": [804, 807, 811], "\uc5f0\uc0b0\ub4e4\uc744": 811, "\uc5f0\uc0b0\ub9cc": 791, "\uc5f0\uc0b0\uc18d\ub3c4\uac00": 793, "\uc5f0\uc0b0\uc5d0": 805, "\uc5f0\uc0b0\uc73c\ub85c": 791, "\uc5f0\uc0b0\uc740": [786, 805, 807], "\uc5f0\uc0b0\uc744": [777, 788, 790, 791, 793, 802, 807, 811], "\uc5f0\uc0b0\uc758": 793, "\uc5f0\uc0b0\uc774": [800, 807], "\uc5f0\uc18d\ub41c": [779, 780], "\uc5fc\ub450\ud574\ub450\uace0": 777, "\uc5fc\ub450\ud574\uc11c": 811, "\uc601\ubb38": 789, "\uc601\uc18d\uc801\uc778": 778, "\uc601\uc5ed\uc5d0\uc11c\ub294": 800, "\uc608": [778, 781, 784, 785, 787, 788, 804, 810], "\uc608\ub294": [775, 776, 781, 812], "\uc608\ub4e4": 783, "\uc608\ub4e4\ub85c": 800, "\uc608\ub4e4\uc744": 775, "\uc608\ub85c": [772, 775, 797, 802, 803], "\uc608\ub97c": [776, 778, 779, 780, 781, 782, 783, 785, 788, 791, 792, 797, 798, 799, 801, 802, 803, 810, 811, 812, 813], "\uc608\ub97c\ub4e4\uba74": 788, "\uc608\uc758": 785, "\uc608\uc774\ub2e4": [773, 780, 801], "\uc608\uc804\uacfc": 797, "\uc608\uc815\uc774\ub2e4": 778, "\uc608\uc81c": [801, 803, 810, 813], "\uc608\uc81c\uac00": 813, "\uc608\uc81c\ub294": [778, 779, 780, 792, 794, 798, 801, 803, 804, 811, 812], "\uc608\uc81c\ub4e4\uc740": 809, "\uc608\uc81c\ub4e4\uc744": [775, 776, 813], "\uc608\uc81c\ub4e4\uc774": 808, "\uc608\uc81c\ub85c": [775, 801, 805, 810], "\uc608\uc81c\ub97c": [787, 793, 809, 813], "\uc608\uc81c\uc5d0": 810, "\uc608\uc81c\uc5d0\uc11c": 810, "\uc608\uc81c\uc5d0\uc11c\uc640": 775, "\uc608\uc81c\uc640": 803, "\uc608\uc81c\uc758": [775, 785, 797], "\uc608\uc81c\uc774\ub2e4": [777, 780, 784, 788, 793, 798, 811, 812], "\uc608\uc81c\uc778": [801, 803], "\uc608\uc81c\ucc98\ub7fc": 773, "\uc608\uce21": [778, 796, 798, 803, 809, 810, 811, 813], "\uc608\uce21\uac12\uc744": 810, "\uc608\uce21\uacfc": 812, "\uc608\uce21\ub97c": 801, "\uc608\uce21\uc740": [801, 810, 812], "\uc608\uce21\uc744": [801, 810, 811, 812, 813], "\uc608\uce21\uc758": [801, 810], "\uc608\uce21\ud558\uace0": [810, 812, 813], "\uc608\uce21\ud558\uae30": [798, 801], "\uc608\uce21\ud558\uae30\ub9cc": 801, "\uc608\uce21\ud558\ub294": [798, 810, 812], "\uc608\uce21\ud558\uba74": 810, "\uc608\uce21\ud560": 810, "\uc624\ub958": 789, "\uc624\ub978\ucabd": 793, "\uc624\ub978\ucabd\uc73c\ub85c": 811, "\uc624\uc9c1": [774, 788], "\uc624\ud37c\ub808\uc774\ud130\ub294": 778, "\uc624\ud504\ub77c\uc778": 796, "\uc62c\ub824\uc11c": 799, "\uc62c\ub824\uc57c\ud560": 796, "\uc62e\uaca8\ub193\ub294\ub2e4": 798, "\uc62e\uae30\ub294": [773, 803], "\uc635\uc158": 806, "\uc635\uc158\ub4e4": 784, "\uc635\uc158\ub4e4\uc744": 784, "\uc635\uc158\uc5d0": 807, "\uc635\uc158\uc73c\ub85c": 806, "\uc640": [772, 775, 776, 777, 778, 779, 780, 782, 783, 785, 788, 791, 793, 797, 798, 799, 801, 803, 804, 805, 807, 808, 810, 811, 812, 813], "\uc644\ub8cc\ub418\uba74": [780, 791], "\uc644\ub8cc\ub41c\ub2e4": 778, "\uc644\ubcbd\ud55c": 775, "\uc644\uc804\ud558\uac8c": 799, "\uc644\uc804\ud55c": 777, "\uc644\uc804\ud788": [798, 811], "\uc678\ubd80": [775, 782, 787, 803], "\uc678\uc5d0": 780, "\uc67c\ucabd": 793, "\uc67c\ucabd\ubd80\ud130": 811, "\uc694\uad6c\ub418\uae30": 791, "\uc694\uad6c\ub7c9\uc740": 799, "\uc694\uc18c\ub294": 807, "\uc694\uc57d\ud55c\ub2e4": 811, "\uc6a9\ub3c4\ub97c": 810, "\uc6a9\ub7c9\uc744": 796, "\uc6b0\ub9ac\ub294": [778, 780, 800, 810, 813], "\uc6b0\uc120": [774, 778, 779, 788, 797, 810], "\uc6cc\ud06c\ub85c\ub4dc": 796, "\uc6cc\ud06c\ub85c\ub4dc\ub97c": 780, "\uc6d0\uaca9": 772, "\uc6d0\ub798": 791, "\uc6d0\ub798\uc758": [788, 807, 810, 811], "\uc6d0\ubcf8": [780, 797, 801, 802], "\uc6d0\ubcf8\uc758": 797, "\uc6d0\uc18c\ub4e4\uc740": 778, "\uc6d0\uc18c\ub97c": 803, "\uc6d0\uce59\uc740": 802, "\uc6d0\ud558\ub294": [795, 803, 810], "\uc6d0\ud55c\ub2e4\uba74": [797, 801], "\uc6d0\ud560": 813, "\uc6d0\ud568": 783, "\uc6d0\ud65c\ud558\uac8c": 805, "\uc704": [773, 775, 780, 785, 788, 790, 791, 793, 797, 799, 803, 810, 811, 813], "\uc704\ub97c": 812, "\uc704\uc5d0\uc11c": [791, 812, 813], "\uc704\uc758": [775, 797, 811], "\uc704\uc8fc": 785, "\uc704\uce58\uc774\ub2e4": 781, "\uc704\uce58\ud55c": 786, "\uc704\uce58\ud55c\ub2e4": 797, "\uc704\ud55c": [772, 774, 776, 777, 778, 779, 783, 784, 787, 788, 791, 796, 798, 800, 801, 803, 808, 809, 810, 812, 813], "\uc704\ud568\uc774\ub2e4": 775, "\uc704\ud568\uc774\uc9c0": 802, "\uc704\ud574": [771, 775, 776, 778, 779, 798], "\uc704\ud574\uc11c": [772, 773, 775, 777, 778, 779, 780, 781, 783, 785, 787, 788, 791, 794, 797, 800, 801, 803, 804, 806, 808, 809, 810, 811, 812, 813], "\uc704\ud574\uc11c\ub294": [780, 787, 791, 797, 801, 802, 803], "\uc704\ud574\uc11c\uc774\ub2e4": [798, 807], "\uc704\ud578": 778, "\uc720\ub3c4\ub41c": 798, "\uc720\ub3c4\ud558\ub294": 797, "\uc720\uba85\ud558\uace0": 813, "\uc720\uba85\ud55c": [778, 788], "\uc720\uc0ac\ud558\ub2e4": [803, 810], "\uc720\uc6a9\ud558\ub2e4": [778, 788], "\uc720\uc6a9\ud55c": [775, 776], "\uc720\uc758\ud558\uc790": [774, 784, 797, 803], "\uc720\uc77c\ud55c": [777, 778, 798, 801, 811], "\uc720\uc9c0\ud558\uae30": 811, "\uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744": 784, "\uc720\ud6a8\ud558\uc9c0": 807, "\uc73c\ub85c": [779, 789, 791, 808], "\uc740": [774, 775, 778, 779, 780, 781, 782, 790, 798, 801, 802, 803, 806, 812], "\uc740\ub2c9": 806, "\uc744": [772, 775, 777, 778, 779, 780, 781, 783, 784, 789, 791, 794, 797, 802, 803, 808, 810, 812, 813], "\uc758": [771, 772, 775, 776, 778, 779, 780, 781, 782, 783, 785, 790, 791, 797, 798, 799, 801, 803, 807, 808, 810, 811, 812, 813], "\uc758\ubbf8\ud558\ub294\ub370": 806, "\uc758\ubbf8\ud55c\ub2e4": [780, 791, 797, 803, 808], "\uc758\ubbf8\ud560": 783, "\uc758\uc874\uc131": 796, "\uc758\uc874\ud558\uae30": 800, "\uc758\ud574": 780, "\uc758\ud574\uc11c": 798, "\uc774": [771, 772, 774, 775, 777, 778, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813], "\uc774\uac83\ub4e4\uc740": [771, 803, 807, 808], "\uc774\uac83\ub4e4\uc744": [778, 788, 803], "\uc774\uac83\uc740": [788, 791, 798, 800], "\uc774\uac83\uc744": 788, "\uc774\uace0": [775, 811], "\uc774\ub098": [779, 804, 810, 812], "\uc774\ub294": [771, 772, 776, 777, 778, 779, 780, 784, 786, 787, 791, 795, 797, 798, 799, 807, 808, 810, 813], "\uc774\ub2e4": [775, 778, 788, 791, 794], "\uc774\ub4e4": [783, 797], "\uc774\ub4e4\uc740": 783, "\uc774\ub4e4\uc744": 780, "\uc774\ub54c": 775, "\uc774\ub77c\uace0": [772, 807, 811], "\uc774\ub77c\ub294": 810, "\uc774\ub77c\uba74": [773, 813], "\uc774\ub7f0": [774, 784, 797, 805, 807, 811], "\uc774\ub904\uc9c4\ub2e4": [775, 788, 812], "\uc774\ub97c": [771, 772, 773, 775, 776, 778, 779, 780, 784, 787, 788, 791, 792, 793, 796, 797, 798, 801, 802, 803, 804, 810, 811, 812], "\uc774\ub984": [785, 791], "\uc774\ub984\uacfc": 778, "\uc774\ub984\ub4e4\uc744": 780, "\uc774\ub984\uc740": [778, 780], "\uc774\ub984\uc744": [778, 780, 785, 791], "\uc774\ub984\uc758": [780, 785, 810], "\uc774\ub984\uc774": 778, "\uc774\ub984\uc774\uace0": 791, "\uc774\ub984\uc774\ub2e4": [780, 791], "\uc774\ubbf8": [773, 786, 809, 813], "\uc774\ubd84": [783, 788, 798, 807, 808], "\uc774\uc0c1": 791, "\uc774\uc288\uac00": 804, "\uc774\uc5b4\uc9c4": 787, "\uc774\uc640": [775, 791], "\uc774\uc678\uc758": [799, 806], "\uc774\uc6a9\ud55c": [810, 813], "\uc774\uc6a9\ud560": [784, 798], "\uc774\uc6a9\ud574\uc11c": [785, 788, 807, 811], "\uc774\uc6c3": [778, 800, 813], "\uc774\uc6c3\ub4e4\ub85c\ubd80\ud130": [803, 813], "\uc774\uc6c3\ub4e4\uc5d0": [800, 813], "\uc774\uc720\ub294": [772, 778, 780, 784, 787, 791, 793, 797, 812], "\uc774\uc804": [797, 798, 810, 811], "\uc774\uc804\uc5d0": 810, "\uc774\uc81c": [792, 801, 803], "\uc774\uc81c\uc758": 785, "\uc774\uc885": [782, 783, 790, 807, 813], "\uc774\uc9c4": [810, 813], "\uc774\ud130\ub808\uc774\uc158\uc5d0": 811, "\uc774\ud558\uc778": 787, "\uc774\ud56d": 791, "\uc774\ud574\ud558\uace0": 796, "\uc775\uc219\ud558\ub2e4\uba74": 802, "\uc778": [780, 796, 808, 811], "\uc778\ub371\uc2a4\ub97c": [778, 807], "\uc778\ubc14\uc6b4\ub4dc": 797, "\uc778\uc2a4\ud134\uc2a4\ub97c": 783, "\uc778\uc2a4\ud134\uc2a4\uc5d0": 813, "\uc778\uc790": 791, "\uc778\uc790\ub294": 797, "\uc778\uc790\ub4e4\uc740": 799, "\uc778\uc790\ub4e4\uc744": 780, "\uc778\uc790\ub4e4\uc774": 786, "\uc778\uc790\ub85c": [780, 787, 791, 794, 798, 801, 803, 808], "\uc778\uc790\ub97c": [781, 799], "\uc778\uc790\uc774\ub2e4": 780, "\uc778\uc9c0": 798, "\uc778\ucea1\uc290\ub808\uc774\uc158\uc774\ub2e4": 808, "\uc778\ucf54\ub529\ud55c": 783, "\uc778\ud130\uc5d1\uc158\uc744": 777, "\uc778\ud130\ud328\uc774\uc2a4\ub97c": 778, "\uc778\ud130\ud398\uc774\uc2a4\ub294": 794, "\uc778\ud130\ud398\uc774\uc2a4\ub97c": [778, 782, 785, 788], "\uc778\ud130\ud398\uc774\uc2a4\uc758": 785, "\uc778\ud2f0\ud2f0\ub4e4\uacfc": 783, "\uc77c": [783, 793], "\uc77c\ub3c4": 810, "\uc77c\ub4e4\uc5d0": 775, "\uc77c\ubc18": [778, 797], "\uc77c\ubc18\uc801": 811, "\uc77c\ubc18\uc801\uc73c\ub85c": [771, 775, 778, 787, 791, 793, 796, 802, 805, 807], "\uc77c\ubc18\uc801\uc778": [784, 788, 806, 807, 810, 811], "\uc77c\ubc88\uc801\uc73c\ub85c": 775, "\uc77c\ubd80": [792, 803], "\uc77c\ubd80\ub294": 775, "\uc77c\ubd80\ub97c": 796, "\uc77c\ubd80\ub9cc": 795, "\uc77c\ubd80\uc5d0": 790, "\uc77c\ubd80\uc5d0\ub9cc": 785, "\uc77c\ubd80\uc774\uae30": 778, "\uc77c\uc5b4\ub098\ub294\uc9c0\ub97c": 800, "\uc77c\uc5b4\ub09c\ub2e4": [775, 778], "\uc77c\uc744": [773, 803, 813], "\uc77c\uc774": 775, "\uc77c\uc774\ud0ac": 807, "\uc77d\uae30": 788, "\uc77d\uae30\uc640": 778, "\uc77d\ub294": 784, "\uc77d\uc744": 797, "\uc784\ubc30\ub529\uc740": 778, "\uc784\ubca0\ub529": 779, "\uc784\ubca0\ub529\uacfc": 778, "\uc784\ubca0\ub529\ub4e4\uc5d0": 778, "\uc784\ubca0\ub529\ub4e4\uc740": 779, "\uc784\ubca0\ub529\ub4e4\uc744": [778, 780], "\uc784\ubca0\ub529\uc744": [777, 778, 779, 780, 812, 813], "\uc784\ubca0\ub529\uc774": 778, "\uc784\uc2dc\ub85c": 776, "\uc784\uc758\ub85c": [797, 809], "\uc784\uc758\uc131\uc744": 800, "\uc784\uc758\uc758": [780, 797, 810, 812], "\uc785\ub825": [772, 778, 798, 801, 802, 803, 806, 807, 808, 811], "\uc785\ub825\uacfc": [791, 797], "\uc785\ub825\uae4c\uc9c0\uc758": 796, "\uc785\ub825\uc5d0": [796, 807], "\uc785\ub825\uc73c\ub85c": [778, 787, 797, 803, 810, 813], "\uc785\ub825\uc740": [798, 811], "\uc785\ub825\ud558\ub294": 801, "\uc785\ub825\ud558\uba74": 810, "\uc785\ub825\ud574\uc11c": [798, 803], "\uc788\uac8c\ud55c\ub2e4": 776, "\uc788\uace0": [772, 778, 780, 791, 797, 802, 804, 805, 808, 811, 812, 813], "\uc788\uae30": [772, 775, 791, 797, 798], "\uc788\ub294": [771, 772, 777, 778, 780, 783, 784, 786, 793, 798, 799, 800, 801, 803, 806, 807, 808, 809, 810, 811, 813], "\uc788\ub294\ub370": [780, 784, 807, 812], "\uc788\ub294\uc9c0": [780, 803], "\uc788\ub2e4": [771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813], "\uc788\ub2e4\uace0": 809, "\uc788\ub2e4\ub294": [780, 788], "\uc788\ub2e4\uba74": [780, 788, 803, 812], "\uc788\ub3c4\ub85d": [775, 778, 797], "\uc788\ub4ef\uc774": [775, 797], "\uc788\uc5b4\uc11c": 804, "\uc788\uc5b4\uc57c": [773, 775, 780, 807, 808], "\uc788\uc5b4\uc57c\ub9cc": 778, "\uc788\uc73c\ub2c8": 784, "\uc788\uc73c\uba70": [775, 780, 806], "\uc788\uc744": [775, 788, 803], "\uc788\uc74c": 811, "\uc788\uc74c\uc744": [783, 800, 808, 813], "\uc788\uc9c0": 778, "\uc788\uc9c0\ub9cc": [797, 798], "\uc790\ub3d9\uc73c\ub85c": [773, 778, 779, 791, 802, 804], "\uc790\ub3d9\uc744": 773, "\uc790\ub3d9\ud654\ud560": 773, "\uc790\ub8cc": [778, 782, 783], "\uc790\uc138\ud558\uac8c": 807, "\uc790\uc138\ud55c": [775, 784, 791, 795, 810], "\uc790\uc138\ud788": 802, "\uc790\uc2e0\uc758": [803, 813], "\uc790\uc6d0\uc744": 796, "\uc790\uccb4": 783, "\uc791\ub3d9\uc744": 799, "\uc791\ub3d9\ud558\uac8c": 797, "\uc791\ub3d9\ud558\ub3c4\ub85d": 802, "\uc791\ub3d9\ud558\uba74\uc11c": 777, "\uc791\uc131": [790, 807], "\uc791\uc131\ud558\uace0\uc790": 810, "\uc791\uc131\ud558\ub294": [802, 813], "\uc791\uc131\ud558\uba74": 810, "\uc791\uc131\ud55c\ub2e4": 810, "\uc791\uc131\ud560": [810, 813], "\uc791\uc131\ud574\uc57c\ud55c\ub2e4": 778, "\uc791\uc5c5": 781, "\uc791\uc5c5\uc740": 772, "\uc791\uc740": [778, 780, 797, 804, 809, 811], "\uc798": 784, "\uc798\ub77c\uc11c": 802, "\uc7a0\uc7ac\uc801\uc73c\ub85c": 798, "\uc7a0\uc7ac\uc801\uc73c\ub85c\ub294": 780, "\uc7a0\uc7ac\uc801\uc778": 807, "\uc7a1": 781, "\uc7a1\ub294": [780, 797], "\uc7a1\uc744": [777, 781], "\uc7a1\uc774": 781, "\uc7a5\ub294": 790, "\uc7a5\uc5d0\uc11c\ub294": [805, 809], "\uc7a5\uc740": [771, 782, 796, 809], "\uc7a5\uc758": [772, 809], "\uc7a5\uc810\uc740": 780, "\uc7a5\uc810\uc744": 811, "\uc7ac\ubc30\uc5f4\ud558\ub294": 775, "\uc7ac\uc0ac\uc6a9\ub420": 807, "\uc7ac\uc0ac\uc6a9\ud55c\ub2e4": 801, "\uc7ac\uc0ac\uc6a9\ud560": 798, "\uc7ac\uc791\uc131\ud574\uc11c": 797, "\uc7ac\ud560\ub2f9": 780, "\uc7ac\ud560\ub2f9\uc774": 780, "\uc7ac\ud560\ub2f9\ud55c\ub2e4": 780, "\uc7ac\ud65c\uc6a9\ud574\uc11c": 812, "\uc800\uc790\uac00": 783, "\uc800\uc791\uc744": 783, "\uc800\uc7a5": [776, 792], "\uc800\uc7a5\uacf5\uac04\ub3c4": 787, "\uc800\uc7a5\uacfc": [771, 772], "\uc800\uc7a5\ub418\ub294": [781, 787], "\uc800\uc7a5\ub418\uc5b4": [778, 797, 803, 813], "\uc800\uc7a5\ub418\uc5b4\uc57c": 780, "\uc800\uc7a5\ub41c": [780, 803], "\uc800\uc7a5\ub41c\ub2e4": [778, 779, 780, 786, 788, 808], "\uc800\uc7a5\ub420": [780, 781], "\uc800\uc7a5\uc18c\ub97c": 788, "\uc800\uc7a5\uc18c\uc5d0": 803, "\uc800\uc7a5\uc740": 810, "\uc800\uc7a5\uc774": 793, "\uc800\uc7a5\ud558\uace0": [777, 780, 784, 788], "\uc800\uc7a5\ud558\uae30": [772, 776, 784, 785, 808], "\uc800\uc7a5\ud558\ub294": [776, 778, 780, 781, 788, 791], "\uc800\uc7a5\ud558\ub294\ub370": [771, 780, 787, 796], "\uc800\uc7a5\ud55c\ub2e4": [778, 779, 780, 781, 784, 785, 791], "\uc800\uc7a5\ud560": [772, 780, 781, 785, 793], "\uc801\uac8c": 787, "\uc801\ub2e4": 803, "\uc801\uc6a9\ub418\uace0": 813, "\uc801\uc6a9\ub418\uae30": 812, "\uc801\uc6a9\ub418\ub294": 802, "\uc801\uc6a9\ub418\ub294\ub370": 791, "\uc801\uc6a9\ub418\uc5b4": 811, "\uc801\uc6a9\ub41c\ub2e4": [788, 807], "\uc801\uc6a9\ub429\ub2c8\ub2e4": 797, "\uc801\uc6a9\ud558\uace0": [788, 793, 807], "\uc801\uc6a9\ud558\uae30": [790, 796, 808], "\uc801\uc6a9\ud558\uae30\ub3c4": 806, "\uc801\uc6a9\ud558\ub294": [790, 792, 793], "\uc801\uc6a9\ud55c\ub2e4": [793, 810], "\uc801\uc6a9\ud574\ubcf4\uba74": 810, "\uc801\uc740": [778, 797, 799], "\uc801\uc808\ud55c": [779, 804], "\uc801\ud569\ud558\uc9c0": [776, 784], "\uc804\ub2ec": [789, 802, 803, 805, 807, 808, 809, 811, 813], "\uc804\ub2ec\ub418\ub294": 780, "\uc804\ub2ec\ub41c": [790, 791], "\uc804\ub2ec\uc5d0": [790, 793], "\uc804\ub2ec\uc740": [794, 797, 807, 813], "\uc804\ub2ec\uc744": [790, 791, 794, 800, 804, 811, 813], "\uc804\ub2ec\uc774": [791, 813], "\uc804\ub2ec\ud55c\ub2e4": 801, "\uc804\ub2ec\ud560": 797, "\uc804\ub2ec\ud574\uc11c": [786, 811], "\uc804\ub2ec\ud574\uc57c": [778, 797], "\uc804\ub7b5\uc740": 780, "\uc804\ub7b5\uc744": [796, 797], "\uc804\ubc18\uc801\uc73c\ub85c": 791, "\uc804\ubd80\uc774\ub2e4": 803, "\uc804\uc5d0": [778, 780, 804], "\uc804\uc790\ub294": 778, "\uc804\ucc98\ub9ac": 777, "\uc804\ucc98\ub9ac\uac00": 780, "\uc804\ucc98\ub9ac\ub294": 780, "\uc804\uccb4": [775, 780, 796, 797, 798, 799, 800, 802, 803, 807, 810, 811, 813], "\uc804\uccb4\ub97c": [796, 807], "\uc804\uccb4\uc5d0": 803, "\uc804\ud30c\ub418\uc5b4\uc57c": 803, "\uc804\ud615\uc801\uc778": [775, 781, 806, 807], "\uc804\ud658\ud558\ub294": 797, "\uc808\ub300\ub85c": 778, "\uc808\ub4e4\uc5d0\uc11c": 771, "\uc808\ub4e4\uc5d0\uc11c\ub294": 796, "\uc808\ub85c": 809, "\uc808\uc57d\ud560": [776, 796, 804], "\uc808\uc5d0\uc11c": [775, 796, 810], "\uc808\uc5d0\uc11c\ub294": [775, 777, 784, 790, 797, 807], "\uc808\uc740": [774, 778, 800, 813], "\uc808\uc744": 780, "\uc808\uc758": 777, "\uc808\ucc28\ub294": [775, 796], "\uc808\ucc98\ub85c": 788, "\uc810\uac80\uc740": 807, "\uc810\uc218": 801, "\uc810\uc218\uac00": 812, "\uc810\uc218\ub97c": [798, 801, 810, 812], "\uc810\uc218\ubcf4\ub2e4": 812, "\uc810\uc218\uc640": [801, 812], "\uc810\uc740": [778, 803], "\uc810\uc744": [775, 784, 797, 798, 800, 801, 803, 811], "\uc810\uc774\ub2e4": [778, 780, 798, 801], "\uc811\uadfc": [781, 791], "\uc811\uadfc\uc131\uc744": 775, "\uc811\uadfc\uc744": [778, 781], "\uc811\uadfc\ud558\uae30": [777, 778], "\uc811\uadfc\ud558\ub294": 778, "\uc811\uadfc\ud560": [778, 779, 785, 797], "\uc811\uadfc\ud574\uc11c": 803, "\uc815\ub82c\ud55c\ub2e4": 779, "\uc815\ubcf4": [772, 776, 787], "\uc815\ubcf4\ub4e4\uc744": [775, 780, 811], "\uc815\ubcf4\ub97c": [776, 778, 780, 781, 788, 798, 811, 813], "\uc815\ubcf4\uc640": 798, "\uc815\uc0c1\uc801\uc778": 778, "\uc815\uc218": [780, 787], "\uc815\uc218\ub85c": 788, "\uc815\uc218\ub97c": 787, "\uc815\uc758": [777, 782, 785, 791], "\uc815\uc758\ub294": 813, "\uc815\uc758\ub418\uc5b4": 778, "\uc815\uc758\ub418\uc5c8\ub2e4\uba74": 811, "\uc815\uc758\ub41c": [772, 813], "\uc815\uc758\ub41c\ub2e4": [797, 811], "\uc815\uc758\uc5d0": 782, "\uc815\uc758\ud558\uace0": 771, "\uc815\uc758\ud558\ub098": 772, "\uc815\uc758\ud558\ub294": 778, "\uc815\uc758\ud558\ub294\ub370": 813, "\uc815\uc758\ud55c": [801, 810], "\uc815\uc758\ud55c\ub2e4": [790, 797, 802, 811], "\uc815\uc758\ud560": [797, 801], "\uc815\ucc45\uc740": 779, "\uc815\ucc45\uc744": 779, "\uc815\ud574\uc57c": 781, "\uc815\ud574\uc9c4": [807, 813], "\uc815\ud655\ub3c4": 813, "\uc815\ud655\ud558\uac8c": 778, "\uc815\ud655\ud55c": 796, "\uc81c\uac70\ub418\uc5b4": 802, "\uc81c\uac70\ud558\uae30": 800, "\uc81c\uac70\ud558\ub294": 798, "\uc81c\uac70\ud55c\ub2e4": 791, "\uc81c\uac70\ud588\ub2e4": 803, "\uc81c\uacf1": 780, "\uc81c\uacf5\ub418\ub294": [803, 809], "\uc81c\uacf5\ud558\uae30": [771, 777], "\uc81c\uacf5\ud558\ub294": [772, 780, 798, 803], "\uc81c\uacf5\ud558\ub294\ub370": 784, "\uc81c\uacf5\ud558\uc9c0\ub9cc": 797, "\uc81c\uacf5\ud55c\ub2e4": [774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 787, 788, 791, 796, 797, 801, 803, 804, 810, 813], "\uc81c\uacf5\ud55c\ub2e4\uba74": 784, "\uc81c\uacf5\ud560": 775, "\uc81c\uacf5\ud568": [802, 813], "\uc81c\uacf5\ud574\uc57c": 778, "\uc81c\uacf5\ud574\uc57c\ud55c\ub2e4": 801, "\uc81c\uc548\ud558\ub294": 793, "\uc81c\uc57d": 788, "\uc81c\uc57d\uc774\ub098": 800, "\uc81c\uc678\ud558\uace0\ub294": 813, "\uc81c\uc678\ud558\uba74": [798, 801], "\uc81c\ud55c\uc801\uc778": 800, "\uc870\uac74\uc744": [788, 799], "\uc870\uae08\ub9cc": 777, "\uc870\uc815\uac00\ub2a5": 813, "\uc874\uc7ac\ud558\ub294": [778, 812], "\uc874\uc7ac\ud558\ub294\uc9c0": 812, "\uc874\uc7ac\ud558\uc9c0": [798, 801, 811], "\uc874\uc7ac\ud55c\ub2e4": 805, "\uc874\uc7ac\ud55c\ub2e4\ub294": [774, 798], "\uc874\uc7ac\ud55c\ub2e4\uba74": 773, "\uc874\uc7ac\ud574\uc57c\ud558\uba70": 786, "\uc880\ub354": 806, "\uc885\ub8cc\ub418\uba74": 812, "\uc885\ub958": 811, "\uc885\ub958\ub97c": 811, "\uc885\ub958\uc5d0": 813, "\uc885\ub958\uc758": [774, 775, 777, 802, 807, 808, 811], "\uc885\uc885": [810, 811], "\uc88b\ub2e4": 800, "\uc88b\uc740": 780, "\uc8fc\ub85c": [775, 778], "\uc8fc\ubaa9\ud558\uc790": 800, "\uc8fc\uc11d": 802, "\uc8fc\uc18c": 781, "\uc8fc\uc18c\ub4e4\uc744": 781, "\uc8fc\uc18c\uc774\ub2e4": 781, "\uc8fc\uc5b4\uc84c\uc744": 810, "\uc8fc\uc5b4\uc9c0\uba74": 797, "\uc8fc\uc5b4\uc9c4": [780, 797, 810], "\uc8fc\uc694": [775, 778, 805, 811], "\uc8fc\uc758": 809, "\uc8fc\uc758\ud558\uc790": [800, 802, 811], "\uc900\ub2e4": [778, 799], "\uc900\ube44\ud558\uace0": 780, "\uc900\ube44\ud55c\ub2e4": 811, "\uc904\ub9cc": 780, "\uc904\uc5ec\uc900\ub2e4": 780, "\uc904\uc740": 781, "\uc904\uc774\uae30": 800, "\uc904\uc778": 793, "\uc904\uc77c": 772, "\uc911": 776, "\uc911\uac04": [780, 796], "\uc911\uac04\uc5d0": 791, "\uc911\ubcf5\ub41c": 780, "\uc911\uc2ec\uc758": 782, "\uc911\uc5d0": [778, 779, 781, 794, 802, 813], "\uc911\uc694\ud558\ub2e4": [778, 780], "\uc911\uc694\ud55c": [775, 780, 784, 785], "\uc911\uc758": 787, "\uc911\uc774\ub2e4": 799, "\uc989": [775, 778, 780, 785, 791, 793, 797, 798, 801, 803, 807, 810, 811, 812], "\uc9c0\uae08\uc740": 778, "\uc9c0\ub2c8\uace0": 811, "\uc9c0\uc5b4\ubcf8\ub2e4\uba74": 811, "\uc9c0\uc6d0\ub418\ub294": [791, 798, 803], "\uc9c0\uc6d0\uc740": 791, "\uc9c0\uc6d0\uc744": [780, 804], "\uc9c0\uc6d0\ud558\uace0": [787, 792], "\uc9c0\uc6d0\ud558\uae30": [777, 778, 787, 791], "\uc9c0\uc6d0\ud558\ub294": 804, "\uc9c0\uc6d0\ud558\ub294\ub370": 799, "\uc9c0\uc6d0\ud558\uc9c0": [778, 799], "\uc9c0\uc6d0\ud558\uc9c0\ub9cc": 778, "\uc9c0\uc6d0\ud55c\ub2e4": [777, 778, 779, 780, 787, 791, 796, 799, 801, 803, 811], "\uc9c0\uc6d0\ud568": 799, "\uc9c0\uc815\ub418\uace0": 779, "\uc9c0\uc815\ub418\uba74": 801, "\uc9c0\uc815\ub418\uc5b4\uc57c": 781, "\uc9c0\uc815\ub418\uc9c0": 781, "\uc9c0\uc815\ub41c": 781, "\uc9c0\uc815\ub420": 779, "\uc9c0\uc815\ud558\uae30": [775, 788], "\uc9c0\uc815\ud558\ub294": 775, "\uc9c0\uc815\ud558\ub294\ub370": 780, "\uc9c0\uc815\ud558\uc9c0": 791, "\uc9c0\uc815\ud55c": 788, "\uc9c0\uc815\ud55c\ub2e4": [778, 779, 780, 781, 788], "\uc9c0\uc815\ud560": [778, 781, 798], "\uc9c0\uc815\ud574\uc57c": [779, 806], "\uc9c0\uc815\ud574\uc57c\ud558\uae30": 812, "\uc9c0\uce6d\ud558\ub294": 791, "\uc9c0\ucf1c\ubcf4\uc790": [799, 804], "\uc9c1\uad00\uc801\uc73c\ub85c": 793, "\uc9c1\uc811": [773, 778, 779, 780, 784, 791, 793, 801, 802], "\uc9c4\ub2e4": 777, "\uc9c4\uc785": 797, "\uc9c4\ud589": [799, 811], "\uc9c8\ubb38\uc740": 789, "\uc9d1\uacc4": [791, 794], "\uc9d1\uacc4\ub41c\ub2e4": 808, "\uc9d1\uacc4\ud558\ub294": 808, "\uc9d1\uc911\ud574\uc11c": 775, "\uc9d1\ud55c\uc740": 803, "\uc9d1\ud569": [783, 811], "\uc9d1\ud569\ub418\uc5b4\uc57c": 806, "\uc9d1\ud569\ub4e4\uc5d0": 777, "\uc9d1\ud569\uc5d0": 788, "\uc9d1\ud569\uc73c\ub85c": 783, "\uc9d1\ud569\uc744": [787, 797, 798], "\uc9e7\uac8c": 788, "\ucc28\ub840": 813, "\ucc28\uc6d0": [779, 785, 791, 806], "\ucc28\uc6d0\uacfc": 806, "\ucc28\uc6d0\ub4e4": 806, "\ucc28\uc6d0\ub4e4\uc744": 794, "\ucc28\uc6d0\uc73c\ub85c": 806, "\ucc28\uc6d0\uc740": [785, 793, 806], "\ucc28\uc6d0\uc744": [793, 806], "\ucc28\uc6d0\uc758": 799, "\ucc28\uc6d0\uc774": [793, 811], "\ucc28\uc6d0\uc774\ub780": 806, "\ucc28\uc774\uac00": 811, "\ucc28\uc774\ub97c": 804, "\ucc28\uc774\uc810\uc740": [778, 780, 798, 801, 802, 805, 811], "\ucc28\uc774\uc810\uc774": 798, "\ucc28\uc9c0\ud558\uace0": 799, "\ucc28\uc9c0\ud558\uae30\ub3c4": 793, "\ucc28\uc9c0\ud558\uc9c0": 799, "\ucc38\uace0": [772, 791], "\ucc38\uace0\ud558\uace0\uc790": 778, "\ucc38\uace0\ud558\uba74": 775, "\ucc38\uace0\ud558\uc790": [775, 780, 783, 784, 787, 791, 795, 797, 798, 799, 800, 803, 809, 811, 813], "\ucc38\uace0\ud560": [784, 785, 787, 788], "\ucc38\uc870": 778, "\ucc38\uc870\ub9cc": 784, "\ucc38\uc870\ud558\uae30": 784, "\ucc38\uc870\ud558\uc790": 784, "\ucc3e\ub294\ub2e4": 781, "\ucc3e\uc544\ub0b4\uc57c\ud55c\ub2e4": 811, "\ucc3e\uc544\ub0bc": 807, "\ucc3e\uc544\ubcfc": 803, "\ucc44\ud0dd\ud558\uace0": 777, "\ucc45\uc784\uc744": 777, "\ucc98\ub7fc": [773, 778, 798], "\ucc98\ub9ac": [772, 775], "\ucc98\ub9ac\ub418\uc9c0": 775, "\ucc98\ub9ac\ub97c": 802, "\ucc98\ub9ac\ud558\uace0": 771, "\ucc98\ub9ac\ud558\uae30": 772, "\ucc98\ub9ac\ud558\ub294": [775, 776], "\uccab": [779, 800, 802], "\uccab\ubc88\uc9f8": [780, 785, 797, 798, 800, 803, 807], "\uccab\ubc88\uc9f8\ub294": 798, "\uccab\uc9f8\ub85c": 811, "\uccb4\ud06c": 807, "\uccb4\ud06c\uac00": 807, "\uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c": 784, "\ucd08\uae30\ud654\ub41c\ub2e4": 779, "\ucd08\uae30\ud654\ud558\uae30": 777, "\ucd08\uae30\ud654\ud55c\ub2e4": [778, 806], "\ucd1d": [775, 779], "\ucd5c\ub300": 811, "\ucd5c\uc120\uc758": 799, "\ucd5c\uc18c\ub4e4\uc774": 811, "\ucd5c\uc18c\uc758": 780, "\ucd5c\uc18c\ud55c\uc758": 791, "\ucd5c\uc2e0": 780, "\ucd5c\uc801\uc740": 804, "\ucd5c\uc801\uc774\uc9c0": 780, "\ucd5c\uc801\ud654\ub418\uc5b4": 780, "\ucd5c\uc801\ud654\ub41c": 791, "\ucd5c\uc801\ud654\ub420": 793, "\ucd5c\uc801\ud654\ub4e4\uc744": 793, "\ucd5c\uc801\ud654\ub97c": 807, "\ucd5c\uc801\ud654\ud558\uace0": 793, "\ucd5c\uc801\ud654\ud560": 791, "\ucd5c\uc885": [796, 803], "\ucd94\uac00": [799, 807], "\ucd94\uac00\ub41c": 787, "\ucd94\uac00\ub85c": [775, 780, 788, 793], "\ucd94\uac00\uc801\uc73c\ub85c": [773, 780], "\ucd94\uac00\uc801\uc778": 808, "\ucd94\uac00\ud558\ub294": 775, "\ucd94\uac00\ud55c\ub2e4": 775, "\ucd94\uac00\ud560": [775, 778], "\ucd94\ub860": 796, "\ucd94\ub860\uc5d0": 778, "\ucd94\ub860\uc5d0\uc11c": 780, "\ucd94\ub860\uc740": 800, "\ucd94\ub860\uc744": [777, 800], "\ucd94\ub860\uc758": 800, "\ucd94\ub860\uc774": [780, 796], "\ucd94\uc0c1\ud654\ub97c": 782, "\ucd94\ucc9c": 783, "\ucd94\ucc9c\uc5d0\uc11c": 810, "\ucd94\ucc9c\uc744": 812, "\ucd94\ucd9c\ub420": 773, "\ucd94\ucd9c\uc744": 773, "\ucd94\ucd9c\ud558\uace0": 788, "\ucd94\ucd9c\ud558\uba74": 813, "\ucd94\ucd9c\ud558\uc790": 773, "\ucd94\ucd9c\ud55c\ub2e4": 773, "\ucd94\ucd9c\ud560": 808, "\ucd95\uc18c": [790, 791], "\ucd95\uc57d": [791, 794, 808], "\ucd9c\ub825": [780, 791, 797, 798, 800, 802, 803, 806], "\ucd9c\ub825\uacfc": 798, "\ucd9c\ub825\uc2dc\uc791\ud574\uc11c": 796, "\ucd9c\ub825\uc73c\ub85c": 803, "\ucd9c\ub825\uc73c\ub85c\ub294": 797, "\ucd9c\ub825\uc758": 797, "\ucda9\ubd84\ud558\ub2e4": 800, "\ucda9\ubd84\ud558\uc9c0": 780, "\ucda9\uc871\ud558\uba74": 799, "\ucde8\uae09\ud55c\ub2e4": 807, "\ucde8\ud558\uac8c\ud558\uba74": 810, "\uce58\uc6d0\uc744": 806, "\uce5c\uad6c": 783, "\uce5c\ubaa9": 811, "\uce5c\uc219\ud560": 812, "\uce74\ud14c\uace0\ub9ac\ub85c": 813, "\uce74\ud14c\ub85c\uae30\ub4e4\ub85c": 813, "\uce90\ub178\ub2c8\uceec": 788, "\ucee4\ub110\uc758": 804, "\ucee4\ub2e4\ub780": 811, "\ucee4\ubba4\ub2c8\ud2f0\uc5d0": 811, "\ucee4\ubba4\ub2c8\ud2f0\uc758": 811, "\ucee4\uc11c": 793, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub41c": 808, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c": 803, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774": 813, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [796, 798, 803], "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\ub294": 796, "\ucee4\uc2a4\ud140": [771, 796, 799, 803, 805, 813], "\ucee4\uc9c8": 780, "\ucee8\ud0dd\uc2a4\ud2b8": 787, "\ucef4\ud30c\uc77c\uacfc": 780, "\ucef4\ud30c\uc77c\uc744": 791, "\ucef4\ud30c\uc77c\ud558\uace0": 780, "\ucef4\ud30c\uc77c\ud55c\ub2e4": 780, "\ucef4\ud3ec\ub10c\ub4dc\ub4e4\uc744": 777, "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uacfc": [777, 811], "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uc744": [777, 782], "\ucef4\ud3ec\ub10c\ud2b8\ub97c": [771, 777, 811], "\ucef4\ud3ec\ub10c\ud2b8\ub9cc": 810, "\ucef4\ud4e8\ud130": 777, "\ucef4\ud4e8\ud130\ub294": [777, 778], "\ucef4\ud4e8\ud130\ub4e4\uc5d0": 777, "\ucef4\ud4e8\ud130\ub4e4\uc758": [777, 780], "\ucef4\ud4e8\ud130\ub97c": 780, "\ucef4\ud4e8\ud130\uc5d0": 778, "\ucef4\ud4e8\ud130\uc5d0\uc11c": [777, 780, 804], "\ucef4\ud4e8\ud305": 791, "\ucef7": 780, "\ucf00\uc774\uc2a4\ub294": 778, "\ucf00\uc774\uc2a4\ub4e4\uc744": 807, "\ucf54\ub4dc": [775, 777, 780, 790, 798, 801, 804, 807, 811], "\ucf54\ub4dc\ub294": [773, 774, 775, 777, 778, 779, 780, 784, 785, 787, 788, 797, 798, 801, 802, 803, 805, 807, 810, 811, 812, 813], "\ucf54\ub4dc\ub3c4": 802, "\ucf54\ub4dc\ub4e4\uacfc": 802, "\ucf54\ub4dc\ub97c": [773, 775, 777, 778, 791], "\ucf54\ub4dc\uc5d0\uc11c": [775, 797], "\ucf54\ub4dc\uc640": [778, 805, 810], "\ucf54\ub4dc\uc758": [775, 807], "\ucf54\ub4dc\uc774\ub2e4": 813, "\ucf54\ub4dc\ucc98\ub7fc": 813, "\ucffc\ub9ac\ud558\ub294": 787, "\ud06c\uac8c": 810, "\ud06c\uae30": 776, "\ud06c\uae30\uac00": [796, 811], "\ud06c\uae30\ub77c\uace0": 809, "\ud06c\uae30\ub97c": [779, 788], "\ud06c\uae30\uc758": 778, "\ud06c\uae30\uc774\uace0": 799, "\ud06c\ub85c\uc2a4": 794, "\ud070": [772, 780, 789, 795, 807, 809, 811, 813], "\ud074\ub798\uc2a4": [771, 803], "\ud074\ub798\uc2a4\ub294": [778, 797], "\ud074\ub798\uc2a4\ub4e4\uc744": 803, "\ud074\ub798\uc2a4\ub97c": [772, 773, 777, 803], "\ud074\ub798\uc2a4\uc5d0": [772, 775, 797, 813], "\ud074\ub798\uc2a4\uc5d0\ub294": 772, "\ud074\ub798\uc2a4\uc5d0\uc11c": 771, "\ud074\ub798\uc2a4\uc774\uace0": 799, "\ud074\ub798\uc2a4\uc774\ub2e4": [772, 778], "\ud074\ub798\uc2a4\uc778": [775, 797], "\ud074\ub7ec\uc2a4\ud130": [777, 781], "\ud074\ub7ec\uc2a4\ud130\uc5d0": [778, 781], "\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c": [777, 778, 780, 781], "\ud074\ub7ec\uc2a4\ud130\uc758": [777, 778, 780, 781], "\ud074\ub7ec\uc2a4\ud130\uc774": 777, "\ud074\ub85c\ubc8c": 781, "\ud074\ub860\ud558\uace0": 780, "\ud074\ub860\ud55c\ub2e4": 780, "\ud0a4\uac12\ub294": 794, "\ud0a4\ub85c": [780, 808], "\ud0c0\uc785": [779, 780, 785, 787, 794, 806, 808], "\ud0c0\uc785\uac04\uc758": 798, "\ud0c0\uc785\uacfc": [778, 779, 788, 798, 801, 810, 813], "\ud0c0\uc785\ub4e4\uacfc": [779, 780, 798, 801, 803, 813], "\ud0c0\uc785\ub4e4\uc5d0": [788, 807, 813], "\ud0c0\uc785\ub4e4\uc640": [801, 803], "\ud0c0\uc785\ub4e4\uc740": 794, "\ud0c0\uc785\ub4e4\uc744": [780, 797, 798, 801, 808], "\ud0c0\uc785\ub4e4\uc758": 780, "\ud0c0\uc785\ub4e4\uc774": 780, "\ud0c0\uc785\ub9cc": 810, "\ud0c0\uc785\ub9cc\uc744": 778, "\ud0c0\uc785\ubcc4": [779, 788], "\ud0c0\uc785\ubcc4\ub85c": [780, 797, 813], "\ud0c0\uc785\uc5d0": [779, 780, 788, 791, 794, 806, 807, 808, 810, 811, 812, 813], "\ud0c0\uc785\uc5d0\uc11c": 779, "\ud0c0\uc785\uc5d0\uc11c\uc758": 780, "\ud0c0\uc785\uc73c\ub85c": [783, 808, 810, 812], "\ud0c0\uc785\uc73c\ub85c\ub294": 806, "\ud0c0\uc785\uc740": [779, 787, 806], "\ud0c0\uc785\uc744": [779, 780, 782, 783, 785, 791, 794, 798, 802, 804, 809, 810, 812], "\ud0c0\uc785\uc758": [779, 780, 782, 783, 788, 794, 797, 798, 810], "\ud0c0\uc785\uc774": [779, 780, 787, 788, 807, 808], "\ud0c0\uc785\uc774\ub098": 779, "\ud0c0\uc785\uc774\ub2e4": 780, "\ud0c0\uc785\uc774\ub77c\uace0": 788, "\ud134\uc11c": 785, "\ud14c\uc2a4\ud06c": 775, "\ud14c\uc2a4\ud06c\ub4e4\uc5d0": 810, "\ud14c\uc2a4\ud06c\ub4e4\uc744": 813, "\ud14c\uc2a4\ud06c\ub97c": [774, 809], "\ud14c\uc2a4\ud06c\uc5d0": 780, "\ud14c\uc2a4\ud06c\uc5d0\ub3c4": 778, "\ud14c\uc2a4\ud06c\uc5d0\uc11c": 775, "\ud14c\uc2a4\ud06c\uc758": 778, "\ud14c\uc2a4\ud2b8": [778, 780, 810, 813], "\ud14c\uc2a4\ud2b8\ub97c": 778, "\ud14c\uc2a4\ud2b8\uc758": 775, "\ud14c\uc774\ube14": 784, "\ud14c\uc785\ub4e4\uc758": 780, "\ud150\uc11c": [779, 786, 787, 791, 805], "\ud150\uc11c\uac00": [778, 785], "\ud150\uc11c\ub294": [778, 785, 804], "\ud150\uc11c\ub4e4\uacfc": [779, 808], "\ud150\uc11c\ub4e4\uc5d0": 788, "\ud150\uc11c\ub4e4\uc744": [778, 807], "\ud150\uc11c\ub4e4\uc758": [775, 780, 798, 801, 802, 813], "\ud150\uc11c\ub85c": 784, "\ud150\uc11c\ub97c": [778, 779, 784, 786, 787, 808], "\ud150\uc11c\uc5d0": 804, "\ud150\uc11c\uc5ec\uc57c\ub9cc": 791, "\ud150\uc11c\uc640": 778, "\ud150\uc11c\uc758": [785, 787], "\ud150\uc11c\uc774\uace0": 802, "\ud15c\ud50c\ub9bf\uc740": 772, "\ud1a0\uc774": 780, "\ud1a0\ud53d\ub4e4\uc744": 796, "\ud1b5\uacc4\ub4e4\uc744": 780, "\ud1b5\uc2e0\uc5d0": 781, "\ud1b5\uc2e0\uc744": [777, 780], "\ud1b5\uc2e0\uc774": 778, "\ud1b5\ud569\ub420": 805, "\ud1b5\ud569\ud558\ub294": [790, 808], "\ud1b5\ud574\uc11c": [778, 779, 780, 784, 791, 797, 800, 801, 808, 812], "\ud1b5\ud574\uc11c\ub294": 797, "\ud234\ub4e4": 777, "\ud234\uc740": 778, "\ud29c\ud1a0\ub9ac\uc5bc": 791, "\ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c": 799, "\ud29c\ud50c": 787, "\ud2b8\ub808\uc774\ub108": [777, 778], "\ud2b8\ub808\uc774\ub108\uac00": 778, "\ud2b8\ub808\uc774\ub108\ub294": 780, "\ud2b8\ub808\uc774\ub108\ub4e4\uc740": [777, 778], "\ud2b8\ub808\uc774\ub108\ub4e4\uc758": 781, "\ud2b8\ub808\uc774\ub108\ub4e4\uc774": 778, "\ud2b8\ub808\uc774\ub108\uc5d0": 781, "\ud2b8\ub808\uc774\ub108\uc5d0\uac8c": [777, 778], "\ud2b8\ub9ac\ud50c": 788, "\ud2b8\uc704\ud130\uc758": 783, "\ud2b9\ubcc4\ud558\uac8c": 803, "\ud2b9\ubcc4\ud55c": [783, 788, 807], "\ud2b9\ubcc4\ud788": 784, "\ud2b9\uc131\uc744": 811, "\ud2b9\uc815": [773, 775, 779, 780, 788, 797, 800, 806, 810], "\ud2b9\uc9d5\uacfc": 787, "\ud2b9\uc9d5\uc744": [794, 811], "\ud2b9\ud788": [777, 788, 800], "\ud2f0\uc555\uc5d0": 810, "\ud2f0\uc785\uc5d0": 780, "\ud301\uc744": 796, "\ud30c\ub77c\uba54\ud130": [805, 806], "\ud30c\ub77c\uba54\ud130\ub4e4": 808, "\ud30c\ub77c\uba54\ud130\ub4e4\uacfc": 806, "\ud30c\ub77c\uba54\ud130\ub4e4\ub85c\uc368": 808, "\ud30c\ub77c\uba54\ud130\ub4e4\uc740": 791, "\ud30c\ub77c\uba54\ud130\ub4e4\uc744": [778, 794, 804], "\ud30c\ub77c\uba54\ud130\ub85c": [793, 807], "\ud30c\ub77c\uba54\ud130\ub97c": [775, 791, 797], "\ud30c\ub77c\uba54\ud130\uc774\ub2e4": 812, "\ud30c\ub77c\ubbf8\ud130\ub4e4\uc740": 791, "\ud30c\ub77c\ubbf8\ud130\ub85c": 791, "\ud30c\uc2f1\ud558\uace0": 788, "\ud30c\uc2f1\ud558\ub294": 784, "\ud30c\uc774\uc120": 787, "\ud30c\uc774\ud504\ub77c\uc778": [789, 809, 811, 813], "\ud30c\uc774\ud504\ub77c\uc778\uc5d0": 772, "\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c": 772, "\ud30c\uc774\ud504\ub77c\uc778\uc740": 811, "\ud30c\uc774\ud504\ub77c\uc778\uc744": [771, 772, 796], "\ud30c\uc774\ud504\ub77c\uc778\uc758": 771, "\ud30c\uc774\ud504\ub77c\uc778\uc774": [771, 772], "\ud30c\uc77c": [773, 780, 781, 810, 813], "\ud30c\uc77c\ub4e4": [780, 781], "\ud30c\uc77c\ub4e4\ub85c": 775, "\ud30c\uc77c\ub4e4\uc5d0": 780, "\ud30c\uc77c\ub4e4\uc740": [773, 780], "\ud30c\uc77c\ub4e4\uc744": [773, 788], "\ud30c\uc77c\ub4e4\uc758": [780, 781], "\ud30c\uc77c\ub4e4\uc774": 780, "\ud30c\uc77c\ub85c": [775, 780], "\ud30c\uc77c\ub85c\uc11c": 780, "\ud30c\uc77c\uc5d0": [773, 780, 788], "\ud30c\uc77c\uc5d0\uc11c": 780, "\ud30c\uc77c\uc740": 780, "\ud30c\uc77c\uc744": [773, 778, 780, 781], "\ud30c\uc77c\uc758": 780, "\ud30c\uc77c\uc774": [773, 780, 781], "\ud30c\uc77c\uc774\ub2e4": 780, "\ud30c\uccd0": 772, "\ud30c\ud0c0\uc154\ub2dd": 780, "\ud30c\ud0c0\uc158\uacfc": 778, "\ud30c\ud0c0\uc158\ub41c": 781, "\ud30c\ud0c0\uc158\uc5d0": 780, "\ud30c\ud130\uc158\ud558\uae30": 778, "\ud30c\ud2b8\ub85c": 794, "\ud30c\ud2f0\uc154\ub2dd": [772, 778], "\ud30c\ud2f0\uc154\ub2dd\uc740": 780, "\ud30c\ud2f0\uc154\ub2dd\uc744": 780, "\ud30c\ud2f0\uc154\ub2dd\uc758": 780, "\ud30c\ud2f0\uc154\ub2dd\ud55c\ub2e4": 780, "\ud30c\ud2f0\uc154\ub2dd\ud560": 780, "\ud30c\ud2f0\uc158": [777, 778, 779, 780, 781], "\ud30c\ud2f0\uc158\uacfc": 780, "\ud30c\ud2f0\uc158\ub418\uc5b4": 778, "\ud30c\ud2f0\uc158\ub41c": [777, 778, 780, 781], "\ud30c\ud2f0\uc158\ub4e4\uc5d0": 780, "\ud30c\ud2f0\uc158\ub4e4\uc744": [780, 781], "\ud30c\ud2f0\uc158\ub4e4\uc758": 780, "\ud30c\ud2f0\uc158\ub4e4\uc774": [780, 781], "\ud30c\ud2f0\uc158\uc5d0": 780, "\ud30c\ud2f0\uc158\uc5d0\uc11c": 778, "\ud30c\ud2f0\uc158\uc73c\ub85c": 780, "\ud30c\ud2f0\uc158\uc740": 780, "\ud30c\ud2f0\uc158\uc744": [778, 779, 780, 781], "\ud30c\ud2f0\uc158\uc758": [778, 780], "\ud30c\ud2f0\uc158\uc774": [780, 781], "\ud30c\ud2f0\uc158\uc774\ub2e4": 778, "\ud30c\ud2f0\uc158\ud558\uae30": 780, "\ud310\ub9e4\uc790": 783, "\ud310\ub9e4\ud568": 783, "\ud314\ub85c\uc6b0": 783, "\ud328\uc2a4": 804, "\ud328\uc2a4\uc6cc\ub4dc": 781, "\ud328\ud0a4\uc9c0": 774, "\ud328\ud0a4\uc9c0\ub4e4\uc744": 788, "\ud328\ud0a4\uc9c0\ub97c": [771, 780], "\ud398\uc774\ud37c\uc5d0\uc11c\ub294": 806, "\ud3b8\ub9ac\ud558\uace0": 772, "\ud3c9\uac00": [800, 810], "\ud3c9\uac00\ud558\ub294": 813, "\ud3c9\uade0": 811, "\ud3c9\uade0\uc744": 811, "\ud3ec\uba67\ub4e4\uc5d0\ub3c4": 788, "\ud3ec\uba67\ub4e4\uc774": 784, "\ud3ec\uba67\uc73c\ub85c": [780, 784, 788], "\ud3ec\uba67\uc744": 787, "\ud3ec\uba67\uc758": 804, "\ud3ec\uba67\uc774": 773, "\ud3ec\uba67\uc778": 773, "\ud3ec\ud2b8": 781, "\ud3ec\ud568": [777, 804], "\ud3ec\ud568\ub418\uc5b4": [780, 813], "\ud3ec\ud568\ub41c": 780, "\ud3ec\ud568\ub41c\ub2e4\ub294": 780, "\ud3ec\ud568\ub420": 797, "\ud3ec\ud568\ud558\uace0": [775, 777, 780, 797, 805], "\ud3ec\ud568\ud558\ub294": 797, "\ud3ec\ud568\ud558\ub294\ub370": 780, "\ud3ec\ud568\ud558\uc9c0": [797, 810], "\ud3ec\ud568\ud558\uc9c0\ub9cc": 797, "\ud3ec\ud568\ud55c": [783, 797, 801], "\ud3ec\ud568\ud55c\ub2e4": [780, 808], "\ud3ec\ud568\ud560": 797, "\ud3ec\ud568\ud574\uc57c": 797, "\ud3f4\ub354\ub294": 780, "\ud45c\uc2dc\ub41c": 797, "\ud45c\uc900": [771, 775], "\ud45c\uc900\uc801\uc778": 772, "\ud45c\ud604\ub418\uace0": 800, "\ud45c\ud604\ub418\uba70": 782, "\ud45c\ud604\ub418\uc5b4\uc57c": 812, "\ud45c\ud604\ub41c\ub2e4": [787, 788, 807, 808], "\ud45c\ud604\uc744": 813, "\ud45c\ud604\ud558\uace0": 783, "\ud45c\ud604\ud558\uae30": [783, 787, 791, 794], "\ud45c\ud604\ud558\ub294": [780, 783, 810], "\ud45c\ud604\ud558\ub294\ub370": 812, "\ud45c\ud604\ud558\uba74": 791, "\ud45c\ud604\ud560": 783, "\ud48d\ubd80\ud55c": 811, "\ud504\ub798\ud504\uc5d0\uc11c": 797, "\ud504\ub808\uc784\uc6cc\ud06c": 805, "\ud504\ub808\uc784\uc6cc\ud06c\uac00": 784, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0": 805, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c": 797, "\ud504\ub808\uc784\uc6cc\ud06c\uc758": [778, 788, 805], "\ud504\ub85c\uadf8\ub798\ubc0d": 782, "\ud504\ub85c\uc138\uc2a4": [778, 811], "\ud504\ub85c\uc138\uc2a4\ub294": [777, 778, 780, 796], "\ud504\ub85c\uc138\uc2a4\ub41c": 776, "\ud504\ub85c\uc138\uc2a4\ub4e4\uacfc\uc758": 778, "\ud504\ub85c\uc138\uc2a4\ub4e4\uc740": [777, 778], "\ud504\ub85c\uc138\uc2a4\ub4e4\uc744": [777, 778], "\ud504\ub85c\uc138\uc2a4\ub97c": [777, 778, 780, 799, 811], "\ud504\ub85c\uc138\uc2a4\ub9cc": 778, "\ud504\ub85c\uc138\uc2a4\uc5d0": 778, "\ud504\ub85c\uc138\uc2a4\uc5d0\uc11c": 778, "\ud504\ub85c\uc138\uc2a4\uc758": [778, 781], "\ud504\ub85c\uc138\uc2f1": [771, 776], "\ud504\ub85c\uc138\uc2f1\ub418\uc5b4": 809, "\ud504\ub85c\uc138\uc2f1\ub41c": 776, "\ud504\ub85c\uc138\uc2f1\uc758": 775, "\ud504\ub85c\uc138\uc2f1\ud558\uace0": 772, "\ud504\ub85c\uc138\uc2f1\ud558\ub294": [771, 774, 775], "\ud504\ub85c\ud1a0\ud0c0\uc785": 787, "\ud504\ub85c\ud2f0\uc5b4\uac00": 797, "\ud504\ub85c\ud37c\ud2f0\ub4e4\uc744": 775, "\ud504\ub85c\ud37c\ud2f0\ub97c": 775, "\ud504\ub860\ud2f0\uc5b4": 797, "\ud504\ub860\ud2f0\uc5b4\uac00": 797, "\ud504\ub860\ud2f0\uc5b4\ub294": 797, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uacfc": 797, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uc744": 797, "\ud504\ub860\ud2f0\uc5b4\ub85c": 797, "\ud504\ub860\ud2f0\uc5b4\ub97c": 797, "\ud504\ub860\ud2f0\uc5b4\uc5d0\uc11c": 797, "\ud504\ub860\ud2f0\uc5b4\uc758": 797, "\ud504\ub860\ud2f0\uc5b4\uc774\uace0": 797, "\ud53c\ucc98": [782, 784, 786, 788, 791, 793, 806, 811, 813], "\ud53c\ucc98\uac00": [785, 788, 803], "\ud53c\ucc98\ub294": 785, "\ud53c\ucc98\ub4e4\uacfc": 782, "\ud53c\ucc98\ub4e4\ub9cc": 785, "\ud53c\ucc98\ub4e4\uc740": 785, "\ud53c\ucc98\ub4e4\uc744": [783, 784, 788, 798, 803], "\ud53c\ucc98\ub77c\uace0": 790, "\ud53c\ucc98\ub85c": [785, 791, 810], "\ud53c\ucc98\ub97c": [777, 785, 790, 791, 797, 802, 803], "\ud53c\ucc98\ub9cc": 803, "\ud53c\ucc98\uc5d0": 793, "\ud53c\ucc98\uc640": [790, 791], "\ud53c\ucc98\uc758": [791, 802], "\ud53c\ucc98\uc774\uace0": [790, 807], "\ud53c\ucc98\uc774\ub2e4": 807, "\ud53c\uccd0": [772, 777, 778, 780, 786, 811, 813], "\ud53c\uccd0\uac00": [788, 802], "\ud53c\uccd0\ub294": [785, 797, 802, 808, 811], "\ud53c\uccd0\ub3c4": [780, 785, 813], "\ud53c\uccd0\ub4e4": [775, 803, 811], "\ud53c\uccd0\ub4e4\uacfc": [780, 811], "\ud53c\uccd0\ub4e4\ub85c\ubd80\ud130": 802, "\ud53c\uccd0\ub4e4\ub9cc": 778, "\ud53c\uccd0\ub4e4\uc5d0": [804, 810, 811], "\ud53c\uccd0\ub4e4\uc740": [791, 803, 809], "\ud53c\uccd0\ub4e4\uc744": [778, 780, 785, 788, 797, 798, 799, 801, 803, 811], "\ud53c\uccd0\ub4e4\uc758": 810, "\ud53c\uccd0\ub4e4\uc774": [798, 799, 803, 809], "\ud53c\uccd0\ub85c": 792, "\ud53c\uccd0\ub97c": [785, 788, 791, 792, 793, 796, 799, 802, 807, 811, 813], "\ud53c\uccd0\uc5d0": [793, 797, 804], "\ud53c\uccd0\uc640": [792, 793, 807], "\ud53c\uccd0\uc758": [793, 802, 813], "\ud53c\uccd0\uc774\ub2e4": 811, "\ud53c\ud558\ub294": 793, "\ud53c\ud560": 784, "\ud544\ub4dc": 791, "\ud544\ub4dc\ub294": 780, "\ud544\ub4dc\ub4e4\ub85c": 780, "\ud544\ub4dc\ub4e4\uc740": 780, "\ud544\ub4dc\ub4e4\uc744": 780, "\ud544\ub4dc\ub4e4\uc774\ub2e4": 780, "\ud544\ub4dc\ub97c": 780, "\ud544\ub4dc\uc5d0": [775, 780, 791], "\ud544\ub4dc\uc778": 780, "\ud544\uc694": 807, "\ud544\uc694\uac00": [780, 788, 793, 796, 797, 800], "\ud544\uc694\ub294": 778, "\ud544\uc694\ub85c": [778, 780], "\ud544\uc694\ub85c\ud558\uae30": 800, "\ud544\uc694\ud558\uace0": [796, 797], "\ud544\uc694\ud558\ub2e4": [778, 780, 797, 798, 802, 803, 810, 813], "\ud544\uc694\ud558\uc9c0": 788, "\ud544\uc694\ud55c": [772, 782, 796, 803, 805], "\ud544\uc694\ud55c\ub370": 800, "\ud544\uc694\ud55c\uc9c0": 803, "\ud558\uac70\ub098": 796, "\ud558\uac8c\ub41c\ub2e4": 810, "\ud558\uace0": [787, 795, 797, 798, 810], "\ud558\uae30": [775, 777, 788, 795, 797, 803, 811], "\ud558\ub098\uac00": [794, 813], "\ud558\ub098\ub294": [778, 787, 791, 793], "\ud558\ub098\ub85c": 778, "\ud558\ub098\ub85c\uc11c": 778, "\ud558\ub098\ub97c": [802, 813], "\ud558\ub098\uc529": 803, "\ud558\ub098\uc5d0\uc11c": 781, "\ud558\ub098\uc758": [775, 778, 780, 781, 788, 796, 800, 802, 807, 810, 811, 812], "\ud558\ub294": [772, 777, 778, 780, 791, 798, 799, 803, 804, 812], "\ud558\ub294\ub370": 797, "\ud558\ub294\uc9c0": 780, "\ud558\ub294\uc9c0\ub97c": [803, 806], "\ud558\uba70": 787, "\ud558\uba74": [797, 810], "\ud558\uba74\ub418\uae30": 801, "\ud558\uba74\ub41c\ub2e4": 797, "\ud558\uba74\uc11c": [777, 803], "\ud558\uc774\ub808\ubca8": 791, "\ud558\uc774\ud37c": 812, "\ud558\uc790": [772, 790], "\ud558\uc9c0\ub9cc": [775, 779, 780, 783, 787, 797, 800, 807], "\ud559\uc2b5": [778, 780, 789, 795, 797, 800, 807, 809], "\ud559\uc2b5\uacfc": [777, 796], "\ud559\uc2b5\ub420": 801, "\ud559\uc2b5\uc2dc": 780, "\ud559\uc2b5\uc2dc\ud0a4\ub294": [807, 812], "\ud559\uc2b5\uc5d0": [775, 777, 781, 800, 804], "\ud559\uc2b5\uc5d0\ub3c4": 803, "\ud559\uc2b5\uc5d0\uc11c": [795, 803], "\ud559\uc2b5\uc5d0\uc11c\ub294": [778, 779], "\ud559\uc2b5\uc740": [777, 804, 813], "\ud559\uc2b5\uc744": [777, 778, 779, 781, 796, 803, 804, 811], "\ud559\uc2b5\uc758": [807, 811], "\ud559\uc2b5\uc774": [775, 780, 781, 803, 812], "\ud559\uc2b5\uc774\ub2e4": 812, "\ud559\uc2b5\ud558\uae30": [777, 778, 789, 796, 811], "\ud559\uc2b5\ud558\ub294": [777, 796, 798, 803, 809], "\ud559\uc2b5\ud558\ub294\ub370": [796, 800], "\ud559\uc2b5\ud560": [798, 804, 806, 811], "\ud55c": [774, 777, 778, 779, 780, 781, 785, 788, 802, 808, 812, 813], "\ud55c\uac00\uc9c0": 791, "\ud55c\uac1c\uac00": 811, "\ud55c\uac1c\ub97c": 804, "\ud55c\uac1c\uc529": 811, "\ud55c\uac1c\uc5d0": 797, "\ud55c\uac1c\uc758": [774, 777, 780, 785, 788, 791, 811], "\ud55c\uae00": 789, "\ud55c\ub2e4": [773, 775, 777, 778, 779, 780, 781, 785, 787, 788, 791, 793, 794, 797, 798, 801, 802, 803, 804, 806, 807, 808, 810, 812], "\ud55c\ub2e4\uba74": [798, 810], "\ud55c\ubc88\uc5d0": 800, "\ud55c\ubc88\uc758": 811, "\ud560": [778, 780, 781, 784, 796, 797, 798, 803, 812], "\ud560\ub2f9\ub418\uc5b4": [780, 813], "\ud560\ub2f9\ub418\uc5c8\ub2e4\uba74": 780, "\ud560\ub2f9\ub41c": 780, "\ud560\ub2f9\ub41c\ub2e4": 780, "\ud560\ub2f9\uc73c\ub85c": 785, "\ud560\ub2f9\uc744": 779, "\ud560\ub2f9\ud558\ub294": 785, "\ud560\ub2f9\ud558\uc9c0": 780, "\ud560\ub2f9\ud55c": 780, "\ud560\ub2f9\ud560": 778, "\ud560\ub2f9\ud574\uc57c": 778, "\ud560\uc9c0\ub97c": 779, "\ud568\uaed8": [777, 778, 780, 784, 786, 793, 798, 813], "\ud568\uc218": [775, 787, 788, 790, 793, 804, 805, 813], "\ud568\uc218\uac00": [778, 791, 812], "\ud568\uc218\ub294": [778, 791, 797, 801, 806, 807, 808, 810, 811], "\ud568\uc218\ub4e4": [772, 799], "\ud568\uc218\ub4e4\uacfc": 791, "\ud568\uc218\ub4e4\ub85c": 807, "\ud568\uc218\ub4e4\uc5d0": 791, "\ud568\uc218\ub4e4\uc740": [784, 791, 799, 811], "\ud568\uc218\ub4e4\uc744": [778, 791], "\ud568\uc218\ub4e4\uc774": 797, "\ud568\uc218\ub85c": [773, 791, 810, 811, 812], "\ud568\uc218\ub85c\ub294": 791, "\ud568\uc218\ub97c": [772, 773, 776, 787, 791, 793, 797, 801, 802, 806, 807, 808, 810], "\ud568\uc218\uc548\uc5d0": 811, "\ud568\uc218\uc5d0": 775, "\ud568\uc218\uc5d0\uc11c": [775, 792, 805, 811], "\ud568\uc218\uc5d0\uc11c\uc758": 805, "\ud568\uc218\uc640": 793, "\ud568\uc218\uc758": [775, 791, 797, 806, 807], "\ud568\uc218\uc774\uace0": 797, "\ud568\uc218\uc774\ub2e4": [791, 797, 801, 806, 807, 808], "\ud569": 811, "\ud569\uc0b0\ud558\ub294": 811, "\ud569\uc740": 793, "\ud569\uccd0\uc11c": [790, 811], "\ud569\uccd0\uc57c\ud55c\ub2e4": [797, 803], "\ud569\uccd0\uc9c0\ub294\uc9c0\uc5d0": 800, "\ud569\ucce4\ub294\ub370": 791, "\ud569\uce58\uace0": 811, "\ud569\uce58\ub294": 794, "\ud569\uce58\ub294\ub370": 797, "\ud569\uce5c": 810, "\ud569\uce5c\ub2e4": 788, "\ud569\ud558\ub294": [791, 813], "\ud569\ud574\uc11c": 799, "\ud56d\uc0c1": [780, 784, 791, 797, 807], "\ud574\uacb0\ud558\uae30": 804, "\ud574\ub2f9": [781, 810, 813], "\ud574\ub2f9\ud558\ub294": [787, 803], "\ud574\ub2f9\ud55c\ub2e4": 788, "\ud574\uc11c": [778, 797], "\ud574\uc57c\ud55c\ub2e4": [802, 811], "\ud574\uc5d0": 783, "\ud574\uc8fc\uae30": 791, "\ud574\uc8fc\ub294": [773, 801], "\ud574\uc900\ub2e4": [777, 778, 803], "\ud575\uc2ec": 782, "\ud588\ub2e4\uba74": 783, "\ud588\uc73c\ub2c8": 802, "\ud589": [778, 780, 785], "\ud589\ub4e4": 802, "\ud589\ub82c\uacfc": 784, "\ud589\ub82c\uc744": 784, "\ud589\ub82c\uc758": 793, "\ud589\uc73c\ub85c": 802, "\ud589\uc740": 780, "\ud589\uc758": [778, 802], "\ud5a5\uc0c1\uc2dc\ucf1c\uc11c": 775, "\ud5a5\uc0c1\uc744": 799, "\ud5a5\uc0c1\ud558\uace0": 804, "\ud5a5\ud6c4": 780, "\ud5c8\uc6a9\ub41c\ub2e4": 785, "\ud5c8\uc6a9\ud55c\ub2e4": 804, "\ud5e4\ud14c\ub85c\uadf8\ub798\ud504\ub294": 794, "\ud604\uc0c1\uc744": 784, "\ud604\uc7ac": [777, 778], "\ud604\uc7ac\ub294": [778, 799], "\ud611\uccd0\uc9c4": 811, "\ud615\uc2dd\uc73c\ub85c": 780, "\ud615\ud0dc\ub85c": [777, 780, 783, 784, 791], "\ud615\ud0dc\uc758": [784, 788], "\ud615\ud0dc\uc774\uace0": 780, "\ud638\ucd9c\ub418\uace0": 808, "\ud638\ucd9c\ub418\uc5b4\uc57c": 778, "\ud638\ucd9c\ub41c\ub2e4": 778, "\ud638\ucd9c\ub420": 806, "\ud638\ucd9c\ub85c": [791, 806], "\ud638\ucd9c\uc2dc": 793, "\ud638\ucd9c\uc774": 791, "\ud638\ucd9c\ud558\uae30": 778, "\ud638\ucd9c\ud558\ub294": [791, 795], "\ud638\ucd9c\ud558\uc9c0": 791, "\ud638\ucd9c\ud55c": 778, "\ud638\ucd9c\ud55c\ub2e4": 811, "\ud638\ucd9c\ud560": [788, 791, 798, 801], "\ud638\ucd9c\ud574\uc57c": 793, "\ud638\ud658\ub418\ub294": [796, 809, 811], "\ud638\ud658\ub41c\ub2e4": 804, "\ud655\ub960": 801, "\ud655\ub960\ub4e4": 813, "\ud655\ub960\uc5d0": 797, "\ud655\uc778\ub418\uba74": 807, "\ud655\uc778\ud558\ub294": [773, 807], "\ud655\uc778\ud558\uc790": [775, 801], "\ud655\uc778\ud55c\ub2e4": 798, "\ud655\uc778\ud560": [775, 813], "\ud655\uc7a5\ud558\ub294": [807, 812], "\ud655\uc7a5\ud574\uc11c": 780, "\ud658\uacbd": 780, "\ud658\uc601\ud55c\ub2e4": 805, "\ud65c\uc131\ud654": [804, 807], "\ud65c\uc131\ud654\uc2dc\ud0ac": 791, "\ud65c\uc131\ud654\ud558\uba74": 804, "\ud65c\uc131\ud654\ud574\uc11c": 780, "\ud65c\uc6a9\ud558\uae30": [804, 807], "\ud65c\uc6a9\ud558\ub294": 793, "\ud65c\uc6a9\ud55c": 813, "\ud65c\uc6a9\ud55c\ub2e4": 813, "\ud65c\uc6a9\ud560": 813, "\ud65c\uc6a9\ud574\uc11c": 780, "\ud68c": 813, "\ud68c\uc18c": 784, "\ud6a8\uacfc\uc801\uc73c\ub85c": 811, "\ud6a8\uc728\uc801\uc73c\ub85c": [787, 790], "\ud6a8\uc728\uc801\uc774\uace0": 804, "\ud6a8\uc728\uc801\uc774\ub2e4": 776, "\ud6a8\uc728\uc801\uc778": [790, 802, 807], "\ud6a8\uc728\uc801\uc778\ub370": 793, "\ud6c4": [780, 793, 795, 796, 803, 811], "\ud6c4\uc5d0": [775, 797], "\ud6c4\uc5d0\ub294": 807, "\ud6c4\uc758": [775, 780], "\ud6c4\uc790\uac00": 793, "\ud6c4\uc790\ub294": 778, "\ud6e8\uc52c": [793, 796], "\ud754\ud558\uac8c": 792, "\ud754\ud55c": 791, "\ud754\ud788": [783, 795, 806, 810, 811], "\ud76c\uc18c\ud589\ub82c\uacfc": 784, "\ud788\ub4e0": 813, "\ud835\udc3e": 821}, "titles": ["dgl", "dgl.DGLGraph", "dgl.data", "dgl.dataloading", "dgl.distributed", "dgl.function", "dgl.geometry", "\ud83c\udd95 dgl.graphbolt", "dgl.multiprocessing", "dgl.ops", "dgl.optim", "dgl.sampling", "dgl.sparse", "API Reference", "Benchmark the performance of KNN algorithms", "dgl.nn (MXNet)", "dgl.nn (PyTorch)", "dgl.nn (TensorFlow)", "dgl.nn.functional", "dgl.transforms", "User-defined Functions", "Contribute to DGL", "DGL Foreign Function Interface (FFI)", "Environment Variables", "Frequently Asked Questions (FAQ)", "&lt;no title&gt;", "dgl.DGLGraph.__getitem__", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.add_nodes", "dgl.DGLGraph.add_self_loop", "dgl.DGLGraph.adj", "dgl.DGLGraph.adj_external", "dgl.DGLGraph.adj_tensors", "dgl.DGLGraph.adjacency_matrix", "dgl.DGLGraph.apply_edges", "dgl.DGLGraph.apply_nodes", "dgl.DGLGraph.batch_num_edges", "dgl.DGLGraph.batch_num_nodes", "dgl.DGLGraph.batch_size", "dgl.DGLGraph.canonical_etypes", "dgl.DGLGraph.cpu", "dgl.DGLGraph.create_formats_", "dgl.DGLGraph.device", "dgl.DGLGraph.dstdata", "dgl.DGLGraph.dstnodes", "dgl.DGLGraph.dsttypes", "dgl.DGLGraph.edata", "dgl.DGLGraph.edge_attr_schemes", "dgl.DGLGraph.edge_ids", "dgl.DGLGraph.edge_subgraph", "dgl.DGLGraph.edge_type_subgraph", "dgl.DGLGraph.edges", "dgl.DGLGraph.etypes", "dgl.DGLGraph.filter_edges", "dgl.DGLGraph.filter_nodes", "dgl.DGLGraph.find_edges", "dgl.DGLGraph.formats", "dgl.DGLGraph.has_edges_between", "dgl.DGLGraph.has_nodes", "dgl.DGLGraph.idtype", "dgl.DGLGraph.in_degrees", "dgl.DGLGraph.in_edges", "dgl.DGLGraph.inc", "dgl.DGLGraph.incidence_matrix", "dgl.DGLGraph.int", "dgl.DGLGraph.is_homogeneous", "dgl.DGLGraph.is_multigraph", "dgl.DGLGraph.is_pinned", "dgl.DGLGraph.is_unibipartite", "dgl.DGLGraph.line_graph", "dgl.DGLGraph.local_scope", "dgl.DGLGraph.long", "dgl.DGLGraph.metagraph", "dgl.DGLGraph.multi_update_all", "dgl.DGLGraph.ndata", "dgl.DGLGraph.node_attr_schemes", "dgl.DGLGraph.node_type_subgraph", "dgl.DGLGraph.nodes", "dgl.DGLGraph.ntypes", "dgl.DGLGraph.num_dst_nodes", "dgl.DGLGraph.num_edges", "dgl.DGLGraph.num_nodes", "dgl.DGLGraph.num_src_nodes", "dgl.DGLGraph.number_of_dst_nodes", "dgl.DGLGraph.number_of_edges", "dgl.DGLGraph.number_of_nodes", "dgl.DGLGraph.number_of_src_nodes", "dgl.DGLGraph.out_degrees", "dgl.DGLGraph.out_edges", "dgl.DGLGraph.pin_memory_", "dgl.DGLGraph.predecessors", "dgl.DGLGraph.prop_edges", "dgl.DGLGraph.prop_nodes", "dgl.DGLGraph.pull", "dgl.DGLGraph.push", "dgl.DGLGraph.remove_edges", "dgl.DGLGraph.remove_nodes", "dgl.DGLGraph.remove_self_loop", "dgl.DGLGraph.reorder_graph", "dgl.DGLGraph.reverse", "dgl.DGLGraph.send_and_recv", "dgl.DGLGraph.set_batch_num_edges", "dgl.DGLGraph.set_batch_num_nodes", "dgl.DGLGraph.srcdata", "dgl.DGLGraph.srcnodes", "dgl.DGLGraph.srctypes", "dgl.DGLGraph.subgraph", "dgl.DGLGraph.successors", "dgl.DGLGraph.to", "dgl.DGLGraph.to_canonical_etype", "dgl.DGLGraph.to_cugraph", "dgl.DGLGraph.to_simple", "dgl.DGLGraph.unpin_memory_", "dgl.DGLGraph.update_all", "dgl.add_edges", "dgl.add_nodes", "dgl.add_reverse_edges", "dgl.add_self_loop", "dgl.adj_product_graph", "dgl.adj_sum_graph", "dgl.adjusted_homophily", "dgl.apply_each", "dgl.batch", "dgl.bfs_edges_generator", "dgl.bfs_nodes_generator", "dgl.bipartite_from_networkx", "dgl.bipartite_from_scipy", "dgl.block_to_graph", "dgl.broadcast_edges", "dgl.broadcast_nodes", "dgl.compact_graphs", "dgl.create_block", "AIFBDataset", "AMDataset", "ActorDataset", "AmazonCoBuyComputerDataset", "AmazonCoBuyPhotoDataset", "AmazonRatingsDataset", "AsGraphPredDataset", "AsLinkPredDataset", "AsNodePredDataset", "BA2MotifDataset", "BACommunityDataset", "BAShapeDataset", "BGSDataset", "BitcoinOTCDataset", "CIFAR10SuperPixelDataset", "CLUSTERDataset", "CSVDataset", "ChameleonDataset", "CiteseerGraphDataset", "CoauthorCSDataset", "CoauthorPhysicsDataset", "CoraFullDataset", "CoraGraphDataset", "CornellDataset", "DGLDataset", "FB15k237Dataset", "FB15kDataset", "FakeNewsDataset", "FlickrDataset", "FraudAmazonDataset", "FraudDataset", "FraudYelpDataset", "GDELTDataset", "GINDataset", "ICEWS18Dataset", "KarateClubDataset", "LegacyTUDataset", "MNISTSuperPixelDataset", "MUTAGDataset", "MinesweeperDataset", "MiniGCDataset", "MovieLensDataset", "PATTERNDataset", "PPIDataset", "PubmedGraphDataset", "QM7bDataset", "QM9Dataset", "QM9EdgeDataset", "QuestionsDataset", "RedditDataset", "RomanEmpireDataset", "SBMMixtureDataset", "SSTDataset", "SquirrelDataset", "TUDataset", "TexasDataset", "TolokersDataset", "TreeCycleDataset", "TreeGridDataset", "WN18Dataset", "WikiCSDataset", "WisconsinDataset", "YelpDataset", "ZINCDataset", "Subset", "add_node_property_split", "add_nodepred_split", "check_sha1", "download", "extract_archive", "get_download_dir", "load_info", "load_labels", "mask_nodes_by_property", "save_info", "split_dataset", "dgl.dataloading.BlockSampler", "ClusterGCNSampler", "DataLoader", "DistEdgeDataLoader", "DistNodeDataLoader", "GraphDataLoader", "LaborSampler", "MultiLayerFullNeighborSampler", "NeighborSampler", "SAINTSampler", "Sampler", "ShaDowKHopSampler", "dgl.dataloading.as_edge_prediction_sampler", "LazyFeature", "set_dst_lazy_features", "set_edge_lazy_features", "set_node_lazy_features", "set_src_lazy_features", "GlobalUniform", "PerSourceUniform", "Uniform", "dgl.dfs_edges_generator", "dgl.dfs_labeled_edges_generator", "dgl.distributed.dgl_partition_to_graphbolt", "dgl.distributed.edge_split", "dgl.distributed.find_edges", "dgl.distributed.in_subgraph", "dgl.distributed.initialize", "dgl.distributed.load_partition", "dgl.distributed.load_partition_book", "dgl.distributed.load_partition_feats", "dgl.distributed.node_split", "dgl.distributed.partition_graph", "dgl.distributed.sample_etype_neighbors", "dgl.distributed.sample_neighbors", "dgl.double_radius_node_labeling", "dgl.edge_homophily", "dgl.edge_label_informativeness", "dgl.edge_subgraph", "dgl.edge_type_subgraph", "dgl.from_cugraph", "dgl.from_networkx", "dgl.from_scipy", "dgl.function.copy_e", "dgl.function.copy_u", "dgl.function.e_add_u", "dgl.function.e_add_v", "dgl.function.e_div_u", "dgl.function.e_div_v", "dgl.function.e_dot_u", "dgl.function.e_dot_v", "dgl.function.e_mul_u", "dgl.function.e_mul_v", "dgl.function.e_sub_u", "dgl.function.e_sub_v", "dgl.function.max", "dgl.function.mean", "dgl.function.min", "dgl.function.sum", "dgl.function.u_add_e", "dgl.function.u_add_v", "dgl.function.u_div_e", "dgl.function.u_div_v", "dgl.function.u_dot_e", "dgl.function.u_dot_v", "dgl.function.u_mul_e", "dgl.function.u_mul_v", "dgl.function.u_sub_e", "dgl.function.u_sub_v", "dgl.function.v_add_e", "dgl.function.v_add_u", "dgl.function.v_div_e", "dgl.function.v_div_u", "dgl.function.v_dot_e", "dgl.function.v_dot_u", "dgl.function.v_mul_e", "dgl.function.v_mul_u", "dgl.function.v_sub_e", "dgl.function.v_sub_u", "dgl.graph", "BasicFeatureStore", "BuiltinDataset", "CopyTo", "DataLoader", "Dataset", "DistributedItemSampler", "Feature", "FeatureFetcher", "FeatureStore", "FusedCSCSamplingGraph", "GPUCachedFeature", "HeteroItemSet", "InSubgraphSampler", "ItemSampler", "ItemSet", "LayerNeighborSampler", "LegacyDataset", "MiniBatch", "MiniBatchTransformer", "NegativeSampler", "NeighborSampler", "OnDiskDataset", "SampledSubgraph", "SampledSubgraphImpl", "SamplingGraph", "SubgraphSampler", "Task", "TorchBasedFeature", "TorchBasedFeatureStore", "UniformNegativeSampler", "dgl.graphbolt.add_reverse_edges", "dgl.graphbolt.compact_csc_format", "dgl.graphbolt.etype_str_to_tuple", "dgl.graphbolt.etype_tuple_to_str", "dgl.graphbolt.exclude_seed_edges", "dgl.graphbolt.expand_indptr", "dgl.graphbolt.from_dglgraph", "dgl.graphbolt.fused_csc_sampling_graph", "dgl.graphbolt.index_select", "dgl.graphbolt.isin", "dgl.graphbolt.load_from_shared_memory", "dgl.graphbolt.seed", "dgl.graphbolt.unique_and_compact", "dgl.graphbolt.unique_and_compact_csc_formats", "dgl.heterograph", "dgl.in_subgraph", "dgl.is_libxsmm_enabled", "dgl.khop_adj", "dgl.khop_graph", "dgl.khop_in_subgraph", "dgl.khop_out_subgraph", "dgl.knn_graph", "dgl.lap_pe", "dgl.laplacian_lambda_max", "dgl.line_graph", "dgl.linkx_homophily", "dgl.load_graphs", "dgl.max_edges", "dgl.max_nodes", "dgl.mean_edges", "dgl.mean_nodes", "dgl.merge", "dgl.metapath_reachable_graph", "dgl.metis_partition", "dgl.metis_partition_assignment", "dgl.multiprocessing.pytorch.call_once_and_share", "dgl.multiprocessing.pytorch.shared_tensor", "dgl.nn.functional.edge_softmax", "HeteroGraphConv", "AGNNConv", "APPNPConv", "ChebConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "EdgeConv", "GATConv", "GINConv", "GMMConv", "GatedGraphConv", "GraphConv", "NNConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SortPooling", "SumPooling", "Sequential", "DeepWalk", "HeteroEmbedding", "HeteroGraphConv", "HeteroLinear", "MetaPath2Vec", "TypedLinear", "AGNNConv", "APPNPConv", "AtomicConv", "CFConv", "ChebConv", "CuGraphGATConv", "CuGraphRelGraphConv", "CuGraphSAGEConv", "DGNConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "DotGatConv", "EGATConv", "EGNNConv", "EdgeConv", "EdgeGATConv", "EdgeWeightNorm", "GATConv", "GATv2Conv", "GCN2Conv", "GINConv", "GINEConv", "GMMConv", "GatedGCNConv", "GatedGraphConv", "GraphConv", "GroupRevRes", "HGTConv", "NNConv", "PNAConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "TWIRLSConv", "TWIRLSUnfoldingAndAttention", "GNNExplainer", "HeteroGNNExplainer", "HeteroPGExplainer", "HeteroSubgraphX", "PGExplainer", "SubgraphX", "KNNGraph", "RadiusGraph", "SegmentedKNNGraph", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SetTransformerDecoder", "SetTransformerEncoder", "SortPooling", "SumPooling", "WeightAndSum", "BiasedMHA", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "LapPosEncoder", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "EdgePredictor", "TransE", "TransR", "NodeEmbedding", "JumpingKnowledge", "LabelPropagation", "Sequential", "WeightBasis", "APPNPConv", "ChebConv", "GATConv", "GINConv", "GraphConv", "RelGraphConv", "SAGEConv", "SGConv", "AvgPooling", "GlobalAttentionPooling", "HeteroGraphConv", "MaxPooling", "SortPooling", "SumPooling", "dgl.node_homophily", "dgl.node_label_informativeness", "dgl.node_subgraph", "dgl.node_type_subgraph", "dgl.norm_by_dst", "dgl.ops.copy_e_max", "dgl.ops.copy_e_mean", "dgl.ops.copy_e_min", "dgl.ops.copy_e_sum", "dgl.ops.copy_u", "dgl.ops.copy_u_max", "dgl.ops.copy_u_mean", "dgl.ops.copy_u_min", "dgl.ops.copy_u_sum", "dgl.ops.copy_v", "dgl.ops.e_add_u", "dgl.ops.e_add_v", "dgl.ops.e_div_u", "dgl.ops.e_div_v", "dgl.ops.e_dot_u", "dgl.ops.e_dot_v", "dgl.ops.e_mul_u", "dgl.ops.e_mul_v", "dgl.ops.e_sub_u", "dgl.ops.e_sub_v", "dgl.ops.gather_mm", "dgl.ops.gsddmm", "dgl.ops.gspmm", "dgl.ops.segment_mm", "dgl.ops.segment_reduce", "dgl.ops.u_add_e", "dgl.ops.u_add_e_max", "dgl.ops.u_add_e_mean", "dgl.ops.u_add_e_min", "dgl.ops.u_add_e_sum", "dgl.ops.u_add_v", "dgl.ops.u_div_e", "dgl.ops.u_div_e_max", "dgl.ops.u_div_e_mean", "dgl.ops.u_div_e_min", "dgl.ops.u_div_e_sum", "dgl.ops.u_div_v", "dgl.ops.u_dot_e", "dgl.ops.u_dot_v", "dgl.ops.u_mul_e", "dgl.ops.u_mul_e_max", "dgl.ops.u_mul_e_mean", "dgl.ops.u_mul_e_min", "dgl.ops.u_mul_e_sum", "dgl.ops.u_mul_v", "dgl.ops.u_sub_e", "dgl.ops.u_sub_e_max", "dgl.ops.u_sub_e_mean", "dgl.ops.u_sub_e_min", "dgl.ops.u_sub_e_sum", "dgl.ops.u_sub_v", "dgl.ops.v_add_e", "dgl.ops.v_add_u", "dgl.ops.v_div_e", "dgl.ops.v_div_u", "dgl.ops.v_dot_e", "dgl.ops.v_dot_u", "dgl.ops.v_mul_e", "dgl.ops.v_mul_u", "dgl.ops.v_sub_e", "dgl.ops.v_sub_u", "dgl.out_subgraph", "dgl.partition_graph_with_halo", "dgl.prop_edges", "dgl.prop_edges_dfs", "dgl.prop_nodes", "dgl.prop_nodes_bfs", "dgl.prop_nodes_topo", "dgl.radius_graph", "dgl.rand_bipartite", "dgl.rand_graph", "dgl.random_walk_pe", "dgl.readout_edges", "dgl.readout_nodes", "dgl.remove_edges", "dgl.remove_nodes", "dgl.remove_self_loop", "dgl.reorder_graph", "dgl.reverse", "dgl.sampling.PinSAGESampler", "dgl.sampling.global_uniform_negative_sampling", "dgl.sampling.node2vec_random_walk", "dgl.sampling.pack_traces", "dgl.sampling.random_walk", "dgl.sampling.sample_labors", "dgl.sampling.sample_neighbors", "dgl.sampling.sample_neighbors_biased", "dgl.sampling.select_topk", "dgl.save_graphs", "dgl.seed", "dgl.segmented_knn_graph", "dgl.shortest_dist", "dgl.slice_batch", "dgl.softmax_edges", "dgl.softmax_nodes", "dgl.sort_csc_by_tag", "dgl.sort_csr_by_tag", "dgl.sparse.SparseMatrix.T", "dgl.sparse.SparseMatrix.coalesce", "dgl.sparse.SparseMatrix.col", "dgl.sparse.SparseMatrix.coo", "dgl.sparse.SparseMatrix.cpu", "dgl.sparse.SparseMatrix.csc", "dgl.sparse.SparseMatrix.csr", "dgl.sparse.SparseMatrix.cuda", "dgl.sparse.SparseMatrix.device", "dgl.sparse.SparseMatrix.double", "dgl.sparse.SparseMatrix.dtype", "dgl.sparse.SparseMatrix.float", "dgl.sparse.SparseMatrix.has_duplicate", "dgl.sparse.SparseMatrix.indices", "dgl.sparse.SparseMatrix.int", "dgl.sparse.SparseMatrix.long", "dgl.sparse.SparseMatrix.neg", "dgl.sparse.SparseMatrix.nnz", "dgl.sparse.SparseMatrix.reduce", "dgl.sparse.SparseMatrix.row", "dgl.sparse.SparseMatrix.shape", "dgl.sparse.SparseMatrix.smax", "dgl.sparse.SparseMatrix.smean", "dgl.sparse.SparseMatrix.smin", "dgl.sparse.SparseMatrix.softmax", "dgl.sparse.SparseMatrix.sum", "dgl.sparse.SparseMatrix.t", "dgl.sparse.SparseMatrix.to", "dgl.sparse.SparseMatrix.to_dense", "dgl.sparse.SparseMatrix.transpose", "dgl.sparse.SparseMatrix.val", "dgl.sparse.add", "dgl.sparse.bsddmm", "dgl.sparse.bspmm", "dgl.sparse.diag", "dgl.sparse.div", "dgl.sparse.from_coo", "dgl.sparse.from_csc", "dgl.sparse.from_csr", "dgl.sparse.identity", "dgl.sparse.matmul", "dgl.sparse.mul", "dgl.sparse.power", "dgl.sparse.sddmm", "dgl.sparse.softmax", "dgl.sparse.sp_add_v", "dgl.sparse.sp_broadcast_v", "dgl.sparse.sp_div_v", "dgl.sparse.sp_mul_v", "dgl.sparse.sp_sub_v", "dgl.sparse.spmatrix", "dgl.sparse.spmm", "dgl.sparse.spspmm", "dgl.sparse.sub", "dgl.sparse.val_like", "dgl.sum_edges", "dgl.sum_nodes", "dgl.svd_pe", "dgl.to_bidirected", "dgl.to_block", "dgl.to_cugraph", "dgl.to_double", "dgl.to_float", "dgl.to_half", "dgl.to_heterogeneous", "dgl.to_homogeneous", "dgl.to_networkx", "dgl.to_simple", "dgl.to_simple_graph", "dgl.topk_edges", "dgl.topk_nodes", "dgl.topological_nodes_generator", "AddEdge", "AddMetaPaths", "AddReverse", "AddSelfLoop", "BaseTransform", "Compose", "DropEdge", "DropNode", "FeatMask", "GCNNorm", "GDC", "HeatKernel", "KHopGraph", "LapPE", "LineGraph", "NodeShuffle", "PPR", "RandomWalkPE", "RemoveSelfLoop", "RowFeatNormalizer", "SIGNDiffusion", "SVDPE", "ToLevi", "ToSimple", "dgl.udf.EdgeBatch.batch_size", "dgl.udf.EdgeBatch.data", "dgl.udf.EdgeBatch.dst", "dgl.udf.EdgeBatch.edges", "dgl.udf.EdgeBatch.src", "dgl.udf.NodeBatch.batch_size", "dgl.udf.NodeBatch.data", "dgl.udf.NodeBatch.mailbox", "dgl.udf.NodeBatch.nodes", "dgl.unbatch", "dgl.use_libxsmm", "Prepare Data", "\ud83c\udd95 Tutorial: Graph Transformer", "Build Model", "Chapter 4: Graph Data Pipeline", "4.1 DGLDataset class", "4.2 Download raw data (optional)", "4.6 Loading data from CSV files", "4.5 Loading OGB datasets using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> package", "4.3 Process data", "4.4 Save and load data", "Chapter 7: Distributed Training", "7.3 Programming APIs", "7.5 Heterogeneous Graph Under The Hood", "7.4 Advanced Graph Partitioning", "7.1 Data Preprocessing", "7.2 Tools for launching distributed training/inference", "Chapter 1: Graph", "1.1 Some Basic Definitions about Graphs (Graphs 101)", "1.4 Creating Graphs from External Sources", "1.3 Node and Edge Features", "1.6 Using DGLGraph on a GPU", "1.2 Graphs, Nodes, and Edges", "1.5 Heterogeneous Graphs", "User Guide", "Chapter 2: Message Passing", "2.1 Built-in Functions and Message Passing APIs", "2.2 Writing Efficient Message Passing Code", "2.5 Message Passing on Heterogeneous Graph", "2.3 Apply Message Passing On Part Of The Graph", "Chapter 6: Stochastic Training on Large Graphs", "6.4 Implementing Custom Graph Samplers", "6.2 Training GNN for Edge Classification with Neighborhood Sampling", "6.8 Using GPU for Neighborhood Sampling", "6.7 Exact Offline Inference on Large Graphs", "6.3 Training GNN for Link Prediction with Neighborhood Sampling", "6.6 Implementing Custom GNN Module for Mini-batch Training", "6.1 Training GNN for Node Classification with Neighborhood Sampling", "6.9 Data Loading Parallelism", "6.5 Training GNN with DGL sparse", "Chapter 8: Mixed Precision Training", "Chapter 3: Building GNN Modules", "3.1 DGL NN Module Construction Function", "3.2 DGL NN Module Forward Function", "3.3 Heterogeneous GraphConv Module", "Chapter 5: Training Graph Neural Networks", "5.2 Edge Classification/Regression", "5.5 Use of Edge Weights", "5.4 Graph Classification", "5.3 Link Prediction", "5.1 Node Classification/Regression", "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053", "4.1 DGLDataset\u7c7b", "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09", "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6", "4.3 \u5904\u7406\u6570\u636e", "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e", "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3", "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API", "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406", "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177", "\u7b2c1\u7ae0\uff1a\u56fe", "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5", "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe", "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81", "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph", "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9", "1.5 \u5f02\u6784\u56fe", "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011", "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f", "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API", "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801", "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3", "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668", "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad", "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757", "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757", "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570", "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570", "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757", "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc", "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52", "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd", "5.4 \u6574\u56fe\u5206\u7c7b", "5.3 \u94fe\u63a5\u9884\u6d4b", "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52", "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778", "4.1 DGLDataset \ud074\ub798\uc2a4", "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)", "4.5 <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30", "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1", "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529", "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5", "7.2 \ubd84\uc0b0 APIs", "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30", "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac", "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4", "1\uc7a5: \uadf8\ub798\ud504", "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)", "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30", "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98", "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30", "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0", "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)", "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]", "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)", "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4", "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30", "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95", "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec", "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30", "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5", "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30", "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30", "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860", "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30", "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "8\uc7a5: Mixed Precision \ud559\uc2b5", "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30", "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218", "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218", "3.3 Heterogeneous GraphConv \ubaa8\ub4c8", "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30", "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)", "5.4 \uadf8\ub798\ud504 \ubd84\ub958", "5.3 \ub9c1\ud06c \uc608\uce21", "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)", "Welcome to Deep Graph Library Tutorials and Documentation", "Install and Setup", "Building a Graph Convolutional Network Using Sparse Matrices", "Graph Diffusion in Graph Neural Networks", "Graph Transformer in a Nutshell", "Hypergraph Neural Networks", "Tutorials: dgl.sparse", "Quickstart", "Performance Benchmarks", "Resources", "Computation times", "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt", "Link Prediction", "Multi-GPU Node Classification", "Neighbor Sampling Overview", "Node Classification", "Composing OnDiskDataset from raw data", "YAML specification", "OnDiskDataset for Heterogeneous Graph", "OnDiskDataset for Homogeneous Graph", "Node Classification with DGL", "How Does DGL Represent A Graph?", "Write your own GNN module", "Link Prediction using Graph Neural Networks", "Training a GNN for Graph Classification", "Make Your Own Dataset", "A Blitz Introduction to DGL", "Computation times", "Improve Scalability on Multi-Core CPUs", "CPU Best Practices", "Training on CPUs", "Computation times", "Distributed Node Classification", "Distributed Link Prediction", "Distributed training", "Computation times", "Graph Convolutional Network", "Relational Graph Convolutional Network", "Line Graph Neural Network", "Understand Graph Attention Network", "Graph neural networks and its variants", "Computation times", "Tree-LSTM in DGL", "Batching many small graphs", "Computation times", "Generative Models of Graphs", "Generative models", "Computation times", "Capsule Network", "Transformer as a Graph Neural Network", "Revisit classic models from a graph perspective", "Computation times", "Paper Study with DGL", "Computation times", "Single Machine Multi-GPU Minibatch Graph Classification", "Single Machine Multi-GPU Minibatch Node Classification", "Training on Multiple GPUs", "Computation times"], "titleterms": {"": [834, 835, 836, 838, 853], "1": [685, 695, 697, 698, 699, 700, 701, 702, 703, 706, 717, 722, 730, 732, 739, 742, 743, 744, 745, 746, 747, 750, 760, 762, 770, 772, 779, 780, 783, 784, 785, 786, 787, 788, 791, 803, 806, 813, 821, 842, 853, 856, 859], "101": [698, 783], "1\uc7a5": 782, "2": [686, 695, 696, 702, 705, 706, 707, 708, 709, 712, 723, 726, 733, 738, 746, 750, 751, 752, 753, 756, 763, 766, 773, 778, 779, 787, 791, 792, 793, 794, 795, 798, 807, 810, 821, 842, 853, 856, 859, 862], "2\uc7a5": 790, "3": [689, 692, 700, 709, 715, 721, 722, 723, 724, 729, 735, 740, 744, 753, 758, 762, 763, 764, 769, 775, 779, 785, 795, 801, 806, 807, 808, 812, 822, 842, 853, 856, 859, 862], "3\uc7a5": 805, "4": [684, 685, 686, 687, 688, 689, 690, 694, 699, 711, 728, 732, 733, 734, 735, 736, 743, 755, 768, 772, 773, 774, 775, 776, 781, 784, 792, 797, 811, 822, 842, 853], "4\uc7a5": 771, "5": [688, 693, 703, 708, 719, 725, 726, 727, 728, 729, 730, 734, 747, 752, 759, 766, 767, 768, 769, 770, 774, 788, 794, 802, 810, 811, 812, 813, 822, 842], "5\uc7a5": 809, "6": [687, 701, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 745, 755, 756, 757, 758, 759, 760, 786, 797, 798, 799, 800, 801, 802, 803, 822, 842], "6\uc7a5": 796, "7": [691, 692, 693, 694, 695, 696, 714, 738, 739, 740, 778, 779, 780, 781, 799, 842], "7\uc7a5": 777, "8": [713, 720, 842], "8\uc7a5": 804, "9": 718, "A": [835, 838, 840, 851], "For": [712, 715, 717], "Of": 709, "On": 709, "One": 852, "The": [693, 709, 851, 856, 859], "__getitem__": 26, "about": 698, "abstract": 852, "access": [692, 693, 846], "across": 827, "action": 859, "activ": [12, 821], "actordataset": 134, "adapt": [2, 712, 717, 863], "add": [605, 859], "add_edg": [27, 114], "add_nod": [28, 115], "add_node_property_split": 197, "add_nodepred_split": 198, "add_reverse_edg": [116, 318], "add_self_loop": [29, 117], "addedg": 646, "addmetapath": 647, "addrevers": 648, "addselfloop": 649, "adj": 30, "adj_extern": 31, "adj_product_graph": 118, "adj_sum_graph": 119, "adj_tensor": 32, "adjac": [0, 1], "adjacency_matrix": 33, "adjusted_homophili": 120, "advanc": 694, "after": [693, 711, 723], "aggreg": 863, "agnnconv": [357, 387], "aifbdataset": 132, "algorithm": [14, 694, 852], "all": 863, "alloc": 843, "altern": 843, "amazoncobuycomputerdataset": 135, "amazoncobuyphotodataset": 136, "amazonratingsdataset": 137, "amdataset": 133, "an": [726, 852], "api": [9, 13, 692, 695, 706, 778, 856], "api\ub4e4": 791, "appli": 709, "apply_each": 121, "apply_edg": [34, 837], "apply_nod": 35, "appnpconv": [358, 388, 458], "approach": 710, "argo": 842, "as_edge_prediction_sampl": 220, "asgraphpreddataset": 138, "ask": 24, "aslinkpreddataset": 139, "asnodepreddataset": 140, "assign": 835, "atomicconv": 389, "attent": [818, 853, 863], "attribut": [12, 821], "avgpool": [374, 433, 466], "ba2motifdataset": 141, "backend": [23, 815], "bacommunitydataset": 142, "balanc": 695, "base": [2, 713], "basetransform": 650, "bashapedataset": 143, "basic": 698, "basicfeaturestor": 288, "batch": [0, 1, 122, 716, 728, 811, 838, 846, 847, 852, 856, 857, 866, 869], "batch_num_edg": 36, "batch_num_nod": 37, "batch_siz": [38, 670, 675], "benchmark": [14, 822], "best": [836, 843], "bfloat16": 720, "bfs_edges_gener": 123, "bfs_nodes_gener": 124, "bgsdataset": 144, "biasedmha": 442, "binari": [699, 703, 852], "bipartit": [716, 797, 802], "bipartite_from_networkx": 125, "bipartite_from_scipi": 126, "bitcoinotcdataset": 145, "blitz": 840, "block_to_graph": 127, "blocksampl": 208, "book": 4, "brief": 851, "broadcast": [12, 821], "broadcast_edg": 128, "broadcast_nod": 129, "bsddmm": 606, "bspmm": 607, "bucket": 20, "build": [21, 683, 721, 816, 863], "built": [5, 706, 863], "builtindataset": 289, "call_once_and_shar": 353, "canonical_etyp": 39, "capsul": 862, "cell": 856, "cfconv": 390, "chain": 852, "chameleondataset": 149, "chang": 21, "chapter": [684, 691, 697, 705, 710, 720, 721, 725], "chebconv": [359, 391, 459], "check": 723, "check_sha1": 199, "choos": 859, "chunk": 695, "cifar10superpixeldataset": 146, "citeseergraphdataset": 150, "class": [2, 3, 12, 685, 839, 863], "classic": [864, 866], "classif": [689, 712, 717, 726, 728, 730, 827, 829, 832, 833, 834, 838, 839, 846, 868, 869], "client": 846, "clusterdataset": 147, "clustergcnsampl": 209, "coalesc": 575, "coauthorcsdataset": 151, "coauthorphysicsdataset": 152, "code": [21, 707], "col": 576, "comma": [699, 703, 784, 788], "commun": [846, 847, 852], "compact_csc_format": 319, "compact_graph": 130, "complet": [16, 852], "compos": [651, 830], "comput": [1, 728, 824, 829, 841, 845, 849, 855, 858, 861, 863, 865, 867, 871], "conclus": [14, 826, 829], "conda": 815, "configur": 23, "construct": [722, 835], "contain": 22, "contribut": [21, 814], "control": 1, "conv": [15, 16, 17], "convers": 693, "convert": 703, "convolut": [816, 834, 850, 851], "coo": 577, "copy_": 251, "copy_e_max": 477, "copy_e_mean": 478, "copy_e_min": 479, "copy_e_sum": 480, "copy_u": [252, 481], "copy_u_max": 482, "copy_u_mean": 483, "copy_u_min": 484, "copy_u_sum": 485, "copy_v": 486, "copyto": [7, 290], "cora": [834, 852, 853], "corafulldataset": 153, "coragraphdataset": 154, "core": [21, 842], "cornelldataset": 155, "cpu": [40, 578, 720, 842, 843, 844], "creat": [0, 699, 703, 821, 839, 851], "create_block": 131, "create_formats_": 41, "creation": [12, 692], "csc": 579, "csr": 580, "csv": [687, 699, 703, 743, 747, 784, 788, 839], "csvdataset": [148, 839], "cuda": [581, 713], "cugraph": 16, "cugraphgatconv": 392, "cugraphrelgraphconv": 393, "cugraphsageconv": 394, "custom": [687, 711, 716, 836], "data": [2, 9, 21, 23, 671, 676, 681, 684, 686, 687, 689, 690, 692, 693, 695, 712, 713, 715, 717, 718, 728, 819, 826, 827, 829, 830, 832, 833, 838, 839, 868, 869], "dataload": [3, 4, 7, 208, 210, 220, 291], "dataset": [2, 7, 292, 687, 688, 689, 826, 829, 834, 839, 851, 852, 856, 863], "dataset_nam": 831, "deep": 814, "deepwalk": 381, "defin": [20, 22, 712, 715, 717, 826, 827, 829, 834, 836, 837, 838, 846, 847, 851, 856, 862, 869], "definit": [698, 728], "deg": 852, "degre": [20, 683], "degreeencod": 443, "dens": [15, 16], "densechebconv": [360, 396], "densegraphconv": [361, 397], "densesageconv": [362, 398], "depend": [827, 829], "descript": [6, 387, 388, 389, 390, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 419, 420, 421, 422, 423, 450, 451, 452, 454], "destin": 859, "detect": 852, "develop": 21, "devic": [1, 42, 582], "dfs_edges_gener": 229, "dfs_labeled_edges_gener": 230, "dgl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 208, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 692, 699, 703, 713, 719, 722, 723, 743, 762, 778, 784, 788, 799, 806, 807, 820, 821, 826, 827, 829, 832, 833, 834, 835, 838, 839, 840, 850, 851, 852, 853, 856, 863, 866], "dgl_partition_to_graphbolt": 231, "dgldataset": [156, 685, 772, 839], "dgldataset\u7c7b": 732, "dglgraph": [1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 701, 786], "dglgraph\ub85c": 780, "dgl\u4e8c\u8fdb\u5236\u683c\u5f0f": 747, "dgl\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": 738, "dgmg": 859, "dgnconv": 395, "diag": 608, "diagon": 821, "differ": [726, 815], "diffus": 817, "disk": [699, 703], "dispatch": 695, "distedgedataload": 211, "distembed": [692, 778], "distgraph": [692, 778], "distnodedataload": 212, "distribut": [4, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 691, 692, 693, 695, 696, 778, 846, 847, 848, 868], "distributeditemsampl": 293, "div": 609, "doc": 21, "document": [21, 814], "doe": 835, "dotgatconv": 399, "doubl": 583, "double_radius_node_label": 243, "download": [200, 686], "dropedg": 652, "dropnod": 653, "dst": 672, "dstdata": 43, "dstnode": 44, "dsttype": 45, "dtype": 584, "dure": 693, "dynam": 859, "e_add_u": [253, 487], "e_add_v": [254, 488], "e_div_u": [255, 489], "e_div_v": [256, 490], "e_dot_u": [257, 491], "e_dot_v": [258, 492], "e_mul_u": [259, 493], "e_mul_v": [260, 494], "e_sub_u": [261, 495], "e_sub_v": [262, 496], "each": 868, "edata": 46, "edg": [1, 2, 20, 51, 673, 692, 699, 700, 702, 703, 711, 712, 726, 727, 743, 784, 835, 859, 863], "edge_attr_schem": 47, "edge_homophili": 244, "edge_id": 48, "edge_label_inform": 245, "edge_softmax": 355, "edge_split": 232, "edge_subgraph": [49, 246], "edge_type_subgraph": [50, 247], "edgebatch": [670, 671, 672, 673, 674], "edgeconv": [363, 402], "edgedata": 687, "edgegatconv": 403, "edgepredictor": 450, "edgeweightnorm": 404, "editori": 21, "effici": 707, "egatconv": 400, "egnnconv": 401, "egtlay": 444, "element": 821, "elementwis": [12, 821], "embed": [4, 10, 16, 859], "enabl": [842, 846], "encod": [0, 683, 859], "end": [720, 804], "environ": [23, 846, 847], "equat": 853, "etyp": 52, "etype_str_to_tupl": 320, "etype_tuple_to_str": 321, "evalu": [819, 826, 827, 869], "even": 836, "everyth": 853, "exact": 714, "exampl": [21, 355, 695, 720], "exclud": 711, "exclude_seed_edg": 322, "execut": 863, "exercis": 821, "exist": 726, "expand_indptr": 323, "extern": 699, "extract": 0, "extract_arch": 201, "f": 852, "fakenewsdataset": 159, "faq": 24, "farthest": 6, "fb15k237dataset": 157, "fb15kdataset": 158, "featmask": 654, "featur": [1, 3, 7, 21, 294, 687, 700, 723, 832, 833, 835, 837], "feature_data": 831, "featurefetch": [7, 295], "featurestor": [7, 296], "ffi": 22, "file": [687, 832, 833], "filter_edg": 53, "filter_nod": 54, "find_edg": [55, 233], "flickrdataset": 160, "float": 585, "flow": 859, "folder": 687, "foreign": 22, "format": [1, 56, 694, 695, 699, 703], "formula": 850, "forward": [683, 723, 807], "fraudamazondataset": 161, "frauddataset": 162, "fraudyelpdataset": 163, "frequent": 24, "from": [687, 699, 703, 712, 726, 815, 830, 839, 852, 864, 866], "from_coo": 610, "from_csc": 611, "from_csr": 612, "from_cugraph": 248, "from_dglgraph": 324, "from_networkx": 249, "from_scipi": 250, "full": [687, 851], "function": [3, 5, 9, 12, 18, 20, 22, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 355, 706, 713, 722, 723, 821, 827, 836, 862, 863, 868], "fuse": 852, "fused_csc_sampling_graph": 325, "fusedcscsamplinggraph": 297, "gat": 853, "gatconv": [364, 405, 460], "gatedgcnconv": 411, "gatedgraphconv": [367, 412], "gather_mm": 497, "gathermm": 9, "gatv2conv": 406, "gcn": [816, 834, 850, 851, 853], "gcn2conv": 407, "gcnnorm": 655, "gdc": 656, "gdeltdataset": 164, "gener": [21, 832, 833, 859, 860, 866], "geometri": 6, "get": [814, 846, 847], "get_download_dir": 202, "ginconv": [365, 408, 461], "gindataset": 165, "gineconv": 409, "git": 21, "github": 21, "global": [15, 16, 17, 23], "global_uniform_negative_sampl": 557, "globalattentionpool": [375, 434, 467], "globaluniform": 226, "gml": [699, 743, 784], "gmmconv": [366, 410], "gnn": [712, 715, 716, 717, 719, 721, 761, 798, 801, 802, 803, 805, 817, 825, 834, 836, 837, 838, 842, 846, 847], "gnnexplain": 424, "gpu": [701, 713, 799, 827, 834, 868, 869, 870], "gpucachedfeatur": 298, "gpu\uc5d0\uc11c": 786, "graph": [0, 1, 2, 4, 7, 16, 287, 355, 682, 684, 687, 689, 692, 693, 694, 695, 697, 698, 699, 702, 703, 708, 709, 710, 711, 712, 714, 715, 716, 717, 723, 725, 726, 728, 729, 730, 788, 802, 807, 814, 816, 817, 818, 831, 832, 833, 834, 835, 837, 838, 839, 846, 847, 850, 851, 852, 853, 854, 857, 859, 863, 864, 866, 868], "graphbolt": [7, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 825, 846], "graphconv": [368, 413, 462, 724, 808], "graphdata": 687, "graphdataload": 213, "graphorm": 683, "graphormerlay": 445, "graphsag": [715, 837], "group": 868, "grouprevr": 414, "gsddmm": [9, 498], "gspmm": [9, 499], "guid": 704, "half": [720, 804], "handl": [829, 851], "has_dupl": 586, "has_edges_between": 57, "has_nod": 58, "head": [818, 853, 863], "heatkernel": 657, "heteroembed": 382, "heterogen": [15, 16, 17, 355, 687, 693, 703, 708, 711, 712, 715, 716, 717, 724, 725, 726, 728, 729, 730, 779, 780, 788, 797, 798, 801, 802, 803, 808, 809, 810, 811, 812, 813, 832], "heterognnexplain": 425, "heterograph": [332, 703], "heterographconv": [356, 383, 468, 724, 808], "heterographconv\u7684\u5b9e\u73b0\u903b\u8f91": 764, "heteroitemset": 299, "heterolinear": 384, "heteropgexplain": 426, "heterosubgraphx": 427, "hgnn": 819, "hgtconv": 415, "homogen": [355, 703, 716, 802, 833], "homophili": 0, "hood": 693, "host": 21, "how": [829, 835, 863], "hyper": 843, "hypergraph": 819, "i": 852, "icews18dataset": 166, "id": [1, 693, 695, 780, 846, 847], "idea": [851, 852, 862], "ident": 613, "idtyp": 59, "implement": [711, 714, 716, 724, 726, 850, 851, 852, 859, 862, 863], "import": 869, "improv": 842, "in_degre": 60, "in_edg": 61, "in_subgraph": [234, 333], "inc": 62, "incid": 1, "incidence_matrix": 63, "index": 814, "index_select": 326, "indic": 587, "infer": [696, 714, 847, 852], "inform": [0, 1], "initi": [4, 235, 692, 821, 846, 847, 868], "input": 694, "instal": [694, 815, 826, 827, 829, 832, 833, 842], "instanti": [832, 833], "insubgraphsampl": 300, "int": [64, 588], "integr": 822, "intel": 843, "interact": 853, "interfac": [21, 22], "introduc": 853, "introduct": [840, 851, 859], "is_homogen": 65, "is_libxsmm_en": 334, "is_multigraph": 66, "is_pin": 67, "is_unibipartit": 68, "isin": 327, "itemsampl": [7, 301], "itemset": [7, 302], "its": [854, 866], "job": 846, "json": [699, 743, 784], "jumpingknowledg": 454, "karateclubdataset": 167, "kei": [851, 852, 862], "khop_adj": 335, "khop_graph": 336, "khop_in_subgraph": 337, "khop_out_subgraph": 338, "khopgraph": 658, "knn": 14, "knn_graph": 339, "knngraph": 430, "knowledg": 16, "label": [0, 687], "labelpropag": 455, "laborsampl": 214, "lap_p": 340, "laplacian_lambda_max": 341, "lapp": 659, "lapposencod": 446, "larg": [710, 714], "launch": [696, 846], "layer": [15, 16, 17, 683, 816, 818, 819, 851, 852, 863], "layerneighborsampl": 303, "lazyfeatur": 221, "learn": [15, 16, 17, 853], "legacydataset": 304, "legacytudataset": 168, "less": 687, "level": 687, "lgnn": 852, "librari": [699, 814], "line": 852, "line_graph": [69, 342], "linear": [12, 821], "linegraph": 660, "link": [3, 16, 689, 715, 729, 826, 832, 833, 837, 839, 847, 851], "linkx_homophili": 343, "linux": 815, "load": [4, 687, 688, 690, 693, 695, 699, 703, 718, 728, 819, 826, 829, 834, 835, 837, 838, 869], "load_from_shared_memori": 328, "load_graph": 344, "load_info": 203, "load_label": 204, "load_partit": 236, "load_partition_book": 237, "load_partition_feat": 238, "loader": [712, 713, 715, 717, 826, 827, 829, 838, 868], "local": 21, "local_scop": 70, "logic": 724, "long": [71, 589], "loop": [712, 715, 717, 726, 728, 729, 730, 810, 813, 826, 827, 829, 836, 837, 838, 846, 847, 851, 856, 869], "lsc": 695, "lstm": 856, "machin": [868, 869], "maco": 815, "mag240m": 695, "mailbox": 677, "main": [856, 859, 863, 868], "make": [695, 839], "mani": [857, 866], "manipul": 1, "map": 695, "mask_nodes_by_properti": 205, "match": 6, "matmul": 614, "matric": 816, "matrix": [1, 12, 821, 852], "max": 263, "max_edg": 345, "max_nod": 346, "maxpool": [376, 435, 469], "mean": 264, "mean_edg": 347, "mean_nod": 348, "measur": 0, "memori": 843, "merg": 349, "messag": [0, 5, 9, 20, 705, 706, 707, 708, 709, 720, 723, 727, 790, 828, 836, 852, 856, 862, 863], "metagraph": [1, 72], "metapath2vec": 385, "metapath_reachable_graph": 350, "method": [12, 821], "meti": 694, "metis_partit": 351, "metis_partition_assign": 352, "mfg": 716, "mfg\ub97c": 802, "min": 265, "minesweeperdataset": 171, "mini": [716, 846, 847, 869], "minibatch": [7, 305, 712, 715, 717, 868, 869], "minibatchtransform": 306, "minigcdataset": 172, "misc": 1, "mix": [720, 804], "mnistsuperpixeldataset": 169, "mode": 692, "model": [21, 683, 712, 715, 717, 726, 728, 730, 818, 826, 827, 829, 837, 838, 846, 847, 850, 851, 859, 860, 862, 864, 866, 868, 869], "modul": [9, 15, 16, 17, 692, 716, 721, 722, 723, 724, 727, 836], "more": 836, "movielensdataset": 173, "mul": 615, "multi": [818, 827, 842, 853, 863, 868, 869], "multi_update_al": 73, "multilayerfullneighborsampl": 215, "multipl": [12, 21, 687, 703, 821, 852, 870], "multiprocess": [8, 353, 354], "mutagdataset": 170, "mutat": 1, "mxnet": [15, 815], "ndata": 74, "neg": [3, 11, 590, 715, 801, 837], "negativesampl": [7, 307], "neighbor": [6, 11, 712, 713, 715, 826, 827, 828, 829, 846], "neighborhood": [710, 712, 713, 715, 717, 796], "neighborsampl": [216, 308], "network": [16, 725, 728, 730, 816, 817, 819, 834, 837, 846, 847, 850, 851, 852, 853, 854, 862, 863, 866], "neural": [725, 728, 730, 817, 819, 837, 852, 854, 863, 866], "new": [21, 22], "next": [834, 835, 836, 838, 853], "nf": 846, "nn": [15, 16, 17, 18, 355, 722, 723, 727, 806, 807], "nnconv": [369, 416], "nnz": 591, "nn\u6a21\u5757\u7684forward\u51fd\u6570": 763, "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": 762, "node": [1, 2, 4, 10, 20, 77, 678, 689, 692, 699, 700, 702, 717, 726, 730, 743, 784, 826, 827, 829, 832, 833, 834, 835, 839, 846, 847, 859, 869], "node2vec_random_walk": 558, "node_attr_schem": 75, "node_homophili": 472, "node_label_inform": 473, "node_split": 239, "node_subgraph": 474, "node_type_subgraph": [76, 475], "nodebatch": [675, 676, 677, 678], "nodedata": 687, "nodeembed": 453, "nodeshuffl": 661, "non": [12, 821], "norm_by_dst": 476, "ntype": 78, "num_dst_nod": 79, "num_edg": 80, "num_nod": 81, "num_src_nod": 82, "number_of_dst_nod": 83, "number_of_edg": 84, "number_of_nod": 85, "number_of_src_nod": 86, "nutshel": 818, "object": [839, 859], "offlin": 714, "ogb": [688, 774], "ondiskdataset": [309, 830, 832, 833], "one": 850, "onli": 846, "op": [0, 9, 12, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537], "openmp": 843, "oper": [4, 12, 821, 852], "optim": [4, 10, 859], "option": [23, 686, 773], "organ": [832, 833], "origin": 712, "other": 827, "out": 0, "out_degre": 87, "out_edg": 88, "out_subgraph": 538, "output": [694, 723], "overview": [710, 725, 726, 728, 729, 730, 825, 828, 834, 837, 838, 839, 850], "own": [836, 839, 842], "pack_trac": 559, "packag": [688, 826, 827, 829, 832, 833, 869], "paper": 866, "paradigm": [705, 790], "parallel": [694, 718, 852], "parmeti": [694, 780], "parmetis\ub97c": 780, "parser": 687, "part": 709, "partit": [0, 4, 693, 694, 695, 846, 847], "partition_graph": 240, "partition_graph_with_halo": 539, "pass": [9, 20, 705, 706, 707, 708, 709, 720, 723, 727, 790, 828, 836, 852, 856, 862, 863], "path": 683, "pathencod": 447, "patterndataset": 174, "perform": [14, 822, 826], "persourceuniform": 227, "perspect": [864, 866], "pgexplain": 428, "pin_memory_": 89, "pinsagesampl": [556, 713], "pip": 815, "pipelin": [684, 695], "platform": 21, "pnaconv": 417, "point": 6, "pool": [15, 16, 17], "posit": [0, 837], "postprocess": 863, "power": 616, "ppi": 853, "ppidataset": 175, "ppr": 662, "practic": [836, 843], "precis": [720, 804], "precision\uc744": 804, "predecessor": 90, "predict": [2, 3, 16, 689, 715, 726, 729, 826, 832, 833, 837, 839, 847, 851], "prefetch": 3, "prepar": [681, 832, 833, 837, 868], "preprocess": [693, 695, 863], "prev": 852, "procedur": [827, 869], "process": [21, 689, 827, 868, 869], "program": [692, 842], "progress": 852, "prop_edg": [91, 540], "prop_edges_df": 541, "prop_nod": [92, 542], "prop_nodes_bf": 543, "prop_nodes_topo": 544, "propag": [0, 859], "protein": 853, "pubmedgraphdataset": 176, "pull": 93, "push": 94, "put": [853, 856, 859, 863], "pytorch": [16, 353, 354, 815], "qm7bdataset": 177, "qm9dataset": 178, "qm9edgedataset": 179, "queri": [1, 835], "question": 24, "questionsdataset": 180, "quickstart": 821, "r": 851, "radiu": 852, "radius_graph": 545, "radiusgraph": 431, "rand_bipartit": 546, "rand_graph": 547, "random": 11, "random_walk": 560, "random_walk_p": 548, "randomwalkneighborsampl": 713, "randomwalkp": 663, "raw": [686, 773, 830], "read": 0, "readout": [728, 811], "readout_edg": 549, "readout_nod": 550, "redditdataset": 181, "reduc": [5, 9, 592, 723, 821], "reduct": 827, "refer": [13, 846, 847], "regress": [726, 730, 810, 813], "relat": [0, 9, 851], "relgraphconv": [370, 418, 463], "remov": 712, "remove_edg": [95, 551], "remove_nod": [96, 552], "remove_self_loop": [97, 553], "removeselfloop": 664, "reorder_graph": [98, 554], "repositori": 23, "repres": 835, "represent": 826, "requir": 815, "resourc": 823, "result": 14, "revers": [99, 555], "review": 828, "revisit": [864, 866], "roadmap": [684, 697, 705, 710, 721, 725], "romanempiredataset": 182, "row": 593, "rowfeatnorm": 665, "run": 694, "sageconv": [371, 419, 464], "saintsampl": 217, "sampl": [4, 11, 556, 557, 558, 559, 560, 561, 562, 563, 564, 692, 710, 711, 712, 713, 715, 717, 796, 828, 846], "sample_etype_neighbor": 241, "sample_labor": 561, "sample_neighbor": [242, 562], "sample_neighbors_bias": 563, "sampledsubgraph": 310, "sampledsubgraphimpl": 311, "sampler": [3, 6, 218, 711, 712, 717, 826, 827, 829, 846, 847], "samplinggraph": 312, "save": [690, 835], "save_graph": 565, "save_info": 206, "sbmmixturedataset": 183, "scalabl": 842, "scenario": 825, "score": 16, "script": [846, 847], "sddmm": 617, "second": 851, "seed": [329, 566], "segment": 9, "segment_mm": 500, "segment_reduc": 501, "segmented_knn_graph": 567, "segmentedknngraph": 432, "segmentmm": 9, "select_topk": 564, "send_and_recv": 100, "separ": [699, 703, 784, 788], "sequenti": [380, 456], "server": 846, "set": [837, 843, 846, 847, 852], "set2set": [377, 436], "set_batch_num_edg": 101, "set_batch_num_nod": 102, "set_dst_lazy_featur": 222, "set_edge_lazy_featur": 223, "set_node_lazy_featur": 224, "set_src_lazy_featur": 225, "settransformerdecod": 437, "settransformerencod": 438, "setup": [21, 815, 846], "sgconv": [372, 420, 465], "shadowkhopsampl": 219, "shape": 594, "shared_tensor": 354, "shortest_dist": 568, "side": 846, "signdiffus": 666, "simpl": 863, "singl": [687, 868, 869], "slice_batch": 569, "small": [857, 866], "smax": 595, "smean": 596, "smin": 597, "softmax": [598, 618, 821], "softmax_edg": 570, "softmax_nod": 571, "some": 698, "sort_csc_by_tag": 572, "sort_csr_by_tag": 573, "sortpool": [378, 439, 470], "sourc": [699, 815], "sp_add_v": 619, "sp_broadcast_v": 620, "sp_div_v": 621, "sp_mul_v": 622, "sp_sub_v": 623, "spars": [1, 12, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 719, 816, 818, 820, 821, 852], "sparsematrix": [574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604], "spatial": 683, "spatialencod": 448, "spatialencoder3d": 449, "spawn": [827, 869], "specif": [687, 695, 723, 807, 831, 863], "speed": 863, "split": [4, 692, 778], "split_dataset": 207, "spmatrix": 624, "spmm": 625, "spspmm": 626, "squirreldataset": 185, "src": 674, "srcdata": 103, "srcnode": 104, "srctype": 105, "ssh": 846, "sstdataset": 184, "standalon": [692, 778], "start": 814, "step": [695, 842, 856, 862], "stochast": [710, 796, 825], "structur": [1, 687, 692, 797, 832, 833, 835, 852, 863], "studi": 866, "style": 21, "sub": 627, "subgraph": [0, 106, 703, 852], "subgraphsampl": [7, 313], "subgraphx": 429, "subset": 196, "successor": 107, "sum": [266, 599], "sum_edg": 629, "sum_nod": 630, "sumpool": [379, 440, 471], "supervis": 852, "support": [9, 21, 713], "svd_pe": 631, "svdpe": 667, "system": 815, "t": [574, 600], "tagconv": [373, 421], "task": [314, 831, 832, 833, 851, 852, 856, 863], "tensor": [4, 692, 778, 852], "tensorflow": [17, 815], "test": [21, 837, 852, 862], "texasdataset": 187, "text": 852, "thread": 843, "time": [824, 841, 845, 849, 855, 858, 861, 865, 867, 871], "tip": 695, "to_bidirect": 632, "to_block": 633, "to_canonical_etyp": 109, "to_cugraph": [110, 634], "to_dens": 602, "to_doubl": 635, "to_float": 636, "to_half": 637, "to_heterogen": 638, "to_homogen": 639, "to_networkx": 640, "to_simpl": [111, 641], "to_simple_graph": 642, "togeth": [853, 856, 859, 863], "tolevi": 668, "tolokersdataset": 188, "tool": 696, "top": 687, "topk_edg": 643, "topk_nod": 644, "topologi": 1, "topological_nodes_gener": 645, "torchbasedfeatur": 315, "torchbasedfeaturestor": 316, "tosimpl": 669, "tra": 826, "train": [691, 696, 710, 712, 715, 716, 717, 719, 720, 725, 726, 728, 729, 730, 816, 817, 818, 819, 825, 827, 829, 834, 836, 837, 838, 844, 846, 847, 848, 851, 852, 863, 869, 870], "trainer": [827, 869], "trane": 869, "trans": 451, "transform": [0, 1, 3, 16, 19, 682, 818, 821, 835, 863], "transpos": 603, "transr": 452, "travers": [0, 856], "tree": 856, "treecycledataset": 189, "treegriddataset": 190, "tudataset": 186, "tutori": [682, 814, 820], "twirlsconv": 422, "twirlsunfoldingandattent": 423, "type": [1, 9, 22, 703, 723, 726, 807], "typedlinear": 386, "u_add_": [267, 502], "u_add_e_max": 503, "u_add_e_mean": 504, "u_add_e_min": 505, "u_add_e_sum": 506, "u_add_v": [268, 507], "u_div_": [269, 508], "u_div_e_max": 509, "u_div_e_mean": 510, "u_div_e_min": 511, "u_div_e_sum": 512, "u_div_v": [270, 513], "u_dot_": [271, 514], "u_dot_v": [272, 515], "u_mul_": [273, 516], "u_mul_e_max": 517, "u_mul_e_mean": 518, "u_mul_e_min": 519, "u_mul_e_sum": 520, "u_mul_v": [274, 521], "u_sub_": [275, 522], "u_sub_e_max": 523, "u_sub_e_mean": 524, "u_sub_e_min": 525, "u_sub_e_sum": 526, "u_sub_v": [276, 527], "ubuntu": 846, "udf": [670, 671, 672, 673, 674, 675, 676, 677, 678], "unbatch": 679, "under": 693, "understand": 853, "uniform": 228, "uniformnegativesampl": 317, "unique_and_compact": 330, "unique_and_compact_csc_format": 331, "unit": 21, "univers": 863, "unpin_memory_": 112, "up": [846, 847, 852, 863], "updat": [723, 859], "update_al": 113, "us": [1, 688, 701, 713, 727, 816, 837], "use_libxsmm": 680, "user": [20, 704, 836], "util": [0, 2, 3, 7, 15, 16, 693], "uva": 713, "v": [692, 778], "v0": 822, "v_add_": [277, 528], "v_add_u": [278, 529], "v_div_": [279, 530], "v_div_u": [280, 531], "v_dot_": [281, 532], "v_dot_u": [282, 533], "v_mul_": [283, 534], "v_mul_u": [284, 535], "v_sub_": [285, 536], "v_sub_u": [286, 537], "val": 604, "val_lik": 628, "valid": [846, 847], "valu": [699, 703, 784, 788], "variabl": 23, "variant": [854, 866], "via": [21, 839, 859], "visual": [852, 853, 863], "walk": 11, "web": 21, "weight": [727, 827], "weightandsum": 441, "weightbasi": 457, "welcom": 814, "what": [834, 835, 836, 838, 852, 853], "wikicsdataset": 192, "window": 815, "wisconsindataset": 193, "wise": [20, 821], "wn18dataset": 191, "work": [703, 716, 815], "workload": [4, 692, 778], "write": [707, 716, 728, 730, 836], "x": 852, "y": 852, "yaml": [687, 831, 832, 833], "yelpdataset": 194, "your": [712, 717, 836, 839, 842], "zincdataset": 195, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": 733, "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": 766, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": 759, "\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": 759, "\u4e8c\u8fdb\u5236\u683c\u5f0f": 743, "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": 743, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": 743, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": 743, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": 747, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": 734, "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": 747, "\u4f7f\u7528\u8fb9\u6743\u91cd": 767, "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": 767, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": 736, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": 742, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": 750, "\u5206\u5272\u6570\u636e\u96c6": 738, "\u5206\u5e03\u5f0f\u56fe": 738, "\u5206\u5e03\u5f0f\u5d4c\u5165": 738, "\u5206\u5e03\u5f0f\u5f20\u91cf": 738, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": 738, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": 738, "\u5206\u5e03\u5f0f\u8bad\u7ec3": 737, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": 739, "\u5206\u5e03\u5f0f\u91c7\u6837": 738, "\u521b\u5efadistgraph": 738, "\u521b\u5efa\u5f02\u6784\u56fe": 747, "\u5305\u542b\u8fc7\u65f6\u4fe1\u606f": 748, "\u53ef\u9009": 733, "\u56de\u5f52": [766, 770], "\u56fe": [741, 746], "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": 731, "\u56fe\u8bfb\u51fa": 768, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 745, "\u5728nn\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": 767, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 753, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": 754, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 752, "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": 766, "\u5904\u7406\u6570\u636e": 735, "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 735, "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": 735, "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": 735, "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": 755, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [756, 760], "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 755, "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 755, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": 757, "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 759, "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": 747, "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": 756, "\u5f02\u6784\u56fe": 747, "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": 760, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": 764, "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 768, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": 759, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": 756, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 770, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 766, "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": 755, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 769, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 758, "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": 755, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 765, "\u6279\u6b21": 754, "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": 768, "\u6279\u6b21\u7684\u56fe": 768, "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": 755, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": 740, "\u6570\u636e\u52a0\u8f7d": 768, "\u6574\u56fe\u5206\u7c7b": 768, "\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": 763, "\u672c\u7ae0\u8def\u7ebf\u56fe": [731, 741, 749, 754, 761, 765], "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": 761, "\u683c\u5f0f": 743, "\u6982\u8ff0": [765, 766, 768, 769, 770], "\u6a21\u5757": 761, "\u6a21\u578b\u5b9a\u4e49": 768, "\u6a21\u578b\u7684\u8bad\u7ec3": [756, 758, 760, 766, 768, 769, 770], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": 763, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": 749, "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 755, "\u7528\u6237\u6307\u5357": 748, "\u7b2c1\u7ae0": 741, "\u7b2c2\u7ae0": 749, "\u7b2c3\u7ae0": 761, "\u7b2c4\u7ae0": 731, "\u7b2c5\u7ae0": 765, "\u7b2c6\u7ae0": 754, "\u7b2c7\u7ae0": 737, "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": 758, "\u7f16\u5199dgl": 763, "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [768, 770], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": 751, "\u805a\u5408\u540e": 763, "\u8282\u70b9\u5206\u7c7b": 770, "\u8282\u70b9\u548c\u8fb9": 746, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 744, "\u8bad\u7ec3": 754, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": 765, "\u8bbf\u95ee\u56fe\u7ed3\u6784": 738, "\u8bbf\u95ee\u8282\u70b9": 738, "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [758, 760], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": 756, "\u8d1f\u8f7d\u5747\u8861": 739, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": 757, "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": 763, "\u8fb9\u5206\u7c7b": 766, "\u8fb9\u6570\u636e": 738, "\u8fb9\u7c7b\u578b\u5b50\u56fe": 747, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 740, "\u9017\u53f7\u5206\u9694\u503c": [743, 747], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": 754, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 760, "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 756, "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 758, "\u94fe\u63a5\u9884\u6d4b": 769, "\uac00\uc774\ub4dc": 789, "\uac00\uc911\uce58": 792, "\uac1c\uc694": [796, 809, 810, 811, 812, 813], "\uacb0\uacfc": 780, "\uacb0\uacfc\ub4e4\uc744": 780, "\uacbd\uc6b0": [798, 801, 803], "\uad6c\uc870": [778, 797], "\uad6c\ud604": 808, "\uad6c\ud604\uc0c1\uc758": 810, "\uad6c\ud604\ud558\uae30": [797, 800, 802], "\uadf8\ub798\ud504": [771, 775, 778, 779, 782, 783, 784, 787, 788, 795, 802, 807, 809, 810, 811, 813], "\uadf8\ub798\ud504\ub4e4": [797, 802, 812], "\uadf8\ub798\ud504\ub4e4\uc5d0": 800, "\uadf8\ub798\ud504\ub4e4\uc758": 811, "\uadf8\ub798\ud504\ub85c": 788, "\uadf8\ub798\ud504\ub97c": 788, "\uadf8\ub798\ud504\uc5d0": [780, 783, 796, 811], "\uadf8\ub798\ud504\uc5d0\uc11c": 798, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": 794, "\uadf8\ub798\ud504\uc758": [798, 801, 803, 810], "\uadf8\ub9ac\uace0": [787, 802], "\uae30\ubc18\uc758": 799, "\uae30\ubcf8\uc801\uc778": 783, "\ub098\ub204\uae30": 778, "\ub124\ud2b8\uc6cc\ud06c": [809, 811, 813], "\ub178\ub4dc": [775, 778, 780, 787, 803, 810, 813], "\ub178\ub4dc\uc640": 785, "\ub274\ub7f4": [809, 811, 813], "\ub2e4\ub8e8\uae30": 788, "\ub2e4\uc591\ud55c": 788, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 773, "\ub2e8\ub3c5": 778, "\ub300\ud55c": [780, 783, 796, 810], "\ub300\ud578": 800, "\ub370\uc774\ud130": [771, 773, 775, 776, 778, 779, 798, 799, 801, 803, 811], "\ub370\uc774\ud130\uc14b": 775, "\ub370\uc774\ud130\uc14b\ub4e4": 774, "\ub3d9\uc885": 788, "\ub4a4\uccd0\uc9c4": 789, "\ub514\uc2a4\ud06c\uc5d0\uc11c": [784, 788], "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c": 784, "\ub7f0\uce6d\ud558\uae30": 781, "\ub808\uc774\uc5b4": 797, "\ub85c\ub354": [798, 801, 803], "\ub85c\ub354\uc5d0\uc11c": 799, "\ub85c\ub4dc": 780, "\ub85c\ub4dc\ub9f5": [771, 782, 790, 796, 805, 809], "\ub85c\ub4dc\ud558\uae30": 774, "\ub85c\ub529": [776, 811], "\ub85c\ub529\ud558\uae30": [784, 788], "\ub85c\uc9c1": 808, "\ub8f9": [798, 801, 803, 810, 811, 812, 813], "\ub9ac\uadf8\ub798\uc158": 813, "\ub9ac\uadf8\ub808\uc158": 810, "\ub9ac\ub4dc\uc544\uc6c3": 811, "\ub9c1\ud06c": [775, 801, 812], "\ub9cc\ub4e4\uae30": [798, 801, 803, 805], "\ub9de\uac8c": [798, 801, 803], "\ub9e4\ud551": 780, "\uba40\ud2f0": 797, "\uba54\uc2dc\uc9c0": [791, 792, 793, 794, 797, 804, 807], "\uba54\uc9c0\uc2dc": [790, 795], "\uba85\uc138\ud654": 807, "\uba87\uac00\uc9c0": 783, "\ubaa8\ub378": [798, 801, 803, 811, 813], "\ubaa8\ub378\uacfc": 810, "\ubaa8\ub378\uc744": [798, 801, 803], "\ubaa8\ub4c8": [778, 802, 805, 806, 808], "\ubaa8\ub4c8\uc758": 807, "\ubaa8\ub4dc": 778, "\ubbf8\ub2c8": [798, 801, 802, 803], "\ubbf8\ub2c8\ubc30\uce58": 797, "\ubc0f": [780, 791, 798, 801, 803, 810], "\ubc14\uc774\ub108\ub9ac": [784, 788], "\ubc29\ubc95": [793, 796], "\ubc30\uce58": [798, 801, 802, 803, 811], "\ubc30\uce58\uc758": 798, "\ubc38\ub7f0\uc2f1": 780, "\ubcc0\ud658\ud558\uae30": [780, 788], "\ubd84\ub958": [775, 798, 803, 810, 811, 813], "\ubd84\uc0b0": [777, 778, 779, 780, 781], "\ube4c\ud2b8\uc778": 791, "\uc0ac\uc6a9\uc790": 789, "\uc0ac\uc6a9\ud558\uae30": [786, 799], "\uc0ac\uc6a9\ud55c": [784, 798, 801, 803, 804], "\uc0ac\uc6a9\ud574\uc11c": [774, 784], "\uc0d8\ud50c\ub7ec": [797, 798, 801, 803], "\uc0d8\ud50c\ub7ec\ub97c": 799, "\uc0d8\ud50c\ub9c1": [778, 779, 796, 797, 799], "\uc0d8\ud50c\ub9c1\uc5d0": 799, "\uc0d8\ud50c\ub9c1\uc744": [798, 801, 803], "\uc0dd\uc131": [778, 806], "\uc0dd\uc131\ud558\uae30": [780, 784, 788], "\uc11c\ube0c\uadf8\ub798\ud504": 788, "\uc124\uce58": 780, "\uc18c\uc2a4\ub97c": 784, "\uc2dc\ub300\uc5d0": 789, "\uc2e4\ud589\ud558\uae30": 780, "\uc5c5\ub370\uc774\ud2b8": 807, "\uc5d0\uc9c0": [778, 780, 787, 788, 792, 798, 810], "\uc5d0\uc9c0\ub4e4": 798, "\uc5d0\uc9c0\ub4e4\uc5d0": 810, "\uc5d0\uc9c0\uc758": 785, "\uc5f0\uc0b0\ud558\uae30": 811, "\uc608\uce21": [775, 801, 812], "\uc608\uce21\ud558\uae30": 810, "\uc624\ud504\ub77c\uc778": 800, "\uc678\ubd80": 784, "\uc6cc\ud06c\ub85c\ub4dc": 778, "\uc6d0\ubcf8": 798, "\uc704\ud55c": [780, 781, 797, 802, 807], "\uc704\ud574\uc11c": 798, "\uc758\uc874\uc131": 797, "\uc774\ubd84": [797, 802], "\uc774\uc6c3": [796, 797, 798, 799, 801, 803], "\uc774\uc885": [788, 794], "\uc77c\ubd80\uc5d0": 795, "\uc785\ub825": 780, "\uc791\uc131": 793, "\uc791\uc131\ud558\uae30": [802, 811, 813], "\uc800\uc7a5\uacfc": 776, "\uc801\uc6a9\ud558\uae30": [792, 795], "\uc804\ub2ec": [790, 791, 793, 794, 795, 797, 804], "\uc804\ub2ec\uacfc": 807, "\uc804\ub2ec\uc5d0": 792, "\uc804\ub2ec\uc744": 797, "\uc804\ucc98\ub9ac": 780, "\uc811\uadfc": 778, "\uc811\uadfc\ud558\uae30": 779, "\uc815\uc758": 783, "\uc815\uc758\ud558\uae30": [798, 801, 803, 811], "\uc815\ud655\ud55c": 800, "\uc81c\uac70\ud558\uae30": 798, "\uc9c1\uc811": 797, "\ucc28\uc774\uc810": 810, "\ucc3e\uae30": 797, "\uccb4\ud06c\uc640": 807, "\ucd08\uae30\ud654": 778, "\ucd94\ub860": 800, "\ucd94\ub860\uc744": 781, "\ucd95\uc57d": 807, "\ucd9c\ub825\uac12\uc744": 807, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": 797, "\ucee4\uc2a4\ud140": [797, 802], "\ucf54\ub4dc": 793, "\ud070": [796, 800], "\ud074\ub798\uc2a4": 772, "\ud0c0\uc785": [788, 807, 810], "\ud0c0\uc785\uc744": 788, "\ud150\uc11c": 778, "\ud234\ub4e4": 781, "\ud30c\uc774\ud504\ub77c\uc778": 771, "\ud30c\ud2f0\uc154\ub2dd": 780, "\ud328\ub7ec\ub2e4\uc784": 790, "\ud328\ud0a4\uc9c0\ub97c": 774, "\ud3ec\uba67": [780, 784, 788], "\ud3ec\uba67\ub4e4": 780, "\ud504\ub85c\uc138\uc2f1": 775, "\ud53c\ucc98": 785, "\ud53c\ucc98\ub4e4": 780, "\ud53c\uccd0": 807, "\ud559\uc2b5": [777, 781, 796, 798, 801, 803, 804, 810, 811, 812, 813], "\ud559\uc2b5\uc5d0": [798, 801, 803], "\ud559\uc2b5\uc744": [780, 802], "\ud559\uc2b5\ud558\uae30": [779, 798, 801, 803, 809], "\ud568\uaed8": 799, "\ud568\uc218": [791, 806, 807], "\ud568\uc218\uc640": 799, "\ud574\ubcf4\uae30": 797, "\ud6a8\uc728\uc801\uc778": 793, "\ud6c4": 807}})